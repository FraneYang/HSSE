#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class HSSEDB_ENN : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAppraisal_AppraisalScore(Appraisal_AppraisalScore instance);
    partial void UpdateAppraisal_AppraisalScore(Appraisal_AppraisalScore instance);
    partial void DeleteAppraisal_AppraisalScore(Appraisal_AppraisalScore instance);
    partial void InsertAppraisal_PersonAppraisal(Appraisal_PersonAppraisal instance);
    partial void UpdateAppraisal_PersonAppraisal(Appraisal_PersonAppraisal instance);
    partial void DeleteAppraisal_PersonAppraisal(Appraisal_PersonAppraisal instance);
    partial void InsertAttachFile(AttachFile instance);
    partial void UpdateAttachFile(AttachFile instance);
    partial void DeleteAttachFile(AttachFile instance);
    partial void InsertBase_AppraisalItem(Base_AppraisalItem instance);
    partial void UpdateBase_AppraisalItem(Base_AppraisalItem instance);
    partial void DeleteBase_AppraisalItem(Base_AppraisalItem instance);
    partial void InsertBase_Certificate(Base_Certificate instance);
    partial void UpdateBase_Certificate(Base_Certificate instance);
    partial void DeleteBase_Certificate(Base_Certificate instance);
    partial void InsertBase_Depart(Base_Depart instance);
    partial void UpdateBase_Depart(Base_Depart instance);
    partial void DeleteBase_Depart(Base_Depart instance);
    partial void InsertBase_EmergencyType(Base_EmergencyType instance);
    partial void UpdateBase_EmergencyType(Base_EmergencyType instance);
    partial void DeleteBase_EmergencyType(Base_EmergencyType instance);
    partial void InsertBase_Euipment(Base_Euipment instance);
    partial void UpdateBase_Euipment(Base_Euipment instance);
    partial void DeleteBase_Euipment(Base_Euipment instance);
    partial void InsertBase_EuipmentType(Base_EuipmentType instance);
    partial void UpdateBase_EuipmentType(Base_EuipmentType instance);
    partial void DeleteBase_EuipmentType(Base_EuipmentType instance);
    partial void InsertBase_FireWorkAnalysisData(Base_FireWorkAnalysisData instance);
    partial void UpdateBase_FireWorkAnalysisData(Base_FireWorkAnalysisData instance);
    partial void DeleteBase_FireWorkAnalysisData(Base_FireWorkAnalysisData instance);
    partial void InsertBase_FireWorkMode(Base_FireWorkMode instance);
    partial void UpdateBase_FireWorkMode(Base_FireWorkMode instance);
    partial void DeleteBase_FireWorkMode(Base_FireWorkMode instance);
    partial void InsertBase_HAZID(Base_HAZID instance);
    partial void UpdateBase_HAZID(Base_HAZID instance);
    partial void DeleteBase_HAZID(Base_HAZID instance);
    partial void InsertBase_HiddenHazardType(Base_HiddenHazardType instance);
    partial void UpdateBase_HiddenHazardType(Base_HiddenHazardType instance);
    partial void DeleteBase_HiddenHazardType(Base_HiddenHazardType instance);
    partial void InsertBase_HiddenHazardTypeItem(Base_HiddenHazardTypeItem instance);
    partial void UpdateBase_HiddenHazardTypeItem(Base_HiddenHazardTypeItem instance);
    partial void DeleteBase_HiddenHazardTypeItem(Base_HiddenHazardTypeItem instance);
    partial void InsertBase_Installation(Base_Installation instance);
    partial void UpdateBase_Installation(Base_Installation instance);
    partial void DeleteBase_Installation(Base_Installation instance);
    partial void InsertBase_JobActivity(Base_JobActivity instance);
    partial void UpdateBase_JobActivity(Base_JobActivity instance);
    partial void DeleteBase_JobActivity(Base_JobActivity instance);
    partial void InsertBase_JobEnvironment(Base_JobEnvironment instance);
    partial void UpdateBase_JobEnvironment(Base_JobEnvironment instance);
    partial void DeleteBase_JobEnvironment(Base_JobEnvironment instance);
    partial void InsertBase_LimitedSpaceAnalysisData(Base_LimitedSpaceAnalysisData instance);
    partial void UpdateBase_LimitedSpaceAnalysisData(Base_LimitedSpaceAnalysisData instance);
    partial void DeleteBase_LimitedSpaceAnalysisData(Base_LimitedSpaceAnalysisData instance);
    partial void InsertBase_OverhaulRiskGrade(Base_OverhaulRiskGrade instance);
    partial void UpdateBase_OverhaulRiskGrade(Base_OverhaulRiskGrade instance);
    partial void DeleteBase_OverhaulRiskGrade(Base_OverhaulRiskGrade instance);
    partial void InsertBase_Position(Base_Position instance);
    partial void UpdateBase_Position(Base_Position instance);
    partial void DeleteBase_Position(Base_Position instance);
    partial void InsertBase_PostTitle(Base_PostTitle instance);
    partial void UpdateBase_PostTitle(Base_PostTitle instance);
    partial void DeleteBase_PostTitle(Base_PostTitle instance);
    partial void InsertBase_Prospective(Base_Prospective instance);
    partial void UpdateBase_Prospective(Base_Prospective instance);
    partial void DeleteBase_Prospective(Base_Prospective instance);
    partial void InsertBase_RiskLevelValue(Base_RiskLevelValue instance);
    partial void UpdateBase_RiskLevelValue(Base_RiskLevelValue instance);
    partial void DeleteBase_RiskLevelValue(Base_RiskLevelValue instance);
    partial void InsertBase_SafetyMeasures(Base_SafetyMeasures instance);
    partial void UpdateBase_SafetyMeasures(Base_SafetyMeasures instance);
    partial void DeleteBase_SafetyMeasures(Base_SafetyMeasures instance);
    partial void InsertBase_SCL(Base_SCL instance);
    partial void UpdateBase_SCL(Base_SCL instance);
    partial void DeleteBase_SCL(Base_SCL instance);
    partial void InsertBase_SpecialSchemeType(Base_SpecialSchemeType instance);
    partial void UpdateBase_SpecialSchemeType(Base_SpecialSchemeType instance);
    partial void DeleteBase_SpecialSchemeType(Base_SpecialSchemeType instance);
    partial void InsertBase_Specialty(Base_Specialty instance);
    partial void UpdateBase_Specialty(Base_Specialty instance);
    partial void DeleteBase_Specialty(Base_Specialty instance);
    partial void InsertBase_Standard(Base_Standard instance);
    partial void UpdateBase_Standard(Base_Standard instance);
    partial void DeleteBase_Standard(Base_Standard instance);
    partial void InsertBase_TeamGroup(Base_TeamGroup instance);
    partial void UpdateBase_TeamGroup(Base_TeamGroup instance);
    partial void DeleteBase_TeamGroup(Base_TeamGroup instance);
    partial void InsertBase_TeamGroupUser(Base_TeamGroupUser instance);
    partial void UpdateBase_TeamGroupUser(Base_TeamGroupUser instance);
    partial void DeleteBase_TeamGroupUser(Base_TeamGroupUser instance);
    partial void InsertBase_TrainType(Base_TrainType instance);
    partial void UpdateBase_TrainType(Base_TrainType instance);
    partial void DeleteBase_TrainType(Base_TrainType instance);
    partial void InsertBase_Unit(Base_Unit instance);
    partial void UpdateBase_Unit(Base_Unit instance);
    partial void DeleteBase_Unit(Base_Unit instance);
    partial void InsertBase_UnitType(Base_UnitType instance);
    partial void UpdateBase_UnitType(Base_UnitType instance);
    partial void DeleteBase_UnitType(Base_UnitType instance);
    partial void InsertBase_WorkArea(Base_WorkArea instance);
    partial void UpdateBase_WorkArea(Base_WorkArea instance);
    partial void DeleteBase_WorkArea(Base_WorkArea instance);
    partial void InsertBase_WorkPost(Base_WorkPost instance);
    partial void UpdateBase_WorkPost(Base_WorkPost instance);
    partial void DeleteBase_WorkPost(Base_WorkPost instance);
    partial void InsertEduTrain_AccidentCase(EduTrain_AccidentCase instance);
    partial void UpdateEduTrain_AccidentCase(EduTrain_AccidentCase instance);
    partial void DeleteEduTrain_AccidentCase(EduTrain_AccidentCase instance);
    partial void InsertEduTrain_AccidentCaseItem(EduTrain_AccidentCaseItem instance);
    partial void UpdateEduTrain_AccidentCaseItem(EduTrain_AccidentCaseItem instance);
    partial void DeleteEduTrain_AccidentCaseItem(EduTrain_AccidentCaseItem instance);
    partial void InsertEmergency_RescueInfo(Emergency_RescueInfo instance);
    partial void UpdateEmergency_RescueInfo(Emergency_RescueInfo instance);
    partial void DeleteEmergency_RescueInfo(Emergency_RescueInfo instance);
    partial void InsertEmergency_RescueInfoPlan(Emergency_RescueInfoPlan instance);
    partial void UpdateEmergency_RescueInfoPlan(Emergency_RescueInfoPlan instance);
    partial void DeleteEmergency_RescueInfoPlan(Emergency_RescueInfoPlan instance);
    partial void InsertEmergency_Warning(Emergency_Warning instance);
    partial void UpdateEmergency_Warning(Emergency_Warning instance);
    partial void DeleteEmergency_Warning(Emergency_Warning instance);
    partial void InsertHazard_HiddenHazard(Hazard_HiddenHazard instance);
    partial void UpdateHazard_HiddenHazard(Hazard_HiddenHazard instance);
    partial void DeleteHazard_HiddenHazard(Hazard_HiddenHazard instance);
    partial void InsertHazard_HiddenHazardDelay(Hazard_HiddenHazardDelay instance);
    partial void UpdateHazard_HiddenHazardDelay(Hazard_HiddenHazardDelay instance);
    partial void DeleteHazard_HiddenHazardDelay(Hazard_HiddenHazardDelay instance);
    partial void InsertHazard_JHAItem(Hazard_JHAItem instance);
    partial void UpdateHazard_JHAItem(Hazard_JHAItem instance);
    partial void DeleteHazard_JHAItem(Hazard_JHAItem instance);
    partial void InsertHazard_JHAItemRecord(Hazard_JHAItemRecord instance);
    partial void UpdateHazard_JHAItemRecord(Hazard_JHAItemRecord instance);
    partial void DeleteHazard_JHAItemRecord(Hazard_JHAItemRecord instance);
    partial void InsertHazard_LECItem(Hazard_LECItem instance);
    partial void UpdateHazard_LECItem(Hazard_LECItem instance);
    partial void DeleteHazard_LECItem(Hazard_LECItem instance);
    partial void InsertHazard_LECItemRecord(Hazard_LECItemRecord instance);
    partial void UpdateHazard_LECItemRecord(Hazard_LECItemRecord instance);
    partial void DeleteHazard_LECItemRecord(Hazard_LECItemRecord instance);
    partial void InsertHazard_PatrolPlan(Hazard_PatrolPlan instance);
    partial void UpdateHazard_PatrolPlan(Hazard_PatrolPlan instance);
    partial void DeleteHazard_PatrolPlan(Hazard_PatrolPlan instance);
    partial void InsertHazard_RiskList(Hazard_RiskList instance);
    partial void UpdateHazard_RiskList(Hazard_RiskList instance);
    partial void DeleteHazard_RiskList(Hazard_RiskList instance);
    partial void InsertHazard_RiskListItem(Hazard_RiskListItem instance);
    partial void UpdateHazard_RiskListItem(Hazard_RiskListItem instance);
    partial void DeleteHazard_RiskListItem(Hazard_RiskListItem instance);
    partial void InsertHazard_RoutingInspection(Hazard_RoutingInspection instance);
    partial void UpdateHazard_RoutingInspection(Hazard_RoutingInspection instance);
    partial void DeleteHazard_RoutingInspection(Hazard_RoutingInspection instance);
    partial void InsertHazard_SCLItem(Hazard_SCLItem instance);
    partial void UpdateHazard_SCLItem(Hazard_SCLItem instance);
    partial void DeleteHazard_SCLItem(Hazard_SCLItem instance);
    partial void InsertHazard_SCLItemRecord(Hazard_SCLItemRecord instance);
    partial void UpdateHazard_SCLItemRecord(Hazard_SCLItemRecord instance);
    partial void DeleteHazard_SCLItemRecord(Hazard_SCLItemRecord instance);
    partial void InsertInformationProject_FileCabinetA(InformationProject_FileCabinetA instance);
    partial void UpdateInformationProject_FileCabinetA(InformationProject_FileCabinetA instance);
    partial void DeleteInformationProject_FileCabinetA(InformationProject_FileCabinetA instance);
    partial void InsertInformationProject_FileCabinetAItem(InformationProject_FileCabinetAItem instance);
    partial void UpdateInformationProject_FileCabinetAItem(InformationProject_FileCabinetAItem instance);
    partial void DeleteInformationProject_FileCabinetAItem(InformationProject_FileCabinetAItem instance);
    partial void InsertLicense_BlindPlate(License_BlindPlate instance);
    partial void UpdateLicense_BlindPlate(License_BlindPlate instance);
    partial void DeleteLicense_BlindPlate(License_BlindPlate instance);
    partial void InsertLicense_BreakGround(License_BreakGround instance);
    partial void UpdateLicense_BreakGround(License_BreakGround instance);
    partial void DeleteLicense_BreakGround(License_BreakGround instance);
    partial void InsertLicense_Electricity(License_Electricity instance);
    partial void UpdateLicense_Electricity(License_Electricity instance);
    partial void DeleteLicense_Electricity(License_Electricity instance);
    partial void InsertLicense_FireWork(License_FireWork instance);
    partial void UpdateLicense_FireWork(License_FireWork instance);
    partial void DeleteLicense_FireWork(License_FireWork instance);
    partial void InsertLicense_FireWorkAnalysis(License_FireWorkAnalysis instance);
    partial void UpdateLicense_FireWorkAnalysis(License_FireWorkAnalysis instance);
    partial void DeleteLicense_FireWorkAnalysis(License_FireWorkAnalysis instance);
    partial void InsertLicense_HeightWork(License_HeightWork instance);
    partial void UpdateLicense_HeightWork(License_HeightWork instance);
    partial void DeleteLicense_HeightWork(License_HeightWork instance);
    partial void InsertLicense_Interlocking(License_Interlocking instance);
    partial void UpdateLicense_Interlocking(License_Interlocking instance);
    partial void DeleteLicense_Interlocking(License_Interlocking instance);
    partial void InsertLicense_LicenseItem(License_LicenseItem instance);
    partial void UpdateLicense_LicenseItem(License_LicenseItem instance);
    partial void DeleteLicense_LicenseItem(License_LicenseItem instance);
    partial void InsertLicense_LiftingWork(License_LiftingWork instance);
    partial void UpdateLicense_LiftingWork(License_LiftingWork instance);
    partial void DeleteLicense_LiftingWork(License_LiftingWork instance);
    partial void InsertLicense_LimitedSpace(License_LimitedSpace instance);
    partial void UpdateLicense_LimitedSpace(License_LimitedSpace instance);
    partial void DeleteLicense_LimitedSpace(License_LimitedSpace instance);
    partial void InsertLicense_LimitedSpaceAnalysis(License_LimitedSpaceAnalysis instance);
    partial void UpdateLicense_LimitedSpaceAnalysis(License_LimitedSpaceAnalysis instance);
    partial void DeleteLicense_LimitedSpaceAnalysis(License_LimitedSpaceAnalysis instance);
    partial void InsertLicense_OpenCircuit(License_OpenCircuit instance);
    partial void UpdateLicense_OpenCircuit(License_OpenCircuit instance);
    partial void DeleteLicense_OpenCircuit(License_OpenCircuit instance);
    partial void InsertLicense_Overhaul(License_Overhaul instance);
    partial void UpdateLicense_Overhaul(License_Overhaul instance);
    partial void DeleteLicense_Overhaul(License_Overhaul instance);
    partial void InsertLock_SmartLock(Lock_SmartLock instance);
    partial void UpdateLock_SmartLock(Lock_SmartLock instance);
    partial void DeleteLock_SmartLock(Lock_SmartLock instance);
    partial void InsertLock_SmartLockItem(Lock_SmartLockItem instance);
    partial void UpdateLock_SmartLockItem(Lock_SmartLockItem instance);
    partial void DeleteLock_SmartLockItem(Lock_SmartLockItem instance);
    partial void InsertPersonal_PersonalFolder(Personal_PersonalFolder instance);
    partial void UpdatePersonal_PersonalFolder(Personal_PersonalFolder instance);
    partial void DeletePersonal_PersonalFolder(Personal_PersonalFolder instance);
    partial void InsertPersonal_PersonalFolderItem(Personal_PersonalFolderItem instance);
    partial void UpdatePersonal_PersonalFolderItem(Personal_PersonalFolderItem instance);
    partial void DeletePersonal_PersonalFolderItem(Personal_PersonalFolderItem instance);
    partial void InsertQualityAudit_EquipmentQuality(QualityAudit_EquipmentQuality instance);
    partial void UpdateQualityAudit_EquipmentQuality(QualityAudit_EquipmentQuality instance);
    partial void DeleteQualityAudit_EquipmentQuality(QualityAudit_EquipmentQuality instance);
    partial void InsertQualityAudit_PersonQuality(QualityAudit_PersonQuality instance);
    partial void UpdateQualityAudit_PersonQuality(QualityAudit_PersonQuality instance);
    partial void DeleteQualityAudit_PersonQuality(QualityAudit_PersonQuality instance);
    partial void InsertQualityAudit_PersonQualityItem(QualityAudit_PersonQualityItem instance);
    partial void UpdateQualityAudit_PersonQualityItem(QualityAudit_PersonQualityItem instance);
    partial void DeleteQualityAudit_PersonQualityItem(QualityAudit_PersonQualityItem instance);
    partial void InsertQualityAudit_SubUnitQuality(QualityAudit_SubUnitQuality instance);
    partial void UpdateQualityAudit_SubUnitQuality(QualityAudit_SubUnitQuality instance);
    partial void DeleteQualityAudit_SubUnitQuality(QualityAudit_SubUnitQuality instance);
    partial void InsertReportServer(ReportServer instance);
    partial void UpdateReportServer(ReportServer instance);
    partial void DeleteReportServer(ReportServer instance);
    partial void InsertResource_News(Resource_News instance);
    partial void UpdateResource_News(Resource_News instance);
    partial void DeleteResource_News(Resource_News instance);
    partial void InsertResource_Notices(Resource_Notices instance);
    partial void UpdateResource_Notices(Resource_Notices instance);
    partial void DeleteResource_Notices(Resource_Notices instance);
    partial void InsertResource_SignManage(Resource_SignManage instance);
    partial void UpdateResource_SignManage(Resource_SignManage instance);
    partial void DeleteResource_SignManage(Resource_SignManage instance);
    partial void InsertStandard_HSSEStandard(Standard_HSSEStandard instance);
    partial void UpdateStandard_HSSEStandard(Standard_HSSEStandard instance);
    partial void DeleteStandard_HSSEStandard(Standard_HSSEStandard instance);
    partial void InsertStandard_ManagedItem(Standard_ManagedItem instance);
    partial void UpdateStandard_ManagedItem(Standard_ManagedItem instance);
    partial void DeleteStandard_ManagedItem(Standard_ManagedItem instance);
    partial void InsertStandard_ManagedObject(Standard_ManagedObject instance);
    partial void UpdateStandard_ManagedObject(Standard_ManagedObject instance);
    partial void DeleteStandard_ManagedObject(Standard_ManagedObject instance);
    partial void InsertSys_ButtonPower(Sys_ButtonPower instance);
    partial void UpdateSys_ButtonPower(Sys_ButtonPower instance);
    partial void DeleteSys_ButtonPower(Sys_ButtonPower instance);
    partial void InsertSys_ButtonToMenu(Sys_ButtonToMenu instance);
    partial void UpdateSys_ButtonToMenu(Sys_ButtonToMenu instance);
    partial void DeleteSys_ButtonToMenu(Sys_ButtonToMenu instance);
    partial void InsertSys_Const(Sys_Const instance);
    partial void UpdateSys_Const(Sys_Const instance);
    partial void DeleteSys_Const(Sys_Const instance);
    partial void InsertSys_Entrust(Sys_Entrust instance);
    partial void UpdateSys_Entrust(Sys_Entrust instance);
    partial void DeleteSys_Entrust(Sys_Entrust instance);
    partial void InsertSys_ErrLogInfo(Sys_ErrLogInfo instance);
    partial void UpdateSys_ErrLogInfo(Sys_ErrLogInfo instance);
    partial void DeleteSys_ErrLogInfo(Sys_ErrLogInfo instance);
    partial void InsertSys_FlowOperate(Sys_FlowOperate instance);
    partial void UpdateSys_FlowOperate(Sys_FlowOperate instance);
    partial void DeleteSys_FlowOperate(Sys_FlowOperate instance);
    partial void InsertSys_Log(Sys_Log instance);
    partial void UpdateSys_Log(Sys_Log instance);
    partial void DeleteSys_Log(Sys_Log instance);
    partial void InsertSys_Menu(Sys_Menu instance);
    partial void UpdateSys_Menu(Sys_Menu instance);
    partial void DeleteSys_Menu(Sys_Menu instance);
    partial void InsertSys_MenuAppraisal(Sys_MenuAppraisal instance);
    partial void UpdateSys_MenuAppraisal(Sys_MenuAppraisal instance);
    partial void DeleteSys_MenuAppraisal(Sys_MenuAppraisal instance);
    partial void InsertSys_MenuFlowOperate(Sys_MenuFlowOperate instance);
    partial void UpdateSys_MenuFlowOperate(Sys_MenuFlowOperate instance);
    partial void DeleteSys_MenuFlowOperate(Sys_MenuFlowOperate instance);
    partial void InsertSys_PushRecord(Sys_PushRecord instance);
    partial void UpdateSys_PushRecord(Sys_PushRecord instance);
    partial void DeleteSys_PushRecord(Sys_PushRecord instance);
    partial void InsertSys_Role(Sys_Role instance);
    partial void UpdateSys_Role(Sys_Role instance);
    partial void DeleteSys_Role(Sys_Role instance);
    partial void InsertSys_RolePower(Sys_RolePower instance);
    partial void UpdateSys_RolePower(Sys_RolePower instance);
    partial void DeleteSys_RolePower(Sys_RolePower instance);
    partial void InsertSys_Set(Sys_Set instance);
    partial void UpdateSys_Set(Sys_Set instance);
    partial void DeleteSys_Set(Sys_Set instance);
    partial void InsertSys_User(Sys_User instance);
    partial void UpdateSys_User(Sys_User instance);
    partial void DeleteSys_User(Sys_User instance);
    partial void InsertSys_UserDealInstallation(Sys_UserDealInstallation instance);
    partial void UpdateSys_UserDealInstallation(Sys_UserDealInstallation instance);
    partial void DeleteSys_UserDealInstallation(Sys_UserDealInstallation instance);
    partial void InsertSys_UserDuty(Sys_UserDuty instance);
    partial void UpdateSys_UserDuty(Sys_UserDuty instance);
    partial void DeleteSys_UserDuty(Sys_UserDuty instance);
    partial void InsertSys_UserEntryRecord(Sys_UserEntryRecord instance);
    partial void UpdateSys_UserEntryRecord(Sys_UserEntryRecord instance);
    partial void DeleteSys_UserEntryRecord(Sys_UserEntryRecord instance);
    partial void InsertSys_UserSchedule(Sys_UserSchedule instance);
    partial void UpdateSys_UserSchedule(Sys_UserSchedule instance);
    partial void DeleteSys_UserSchedule(Sys_UserSchedule instance);
    partial void InsertSys_Version(Sys_Version instance);
    partial void UpdateSys_Version(Sys_Version instance);
    partial void DeleteSys_Version(Sys_Version instance);
    partial void InsertTechnique_Appraise(Technique_Appraise instance);
    partial void UpdateTechnique_Appraise(Technique_Appraise instance);
    partial void DeleteTechnique_Appraise(Technique_Appraise instance);
    partial void InsertTechnique_CheckItemDetail(Technique_CheckItemDetail instance);
    partial void UpdateTechnique_CheckItemDetail(Technique_CheckItemDetail instance);
    partial void DeleteTechnique_CheckItemDetail(Technique_CheckItemDetail instance);
    partial void InsertTechnique_CheckItemSet(Technique_CheckItemSet instance);
    partial void UpdateTechnique_CheckItemSet(Technique_CheckItemSet instance);
    partial void DeleteTechnique_CheckItemSet(Technique_CheckItemSet instance);
    partial void InsertTechnique_Emergency(Technique_Emergency instance);
    partial void UpdateTechnique_Emergency(Technique_Emergency instance);
    partial void DeleteTechnique_Emergency(Technique_Emergency instance);
    partial void InsertTechnique_HAZOP(Technique_HAZOP instance);
    partial void UpdateTechnique_HAZOP(Technique_HAZOP instance);
    partial void DeleteTechnique_HAZOP(Technique_HAZOP instance);
    partial void InsertTechnique_SpecialScheme(Technique_SpecialScheme instance);
    partial void UpdateTechnique_SpecialScheme(Technique_SpecialScheme instance);
    partial void DeleteTechnique_SpecialScheme(Technique_SpecialScheme instance);
    partial void InsertTraining_ModelTestRecord(Training_ModelTestRecord instance);
    partial void UpdateTraining_ModelTestRecord(Training_ModelTestRecord instance);
    partial void DeleteTraining_ModelTestRecord(Training_ModelTestRecord instance);
    partial void InsertTraining_ModelTestRecordItem(Training_ModelTestRecordItem instance);
    partial void UpdateTraining_ModelTestRecordItem(Training_ModelTestRecordItem instance);
    partial void DeleteTraining_ModelTestRecordItem(Training_ModelTestRecordItem instance);
    partial void InsertTraining_Plan(Training_Plan instance);
    partial void UpdateTraining_Plan(Training_Plan instance);
    partial void DeleteTraining_Plan(Training_Plan instance);
    partial void InsertTraining_PlanItem(Training_PlanItem instance);
    partial void UpdateTraining_PlanItem(Training_PlanItem instance);
    partial void DeleteTraining_PlanItem(Training_PlanItem instance);
    partial void InsertTraining_Task(Training_Task instance);
    partial void UpdateTraining_Task(Training_Task instance);
    partial void DeleteTraining_Task(Training_Task instance);
    partial void InsertTraining_TestPlan(Training_TestPlan instance);
    partial void UpdateTraining_TestPlan(Training_TestPlan instance);
    partial void DeleteTraining_TestPlan(Training_TestPlan instance);
    partial void InsertTraining_TestPlanTime(Training_TestPlanTime instance);
    partial void UpdateTraining_TestPlanTime(Training_TestPlanTime instance);
    partial void DeleteTraining_TestPlanTime(Training_TestPlanTime instance);
    partial void InsertTraining_TestPlanTraining(Training_TestPlanTraining instance);
    partial void UpdateTraining_TestPlanTraining(Training_TestPlanTraining instance);
    partial void DeleteTraining_TestPlanTraining(Training_TestPlanTraining instance);
    partial void InsertTraining_TestRecord(Training_TestRecord instance);
    partial void UpdateTraining_TestRecord(Training_TestRecord instance);
    partial void DeleteTraining_TestRecord(Training_TestRecord instance);
    partial void InsertTraining_TestRecordItem(Training_TestRecordItem instance);
    partial void UpdateTraining_TestRecordItem(Training_TestRecordItem instance);
    partial void DeleteTraining_TestRecordItem(Training_TestRecordItem instance);
    partial void InsertTraining_Training(Training_Training instance);
    partial void UpdateTraining_Training(Training_Training instance);
    partial void DeleteTraining_Training(Training_Training instance);
    partial void InsertTraining_TrainingEdu(Training_TrainingEdu instance);
    partial void UpdateTraining_TrainingEdu(Training_TrainingEdu instance);
    partial void DeleteTraining_TrainingEdu(Training_TrainingEdu instance);
    partial void InsertTraining_TrainingEduItem(Training_TrainingEduItem instance);
    partial void UpdateTraining_TrainingEduItem(Training_TrainingEduItem instance);
    partial void DeleteTraining_TrainingEduItem(Training_TrainingEduItem instance);
    partial void InsertTraining_TrainingItem(Training_TrainingItem instance);
    partial void UpdateTraining_TrainingItem(Training_TrainingItem instance);
    partial void DeleteTraining_TrainingItem(Training_TrainingItem instance);
    partial void InsertTraining_TrainRecord(Training_TrainRecord instance);
    partial void UpdateTraining_TrainRecord(Training_TrainRecord instance);
    partial void DeleteTraining_TrainRecord(Training_TrainRecord instance);
    partial void InsertTraining_TrainRecordDetail(Training_TrainRecordDetail instance);
    partial void UpdateTraining_TrainRecordDetail(Training_TrainRecordDetail instance);
    partial void DeleteTraining_TrainRecordDetail(Training_TrainRecordDetail instance);
    #endregion
		
		public HSSEDB_ENN(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HSSEDB_ENN(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HSSEDB_ENN(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HSSEDB_ENN(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Appraisal_AppraisalScore> Appraisal_AppraisalScore
		{
			get
			{
				return this.GetTable<Appraisal_AppraisalScore>();
			}
		}
		
		public System.Data.Linq.Table<Appraisal_PersonAppraisal> Appraisal_PersonAppraisal
		{
			get
			{
				return this.GetTable<Appraisal_PersonAppraisal>();
			}
		}
		
		public System.Data.Linq.Table<AttachFile> AttachFile
		{
			get
			{
				return this.GetTable<AttachFile>();
			}
		}
		
		public System.Data.Linq.Table<Base_AppraisalItem> Base_AppraisalItem
		{
			get
			{
				return this.GetTable<Base_AppraisalItem>();
			}
		}
		
		public System.Data.Linq.Table<Base_Certificate> Base_Certificate
		{
			get
			{
				return this.GetTable<Base_Certificate>();
			}
		}
		
		public System.Data.Linq.Table<Base_Depart> Base_Depart
		{
			get
			{
				return this.GetTable<Base_Depart>();
			}
		}
		
		public System.Data.Linq.Table<Base_EmergencyType> Base_EmergencyType
		{
			get
			{
				return this.GetTable<Base_EmergencyType>();
			}
		}
		
		public System.Data.Linq.Table<Base_Euipment> Base_Euipment
		{
			get
			{
				return this.GetTable<Base_Euipment>();
			}
		}
		
		public System.Data.Linq.Table<Base_EuipmentType> Base_EuipmentType
		{
			get
			{
				return this.GetTable<Base_EuipmentType>();
			}
		}
		
		public System.Data.Linq.Table<Base_FireWorkAnalysisData> Base_FireWorkAnalysisData
		{
			get
			{
				return this.GetTable<Base_FireWorkAnalysisData>();
			}
		}
		
		public System.Data.Linq.Table<Base_FireWorkMode> Base_FireWorkMode
		{
			get
			{
				return this.GetTable<Base_FireWorkMode>();
			}
		}
		
		public System.Data.Linq.Table<Base_HAZID> Base_HAZID
		{
			get
			{
				return this.GetTable<Base_HAZID>();
			}
		}
		
		public System.Data.Linq.Table<Base_HiddenHazardType> Base_HiddenHazardType
		{
			get
			{
				return this.GetTable<Base_HiddenHazardType>();
			}
		}
		
		public System.Data.Linq.Table<Base_HiddenHazardTypeItem> Base_HiddenHazardTypeItem
		{
			get
			{
				return this.GetTable<Base_HiddenHazardTypeItem>();
			}
		}
		
		public System.Data.Linq.Table<Base_Installation> Base_Installation
		{
			get
			{
				return this.GetTable<Base_Installation>();
			}
		}
		
		public System.Data.Linq.Table<Base_JobActivity> Base_JobActivity
		{
			get
			{
				return this.GetTable<Base_JobActivity>();
			}
		}
		
		public System.Data.Linq.Table<Base_JobEnvironment> Base_JobEnvironment
		{
			get
			{
				return this.GetTable<Base_JobEnvironment>();
			}
		}
		
		public System.Data.Linq.Table<Base_LimitedSpaceAnalysisData> Base_LimitedSpaceAnalysisData
		{
			get
			{
				return this.GetTable<Base_LimitedSpaceAnalysisData>();
			}
		}
		
		public System.Data.Linq.Table<Base_OverhaulRiskGrade> Base_OverhaulRiskGrade
		{
			get
			{
				return this.GetTable<Base_OverhaulRiskGrade>();
			}
		}
		
		public System.Data.Linq.Table<Base_Position> Base_Position
		{
			get
			{
				return this.GetTable<Base_Position>();
			}
		}
		
		public System.Data.Linq.Table<Base_PostTitle> Base_PostTitle
		{
			get
			{
				return this.GetTable<Base_PostTitle>();
			}
		}
		
		public System.Data.Linq.Table<Base_Prospective> Base_Prospective
		{
			get
			{
				return this.GetTable<Base_Prospective>();
			}
		}
		
		public System.Data.Linq.Table<Base_RiskLevelValue> Base_RiskLevelValue
		{
			get
			{
				return this.GetTable<Base_RiskLevelValue>();
			}
		}
		
		public System.Data.Linq.Table<Base_SafetyMeasures> Base_SafetyMeasures
		{
			get
			{
				return this.GetTable<Base_SafetyMeasures>();
			}
		}
		
		public System.Data.Linq.Table<Base_SCL> Base_SCL
		{
			get
			{
				return this.GetTable<Base_SCL>();
			}
		}
		
		public System.Data.Linq.Table<Base_SpecialSchemeType> Base_SpecialSchemeType
		{
			get
			{
				return this.GetTable<Base_SpecialSchemeType>();
			}
		}
		
		public System.Data.Linq.Table<Base_Specialty> Base_Specialty
		{
			get
			{
				return this.GetTable<Base_Specialty>();
			}
		}
		
		public System.Data.Linq.Table<Base_Standard> Base_Standard
		{
			get
			{
				return this.GetTable<Base_Standard>();
			}
		}
		
		public System.Data.Linq.Table<Base_TeamGroup> Base_TeamGroup
		{
			get
			{
				return this.GetTable<Base_TeamGroup>();
			}
		}
		
		public System.Data.Linq.Table<Base_TeamGroupUser> Base_TeamGroupUser
		{
			get
			{
				return this.GetTable<Base_TeamGroupUser>();
			}
		}
		
		public System.Data.Linq.Table<Base_TrainType> Base_TrainType
		{
			get
			{
				return this.GetTable<Base_TrainType>();
			}
		}
		
		public System.Data.Linq.Table<Base_Unit> Base_Unit
		{
			get
			{
				return this.GetTable<Base_Unit>();
			}
		}
		
		public System.Data.Linq.Table<Base_UnitType> Base_UnitType
		{
			get
			{
				return this.GetTable<Base_UnitType>();
			}
		}
		
		public System.Data.Linq.Table<Base_WorkArea> Base_WorkArea
		{
			get
			{
				return this.GetTable<Base_WorkArea>();
			}
		}
		
		public System.Data.Linq.Table<Base_WorkPost> Base_WorkPost
		{
			get
			{
				return this.GetTable<Base_WorkPost>();
			}
		}
		
		public System.Data.Linq.Table<EduTrain_AccidentCase> EduTrain_AccidentCase
		{
			get
			{
				return this.GetTable<EduTrain_AccidentCase>();
			}
		}
		
		public System.Data.Linq.Table<EduTrain_AccidentCaseItem> EduTrain_AccidentCaseItem
		{
			get
			{
				return this.GetTable<EduTrain_AccidentCaseItem>();
			}
		}
		
		public System.Data.Linq.Table<Emergency_RescueInfo> Emergency_RescueInfo
		{
			get
			{
				return this.GetTable<Emergency_RescueInfo>();
			}
		}
		
		public System.Data.Linq.Table<Emergency_RescueInfoPlan> Emergency_RescueInfoPlan
		{
			get
			{
				return this.GetTable<Emergency_RescueInfoPlan>();
			}
		}
		
		public System.Data.Linq.Table<Emergency_Warning> Emergency_Warning
		{
			get
			{
				return this.GetTable<Emergency_Warning>();
			}
		}
		
		public System.Data.Linq.Table<Hazard_HiddenHazard> Hazard_HiddenHazard
		{
			get
			{
				return this.GetTable<Hazard_HiddenHazard>();
			}
		}
		
		public System.Data.Linq.Table<Hazard_HiddenHazardDelay> Hazard_HiddenHazardDelay
		{
			get
			{
				return this.GetTable<Hazard_HiddenHazardDelay>();
			}
		}
		
		public System.Data.Linq.Table<Hazard_JHAItem> Hazard_JHAItem
		{
			get
			{
				return this.GetTable<Hazard_JHAItem>();
			}
		}
		
		public System.Data.Linq.Table<Hazard_JHAItemRecord> Hazard_JHAItemRecord
		{
			get
			{
				return this.GetTable<Hazard_JHAItemRecord>();
			}
		}
		
		public System.Data.Linq.Table<Hazard_LECItem> Hazard_LECItem
		{
			get
			{
				return this.GetTable<Hazard_LECItem>();
			}
		}
		
		public System.Data.Linq.Table<Hazard_LECItemRecord> Hazard_LECItemRecord
		{
			get
			{
				return this.GetTable<Hazard_LECItemRecord>();
			}
		}
		
		public System.Data.Linq.Table<Hazard_PatrolPlan> Hazard_PatrolPlan
		{
			get
			{
				return this.GetTable<Hazard_PatrolPlan>();
			}
		}
		
		public System.Data.Linq.Table<Hazard_RiskList> Hazard_RiskList
		{
			get
			{
				return this.GetTable<Hazard_RiskList>();
			}
		}
		
		public System.Data.Linq.Table<Hazard_RiskListItem> Hazard_RiskListItem
		{
			get
			{
				return this.GetTable<Hazard_RiskListItem>();
			}
		}
		
		public System.Data.Linq.Table<Hazard_RoutingInspection> Hazard_RoutingInspection
		{
			get
			{
				return this.GetTable<Hazard_RoutingInspection>();
			}
		}
		
		public System.Data.Linq.Table<Hazard_SCLItem> Hazard_SCLItem
		{
			get
			{
				return this.GetTable<Hazard_SCLItem>();
			}
		}
		
		public System.Data.Linq.Table<Hazard_SCLItemRecord> Hazard_SCLItemRecord
		{
			get
			{
				return this.GetTable<Hazard_SCLItemRecord>();
			}
		}
		
		public System.Data.Linq.Table<InformationProject_FileCabinetA> InformationProject_FileCabinetA
		{
			get
			{
				return this.GetTable<InformationProject_FileCabinetA>();
			}
		}
		
		public System.Data.Linq.Table<InformationProject_FileCabinetAItem> InformationProject_FileCabinetAItem
		{
			get
			{
				return this.GetTable<InformationProject_FileCabinetAItem>();
			}
		}
		
		public System.Data.Linq.Table<License_BlindPlate> License_BlindPlate
		{
			get
			{
				return this.GetTable<License_BlindPlate>();
			}
		}
		
		public System.Data.Linq.Table<License_BreakGround> License_BreakGround
		{
			get
			{
				return this.GetTable<License_BreakGround>();
			}
		}
		
		public System.Data.Linq.Table<License_Electricity> License_Electricity
		{
			get
			{
				return this.GetTable<License_Electricity>();
			}
		}
		
		public System.Data.Linq.Table<License_FireWork> License_FireWork
		{
			get
			{
				return this.GetTable<License_FireWork>();
			}
		}
		
		public System.Data.Linq.Table<License_FireWorkAnalysis> License_FireWorkAnalysis
		{
			get
			{
				return this.GetTable<License_FireWorkAnalysis>();
			}
		}
		
		public System.Data.Linq.Table<License_HeightWork> License_HeightWork
		{
			get
			{
				return this.GetTable<License_HeightWork>();
			}
		}
		
		public System.Data.Linq.Table<License_Interlocking> License_Interlocking
		{
			get
			{
				return this.GetTable<License_Interlocking>();
			}
		}
		
		public System.Data.Linq.Table<License_LicenseItem> License_LicenseItem
		{
			get
			{
				return this.GetTable<License_LicenseItem>();
			}
		}
		
		public System.Data.Linq.Table<License_LiftingWork> License_LiftingWork
		{
			get
			{
				return this.GetTable<License_LiftingWork>();
			}
		}
		
		public System.Data.Linq.Table<License_LimitedSpace> License_LimitedSpace
		{
			get
			{
				return this.GetTable<License_LimitedSpace>();
			}
		}
		
		public System.Data.Linq.Table<License_LimitedSpaceAnalysis> License_LimitedSpaceAnalysis
		{
			get
			{
				return this.GetTable<License_LimitedSpaceAnalysis>();
			}
		}
		
		public System.Data.Linq.Table<License_OpenCircuit> License_OpenCircuit
		{
			get
			{
				return this.GetTable<License_OpenCircuit>();
			}
		}
		
		public System.Data.Linq.Table<License_Overhaul> License_Overhaul
		{
			get
			{
				return this.GetTable<License_Overhaul>();
			}
		}
		
		public System.Data.Linq.Table<Lock_SmartLock> Lock_SmartLock
		{
			get
			{
				return this.GetTable<Lock_SmartLock>();
			}
		}
		
		public System.Data.Linq.Table<Lock_SmartLockItem> Lock_SmartLockItem
		{
			get
			{
				return this.GetTable<Lock_SmartLockItem>();
			}
		}
		
		public System.Data.Linq.Table<Personal_PersonalFolder> Personal_PersonalFolder
		{
			get
			{
				return this.GetTable<Personal_PersonalFolder>();
			}
		}
		
		public System.Data.Linq.Table<Personal_PersonalFolderItem> Personal_PersonalFolderItem
		{
			get
			{
				return this.GetTable<Personal_PersonalFolderItem>();
			}
		}
		
		public System.Data.Linq.Table<QualityAudit_EquipmentQuality> QualityAudit_EquipmentQuality
		{
			get
			{
				return this.GetTable<QualityAudit_EquipmentQuality>();
			}
		}
		
		public System.Data.Linq.Table<QualityAudit_PersonQuality> QualityAudit_PersonQuality
		{
			get
			{
				return this.GetTable<QualityAudit_PersonQuality>();
			}
		}
		
		public System.Data.Linq.Table<QualityAudit_PersonQualityItem> QualityAudit_PersonQualityItem
		{
			get
			{
				return this.GetTable<QualityAudit_PersonQualityItem>();
			}
		}
		
		public System.Data.Linq.Table<QualityAudit_SubUnitQuality> QualityAudit_SubUnitQuality
		{
			get
			{
				return this.GetTable<QualityAudit_SubUnitQuality>();
			}
		}
		
		public System.Data.Linq.Table<ReportServer> ReportServer
		{
			get
			{
				return this.GetTable<ReportServer>();
			}
		}
		
		public System.Data.Linq.Table<Resource_News> Resource_News
		{
			get
			{
				return this.GetTable<Resource_News>();
			}
		}
		
		public System.Data.Linq.Table<Resource_Notices> Resource_Notices
		{
			get
			{
				return this.GetTable<Resource_Notices>();
			}
		}
		
		public System.Data.Linq.Table<Resource_SignManage> Resource_SignManage
		{
			get
			{
				return this.GetTable<Resource_SignManage>();
			}
		}
		
		public System.Data.Linq.Table<Standard_HSSEStandard> Standard_HSSEStandard
		{
			get
			{
				return this.GetTable<Standard_HSSEStandard>();
			}
		}
		
		public System.Data.Linq.Table<Standard_ManagedItem> Standard_ManagedItem
		{
			get
			{
				return this.GetTable<Standard_ManagedItem>();
			}
		}
		
		public System.Data.Linq.Table<Standard_ManagedObject> Standard_ManagedObject
		{
			get
			{
				return this.GetTable<Standard_ManagedObject>();
			}
		}
		
		public System.Data.Linq.Table<Sys_ButtonPower> Sys_ButtonPower
		{
			get
			{
				return this.GetTable<Sys_ButtonPower>();
			}
		}
		
		public System.Data.Linq.Table<Sys_ButtonToMenu> Sys_ButtonToMenu
		{
			get
			{
				return this.GetTable<Sys_ButtonToMenu>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Const> Sys_Const
		{
			get
			{
				return this.GetTable<Sys_Const>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Entrust> Sys_Entrust
		{
			get
			{
				return this.GetTable<Sys_Entrust>();
			}
		}
		
		public System.Data.Linq.Table<Sys_ErrLogInfo> Sys_ErrLogInfo
		{
			get
			{
				return this.GetTable<Sys_ErrLogInfo>();
			}
		}
		
		public System.Data.Linq.Table<Sys_FlowOperate> Sys_FlowOperate
		{
			get
			{
				return this.GetTable<Sys_FlowOperate>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Log> Sys_Log
		{
			get
			{
				return this.GetTable<Sys_Log>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Menu> Sys_Menu
		{
			get
			{
				return this.GetTable<Sys_Menu>();
			}
		}
		
		public System.Data.Linq.Table<Sys_MenuAppraisal> Sys_MenuAppraisal
		{
			get
			{
				return this.GetTable<Sys_MenuAppraisal>();
			}
		}
		
		public System.Data.Linq.Table<Sys_MenuFlowOperate> Sys_MenuFlowOperate
		{
			get
			{
				return this.GetTable<Sys_MenuFlowOperate>();
			}
		}
		
		public System.Data.Linq.Table<Sys_PushRecord> Sys_PushRecord
		{
			get
			{
				return this.GetTable<Sys_PushRecord>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Role> Sys_Role
		{
			get
			{
				return this.GetTable<Sys_Role>();
			}
		}
		
		public System.Data.Linq.Table<Sys_RolePower> Sys_RolePower
		{
			get
			{
				return this.GetTable<Sys_RolePower>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Set> Sys_Set
		{
			get
			{
				return this.GetTable<Sys_Set>();
			}
		}
		
		public System.Data.Linq.Table<Sys_User> Sys_User
		{
			get
			{
				return this.GetTable<Sys_User>();
			}
		}
		
		public System.Data.Linq.Table<Sys_UserDealInstallation> Sys_UserDealInstallation
		{
			get
			{
				return this.GetTable<Sys_UserDealInstallation>();
			}
		}
		
		public System.Data.Linq.Table<Sys_UserDuty> Sys_UserDuty
		{
			get
			{
				return this.GetTable<Sys_UserDuty>();
			}
		}
		
		public System.Data.Linq.Table<Sys_UserEntryRecord> Sys_UserEntryRecord
		{
			get
			{
				return this.GetTable<Sys_UserEntryRecord>();
			}
		}
		
		public System.Data.Linq.Table<Sys_UserSchedule> Sys_UserSchedule
		{
			get
			{
				return this.GetTable<Sys_UserSchedule>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Version> Sys_Version
		{
			get
			{
				return this.GetTable<Sys_Version>();
			}
		}
		
		public System.Data.Linq.Table<Technique_Appraise> Technique_Appraise
		{
			get
			{
				return this.GetTable<Technique_Appraise>();
			}
		}
		
		public System.Data.Linq.Table<Technique_CheckItemDetail> Technique_CheckItemDetail
		{
			get
			{
				return this.GetTable<Technique_CheckItemDetail>();
			}
		}
		
		public System.Data.Linq.Table<Technique_CheckItemSet> Technique_CheckItemSet
		{
			get
			{
				return this.GetTable<Technique_CheckItemSet>();
			}
		}
		
		public System.Data.Linq.Table<Technique_Emergency> Technique_Emergency
		{
			get
			{
				return this.GetTable<Technique_Emergency>();
			}
		}
		
		public System.Data.Linq.Table<Technique_HAZOP> Technique_HAZOP
		{
			get
			{
				return this.GetTable<Technique_HAZOP>();
			}
		}
		
		public System.Data.Linq.Table<Technique_SpecialScheme> Technique_SpecialScheme
		{
			get
			{
				return this.GetTable<Technique_SpecialScheme>();
			}
		}
		
		public System.Data.Linq.Table<Training_ModelTestRecord> Training_ModelTestRecord
		{
			get
			{
				return this.GetTable<Training_ModelTestRecord>();
			}
		}
		
		public System.Data.Linq.Table<Training_ModelTestRecordItem> Training_ModelTestRecordItem
		{
			get
			{
				return this.GetTable<Training_ModelTestRecordItem>();
			}
		}
		
		public System.Data.Linq.Table<Training_Plan> Training_Plan
		{
			get
			{
				return this.GetTable<Training_Plan>();
			}
		}
		
		public System.Data.Linq.Table<Training_PlanItem> Training_PlanItem
		{
			get
			{
				return this.GetTable<Training_PlanItem>();
			}
		}
		
		public System.Data.Linq.Table<Training_Task> Training_Task
		{
			get
			{
				return this.GetTable<Training_Task>();
			}
		}
		
		public System.Data.Linq.Table<Training_TestPlan> Training_TestPlan
		{
			get
			{
				return this.GetTable<Training_TestPlan>();
			}
		}
		
		public System.Data.Linq.Table<Training_TestPlanTime> Training_TestPlanTime
		{
			get
			{
				return this.GetTable<Training_TestPlanTime>();
			}
		}
		
		public System.Data.Linq.Table<Training_TestPlanTraining> Training_TestPlanTraining
		{
			get
			{
				return this.GetTable<Training_TestPlanTraining>();
			}
		}
		
		public System.Data.Linq.Table<Training_TestRecord> Training_TestRecord
		{
			get
			{
				return this.GetTable<Training_TestRecord>();
			}
		}
		
		public System.Data.Linq.Table<Training_TestRecordItem> Training_TestRecordItem
		{
			get
			{
				return this.GetTable<Training_TestRecordItem>();
			}
		}
		
		public System.Data.Linq.Table<Training_Training> Training_Training
		{
			get
			{
				return this.GetTable<Training_Training>();
			}
		}
		
		public System.Data.Linq.Table<Training_TrainingEdu> Training_TrainingEdu
		{
			get
			{
				return this.GetTable<Training_TrainingEdu>();
			}
		}
		
		public System.Data.Linq.Table<Training_TrainingEduItem> Training_TrainingEduItem
		{
			get
			{
				return this.GetTable<Training_TrainingEduItem>();
			}
		}
		
		public System.Data.Linq.Table<Training_TrainingItem> Training_TrainingItem
		{
			get
			{
				return this.GetTable<Training_TrainingItem>();
			}
		}
		
		public System.Data.Linq.Table<Training_TrainRecord> Training_TrainRecord
		{
			get
			{
				return this.GetTable<Training_TrainRecord>();
			}
		}
		
		public System.Data.Linq.Table<Training_TrainRecordDetail> Training_TrainRecordDetail
		{
			get
			{
				return this.GetTable<Training_TrainRecordDetail>();
			}
		}
		
		public System.Data.Linq.Table<View_EduTrain_AccidentCaseItem> View_EduTrain_AccidentCaseItem
		{
			get
			{
				return this.GetTable<View_EduTrain_AccidentCaseItem>();
			}
		}
		
		public System.Data.Linq.Table<View_Hazard_HiddenHazard> View_Hazard_HiddenHazard
		{
			get
			{
				return this.GetTable<View_Hazard_HiddenHazard>();
			}
		}
		
		public System.Data.Linq.Table<View_Hazard_JHAItem> View_Hazard_JHAItem
		{
			get
			{
				return this.GetTable<View_Hazard_JHAItem>();
			}
		}
		
		public System.Data.Linq.Table<View_Hazard_RiskList> View_Hazard_RiskList
		{
			get
			{
				return this.GetTable<View_Hazard_RiskList>();
			}
		}
		
		public System.Data.Linq.Table<View_Hazard_RoutingInspection> View_Hazard_RoutingInspection
		{
			get
			{
				return this.GetTable<View_Hazard_RoutingInspection>();
			}
		}
		
		public System.Data.Linq.Table<View_License_BlindPlate> View_License_BlindPlate
		{
			get
			{
				return this.GetTable<View_License_BlindPlate>();
			}
		}
		
		public System.Data.Linq.Table<View_License_BreakGround> View_License_BreakGround
		{
			get
			{
				return this.GetTable<View_License_BreakGround>();
			}
		}
		
		public System.Data.Linq.Table<View_License_FireWork> View_License_FireWork
		{
			get
			{
				return this.GetTable<View_License_FireWork>();
			}
		}
		
		public System.Data.Linq.Table<View_License_HeightWork> View_License_HeightWork
		{
			get
			{
				return this.GetTable<View_License_HeightWork>();
			}
		}
		
		public System.Data.Linq.Table<View_License_LiftingWork> View_License_LiftingWork
		{
			get
			{
				return this.GetTable<View_License_LiftingWork>();
			}
		}
		
		public System.Data.Linq.Table<View_License_LimitedSpace> View_License_LimitedSpace
		{
			get
			{
				return this.GetTable<View_License_LimitedSpace>();
			}
		}
		
		public System.Data.Linq.Table<View_License_OpenCircuit> View_License_OpenCircuit
		{
			get
			{
				return this.GetTable<View_License_OpenCircuit>();
			}
		}
		
		public System.Data.Linq.Table<View_QualityAudit_PersonQuality> View_QualityAudit_PersonQuality
		{
			get
			{
				return this.GetTable<View_QualityAudit_PersonQuality>();
			}
		}
		
		public System.Data.Linq.Table<View_RiskPlanRiskListItem> View_RiskPlanRiskListItem
		{
			get
			{
				return this.GetTable<View_RiskPlanRiskListItem>();
			}
		}
		
		public System.Data.Linq.Table<View_RiskPlanRiskListItemTime> View_RiskPlanRiskListItemTime
		{
			get
			{
				return this.GetTable<View_RiskPlanRiskListItemTime>();
			}
		}
		
		public System.Data.Linq.Table<View_Standard_HSSEStandard> View_Standard_HSSEStandard
		{
			get
			{
				return this.GetTable<View_Standard_HSSEStandard>();
			}
		}
		
		public System.Data.Linq.Table<View_Standard_ManagedItem> View_Standard_ManagedItem
		{
			get
			{
				return this.GetTable<View_Standard_ManagedItem>();
			}
		}
		
		public System.Data.Linq.Table<View_Sys_User> View_Sys_User
		{
			get
			{
				return this.GetTable<View_Sys_User>();
			}
		}
		
		public System.Data.Linq.Table<View_Training_TrainingEduItem> View_Training_TrainingEduItem
		{
			get
			{
				return this.GetTable<View_Training_TrainingEduItem>();
			}
		}
		
		public System.Data.Linq.Table<View_Training_TrainingItem> View_Training_TrainingItem
		{
			get
			{
				return this.GetTable<View_Training_TrainingItem>();
			}
		}
		
		public System.Data.Linq.Table<View_Training_TrainRecordDetail> View_Training_TrainRecordDetail
		{
			get
			{
				return this.GetTable<View_Training_TrainRecordDetail>();
			}
		}
		
		public System.Data.Linq.Table<View_UserClassificationList> View_UserClassificationList
		{
			get
			{
				return this.GetTable<View_UserClassificationList>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Appraisal_AppraisalScore")]
	public partial class Appraisal_AppraisalScore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AppraisalScoreId;
		
		private string _UserId;
		
		private string _MenuId;
		
		private System.Nullable<int> _MenuOperation;
		
		private System.Nullable<System.DateTime> _OperationTime;
		
		private System.Nullable<decimal> _Score;
		
		private string _DataId;
		
		private string _MenuOperationName;
		
		private EntityRef<Sys_Menu> _Sys_Menu;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppraisalScoreIdChanging(string value);
    partial void OnAppraisalScoreIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnMenuOperationChanging(System.Nullable<int> value);
    partial void OnMenuOperationChanged();
    partial void OnOperationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperationTimeChanged();
    partial void OnScoreChanging(System.Nullable<decimal> value);
    partial void OnScoreChanged();
    partial void OnDataIdChanging(string value);
    partial void OnDataIdChanged();
    partial void OnMenuOperationNameChanging(string value);
    partial void OnMenuOperationNameChanged();
    #endregion
		
		public Appraisal_AppraisalScore()
		{
			this._Sys_Menu = default(EntityRef<Sys_Menu>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppraisalScoreId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AppraisalScoreId
		{
			get
			{
				return this._AppraisalScoreId;
			}
			set
			{
				if ((this._AppraisalScoreId != value))
				{
					this.OnAppraisalScoreIdChanging(value);
					this.SendPropertyChanging();
					this._AppraisalScoreId = value;
					this.SendPropertyChanged("AppraisalScoreId");
					this.OnAppraisalScoreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Sys_Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuOperation", DbType="Int")]
		public System.Nullable<int> MenuOperation
		{
			get
			{
				return this._MenuOperation;
			}
			set
			{
				if ((this._MenuOperation != value))
				{
					this.OnMenuOperationChanging(value);
					this.SendPropertyChanging();
					this._MenuOperation = value;
					this.SendPropertyChanged("MenuOperation");
					this.OnMenuOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperationTime
		{
			get
			{
				return this._OperationTime;
			}
			set
			{
				if ((this._OperationTime != value))
				{
					this.OnOperationTimeChanging(value);
					this.SendPropertyChanging();
					this._OperationTime = value;
					this.SendPropertyChanged("OperationTime");
					this.OnOperationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataId", DbType="NVarChar(50)")]
		public string DataId
		{
			get
			{
				return this._DataId;
			}
			set
			{
				if ((this._DataId != value))
				{
					this.OnDataIdChanging(value);
					this.SendPropertyChanging();
					this._DataId = value;
					this.SendPropertyChanged("DataId");
					this.OnDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuOperationName", DbType="NVarChar(50)")]
		public string MenuOperationName
		{
			get
			{
				return this._MenuOperationName;
			}
			set
			{
				if ((this._MenuOperationName != value))
				{
					this.OnMenuOperationNameChanging(value);
					this.SendPropertyChanging();
					this._MenuOperationName = value;
					this.SendPropertyChanged("MenuOperationName");
					this.OnMenuOperationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Appraisal_AppraisalScore_Sys_Menu", Storage="_Sys_Menu", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true)]
		public Sys_Menu Sys_Menu
		{
			get
			{
				return this._Sys_Menu.Entity;
			}
			set
			{
				Sys_Menu previousValue = this._Sys_Menu.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Menu.Entity = null;
						previousValue.Appraisal_AppraisalScore.Remove(this);
					}
					this._Sys_Menu.Entity = value;
					if ((value != null))
					{
						value.Appraisal_AppraisalScore.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(string);
					}
					this.SendPropertyChanged("Sys_Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Appraisal_AppraisalScore_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Appraisal_AppraisalScore.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Appraisal_AppraisalScore.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Appraisal_PersonAppraisal")]
	public partial class Appraisal_PersonAppraisal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PersonAppraisalId;
		
		private string _FindManId;
		
		private System.Nullable<System.DateTime> _FindTime;
		
		private string _InstallationId;
		
		private string _Place;
		
		private string _ProblemManId;
		
		private string _PohotoUrl;
		
		private System.Nullable<decimal> _Score;
		
		private string _AuditManId;
		
		private System.Nullable<System.DateTime> _AuditTime;
		
		private string _States;
		
		private string _CheckItem;
		
		private System.Nullable<decimal> _GetScore;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _ProblemMan;
		
		private EntityRef<Sys_User> _AuditMan;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonAppraisalIdChanging(string value);
    partial void OnPersonAppraisalIdChanged();
    partial void OnFindManIdChanging(string value);
    partial void OnFindManIdChanged();
    partial void OnFindTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFindTimeChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnPlaceChanging(string value);
    partial void OnPlaceChanged();
    partial void OnProblemManIdChanging(string value);
    partial void OnProblemManIdChanged();
    partial void OnPohotoUrlChanging(string value);
    partial void OnPohotoUrlChanged();
    partial void OnScoreChanging(System.Nullable<decimal> value);
    partial void OnScoreChanged();
    partial void OnAuditManIdChanging(string value);
    partial void OnAuditManIdChanged();
    partial void OnAuditTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditTimeChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnCheckItemChanging(string value);
    partial void OnCheckItemChanged();
    partial void OnGetScoreChanging(System.Nullable<decimal> value);
    partial void OnGetScoreChanged();
    #endregion
		
		public Appraisal_PersonAppraisal()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._ProblemMan = default(EntityRef<Sys_User>);
			this._AuditMan = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonAppraisalId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PersonAppraisalId
		{
			get
			{
				return this._PersonAppraisalId;
			}
			set
			{
				if ((this._PersonAppraisalId != value))
				{
					this.OnPersonAppraisalIdChanging(value);
					this.SendPropertyChanging();
					this._PersonAppraisalId = value;
					this.SendPropertyChanged("PersonAppraisalId");
					this.OnPersonAppraisalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindManId", DbType="NVarChar(50)")]
		public string FindManId
		{
			get
			{
				return this._FindManId;
			}
			set
			{
				if ((this._FindManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFindManIdChanging(value);
					this.SendPropertyChanging();
					this._FindManId = value;
					this.SendPropertyChanged("FindManId");
					this.OnFindManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FindTime
		{
			get
			{
				return this._FindTime;
			}
			set
			{
				if ((this._FindTime != value))
				{
					this.OnFindTimeChanging(value);
					this.SendPropertyChanging();
					this._FindTime = value;
					this.SendPropertyChanged("FindTime");
					this.OnFindTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place", DbType="NVarChar(500)")]
		public string Place
		{
			get
			{
				return this._Place;
			}
			set
			{
				if ((this._Place != value))
				{
					this.OnPlaceChanging(value);
					this.SendPropertyChanging();
					this._Place = value;
					this.SendPropertyChanged("Place");
					this.OnPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProblemManId", DbType="NVarChar(50)")]
		public string ProblemManId
		{
			get
			{
				return this._ProblemManId;
			}
			set
			{
				if ((this._ProblemManId != value))
				{
					if (this._ProblemMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProblemManIdChanging(value);
					this.SendPropertyChanging();
					this._ProblemManId = value;
					this.SendPropertyChanged("ProblemManId");
					this.OnProblemManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PohotoUrl", DbType="NVarChar(2000)")]
		public string PohotoUrl
		{
			get
			{
				return this._PohotoUrl;
			}
			set
			{
				if ((this._PohotoUrl != value))
				{
					this.OnPohotoUrlChanging(value);
					this.SendPropertyChanging();
					this._PohotoUrl = value;
					this.SendPropertyChanged("PohotoUrl");
					this.OnPohotoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditManId", DbType="NVarChar(50)")]
		public string AuditManId
		{
			get
			{
				return this._AuditManId;
			}
			set
			{
				if ((this._AuditManId != value))
				{
					if (this._AuditMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditManIdChanging(value);
					this.SendPropertyChanging();
					this._AuditManId = value;
					this.SendPropertyChanged("AuditManId");
					this.OnAuditManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditTime
		{
			get
			{
				return this._AuditTime;
			}
			set
			{
				if ((this._AuditTime != value))
				{
					this.OnAuditTimeChanging(value);
					this.SendPropertyChanging();
					this._AuditTime = value;
					this.SendPropertyChanged("AuditTime");
					this.OnAuditTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckItem", DbType="NVarChar(800)")]
		public string CheckItem
		{
			get
			{
				return this._CheckItem;
			}
			set
			{
				if ((this._CheckItem != value))
				{
					this.OnCheckItemChanging(value);
					this.SendPropertyChanging();
					this._CheckItem = value;
					this.SendPropertyChanged("CheckItem");
					this.OnCheckItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GetScore", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> GetScore
		{
			get
			{
				return this._GetScore;
			}
			set
			{
				if ((this._GetScore != value))
				{
					this.OnGetScoreChanging(value);
					this.SendPropertyChanging();
					this._GetScore = value;
					this.SendPropertyChanged("GetScore");
					this.OnGetScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Appraisal_PersonAppraisal_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.Appraisal_PersonAppraisal.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.Appraisal_PersonAppraisal.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Appraisal_PersonAppraisal_Sys_User", Storage="_Sys_User", ThisKey="FindManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Appraisal_PersonAppraisal.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Appraisal_PersonAppraisal.Add(this);
						this._FindManId = value.UserId;
					}
					else
					{
						this._FindManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Appraisal_PersonAppraisal_Sys_User1", Storage="_ProblemMan", ThisKey="ProblemManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ProblemMan
		{
			get
			{
				return this._ProblemMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ProblemMan.Entity;
				if (((previousValue != value) 
							|| (this._ProblemMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProblemMan.Entity = null;
						previousValue.User.Remove(this);
					}
					this._ProblemMan.Entity = value;
					if ((value != null))
					{
						value.User.Add(this);
						this._ProblemManId = value.UserId;
					}
					else
					{
						this._ProblemManId = default(string);
					}
					this.SendPropertyChanged("ProblemMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Appraisal_PersonAppraisal_Sys_User2", Storage="_AuditMan", ThisKey="AuditManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User AuditMan
		{
			get
			{
				return this._AuditMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._AuditMan.Entity;
				if (((previousValue != value) 
							|| (this._AuditMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AuditMan.Entity = null;
						previousValue.Appraisal_PersonAppraisal_Sys_User2.Remove(this);
					}
					this._AuditMan.Entity = value;
					if ((value != null))
					{
						value.Appraisal_PersonAppraisal_Sys_User2.Add(this);
						this._AuditManId = value.UserId;
					}
					else
					{
						this._AuditManId = default(string);
					}
					this.SendPropertyChanged("AuditMan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttachFile")]
	public partial class AttachFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AttachFileId;
		
		private string _ToKeyId;
		
		private string _AttachSource;
		
		private string _AttachUrl;
		
		private string _MenuId;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachFileIdChanging(string value);
    partial void OnAttachFileIdChanged();
    partial void OnToKeyIdChanging(string value);
    partial void OnToKeyIdChanged();
    partial void OnAttachSourceChanging(string value);
    partial void OnAttachSourceChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    #endregion
		
		public AttachFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachFileId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AttachFileId
		{
			get
			{
				return this._AttachFileId;
			}
			set
			{
				if ((this._AttachFileId != value))
				{
					this.OnAttachFileIdChanging(value);
					this.SendPropertyChanging();
					this._AttachFileId = value;
					this.SendPropertyChanged("AttachFileId");
					this.OnAttachFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToKeyId", DbType="NVarChar(50)")]
		public string ToKeyId
		{
			get
			{
				return this._ToKeyId;
			}
			set
			{
				if ((this._ToKeyId != value))
				{
					this.OnToKeyIdChanging(value);
					this.SendPropertyChanging();
					this._ToKeyId = value;
					this.SendPropertyChanged("ToKeyId");
					this.OnToKeyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachSource", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AttachSource
		{
			get
			{
				return this._AttachSource;
			}
			set
			{
				if ((this._AttachSource != value))
				{
					this.OnAttachSourceChanging(value);
					this.SendPropertyChanging();
					this._AttachSource = value;
					this.SendPropertyChanged("AttachSource");
					this.OnAttachSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_AppraisalItem")]
	public partial class Base_AppraisalItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AppraisalItemId;
		
		private string _Code;
		
		private string _CheckItem;
		
		private System.Nullable<decimal> _Score;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppraisalItemIdChanging(string value);
    partial void OnAppraisalItemIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCheckItemChanging(string value);
    partial void OnCheckItemChanged();
    partial void OnScoreChanging(System.Nullable<decimal> value);
    partial void OnScoreChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_AppraisalItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppraisalItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AppraisalItemId
		{
			get
			{
				return this._AppraisalItemId;
			}
			set
			{
				if ((this._AppraisalItemId != value))
				{
					this.OnAppraisalItemIdChanging(value);
					this.SendPropertyChanging();
					this._AppraisalItemId = value;
					this.SendPropertyChanged("AppraisalItemId");
					this.OnAppraisalItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckItem", DbType="NVarChar(800)")]
		public string CheckItem
		{
			get
			{
				return this._CheckItem;
			}
			set
			{
				if ((this._CheckItem != value))
				{
					this.OnCheckItemChanging(value);
					this.SendPropertyChanging();
					this._CheckItem = value;
					this.SendPropertyChanged("CheckItem");
					this.OnCheckItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Certificate")]
	public partial class Base_Certificate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CertificateId;
		
		private string _CertificateCode;
		
		private string _CertificateName;
		
		private string _Remark;
		
		private EntitySet<QualityAudit_PersonQuality> _QualityAudit_PersonQuality;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCertificateIdChanging(string value);
    partial void OnCertificateIdChanged();
    partial void OnCertificateCodeChanging(string value);
    partial void OnCertificateCodeChanged();
    partial void OnCertificateNameChanging(string value);
    partial void OnCertificateNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Certificate()
		{
			this._QualityAudit_PersonQuality = new EntitySet<QualityAudit_PersonQuality>(new Action<QualityAudit_PersonQuality>(this.attach_QualityAudit_PersonQuality), new Action<QualityAudit_PersonQuality>(this.detach_QualityAudit_PersonQuality));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CertificateId
		{
			get
			{
				return this._CertificateId;
			}
			set
			{
				if ((this._CertificateId != value))
				{
					this.OnCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._CertificateId = value;
					this.SendPropertyChanged("CertificateId");
					this.OnCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateCode", DbType="NVarChar(50)")]
		public string CertificateCode
		{
			get
			{
				return this._CertificateCode;
			}
			set
			{
				if ((this._CertificateCode != value))
				{
					this.OnCertificateCodeChanging(value);
					this.SendPropertyChanging();
					this._CertificateCode = value;
					this.SendPropertyChanged("CertificateCode");
					this.OnCertificateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateName", DbType="NVarChar(50)")]
		public string CertificateName
		{
			get
			{
				return this._CertificateName;
			}
			set
			{
				if ((this._CertificateName != value))
				{
					this.OnCertificateNameChanging(value);
					this.SendPropertyChanging();
					this._CertificateName = value;
					this.SendPropertyChanged("CertificateName");
					this.OnCertificateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Base_Certificate", Storage="_QualityAudit_PersonQuality", ThisKey="CertificateId", OtherKey="CertificateId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_PersonQuality> QualityAudit_PersonQuality
		{
			get
			{
				return this._QualityAudit_PersonQuality;
			}
			set
			{
				this._QualityAudit_PersonQuality.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Certificate = this;
		}
		
		private void detach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Certificate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Depart")]
	public partial class Base_Depart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DepartId;
		
		private string _DepartCode;
		
		private string _DepartName;
		
		private string _SupDepartId;
		
		private string _Remark;
		
		private System.Nullable<bool> _IsUsed;
		
		private string _ManagerIds;
		
		private string _ManagerNames;
		
		private EntitySet<Base_Installation> _Base_Installation;
		
		private EntitySet<Base_TeamGroup> _Base_TeamGroup;
		
		private EntitySet<Base_WorkPost> _Base_WorkPost;
		
		private EntitySet<Hazard_HiddenHazard> _Hazard_HiddenHazard;
		
		private EntitySet<License_FireWork> _License_FireWork;
		
		private EntitySet<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartIdChanging(string value);
    partial void OnDepartIdChanged();
    partial void OnDepartCodeChanging(string value);
    partial void OnDepartCodeChanged();
    partial void OnDepartNameChanging(string value);
    partial void OnDepartNameChanged();
    partial void OnSupDepartIdChanging(string value);
    partial void OnSupDepartIdChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIsUsedChanging(System.Nullable<bool> value);
    partial void OnIsUsedChanged();
    partial void OnManagerIdsChanging(string value);
    partial void OnManagerIdsChanged();
    partial void OnManagerNamesChanging(string value);
    partial void OnManagerNamesChanged();
    #endregion
		
		public Base_Depart()
		{
			this._Base_Installation = new EntitySet<Base_Installation>(new Action<Base_Installation>(this.attach_Base_Installation), new Action<Base_Installation>(this.detach_Base_Installation));
			this._Base_TeamGroup = new EntitySet<Base_TeamGroup>(new Action<Base_TeamGroup>(this.attach_Base_TeamGroup), new Action<Base_TeamGroup>(this.detach_Base_TeamGroup));
			this._Base_WorkPost = new EntitySet<Base_WorkPost>(new Action<Base_WorkPost>(this.attach_Base_WorkPost), new Action<Base_WorkPost>(this.detach_Base_WorkPost));
			this._Hazard_HiddenHazard = new EntitySet<Hazard_HiddenHazard>(new Action<Hazard_HiddenHazard>(this.attach_Hazard_HiddenHazard), new Action<Hazard_HiddenHazard>(this.detach_Hazard_HiddenHazard));
			this._License_FireWork = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork), new Action<License_FireWork>(this.detach_License_FireWork));
			this._Sys_User = new EntitySet<Sys_User>(new Action<Sys_User>(this.attach_Sys_User), new Action<Sys_User>(this.detach_Sys_User));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DepartId
		{
			get
			{
				return this._DepartId;
			}
			set
			{
				if ((this._DepartId != value))
				{
					this.OnDepartIdChanging(value);
					this.SendPropertyChanging();
					this._DepartId = value;
					this.SendPropertyChanged("DepartId");
					this.OnDepartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartCode", DbType="NVarChar(50)")]
		public string DepartCode
		{
			get
			{
				return this._DepartCode;
			}
			set
			{
				if ((this._DepartCode != value))
				{
					this.OnDepartCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartCode = value;
					this.SendPropertyChanged("DepartCode");
					this.OnDepartCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartName", DbType="NVarChar(50)")]
		public string DepartName
		{
			get
			{
				return this._DepartName;
			}
			set
			{
				if ((this._DepartName != value))
				{
					this.OnDepartNameChanging(value);
					this.SendPropertyChanging();
					this._DepartName = value;
					this.SendPropertyChanged("DepartName");
					this.OnDepartNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupDepartId", DbType="NVarChar(50)")]
		public string SupDepartId
		{
			get
			{
				return this._SupDepartId;
			}
			set
			{
				if ((this._SupDepartId != value))
				{
					this.OnSupDepartIdChanging(value);
					this.SendPropertyChanging();
					this._SupDepartId = value;
					this.SendPropertyChanged("SupDepartId");
					this.OnSupDepartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerIds", DbType="NVarChar(500)")]
		public string ManagerIds
		{
			get
			{
				return this._ManagerIds;
			}
			set
			{
				if ((this._ManagerIds != value))
				{
					this.OnManagerIdsChanging(value);
					this.SendPropertyChanging();
					this._ManagerIds = value;
					this.SendPropertyChanged("ManagerIds");
					this.OnManagerIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerNames", DbType="NVarChar(500)")]
		public string ManagerNames
		{
			get
			{
				return this._ManagerNames;
			}
			set
			{
				if ((this._ManagerNames != value))
				{
					this.OnManagerNamesChanging(value);
					this.SendPropertyChanging();
					this._ManagerNames = value;
					this.SendPropertyChanged("ManagerNames");
					this.OnManagerNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Installation_Base_Depart", Storage="_Base_Installation", ThisKey="DepartId", OtherKey="DepartId", DeleteRule="NO ACTION")]
		public EntitySet<Base_Installation> Base_Installation
		{
			get
			{
				return this._Base_Installation;
			}
			set
			{
				this._Base_Installation.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TeamGroup_Base_Depart", Storage="_Base_TeamGroup", ThisKey="DepartId", OtherKey="DepartId", DeleteRule="NO ACTION")]
		public EntitySet<Base_TeamGroup> Base_TeamGroup
		{
			get
			{
				return this._Base_TeamGroup;
			}
			set
			{
				this._Base_TeamGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_WorkPost_Base_Depart", Storage="_Base_WorkPost", ThisKey="DepartId", OtherKey="DepartId", DeleteRule="NO ACTION")]
		public EntitySet<Base_WorkPost> Base_WorkPost
		{
			get
			{
				return this._Base_WorkPost;
			}
			set
			{
				this._Base_WorkPost.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Base_Depart", Storage="_Hazard_HiddenHazard", ThisKey="DepartId", OtherKey="DepartId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_HiddenHazard> Hazard_HiddenHazard
		{
			get
			{
				return this._Hazard_HiddenHazard;
			}
			set
			{
				this._Hazard_HiddenHazard.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Base_Depart", Storage="_License_FireWork", ThisKey="DepartId", OtherKey="DepartId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork
		{
			get
			{
				return this._License_FireWork;
			}
			set
			{
				this._License_FireWork.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Base_Depart", Storage="_Sys_User", ThisKey="DepartId", OtherKey="DepartId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_User> Sys_User
		{
			get
			{
				return this._Sys_User;
			}
			set
			{
				this._Sys_User.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_Installation(Base_Installation entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = this;
		}
		
		private void detach_Base_Installation(Base_Installation entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = null;
		}
		
		private void attach_Base_TeamGroup(Base_TeamGroup entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = this;
		}
		
		private void detach_Base_TeamGroup(Base_TeamGroup entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = null;
		}
		
		private void attach_Base_WorkPost(Base_WorkPost entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = this;
		}
		
		private void detach_Base_WorkPost(Base_WorkPost entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = null;
		}
		
		private void attach_Hazard_HiddenHazard(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = this;
		}
		
		private void detach_Hazard_HiddenHazard(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = null;
		}
		
		private void attach_License_FireWork(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = this;
		}
		
		private void detach_License_FireWork(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = null;
		}
		
		private void attach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = this;
		}
		
		private void detach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_EmergencyType")]
	public partial class Base_EmergencyType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmergencyTypeId;
		
		private string _EmergencyTypeCode;
		
		private string _EmergencyTypeName;
		
		private string _Remark;
		
		private EntitySet<Technique_Emergency> _Technique_Emergency;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmergencyTypeIdChanging(string value);
    partial void OnEmergencyTypeIdChanged();
    partial void OnEmergencyTypeCodeChanging(string value);
    partial void OnEmergencyTypeCodeChanged();
    partial void OnEmergencyTypeNameChanging(string value);
    partial void OnEmergencyTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_EmergencyType()
		{
			this._Technique_Emergency = new EntitySet<Technique_Emergency>(new Action<Technique_Emergency>(this.attach_Technique_Emergency), new Action<Technique_Emergency>(this.detach_Technique_Emergency));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmergencyTypeId
		{
			get
			{
				return this._EmergencyTypeId;
			}
			set
			{
				if ((this._EmergencyTypeId != value))
				{
					this.OnEmergencyTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EmergencyTypeId = value;
					this.SendPropertyChanged("EmergencyTypeId");
					this.OnEmergencyTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyTypeCode", DbType="NVarChar(50)")]
		public string EmergencyTypeCode
		{
			get
			{
				return this._EmergencyTypeCode;
			}
			set
			{
				if ((this._EmergencyTypeCode != value))
				{
					this.OnEmergencyTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmergencyTypeCode = value;
					this.SendPropertyChanged("EmergencyTypeCode");
					this.OnEmergencyTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyTypeName", DbType="NVarChar(100)")]
		public string EmergencyTypeName
		{
			get
			{
				return this._EmergencyTypeName;
			}
			set
			{
				if ((this._EmergencyTypeName != value))
				{
					this.OnEmergencyTypeNameChanging(value);
					this.SendPropertyChanging();
					this._EmergencyTypeName = value;
					this.SendPropertyChanged("EmergencyTypeName");
					this.OnEmergencyTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_Emergency_Base_EmergencyType", Storage="_Technique_Emergency", ThisKey="EmergencyTypeId", OtherKey="EmergencyTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Technique_Emergency> Technique_Emergency
		{
			get
			{
				return this._Technique_Emergency;
			}
			set
			{
				this._Technique_Emergency.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Technique_Emergency(Technique_Emergency entity)
		{
			this.SendPropertyChanging();
			entity.Base_EmergencyType = this;
		}
		
		private void detach_Technique_Emergency(Technique_Emergency entity)
		{
			this.SendPropertyChanging();
			entity.Base_EmergencyType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Euipment")]
	public partial class Base_Euipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EuipmentId;
		
		private string _InstallationId;
		
		private string _WorkAreaId;
		
		private string _EuipmentCode;
		
		private string _EuipmentName;
		
		private string _EuipmentTypeId;
		
		private string _EuipmentNo;
		
		private System.Nullable<bool> _IsUsed;
		
		private string _Remark;
		
		private string _Identification;
		
		private string _RiskLevel;
		
		private string _QRCodeUrl;
		
		private EntityRef<Base_EuipmentType> _Base_EuipmentType;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_WorkArea> _Base_WorkArea;
		
		private EntitySet<Hazard_SCLItem> _Hazard_SCLItem;
		
		private EntitySet<QualityAudit_EquipmentQuality> _QualityAudit_EquipmentQuality;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEuipmentIdChanging(string value);
    partial void OnEuipmentIdChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnWorkAreaIdChanging(string value);
    partial void OnWorkAreaIdChanged();
    partial void OnEuipmentCodeChanging(string value);
    partial void OnEuipmentCodeChanged();
    partial void OnEuipmentNameChanging(string value);
    partial void OnEuipmentNameChanged();
    partial void OnEuipmentTypeIdChanging(string value);
    partial void OnEuipmentTypeIdChanged();
    partial void OnEuipmentNoChanging(string value);
    partial void OnEuipmentNoChanged();
    partial void OnIsUsedChanging(System.Nullable<bool> value);
    partial void OnIsUsedChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIdentificationChanging(string value);
    partial void OnIdentificationChanged();
    partial void OnRiskLevelChanging(string value);
    partial void OnRiskLevelChanged();
    partial void OnQRCodeUrlChanging(string value);
    partial void OnQRCodeUrlChanged();
    #endregion
		
		public Base_Euipment()
		{
			this._Base_EuipmentType = default(EntityRef<Base_EuipmentType>);
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._Base_WorkArea = default(EntityRef<Base_WorkArea>);
			this._Hazard_SCLItem = new EntitySet<Hazard_SCLItem>(new Action<Hazard_SCLItem>(this.attach_Hazard_SCLItem), new Action<Hazard_SCLItem>(this.detach_Hazard_SCLItem));
			this._QualityAudit_EquipmentQuality = new EntitySet<QualityAudit_EquipmentQuality>(new Action<QualityAudit_EquipmentQuality>(this.attach_QualityAudit_EquipmentQuality), new Action<QualityAudit_EquipmentQuality>(this.detach_QualityAudit_EquipmentQuality));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EuipmentId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EuipmentId
		{
			get
			{
				return this._EuipmentId;
			}
			set
			{
				if ((this._EuipmentId != value))
				{
					this.OnEuipmentIdChanging(value);
					this.SendPropertyChanging();
					this._EuipmentId = value;
					this.SendPropertyChanged("EuipmentId");
					this.OnEuipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50)")]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					if (this._Base_WorkArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkAreaIdChanging(value);
					this.SendPropertyChanging();
					this._WorkAreaId = value;
					this.SendPropertyChanged("WorkAreaId");
					this.OnWorkAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EuipmentCode", DbType="NVarChar(50)")]
		public string EuipmentCode
		{
			get
			{
				return this._EuipmentCode;
			}
			set
			{
				if ((this._EuipmentCode != value))
				{
					this.OnEuipmentCodeChanging(value);
					this.SendPropertyChanging();
					this._EuipmentCode = value;
					this.SendPropertyChanged("EuipmentCode");
					this.OnEuipmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EuipmentName", DbType="NVarChar(50)")]
		public string EuipmentName
		{
			get
			{
				return this._EuipmentName;
			}
			set
			{
				if ((this._EuipmentName != value))
				{
					this.OnEuipmentNameChanging(value);
					this.SendPropertyChanging();
					this._EuipmentName = value;
					this.SendPropertyChanged("EuipmentName");
					this.OnEuipmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EuipmentTypeId", DbType="NVarChar(50)")]
		public string EuipmentTypeId
		{
			get
			{
				return this._EuipmentTypeId;
			}
			set
			{
				if ((this._EuipmentTypeId != value))
				{
					if (this._Base_EuipmentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEuipmentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EuipmentTypeId = value;
					this.SendPropertyChanged("EuipmentTypeId");
					this.OnEuipmentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EuipmentNo", DbType="NVarChar(50)")]
		public string EuipmentNo
		{
			get
			{
				return this._EuipmentNo;
			}
			set
			{
				if ((this._EuipmentNo != value))
				{
					this.OnEuipmentNoChanging(value);
					this.SendPropertyChanging();
					this._EuipmentNo = value;
					this.SendPropertyChanged("EuipmentNo");
					this.OnEuipmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identification", DbType="NVarChar(50)")]
		public string Identification
		{
			get
			{
				return this._Identification;
			}
			set
			{
				if ((this._Identification != value))
				{
					this.OnIdentificationChanging(value);
					this.SendPropertyChanging();
					this._Identification = value;
					this.SendPropertyChanged("Identification");
					this.OnIdentificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="NVarChar(50)")]
		public string RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this.OnRiskLevelChanging(value);
					this.SendPropertyChanging();
					this._RiskLevel = value;
					this.SendPropertyChanged("RiskLevel");
					this.OnRiskLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this.OnQRCodeUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeUrl = value;
					this.SendPropertyChanged("QRCodeUrl");
					this.OnQRCodeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Euipment_Base_EuipmentType", Storage="_Base_EuipmentType", ThisKey="EuipmentTypeId", OtherKey="EuipmentTypeId", IsForeignKey=true)]
		public Base_EuipmentType Base_EuipmentType
		{
			get
			{
				return this._Base_EuipmentType.Entity;
			}
			set
			{
				Base_EuipmentType previousValue = this._Base_EuipmentType.Entity;
				if (((previousValue != value) 
							|| (this._Base_EuipmentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_EuipmentType.Entity = null;
						previousValue.Base_Euipment.Remove(this);
					}
					this._Base_EuipmentType.Entity = value;
					if ((value != null))
					{
						value.Base_Euipment.Add(this);
						this._EuipmentTypeId = value.EuipmentTypeId;
					}
					else
					{
						this._EuipmentTypeId = default(string);
					}
					this.SendPropertyChanged("Base_EuipmentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Euipment_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.Base_Euipment.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.Base_Euipment.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Euipment_Base_WorkArea", Storage="_Base_WorkArea", ThisKey="WorkAreaId", OtherKey="WorkAreaId", IsForeignKey=true)]
		public Base_WorkArea Base_WorkArea
		{
			get
			{
				return this._Base_WorkArea.Entity;
			}
			set
			{
				Base_WorkArea previousValue = this._Base_WorkArea.Entity;
				if (((previousValue != value) 
							|| (this._Base_WorkArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WorkArea.Entity = null;
						previousValue.Base_Euipment.Remove(this);
					}
					this._Base_WorkArea.Entity = value;
					if ((value != null))
					{
						value.Base_Euipment.Add(this);
						this._WorkAreaId = value.WorkAreaId;
					}
					else
					{
						this._WorkAreaId = default(string);
					}
					this.SendPropertyChanged("Base_WorkArea");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_SCLItem_Base_Euipment", Storage="_Hazard_SCLItem", ThisKey="EuipmentId", OtherKey="EuipmentId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_SCLItem> Hazard_SCLItem
		{
			get
			{
				return this._Hazard_SCLItem;
			}
			set
			{
				this._Hazard_SCLItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentQuality_Base_Euipment", Storage="_QualityAudit_EquipmentQuality", ThisKey="EuipmentId", OtherKey="EuipmentId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_EquipmentQuality> QualityAudit_EquipmentQuality
		{
			get
			{
				return this._QualityAudit_EquipmentQuality;
			}
			set
			{
				this._QualityAudit_EquipmentQuality.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hazard_SCLItem(Hazard_SCLItem entity)
		{
			this.SendPropertyChanging();
			entity.Base_Euipment = this;
		}
		
		private void detach_Hazard_SCLItem(Hazard_SCLItem entity)
		{
			this.SendPropertyChanging();
			entity.Base_Euipment = null;
		}
		
		private void attach_QualityAudit_EquipmentQuality(QualityAudit_EquipmentQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Euipment = this;
		}
		
		private void detach_QualityAudit_EquipmentQuality(QualityAudit_EquipmentQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Euipment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_EuipmentType")]
	public partial class Base_EuipmentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EuipmentTypeId;
		
		private string _EuipmentTypeCode;
		
		private string _EuipmentTypeName;
		
		private string _Remark;
		
		private EntitySet<Base_Euipment> _Base_Euipment;
		
		private EntitySet<Base_SCL> _Base_SCL;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEuipmentTypeIdChanging(string value);
    partial void OnEuipmentTypeIdChanged();
    partial void OnEuipmentTypeCodeChanging(string value);
    partial void OnEuipmentTypeCodeChanged();
    partial void OnEuipmentTypeNameChanging(string value);
    partial void OnEuipmentTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_EuipmentType()
		{
			this._Base_Euipment = new EntitySet<Base_Euipment>(new Action<Base_Euipment>(this.attach_Base_Euipment), new Action<Base_Euipment>(this.detach_Base_Euipment));
			this._Base_SCL = new EntitySet<Base_SCL>(new Action<Base_SCL>(this.attach_Base_SCL), new Action<Base_SCL>(this.detach_Base_SCL));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EuipmentTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EuipmentTypeId
		{
			get
			{
				return this._EuipmentTypeId;
			}
			set
			{
				if ((this._EuipmentTypeId != value))
				{
					this.OnEuipmentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EuipmentTypeId = value;
					this.SendPropertyChanged("EuipmentTypeId");
					this.OnEuipmentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EuipmentTypeCode", DbType="NVarChar(50)")]
		public string EuipmentTypeCode
		{
			get
			{
				return this._EuipmentTypeCode;
			}
			set
			{
				if ((this._EuipmentTypeCode != value))
				{
					this.OnEuipmentTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._EuipmentTypeCode = value;
					this.SendPropertyChanged("EuipmentTypeCode");
					this.OnEuipmentTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EuipmentTypeName", DbType="NVarChar(50)")]
		public string EuipmentTypeName
		{
			get
			{
				return this._EuipmentTypeName;
			}
			set
			{
				if ((this._EuipmentTypeName != value))
				{
					this.OnEuipmentTypeNameChanging(value);
					this.SendPropertyChanging();
					this._EuipmentTypeName = value;
					this.SendPropertyChanged("EuipmentTypeName");
					this.OnEuipmentTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Euipment_Base_EuipmentType", Storage="_Base_Euipment", ThisKey="EuipmentTypeId", OtherKey="EuipmentTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Base_Euipment> Base_Euipment
		{
			get
			{
				return this._Base_Euipment;
			}
			set
			{
				this._Base_Euipment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_SCL_Base_EuipmentType", Storage="_Base_SCL", ThisKey="EuipmentTypeId", OtherKey="EuipmentTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Base_SCL> Base_SCL
		{
			get
			{
				return this._Base_SCL;
			}
			set
			{
				this._Base_SCL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_Euipment(Base_Euipment entity)
		{
			this.SendPropertyChanging();
			entity.Base_EuipmentType = this;
		}
		
		private void detach_Base_Euipment(Base_Euipment entity)
		{
			this.SendPropertyChanging();
			entity.Base_EuipmentType = null;
		}
		
		private void attach_Base_SCL(Base_SCL entity)
		{
			this.SendPropertyChanging();
			entity.Base_EuipmentType = this;
		}
		
		private void detach_Base_SCL(Base_SCL entity)
		{
			this.SendPropertyChanging();
			entity.Base_EuipmentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_FireWorkAnalysisData")]
	public partial class Base_FireWorkAnalysisData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AnalysisDataId;
		
		private System.Nullable<int> _SortIndex;
		
		private string _AnalysisPoint;
		
		private System.Nullable<decimal> _MinData;
		
		private System.Nullable<decimal> _MaxData;
		
		private string _Measure;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnalysisDataIdChanging(string value);
    partial void OnAnalysisDataIdChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnAnalysisPointChanging(string value);
    partial void OnAnalysisPointChanged();
    partial void OnMinDataChanging(System.Nullable<decimal> value);
    partial void OnMinDataChanged();
    partial void OnMaxDataChanging(System.Nullable<decimal> value);
    partial void OnMaxDataChanged();
    partial void OnMeasureChanging(string value);
    partial void OnMeasureChanged();
    #endregion
		
		public Base_FireWorkAnalysisData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalysisDataId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AnalysisDataId
		{
			get
			{
				return this._AnalysisDataId;
			}
			set
			{
				if ((this._AnalysisDataId != value))
				{
					this.OnAnalysisDataIdChanging(value);
					this.SendPropertyChanging();
					this._AnalysisDataId = value;
					this.SendPropertyChanged("AnalysisDataId");
					this.OnAnalysisDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalysisPoint", DbType="NVarChar(500)")]
		public string AnalysisPoint
		{
			get
			{
				return this._AnalysisPoint;
			}
			set
			{
				if ((this._AnalysisPoint != value))
				{
					this.OnAnalysisPointChanging(value);
					this.SendPropertyChanging();
					this._AnalysisPoint = value;
					this.SendPropertyChanged("AnalysisPoint");
					this.OnAnalysisPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinData", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> MinData
		{
			get
			{
				return this._MinData;
			}
			set
			{
				if ((this._MinData != value))
				{
					this.OnMinDataChanging(value);
					this.SendPropertyChanging();
					this._MinData = value;
					this.SendPropertyChanged("MinData");
					this.OnMinDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxData", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> MaxData
		{
			get
			{
				return this._MaxData;
			}
			set
			{
				if ((this._MaxData != value))
				{
					this.OnMaxDataChanging(value);
					this.SendPropertyChanging();
					this._MaxData = value;
					this.SendPropertyChanged("MaxData");
					this.OnMaxDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Measure", DbType="NVarChar(10)")]
		public string Measure
		{
			get
			{
				return this._Measure;
			}
			set
			{
				if ((this._Measure != value))
				{
					this.OnMeasureChanging(value);
					this.SendPropertyChanging();
					this._Measure = value;
					this.SendPropertyChanged("Measure");
					this.OnMeasureChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_FireWorkMode")]
	public partial class Base_FireWorkMode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FireWorkModeId;
		
		private string _FireWorkModeName;
		
		private string _FireWorkModeCode;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFireWorkModeIdChanging(string value);
    partial void OnFireWorkModeIdChanged();
    partial void OnFireWorkModeNameChanging(string value);
    partial void OnFireWorkModeNameChanged();
    partial void OnFireWorkModeCodeChanging(string value);
    partial void OnFireWorkModeCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_FireWorkMode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkModeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FireWorkModeId
		{
			get
			{
				return this._FireWorkModeId;
			}
			set
			{
				if ((this._FireWorkModeId != value))
				{
					this.OnFireWorkModeIdChanging(value);
					this.SendPropertyChanging();
					this._FireWorkModeId = value;
					this.SendPropertyChanged("FireWorkModeId");
					this.OnFireWorkModeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkModeName", DbType="NVarChar(100)")]
		public string FireWorkModeName
		{
			get
			{
				return this._FireWorkModeName;
			}
			set
			{
				if ((this._FireWorkModeName != value))
				{
					this.OnFireWorkModeNameChanging(value);
					this.SendPropertyChanging();
					this._FireWorkModeName = value;
					this.SendPropertyChanged("FireWorkModeName");
					this.OnFireWorkModeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkModeCode", DbType="NVarChar(50)")]
		public string FireWorkModeCode
		{
			get
			{
				return this._FireWorkModeCode;
			}
			set
			{
				if ((this._FireWorkModeCode != value))
				{
					this.OnFireWorkModeCodeChanging(value);
					this.SendPropertyChanging();
					this._FireWorkModeCode = value;
					this.SendPropertyChanged("FireWorkModeCode");
					this.OnFireWorkModeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_HAZID")]
	public partial class Base_HAZID : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HAZIDId;
		
		private string _HAZIDCode;
		
		private string _HAZIDName;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHAZIDIdChanging(string value);
    partial void OnHAZIDIdChanged();
    partial void OnHAZIDCodeChanging(string value);
    partial void OnHAZIDCodeChanged();
    partial void OnHAZIDNameChanging(string value);
    partial void OnHAZIDNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_HAZID()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZIDId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HAZIDId
		{
			get
			{
				return this._HAZIDId;
			}
			set
			{
				if ((this._HAZIDId != value))
				{
					this.OnHAZIDIdChanging(value);
					this.SendPropertyChanging();
					this._HAZIDId = value;
					this.SendPropertyChanged("HAZIDId");
					this.OnHAZIDIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZIDCode", DbType="NVarChar(50)")]
		public string HAZIDCode
		{
			get
			{
				return this._HAZIDCode;
			}
			set
			{
				if ((this._HAZIDCode != value))
				{
					this.OnHAZIDCodeChanging(value);
					this.SendPropertyChanging();
					this._HAZIDCode = value;
					this.SendPropertyChanged("HAZIDCode");
					this.OnHAZIDCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZIDName", DbType="NVarChar(50)")]
		public string HAZIDName
		{
			get
			{
				return this._HAZIDName;
			}
			set
			{
				if ((this._HAZIDName != value))
				{
					this.OnHAZIDNameChanging(value);
					this.SendPropertyChanging();
					this._HAZIDName = value;
					this.SendPropertyChanged("HAZIDName");
					this.OnHAZIDNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_HiddenHazardType")]
	public partial class Base_HiddenHazardType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HiddenHazardTypeId;
		
		private string _HiddenHazardTypeCode;
		
		private string _HiddenHazardTypeName;
		
		private string _Remark;
		
		private EntitySet<Base_HiddenHazardTypeItem> _Base_HiddenHazardTypeItem;
		
		private EntitySet<Hazard_HiddenHazard> _Hazard_HiddenHazard;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHiddenHazardTypeIdChanging(string value);
    partial void OnHiddenHazardTypeIdChanged();
    partial void OnHiddenHazardTypeCodeChanging(string value);
    partial void OnHiddenHazardTypeCodeChanged();
    partial void OnHiddenHazardTypeNameChanging(string value);
    partial void OnHiddenHazardTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_HiddenHazardType()
		{
			this._Base_HiddenHazardTypeItem = new EntitySet<Base_HiddenHazardTypeItem>(new Action<Base_HiddenHazardTypeItem>(this.attach_Base_HiddenHazardTypeItem), new Action<Base_HiddenHazardTypeItem>(this.detach_Base_HiddenHazardTypeItem));
			this._Hazard_HiddenHazard = new EntitySet<Hazard_HiddenHazard>(new Action<Hazard_HiddenHazard>(this.attach_Hazard_HiddenHazard), new Action<Hazard_HiddenHazard>(this.detach_Hazard_HiddenHazard));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HiddenHazardTypeId
		{
			get
			{
				return this._HiddenHazardTypeId;
			}
			set
			{
				if ((this._HiddenHazardTypeId != value))
				{
					this.OnHiddenHazardTypeIdChanging(value);
					this.SendPropertyChanging();
					this._HiddenHazardTypeId = value;
					this.SendPropertyChanged("HiddenHazardTypeId");
					this.OnHiddenHazardTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardTypeCode", DbType="NVarChar(50)")]
		public string HiddenHazardTypeCode
		{
			get
			{
				return this._HiddenHazardTypeCode;
			}
			set
			{
				if ((this._HiddenHazardTypeCode != value))
				{
					this.OnHiddenHazardTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._HiddenHazardTypeCode = value;
					this.SendPropertyChanged("HiddenHazardTypeCode");
					this.OnHiddenHazardTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardTypeName", DbType="NVarChar(50)")]
		public string HiddenHazardTypeName
		{
			get
			{
				return this._HiddenHazardTypeName;
			}
			set
			{
				if ((this._HiddenHazardTypeName != value))
				{
					this.OnHiddenHazardTypeNameChanging(value);
					this.SendPropertyChanging();
					this._HiddenHazardTypeName = value;
					this.SendPropertyChanged("HiddenHazardTypeName");
					this.OnHiddenHazardTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_HiddenHazardTypeItem_Base_HiddenHazardType", Storage="_Base_HiddenHazardTypeItem", ThisKey="HiddenHazardTypeId", OtherKey="HiddenHazardTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Base_HiddenHazardTypeItem> Base_HiddenHazardTypeItem
		{
			get
			{
				return this._Base_HiddenHazardTypeItem;
			}
			set
			{
				this._Base_HiddenHazardTypeItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Base_HiddenHazardType", Storage="_Hazard_HiddenHazard", ThisKey="HiddenHazardTypeId", OtherKey="HiddenHazardTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_HiddenHazard> Hazard_HiddenHazard
		{
			get
			{
				return this._Hazard_HiddenHazard;
			}
			set
			{
				this._Hazard_HiddenHazard.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_HiddenHazardTypeItem(Base_HiddenHazardTypeItem entity)
		{
			this.SendPropertyChanging();
			entity.Base_HiddenHazardType = this;
		}
		
		private void detach_Base_HiddenHazardTypeItem(Base_HiddenHazardTypeItem entity)
		{
			this.SendPropertyChanging();
			entity.Base_HiddenHazardType = null;
		}
		
		private void attach_Hazard_HiddenHazard(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.Base_HiddenHazardType = this;
		}
		
		private void detach_Hazard_HiddenHazard(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.Base_HiddenHazardType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_HiddenHazardTypeItem")]
	public partial class Base_HiddenHazardTypeItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HiddenHazardTypeItemId;
		
		private string _HiddenHazardTypeId;
		
		private System.Nullable<int> _SortIndex;
		
		private string _ItemName;
		
		private string _Remark;
		
		private EntityRef<Base_HiddenHazardType> _Base_HiddenHazardType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHiddenHazardTypeItemIdChanging(string value);
    partial void OnHiddenHazardTypeItemIdChanged();
    partial void OnHiddenHazardTypeIdChanging(string value);
    partial void OnHiddenHazardTypeIdChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_HiddenHazardTypeItem()
		{
			this._Base_HiddenHazardType = default(EntityRef<Base_HiddenHazardType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardTypeItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HiddenHazardTypeItemId
		{
			get
			{
				return this._HiddenHazardTypeItemId;
			}
			set
			{
				if ((this._HiddenHazardTypeItemId != value))
				{
					this.OnHiddenHazardTypeItemIdChanging(value);
					this.SendPropertyChanging();
					this._HiddenHazardTypeItemId = value;
					this.SendPropertyChanged("HiddenHazardTypeItemId");
					this.OnHiddenHazardTypeItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardTypeId", DbType="NVarChar(50)")]
		public string HiddenHazardTypeId
		{
			get
			{
				return this._HiddenHazardTypeId;
			}
			set
			{
				if ((this._HiddenHazardTypeId != value))
				{
					if (this._Base_HiddenHazardType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHiddenHazardTypeIdChanging(value);
					this.SendPropertyChanging();
					this._HiddenHazardTypeId = value;
					this.SendPropertyChanged("HiddenHazardTypeId");
					this.OnHiddenHazardTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(50)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_HiddenHazardTypeItem_Base_HiddenHazardType", Storage="_Base_HiddenHazardType", ThisKey="HiddenHazardTypeId", OtherKey="HiddenHazardTypeId", IsForeignKey=true)]
		public Base_HiddenHazardType Base_HiddenHazardType
		{
			get
			{
				return this._Base_HiddenHazardType.Entity;
			}
			set
			{
				Base_HiddenHazardType previousValue = this._Base_HiddenHazardType.Entity;
				if (((previousValue != value) 
							|| (this._Base_HiddenHazardType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_HiddenHazardType.Entity = null;
						previousValue.Base_HiddenHazardTypeItem.Remove(this);
					}
					this._Base_HiddenHazardType.Entity = value;
					if ((value != null))
					{
						value.Base_HiddenHazardTypeItem.Add(this);
						this._HiddenHazardTypeId = value.HiddenHazardTypeId;
					}
					else
					{
						this._HiddenHazardTypeId = default(string);
					}
					this.SendPropertyChanged("Base_HiddenHazardType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Installation")]
	public partial class Base_Installation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InstallationId;
		
		private string _DepartId;
		
		private string _InstallationCode;
		
		private string _InstallationName;
		
		private System.Nullable<bool> _IsUsed;
		
		private string _Def;
		
		private string _ManagerIds;
		
		private string _ManagerNames;
		
		private string _InstallType;
		
		private EntitySet<Appraisal_PersonAppraisal> _Appraisal_PersonAppraisal;
		
		private EntitySet<Base_Euipment> _Base_Euipment;
		
		private EntityRef<Base_Depart> _Base_Depart;
		
		private EntitySet<Base_JobActivity> _Base_JobActivity;
		
		private EntitySet<Base_JobEnvironment> _Base_JobEnvironment;
		
		private EntitySet<Base_TeamGroup> _Base_TeamGroup;
		
		private EntitySet<Base_WorkArea> _Base_WorkArea;
		
		private EntitySet<Base_WorkPost> _Base_WorkPost;
		
		private EntitySet<Hazard_HiddenHazard> _Hazard_HiddenHazard;
		
		private EntitySet<Hazard_RiskList> _Hazard_RiskList;
		
		private EntitySet<Hazard_RiskList> _Installation;
		
		private EntitySet<License_BlindPlate> _License_BlindPlate;
		
		private EntitySet<License_BlindPlate> _License_BlindPlate_Base_Installation1;
		
		private EntitySet<License_BreakGround> _License_BreakGround;
		
		private EntitySet<License_BreakGround> _License_BreakGround_Base_Installation1;
		
		private EntitySet<License_Electricity> _License_Electricity;
		
		private EntitySet<License_Electricity> _License_Electricity_Base_Installation1;
		
		private EntitySet<License_FireWork> _License_FireWork;
		
		private EntitySet<License_FireWork> _License_FireWork_Base_Installation1;
		
		private EntitySet<License_HeightWork> _License_HeightWork;
		
		private EntitySet<License_HeightWork> _License_HeightWork_Base_Installation1;
		
		private EntitySet<License_Interlocking> _License_Interlocking;
		
		private EntitySet<License_Interlocking> _License_Interlocking_Base_Installation1;
		
		private EntitySet<License_LiftingWork> _License_LiftingWork;
		
		private EntitySet<License_LiftingWork> _License_LiftingWork_Base_Installation1;
		
		private EntitySet<License_LimitedSpace> _License_LimitedSpace;
		
		private EntitySet<License_LimitedSpace> _License_LimitedSpace_Base_Installation1;
		
		private EntitySet<License_OpenCircuit> _License_OpenCircuit;
		
		private EntitySet<License_OpenCircuit> _License_OpenCircuit_Base_Installation1;
		
		private EntitySet<License_Overhaul> _License_Overhaul;
		
		private EntitySet<QualityAudit_EquipmentQuality> _QualityAudit_EquipmentQuality;
		
		private EntitySet<Sys_UserDealInstallation> _Sys_UserDealInstallation;
		
		private EntitySet<Sys_UserEntryRecord> _Sys_UserEntryRecord;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnDepartIdChanging(string value);
    partial void OnDepartIdChanged();
    partial void OnInstallationCodeChanging(string value);
    partial void OnInstallationCodeChanged();
    partial void OnInstallationNameChanging(string value);
    partial void OnInstallationNameChanged();
    partial void OnIsUsedChanging(System.Nullable<bool> value);
    partial void OnIsUsedChanged();
    partial void OnDefChanging(string value);
    partial void OnDefChanged();
    partial void OnManagerIdsChanging(string value);
    partial void OnManagerIdsChanged();
    partial void OnManagerNamesChanging(string value);
    partial void OnManagerNamesChanged();
    partial void OnInstallTypeChanging(string value);
    partial void OnInstallTypeChanged();
    #endregion
		
		public Base_Installation()
		{
			this._Appraisal_PersonAppraisal = new EntitySet<Appraisal_PersonAppraisal>(new Action<Appraisal_PersonAppraisal>(this.attach_Appraisal_PersonAppraisal), new Action<Appraisal_PersonAppraisal>(this.detach_Appraisal_PersonAppraisal));
			this._Base_Euipment = new EntitySet<Base_Euipment>(new Action<Base_Euipment>(this.attach_Base_Euipment), new Action<Base_Euipment>(this.detach_Base_Euipment));
			this._Base_Depart = default(EntityRef<Base_Depart>);
			this._Base_JobActivity = new EntitySet<Base_JobActivity>(new Action<Base_JobActivity>(this.attach_Base_JobActivity), new Action<Base_JobActivity>(this.detach_Base_JobActivity));
			this._Base_JobEnvironment = new EntitySet<Base_JobEnvironment>(new Action<Base_JobEnvironment>(this.attach_Base_JobEnvironment), new Action<Base_JobEnvironment>(this.detach_Base_JobEnvironment));
			this._Base_TeamGroup = new EntitySet<Base_TeamGroup>(new Action<Base_TeamGroup>(this.attach_Base_TeamGroup), new Action<Base_TeamGroup>(this.detach_Base_TeamGroup));
			this._Base_WorkArea = new EntitySet<Base_WorkArea>(new Action<Base_WorkArea>(this.attach_Base_WorkArea), new Action<Base_WorkArea>(this.detach_Base_WorkArea));
			this._Base_WorkPost = new EntitySet<Base_WorkPost>(new Action<Base_WorkPost>(this.attach_Base_WorkPost), new Action<Base_WorkPost>(this.detach_Base_WorkPost));
			this._Hazard_HiddenHazard = new EntitySet<Hazard_HiddenHazard>(new Action<Hazard_HiddenHazard>(this.attach_Hazard_HiddenHazard), new Action<Hazard_HiddenHazard>(this.detach_Hazard_HiddenHazard));
			this._Hazard_RiskList = new EntitySet<Hazard_RiskList>(new Action<Hazard_RiskList>(this.attach_Hazard_RiskList), new Action<Hazard_RiskList>(this.detach_Hazard_RiskList));
			this._Installation = new EntitySet<Hazard_RiskList>(new Action<Hazard_RiskList>(this.attach_Installation), new Action<Hazard_RiskList>(this.detach_Installation));
			this._License_BlindPlate = new EntitySet<License_BlindPlate>(new Action<License_BlindPlate>(this.attach_License_BlindPlate), new Action<License_BlindPlate>(this.detach_License_BlindPlate));
			this._License_BlindPlate_Base_Installation1 = new EntitySet<License_BlindPlate>(new Action<License_BlindPlate>(this.attach_License_BlindPlate_Base_Installation1), new Action<License_BlindPlate>(this.detach_License_BlindPlate_Base_Installation1));
			this._License_BreakGround = new EntitySet<License_BreakGround>(new Action<License_BreakGround>(this.attach_License_BreakGround), new Action<License_BreakGround>(this.detach_License_BreakGround));
			this._License_BreakGround_Base_Installation1 = new EntitySet<License_BreakGround>(new Action<License_BreakGround>(this.attach_License_BreakGround_Base_Installation1), new Action<License_BreakGround>(this.detach_License_BreakGround_Base_Installation1));
			this._License_Electricity = new EntitySet<License_Electricity>(new Action<License_Electricity>(this.attach_License_Electricity), new Action<License_Electricity>(this.detach_License_Electricity));
			this._License_Electricity_Base_Installation1 = new EntitySet<License_Electricity>(new Action<License_Electricity>(this.attach_License_Electricity_Base_Installation1), new Action<License_Electricity>(this.detach_License_Electricity_Base_Installation1));
			this._License_FireWork = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork), new Action<License_FireWork>(this.detach_License_FireWork));
			this._License_FireWork_Base_Installation1 = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork_Base_Installation1), new Action<License_FireWork>(this.detach_License_FireWork_Base_Installation1));
			this._License_HeightWork = new EntitySet<License_HeightWork>(new Action<License_HeightWork>(this.attach_License_HeightWork), new Action<License_HeightWork>(this.detach_License_HeightWork));
			this._License_HeightWork_Base_Installation1 = new EntitySet<License_HeightWork>(new Action<License_HeightWork>(this.attach_License_HeightWork_Base_Installation1), new Action<License_HeightWork>(this.detach_License_HeightWork_Base_Installation1));
			this._License_Interlocking = new EntitySet<License_Interlocking>(new Action<License_Interlocking>(this.attach_License_Interlocking), new Action<License_Interlocking>(this.detach_License_Interlocking));
			this._License_Interlocking_Base_Installation1 = new EntitySet<License_Interlocking>(new Action<License_Interlocking>(this.attach_License_Interlocking_Base_Installation1), new Action<License_Interlocking>(this.detach_License_Interlocking_Base_Installation1));
			this._License_LiftingWork = new EntitySet<License_LiftingWork>(new Action<License_LiftingWork>(this.attach_License_LiftingWork), new Action<License_LiftingWork>(this.detach_License_LiftingWork));
			this._License_LiftingWork_Base_Installation1 = new EntitySet<License_LiftingWork>(new Action<License_LiftingWork>(this.attach_License_LiftingWork_Base_Installation1), new Action<License_LiftingWork>(this.detach_License_LiftingWork_Base_Installation1));
			this._License_LimitedSpace = new EntitySet<License_LimitedSpace>(new Action<License_LimitedSpace>(this.attach_License_LimitedSpace), new Action<License_LimitedSpace>(this.detach_License_LimitedSpace));
			this._License_LimitedSpace_Base_Installation1 = new EntitySet<License_LimitedSpace>(new Action<License_LimitedSpace>(this.attach_License_LimitedSpace_Base_Installation1), new Action<License_LimitedSpace>(this.detach_License_LimitedSpace_Base_Installation1));
			this._License_OpenCircuit = new EntitySet<License_OpenCircuit>(new Action<License_OpenCircuit>(this.attach_License_OpenCircuit), new Action<License_OpenCircuit>(this.detach_License_OpenCircuit));
			this._License_OpenCircuit_Base_Installation1 = new EntitySet<License_OpenCircuit>(new Action<License_OpenCircuit>(this.attach_License_OpenCircuit_Base_Installation1), new Action<License_OpenCircuit>(this.detach_License_OpenCircuit_Base_Installation1));
			this._License_Overhaul = new EntitySet<License_Overhaul>(new Action<License_Overhaul>(this.attach_License_Overhaul), new Action<License_Overhaul>(this.detach_License_Overhaul));
			this._QualityAudit_EquipmentQuality = new EntitySet<QualityAudit_EquipmentQuality>(new Action<QualityAudit_EquipmentQuality>(this.attach_QualityAudit_EquipmentQuality), new Action<QualityAudit_EquipmentQuality>(this.detach_QualityAudit_EquipmentQuality));
			this._Sys_UserDealInstallation = new EntitySet<Sys_UserDealInstallation>(new Action<Sys_UserDealInstallation>(this.attach_Sys_UserDealInstallation), new Action<Sys_UserDealInstallation>(this.detach_Sys_UserDealInstallation));
			this._Sys_UserEntryRecord = new EntitySet<Sys_UserEntryRecord>(new Action<Sys_UserEntryRecord>(this.attach_Sys_UserEntryRecord), new Action<Sys_UserEntryRecord>(this.detach_Sys_UserEntryRecord));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartId", DbType="NVarChar(50)")]
		public string DepartId
		{
			get
			{
				return this._DepartId;
			}
			set
			{
				if ((this._DepartId != value))
				{
					if (this._Base_Depart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartIdChanging(value);
					this.SendPropertyChanging();
					this._DepartId = value;
					this.SendPropertyChanged("DepartId");
					this.OnDepartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationCode", DbType="NVarChar(50)")]
		public string InstallationCode
		{
			get
			{
				return this._InstallationCode;
			}
			set
			{
				if ((this._InstallationCode != value))
				{
					this.OnInstallationCodeChanging(value);
					this.SendPropertyChanging();
					this._InstallationCode = value;
					this.SendPropertyChanged("InstallationCode");
					this.OnInstallationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationName", DbType="NVarChar(50)")]
		public string InstallationName
		{
			get
			{
				return this._InstallationName;
			}
			set
			{
				if ((this._InstallationName != value))
				{
					this.OnInstallationNameChanging(value);
					this.SendPropertyChanging();
					this._InstallationName = value;
					this.SendPropertyChanged("InstallationName");
					this.OnInstallationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Def", DbType="NVarChar(500)")]
		public string Def
		{
			get
			{
				return this._Def;
			}
			set
			{
				if ((this._Def != value))
				{
					this.OnDefChanging(value);
					this.SendPropertyChanging();
					this._Def = value;
					this.SendPropertyChanged("Def");
					this.OnDefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerIds", DbType="NVarChar(500)")]
		public string ManagerIds
		{
			get
			{
				return this._ManagerIds;
			}
			set
			{
				if ((this._ManagerIds != value))
				{
					this.OnManagerIdsChanging(value);
					this.SendPropertyChanging();
					this._ManagerIds = value;
					this.SendPropertyChanged("ManagerIds");
					this.OnManagerIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerNames", DbType="NVarChar(500)")]
		public string ManagerNames
		{
			get
			{
				return this._ManagerNames;
			}
			set
			{
				if ((this._ManagerNames != value))
				{
					this.OnManagerNamesChanging(value);
					this.SendPropertyChanging();
					this._ManagerNames = value;
					this.SendPropertyChanged("ManagerNames");
					this.OnManagerNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallType", DbType="NVarChar(10)")]
		public string InstallType
		{
			get
			{
				return this._InstallType;
			}
			set
			{
				if ((this._InstallType != value))
				{
					this.OnInstallTypeChanging(value);
					this.SendPropertyChanging();
					this._InstallType = value;
					this.SendPropertyChanged("InstallType");
					this.OnInstallTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Appraisal_PersonAppraisal_Base_Installation", Storage="_Appraisal_PersonAppraisal", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<Appraisal_PersonAppraisal> Appraisal_PersonAppraisal
		{
			get
			{
				return this._Appraisal_PersonAppraisal;
			}
			set
			{
				this._Appraisal_PersonAppraisal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Euipment_Base_Installation", Storage="_Base_Euipment", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<Base_Euipment> Base_Euipment
		{
			get
			{
				return this._Base_Euipment;
			}
			set
			{
				this._Base_Euipment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Installation_Base_Depart", Storage="_Base_Depart", ThisKey="DepartId", OtherKey="DepartId", IsForeignKey=true)]
		public Base_Depart Base_Depart
		{
			get
			{
				return this._Base_Depart.Entity;
			}
			set
			{
				Base_Depart previousValue = this._Base_Depart.Entity;
				if (((previousValue != value) 
							|| (this._Base_Depart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Depart.Entity = null;
						previousValue.Base_Installation.Remove(this);
					}
					this._Base_Depart.Entity = value;
					if ((value != null))
					{
						value.Base_Installation.Add(this);
						this._DepartId = value.DepartId;
					}
					else
					{
						this._DepartId = default(string);
					}
					this.SendPropertyChanged("Base_Depart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_JobActivity_Base_Installation", Storage="_Base_JobActivity", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<Base_JobActivity> Base_JobActivity
		{
			get
			{
				return this._Base_JobActivity;
			}
			set
			{
				this._Base_JobActivity.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_JobEnvironment_Base_Installation", Storage="_Base_JobEnvironment", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<Base_JobEnvironment> Base_JobEnvironment
		{
			get
			{
				return this._Base_JobEnvironment;
			}
			set
			{
				this._Base_JobEnvironment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TeamGroup_Base_Installation", Storage="_Base_TeamGroup", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<Base_TeamGroup> Base_TeamGroup
		{
			get
			{
				return this._Base_TeamGroup;
			}
			set
			{
				this._Base_TeamGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_WorkArea_Base_Installation", Storage="_Base_WorkArea", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<Base_WorkArea> Base_WorkArea
		{
			get
			{
				return this._Base_WorkArea;
			}
			set
			{
				this._Base_WorkArea.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_WorkPost_Base_WorkPost", Storage="_Base_WorkPost", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<Base_WorkPost> Base_WorkPost
		{
			get
			{
				return this._Base_WorkPost;
			}
			set
			{
				this._Base_WorkPost.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Base_Installation", Storage="_Hazard_HiddenHazard", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_HiddenHazard> Hazard_HiddenHazard
		{
			get
			{
				return this._Hazard_HiddenHazard;
			}
			set
			{
				this._Hazard_HiddenHazard.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskList_Base_Installation", Storage="_Hazard_RiskList", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_RiskList> Hazard_RiskList
		{
			get
			{
				return this._Hazard_RiskList;
			}
			set
			{
				this._Hazard_RiskList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskList_Base_Installation1", Storage="_Installation", ThisKey="InstallationId", OtherKey="ControlInstallationId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_RiskList> Installation
		{
			get
			{
				return this._Installation;
			}
			set
			{
				this._Installation.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Base_Installation", Storage="_License_BlindPlate", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_BlindPlate> License_BlindPlate
		{
			get
			{
				return this._License_BlindPlate;
			}
			set
			{
				this._License_BlindPlate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Base_Installation1", Storage="_License_BlindPlate_Base_Installation1", ThisKey="InstallationId", OtherKey="JobInstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_BlindPlate> License_BlindPlate_Base_Installation1
		{
			get
			{
				return this._License_BlindPlate_Base_Installation1;
			}
			set
			{
				this._License_BlindPlate_Base_Installation1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Base_Installation", Storage="_License_BreakGround", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_BreakGround> License_BreakGround
		{
			get
			{
				return this._License_BreakGround;
			}
			set
			{
				this._License_BreakGround.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Base_Installation1", Storage="_License_BreakGround_Base_Installation1", ThisKey="InstallationId", OtherKey="JobInstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_BreakGround> License_BreakGround_Base_Installation1
		{
			get
			{
				return this._License_BreakGround_Base_Installation1;
			}
			set
			{
				this._License_BreakGround_Base_Installation1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Base_Installation", Storage="_License_Electricity", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_Electricity> License_Electricity
		{
			get
			{
				return this._License_Electricity;
			}
			set
			{
				this._License_Electricity.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Base_Installation1", Storage="_License_Electricity_Base_Installation1", ThisKey="InstallationId", OtherKey="JobInstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_Electricity> License_Electricity_Base_Installation1
		{
			get
			{
				return this._License_Electricity_Base_Installation1;
			}
			set
			{
				this._License_Electricity_Base_Installation1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Base_Installation", Storage="_License_FireWork", ThisKey="InstallationId", OtherKey="ApplyInstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork
		{
			get
			{
				return this._License_FireWork;
			}
			set
			{
				this._License_FireWork.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Base_Installation1", Storage="_License_FireWork_Base_Installation1", ThisKey="InstallationId", OtherKey="FireWorkInstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork_Base_Installation1
		{
			get
			{
				return this._License_FireWork_Base_Installation1;
			}
			set
			{
				this._License_FireWork_Base_Installation1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Base_Installation", Storage="_License_HeightWork", ThisKey="InstallationId", OtherKey="JobInstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_HeightWork> License_HeightWork
		{
			get
			{
				return this._License_HeightWork;
			}
			set
			{
				this._License_HeightWork.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Base_Installation1", Storage="_License_HeightWork_Base_Installation1", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_HeightWork> License_HeightWork_Base_Installation1
		{
			get
			{
				return this._License_HeightWork_Base_Installation1;
			}
			set
			{
				this._License_HeightWork_Base_Installation1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Base_Installation_ApplyInstallation", Storage="_License_Interlocking", ThisKey="InstallationId", OtherKey="ApplyInstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_Interlocking> License_Interlocking
		{
			get
			{
				return this._License_Interlocking;
			}
			set
			{
				this._License_Interlocking.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Base_Installation1", Storage="_License_Interlocking_Base_Installation1", ThisKey="InstallationId", OtherKey="JobInstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_Interlocking> License_Interlocking_Base_Installation1
		{
			get
			{
				return this._License_Interlocking_Base_Installation1;
			}
			set
			{
				this._License_Interlocking_Base_Installation1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Base_Installation", Storage="_License_LiftingWork", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_LiftingWork> License_LiftingWork
		{
			get
			{
				return this._License_LiftingWork;
			}
			set
			{
				this._License_LiftingWork.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Base_Installation1", Storage="_License_LiftingWork_Base_Installation1", ThisKey="InstallationId", OtherKey="JobInstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_LiftingWork> License_LiftingWork_Base_Installation1
		{
			get
			{
				return this._License_LiftingWork_Base_Installation1;
			}
			set
			{
				this._License_LiftingWork_Base_Installation1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Base_Installation", Storage="_License_LimitedSpace", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpace> License_LimitedSpace
		{
			get
			{
				return this._License_LimitedSpace;
			}
			set
			{
				this._License_LimitedSpace.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Base_Installation1", Storage="_License_LimitedSpace_Base_Installation1", ThisKey="InstallationId", OtherKey="JobInstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpace> License_LimitedSpace_Base_Installation1
		{
			get
			{
				return this._License_LimitedSpace_Base_Installation1;
			}
			set
			{
				this._License_LimitedSpace_Base_Installation1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Base_Installation", Storage="_License_OpenCircuit", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_OpenCircuit> License_OpenCircuit
		{
			get
			{
				return this._License_OpenCircuit;
			}
			set
			{
				this._License_OpenCircuit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Base_Installation1", Storage="_License_OpenCircuit_Base_Installation1", ThisKey="InstallationId", OtherKey="JobInstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_OpenCircuit> License_OpenCircuit_Base_Installation1
		{
			get
			{
				return this._License_OpenCircuit_Base_Installation1;
			}
			set
			{
				this._License_OpenCircuit_Base_Installation1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Base_Installation", Storage="_License_Overhaul", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<License_Overhaul> License_Overhaul
		{
			get
			{
				return this._License_Overhaul;
			}
			set
			{
				this._License_Overhaul.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentQuality_Base_Installation", Storage="_QualityAudit_EquipmentQuality", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_EquipmentQuality> QualityAudit_EquipmentQuality
		{
			get
			{
				return this._QualityAudit_EquipmentQuality;
			}
			set
			{
				this._QualityAudit_EquipmentQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserDealInstallation_Base_Installation", Storage="_Sys_UserDealInstallation", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_UserDealInstallation> Sys_UserDealInstallation
		{
			get
			{
				return this._Sys_UserDealInstallation;
			}
			set
			{
				this._Sys_UserDealInstallation.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserEntryRecord_Base_Installation", Storage="_Sys_UserEntryRecord", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_UserEntryRecord> Sys_UserEntryRecord
		{
			get
			{
				return this._Sys_UserEntryRecord;
			}
			set
			{
				this._Sys_UserEntryRecord.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Appraisal_PersonAppraisal(Appraisal_PersonAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_Appraisal_PersonAppraisal(Appraisal_PersonAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_Base_Euipment(Base_Euipment entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_Base_Euipment(Base_Euipment entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_Base_JobActivity(Base_JobActivity entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_Base_JobActivity(Base_JobActivity entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_Base_JobEnvironment(Base_JobEnvironment entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_Base_JobEnvironment(Base_JobEnvironment entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_Base_TeamGroup(Base_TeamGroup entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_Base_TeamGroup(Base_TeamGroup entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_Base_WorkArea(Base_WorkArea entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_Base_WorkArea(Base_WorkArea entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_Base_WorkPost(Base_WorkPost entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_Base_WorkPost(Base_WorkPost entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_Hazard_HiddenHazard(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_Hazard_HiddenHazard(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_Hazard_RiskList(Hazard_RiskList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_Hazard_RiskList(Hazard_RiskList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_Installation(Hazard_RiskList entity)
		{
			this.SendPropertyChanging();
			entity.ControlInstallation = this;
		}
		
		private void detach_Installation(Hazard_RiskList entity)
		{
			this.SendPropertyChanging();
			entity.ControlInstallation = null;
		}
		
		private void attach_License_BlindPlate(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_License_BlindPlate(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_License_BlindPlate_Base_Installation1(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.JobInstallation = this;
		}
		
		private void detach_License_BlindPlate_Base_Installation1(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.JobInstallation = null;
		}
		
		private void attach_License_BreakGround(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_License_BreakGround(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_License_BreakGround_Base_Installation1(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.JobInstallation = this;
		}
		
		private void detach_License_BreakGround_Base_Installation1(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.JobInstallation = null;
		}
		
		private void attach_License_Electricity(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_License_Electricity(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_License_Electricity_Base_Installation1(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.JobInstallation = this;
		}
		
		private void detach_License_Electricity_Base_Installation1(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.JobInstallation = null;
		}
		
		private void attach_License_FireWork(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_License_FireWork(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_License_FireWork_Base_Installation1(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.FireWorkInstallation = this;
		}
		
		private void detach_License_FireWork_Base_Installation1(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.FireWorkInstallation = null;
		}
		
		private void attach_License_HeightWork(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_License_HeightWork(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_License_HeightWork_Base_Installation1(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.Installation = this;
		}
		
		private void detach_License_HeightWork_Base_Installation1(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.Installation = null;
		}
		
		private void attach_License_Interlocking(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_License_Interlocking(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_License_Interlocking_Base_Installation1(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.JobInstallation = this;
		}
		
		private void detach_License_Interlocking_Base_Installation1(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.JobInstallation = null;
		}
		
		private void attach_License_LiftingWork(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_License_LiftingWork(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_License_LiftingWork_Base_Installation1(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.JobInstallation = this;
		}
		
		private void detach_License_LiftingWork_Base_Installation1(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.JobInstallation = null;
		}
		
		private void attach_License_LimitedSpace(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_License_LimitedSpace(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_License_LimitedSpace_Base_Installation1(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.JobInstallation = this;
		}
		
		private void detach_License_LimitedSpace_Base_Installation1(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.JobInstallation = null;
		}
		
		private void attach_License_OpenCircuit(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_License_OpenCircuit(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_License_OpenCircuit_Base_Installation1(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.JobInstallation = this;
		}
		
		private void detach_License_OpenCircuit_Base_Installation1(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.JobInstallation = null;
		}
		
		private void attach_License_Overhaul(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_License_Overhaul(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_QualityAudit_EquipmentQuality(QualityAudit_EquipmentQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_QualityAudit_EquipmentQuality(QualityAudit_EquipmentQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_Sys_UserDealInstallation(Sys_UserDealInstallation entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_Sys_UserDealInstallation(Sys_UserDealInstallation entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_Sys_UserEntryRecord(Sys_UserEntryRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_Sys_UserEntryRecord(Sys_UserEntryRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_JobActivity")]
	public partial class Base_JobActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JobActivityId;
		
		private string _InstallationId;
		
		private string _WorkAreaId;
		
		private string _JobActivityCode;
		
		private string _JobActivityName;
		
		private System.Nullable<bool> _IsUsed;
		
		private string _Remark;
		
		private string _Identification;
		
		private string _RiskLevel;
		
		private string _QRCodeUrl;
		
		private string _States;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_WorkArea> _Base_WorkArea;
		
		private EntitySet<Hazard_JHAItem> _Hazard_JHAItem;
		
		private EntitySet<License_Overhaul> _License_Overhaul;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobActivityIdChanging(string value);
    partial void OnJobActivityIdChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnWorkAreaIdChanging(string value);
    partial void OnWorkAreaIdChanged();
    partial void OnJobActivityCodeChanging(string value);
    partial void OnJobActivityCodeChanged();
    partial void OnJobActivityNameChanging(string value);
    partial void OnJobActivityNameChanged();
    partial void OnIsUsedChanging(System.Nullable<bool> value);
    partial void OnIsUsedChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIdentificationChanging(string value);
    partial void OnIdentificationChanged();
    partial void OnRiskLevelChanging(string value);
    partial void OnRiskLevelChanged();
    partial void OnQRCodeUrlChanging(string value);
    partial void OnQRCodeUrlChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public Base_JobActivity()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._Base_WorkArea = default(EntityRef<Base_WorkArea>);
			this._Hazard_JHAItem = new EntitySet<Hazard_JHAItem>(new Action<Hazard_JHAItem>(this.attach_Hazard_JHAItem), new Action<Hazard_JHAItem>(this.detach_Hazard_JHAItem));
			this._License_Overhaul = new EntitySet<License_Overhaul>(new Action<License_Overhaul>(this.attach_License_Overhaul), new Action<License_Overhaul>(this.detach_License_Overhaul));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobActivityId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JobActivityId
		{
			get
			{
				return this._JobActivityId;
			}
			set
			{
				if ((this._JobActivityId != value))
				{
					this.OnJobActivityIdChanging(value);
					this.SendPropertyChanging();
					this._JobActivityId = value;
					this.SendPropertyChanged("JobActivityId");
					this.OnJobActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50)")]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					if (this._Base_WorkArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkAreaIdChanging(value);
					this.SendPropertyChanging();
					this._WorkAreaId = value;
					this.SendPropertyChanged("WorkAreaId");
					this.OnWorkAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobActivityCode", DbType="NVarChar(50)")]
		public string JobActivityCode
		{
			get
			{
				return this._JobActivityCode;
			}
			set
			{
				if ((this._JobActivityCode != value))
				{
					this.OnJobActivityCodeChanging(value);
					this.SendPropertyChanging();
					this._JobActivityCode = value;
					this.SendPropertyChanged("JobActivityCode");
					this.OnJobActivityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobActivityName", DbType="NVarChar(50)")]
		public string JobActivityName
		{
			get
			{
				return this._JobActivityName;
			}
			set
			{
				if ((this._JobActivityName != value))
				{
					this.OnJobActivityNameChanging(value);
					this.SendPropertyChanging();
					this._JobActivityName = value;
					this.SendPropertyChanged("JobActivityName");
					this.OnJobActivityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identification", DbType="NVarChar(50)")]
		public string Identification
		{
			get
			{
				return this._Identification;
			}
			set
			{
				if ((this._Identification != value))
				{
					this.OnIdentificationChanging(value);
					this.SendPropertyChanging();
					this._Identification = value;
					this.SendPropertyChanged("Identification");
					this.OnIdentificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="NVarChar(50)")]
		public string RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this.OnRiskLevelChanging(value);
					this.SendPropertyChanging();
					this._RiskLevel = value;
					this.SendPropertyChanged("RiskLevel");
					this.OnRiskLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this.OnQRCodeUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeUrl = value;
					this.SendPropertyChanged("QRCodeUrl");
					this.OnQRCodeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_JobActivity_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.Base_JobActivity.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.Base_JobActivity.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_JobActivity_Base_WorkArea", Storage="_Base_WorkArea", ThisKey="WorkAreaId", OtherKey="WorkAreaId", IsForeignKey=true)]
		public Base_WorkArea Base_WorkArea
		{
			get
			{
				return this._Base_WorkArea.Entity;
			}
			set
			{
				Base_WorkArea previousValue = this._Base_WorkArea.Entity;
				if (((previousValue != value) 
							|| (this._Base_WorkArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WorkArea.Entity = null;
						previousValue.Base_JobActivity.Remove(this);
					}
					this._Base_WorkArea.Entity = value;
					if ((value != null))
					{
						value.Base_JobActivity.Add(this);
						this._WorkAreaId = value.WorkAreaId;
					}
					else
					{
						this._WorkAreaId = default(string);
					}
					this.SendPropertyChanged("Base_WorkArea");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_JHAItem_Base_JobActivity", Storage="_Hazard_JHAItem", ThisKey="JobActivityId", OtherKey="JobActivityId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_JHAItem> Hazard_JHAItem
		{
			get
			{
				return this._Hazard_JHAItem;
			}
			set
			{
				this._Hazard_JHAItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Base_JobActivity", Storage="_License_Overhaul", ThisKey="JobActivityId", OtherKey="JobActivityId", DeleteRule="NO ACTION")]
		public EntitySet<License_Overhaul> License_Overhaul
		{
			get
			{
				return this._License_Overhaul;
			}
			set
			{
				this._License_Overhaul.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hazard_JHAItem(Hazard_JHAItem entity)
		{
			this.SendPropertyChanging();
			entity.Base_JobActivity = this;
		}
		
		private void detach_Hazard_JHAItem(Hazard_JHAItem entity)
		{
			this.SendPropertyChanging();
			entity.Base_JobActivity = null;
		}
		
		private void attach_License_Overhaul(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.Base_JobActivity = this;
		}
		
		private void detach_License_Overhaul(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.Base_JobActivity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_JobEnvironment")]
	public partial class Base_JobEnvironment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JobEnvironmentId;
		
		private string _InstallationId;
		
		private string _WorkAreaId;
		
		private string _JobEnvironmentCode;
		
		private string _JobEnvironmentName;
		
		private System.Nullable<bool> _IsUsed;
		
		private string _Remark;
		
		private string _Identification;
		
		private string _RiskLevel;
		
		private string _QRCodeUrl;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_WorkArea> _Base_WorkArea;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobEnvironmentIdChanging(string value);
    partial void OnJobEnvironmentIdChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnWorkAreaIdChanging(string value);
    partial void OnWorkAreaIdChanged();
    partial void OnJobEnvironmentCodeChanging(string value);
    partial void OnJobEnvironmentCodeChanged();
    partial void OnJobEnvironmentNameChanging(string value);
    partial void OnJobEnvironmentNameChanged();
    partial void OnIsUsedChanging(System.Nullable<bool> value);
    partial void OnIsUsedChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIdentificationChanging(string value);
    partial void OnIdentificationChanged();
    partial void OnRiskLevelChanging(string value);
    partial void OnRiskLevelChanged();
    partial void OnQRCodeUrlChanging(string value);
    partial void OnQRCodeUrlChanged();
    #endregion
		
		public Base_JobEnvironment()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._Base_WorkArea = default(EntityRef<Base_WorkArea>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobEnvironmentId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JobEnvironmentId
		{
			get
			{
				return this._JobEnvironmentId;
			}
			set
			{
				if ((this._JobEnvironmentId != value))
				{
					this.OnJobEnvironmentIdChanging(value);
					this.SendPropertyChanging();
					this._JobEnvironmentId = value;
					this.SendPropertyChanged("JobEnvironmentId");
					this.OnJobEnvironmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50)")]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					if (this._Base_WorkArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkAreaIdChanging(value);
					this.SendPropertyChanging();
					this._WorkAreaId = value;
					this.SendPropertyChanged("WorkAreaId");
					this.OnWorkAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobEnvironmentCode", DbType="NVarChar(50)")]
		public string JobEnvironmentCode
		{
			get
			{
				return this._JobEnvironmentCode;
			}
			set
			{
				if ((this._JobEnvironmentCode != value))
				{
					this.OnJobEnvironmentCodeChanging(value);
					this.SendPropertyChanging();
					this._JobEnvironmentCode = value;
					this.SendPropertyChanged("JobEnvironmentCode");
					this.OnJobEnvironmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobEnvironmentName", DbType="NVarChar(50)")]
		public string JobEnvironmentName
		{
			get
			{
				return this._JobEnvironmentName;
			}
			set
			{
				if ((this._JobEnvironmentName != value))
				{
					this.OnJobEnvironmentNameChanging(value);
					this.SendPropertyChanging();
					this._JobEnvironmentName = value;
					this.SendPropertyChanged("JobEnvironmentName");
					this.OnJobEnvironmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identification", DbType="NVarChar(50)")]
		public string Identification
		{
			get
			{
				return this._Identification;
			}
			set
			{
				if ((this._Identification != value))
				{
					this.OnIdentificationChanging(value);
					this.SendPropertyChanging();
					this._Identification = value;
					this.SendPropertyChanged("Identification");
					this.OnIdentificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="NVarChar(50)")]
		public string RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this.OnRiskLevelChanging(value);
					this.SendPropertyChanging();
					this._RiskLevel = value;
					this.SendPropertyChanged("RiskLevel");
					this.OnRiskLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this.OnQRCodeUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeUrl = value;
					this.SendPropertyChanged("QRCodeUrl");
					this.OnQRCodeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_JobEnvironment_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.Base_JobEnvironment.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.Base_JobEnvironment.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_JobEnvironment_Base_WorkArea", Storage="_Base_WorkArea", ThisKey="WorkAreaId", OtherKey="WorkAreaId", IsForeignKey=true)]
		public Base_WorkArea Base_WorkArea
		{
			get
			{
				return this._Base_WorkArea.Entity;
			}
			set
			{
				Base_WorkArea previousValue = this._Base_WorkArea.Entity;
				if (((previousValue != value) 
							|| (this._Base_WorkArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WorkArea.Entity = null;
						previousValue.Base_JobEnvironment.Remove(this);
					}
					this._Base_WorkArea.Entity = value;
					if ((value != null))
					{
						value.Base_JobEnvironment.Add(this);
						this._WorkAreaId = value.WorkAreaId;
					}
					else
					{
						this._WorkAreaId = default(string);
					}
					this.SendPropertyChanged("Base_WorkArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_LimitedSpaceAnalysisData")]
	public partial class Base_LimitedSpaceAnalysisData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AnalysisDataId;
		
		private System.Nullable<int> _SortIndex;
		
		private string _AnalysisPoint;
		
		private string _Category;
		
		private System.Nullable<decimal> _MinData;
		
		private System.Nullable<decimal> _MaxData;
		
		private string _Measure;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnalysisDataIdChanging(string value);
    partial void OnAnalysisDataIdChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnAnalysisPointChanging(string value);
    partial void OnAnalysisPointChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnMinDataChanging(System.Nullable<decimal> value);
    partial void OnMinDataChanged();
    partial void OnMaxDataChanging(System.Nullable<decimal> value);
    partial void OnMaxDataChanged();
    partial void OnMeasureChanging(string value);
    partial void OnMeasureChanged();
    #endregion
		
		public Base_LimitedSpaceAnalysisData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalysisDataId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AnalysisDataId
		{
			get
			{
				return this._AnalysisDataId;
			}
			set
			{
				if ((this._AnalysisDataId != value))
				{
					this.OnAnalysisDataIdChanging(value);
					this.SendPropertyChanging();
					this._AnalysisDataId = value;
					this.SendPropertyChanged("AnalysisDataId");
					this.OnAnalysisDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalysisPoint", DbType="NVarChar(500)")]
		public string AnalysisPoint
		{
			get
			{
				return this._AnalysisPoint;
			}
			set
			{
				if ((this._AnalysisPoint != value))
				{
					this.OnAnalysisPointChanging(value);
					this.SendPropertyChanging();
					this._AnalysisPoint = value;
					this.SendPropertyChanged("AnalysisPoint");
					this.OnAnalysisPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(2)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinData", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> MinData
		{
			get
			{
				return this._MinData;
			}
			set
			{
				if ((this._MinData != value))
				{
					this.OnMinDataChanging(value);
					this.SendPropertyChanging();
					this._MinData = value;
					this.SendPropertyChanged("MinData");
					this.OnMinDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxData", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> MaxData
		{
			get
			{
				return this._MaxData;
			}
			set
			{
				if ((this._MaxData != value))
				{
					this.OnMaxDataChanging(value);
					this.SendPropertyChanging();
					this._MaxData = value;
					this.SendPropertyChanged("MaxData");
					this.OnMaxDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Measure", DbType="NVarChar(10)")]
		public string Measure
		{
			get
			{
				return this._Measure;
			}
			set
			{
				if ((this._Measure != value))
				{
					this.OnMeasureChanging(value);
					this.SendPropertyChanging();
					this._Measure = value;
					this.SendPropertyChanged("Measure");
					this.OnMeasureChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_OverhaulRiskGrade")]
	public partial class Base_OverhaulRiskGrade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OverhaulRiskGradeId;
		
		private string _RiskGrade;
		
		private System.Nullable<int> _MinValue;
		
		private System.Nullable<int> _MaxValue;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOverhaulRiskGradeIdChanging(string value);
    partial void OnOverhaulRiskGradeIdChanged();
    partial void OnRiskGradeChanging(string value);
    partial void OnRiskGradeChanged();
    partial void OnMinValueChanging(System.Nullable<int> value);
    partial void OnMinValueChanged();
    partial void OnMaxValueChanging(System.Nullable<int> value);
    partial void OnMaxValueChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_OverhaulRiskGrade()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverhaulRiskGradeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OverhaulRiskGradeId
		{
			get
			{
				return this._OverhaulRiskGradeId;
			}
			set
			{
				if ((this._OverhaulRiskGradeId != value))
				{
					this.OnOverhaulRiskGradeIdChanging(value);
					this.SendPropertyChanging();
					this._OverhaulRiskGradeId = value;
					this.SendPropertyChanged("OverhaulRiskGradeId");
					this.OnOverhaulRiskGradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskGrade", DbType="NVarChar(50)")]
		public string RiskGrade
		{
			get
			{
				return this._RiskGrade;
			}
			set
			{
				if ((this._RiskGrade != value))
				{
					this.OnRiskGradeChanging(value);
					this.SendPropertyChanging();
					this._RiskGrade = value;
					this.SendPropertyChanged("RiskGrade");
					this.OnRiskGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinValue", DbType="Int")]
		public System.Nullable<int> MinValue
		{
			get
			{
				return this._MinValue;
			}
			set
			{
				if ((this._MinValue != value))
				{
					this.OnMinValueChanging(value);
					this.SendPropertyChanging();
					this._MinValue = value;
					this.SendPropertyChanged("MinValue");
					this.OnMinValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxValue", DbType="Int")]
		public System.Nullable<int> MaxValue
		{
			get
			{
				return this._MaxValue;
			}
			set
			{
				if ((this._MaxValue != value))
				{
					this.OnMaxValueChanging(value);
					this.SendPropertyChanging();
					this._MaxValue = value;
					this.SendPropertyChanged("MaxValue");
					this.OnMaxValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Position")]
	public partial class Base_Position : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PositionId;
		
		private string _PositionCode;
		
		private string _PositionName;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPositionIdChanging(string value);
    partial void OnPositionIdChanged();
    partial void OnPositionCodeChanging(string value);
    partial void OnPositionCodeChanged();
    partial void OnPositionNameChanging(string value);
    partial void OnPositionNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Position()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionCode", DbType="NVarChar(50)")]
		public string PositionCode
		{
			get
			{
				return this._PositionCode;
			}
			set
			{
				if ((this._PositionCode != value))
				{
					this.OnPositionCodeChanging(value);
					this.SendPropertyChanging();
					this._PositionCode = value;
					this.SendPropertyChanged("PositionCode");
					this.OnPositionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionName", DbType="NVarChar(50)")]
		public string PositionName
		{
			get
			{
				return this._PositionName;
			}
			set
			{
				if ((this._PositionName != value))
				{
					this.OnPositionNameChanging(value);
					this.SendPropertyChanging();
					this._PositionName = value;
					this.SendPropertyChanged("PositionName");
					this.OnPositionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_PostTitle")]
	public partial class Base_PostTitle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PostTitleId;
		
		private string _PostTitleName;
		
		private string _PostTitleCode;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostTitleIdChanging(string value);
    partial void OnPostTitleIdChanged();
    partial void OnPostTitleNameChanging(string value);
    partial void OnPostTitleNameChanged();
    partial void OnPostTitleCodeChanging(string value);
    partial void OnPostTitleCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_PostTitle()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTitleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PostTitleId
		{
			get
			{
				return this._PostTitleId;
			}
			set
			{
				if ((this._PostTitleId != value))
				{
					this.OnPostTitleIdChanging(value);
					this.SendPropertyChanging();
					this._PostTitleId = value;
					this.SendPropertyChanged("PostTitleId");
					this.OnPostTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTitleName", DbType="NVarChar(100)")]
		public string PostTitleName
		{
			get
			{
				return this._PostTitleName;
			}
			set
			{
				if ((this._PostTitleName != value))
				{
					this.OnPostTitleNameChanging(value);
					this.SendPropertyChanging();
					this._PostTitleName = value;
					this.SendPropertyChanged("PostTitleName");
					this.OnPostTitleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTitleCode", DbType="NVarChar(50)")]
		public string PostTitleCode
		{
			get
			{
				return this._PostTitleCode;
			}
			set
			{
				if ((this._PostTitleCode != value))
				{
					this.OnPostTitleCodeChanging(value);
					this.SendPropertyChanging();
					this._PostTitleCode = value;
					this.SendPropertyChanged("PostTitleCode");
					this.OnPostTitleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Prospective")]
	public partial class Base_Prospective : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProspectiveId;
		
		private string _ProspectiveCode;
		
		private string _ProspectiveName;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProspectiveIdChanging(string value);
    partial void OnProspectiveIdChanged();
    partial void OnProspectiveCodeChanging(string value);
    partial void OnProspectiveCodeChanged();
    partial void OnProspectiveNameChanging(string value);
    partial void OnProspectiveNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Prospective()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProspectiveId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProspectiveId
		{
			get
			{
				return this._ProspectiveId;
			}
			set
			{
				if ((this._ProspectiveId != value))
				{
					this.OnProspectiveIdChanging(value);
					this.SendPropertyChanging();
					this._ProspectiveId = value;
					this.SendPropertyChanged("ProspectiveId");
					this.OnProspectiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProspectiveCode", DbType="NVarChar(50)")]
		public string ProspectiveCode
		{
			get
			{
				return this._ProspectiveCode;
			}
			set
			{
				if ((this._ProspectiveCode != value))
				{
					this.OnProspectiveCodeChanging(value);
					this.SendPropertyChanging();
					this._ProspectiveCode = value;
					this.SendPropertyChanged("ProspectiveCode");
					this.OnProspectiveCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProspectiveName", DbType="NVarChar(200)")]
		public string ProspectiveName
		{
			get
			{
				return this._ProspectiveName;
			}
			set
			{
				if ((this._ProspectiveName != value))
				{
					this.OnProspectiveNameChanging(value);
					this.SendPropertyChanging();
					this._ProspectiveName = value;
					this.SendPropertyChanged("ProspectiveName");
					this.OnProspectiveNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_RiskLevelValue")]
	public partial class Base_RiskLevelValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RiskLevelValueId;
		
		private string _RiskLevelId;
		
		private System.Nullable<int> _MinValue;
		
		private System.Nullable<int> _MaxValue;
		
		private string _Remark;
		
		private string _ControlMeasures;
		
		private string _LimitTime;
		
		private string _Identification;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRiskLevelValueIdChanging(string value);
    partial void OnRiskLevelValueIdChanged();
    partial void OnRiskLevelIdChanging(string value);
    partial void OnRiskLevelIdChanged();
    partial void OnMinValueChanging(System.Nullable<int> value);
    partial void OnMinValueChanged();
    partial void OnMaxValueChanging(System.Nullable<int> value);
    partial void OnMaxValueChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnControlMeasuresChanging(string value);
    partial void OnControlMeasuresChanged();
    partial void OnLimitTimeChanging(string value);
    partial void OnLimitTimeChanged();
    partial void OnIdentificationChanging(string value);
    partial void OnIdentificationChanged();
    #endregion
		
		public Base_RiskLevelValue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevelValueId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RiskLevelValueId
		{
			get
			{
				return this._RiskLevelValueId;
			}
			set
			{
				if ((this._RiskLevelValueId != value))
				{
					this.OnRiskLevelValueIdChanging(value);
					this.SendPropertyChanging();
					this._RiskLevelValueId = value;
					this.SendPropertyChanged("RiskLevelValueId");
					this.OnRiskLevelValueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevelId", DbType="NVarChar(50)")]
		public string RiskLevelId
		{
			get
			{
				return this._RiskLevelId;
			}
			set
			{
				if ((this._RiskLevelId != value))
				{
					this.OnRiskLevelIdChanging(value);
					this.SendPropertyChanging();
					this._RiskLevelId = value;
					this.SendPropertyChanged("RiskLevelId");
					this.OnRiskLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinValue", DbType="Int")]
		public System.Nullable<int> MinValue
		{
			get
			{
				return this._MinValue;
			}
			set
			{
				if ((this._MinValue != value))
				{
					this.OnMinValueChanging(value);
					this.SendPropertyChanging();
					this._MinValue = value;
					this.SendPropertyChanged("MinValue");
					this.OnMinValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxValue", DbType="Int")]
		public System.Nullable<int> MaxValue
		{
			get
			{
				return this._MaxValue;
			}
			set
			{
				if ((this._MaxValue != value))
				{
					this.OnMaxValueChanging(value);
					this.SendPropertyChanging();
					this._MaxValue = value;
					this.SendPropertyChanged("MaxValue");
					this.OnMaxValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlMeasures", DbType="NVarChar(500)")]
		public string ControlMeasures
		{
			get
			{
				return this._ControlMeasures;
			}
			set
			{
				if ((this._ControlMeasures != value))
				{
					this.OnControlMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ControlMeasures = value;
					this.SendPropertyChanged("ControlMeasures");
					this.OnControlMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitTime", DbType="NVarChar(100)")]
		public string LimitTime
		{
			get
			{
				return this._LimitTime;
			}
			set
			{
				if ((this._LimitTime != value))
				{
					this.OnLimitTimeChanging(value);
					this.SendPropertyChanging();
					this._LimitTime = value;
					this.SendPropertyChanged("LimitTime");
					this.OnLimitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identification", DbType="NVarChar(50)")]
		public string Identification
		{
			get
			{
				return this._Identification;
			}
			set
			{
				if ((this._Identification != value))
				{
					this.OnIdentificationChanging(value);
					this.SendPropertyChanging();
					this._Identification = value;
					this.SendPropertyChanged("Identification");
					this.OnIdentificationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_SafetyMeasures")]
	public partial class Base_SafetyMeasures : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SafetyMeasuresId;
		
		private System.Nullable<int> _SortIndex;
		
		private string _SafetyMeasures;
		
		private string _LicenseType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSafetyMeasuresIdChanging(string value);
    partial void OnSafetyMeasuresIdChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnSafetyMeasuresChanging(string value);
    partial void OnSafetyMeasuresChanged();
    partial void OnLicenseTypeChanging(string value);
    partial void OnLicenseTypeChanged();
    #endregion
		
		public Base_SafetyMeasures()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasuresId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SafetyMeasuresId
		{
			get
			{
				return this._SafetyMeasuresId;
			}
			set
			{
				if ((this._SafetyMeasuresId != value))
				{
					this.OnSafetyMeasuresIdChanging(value);
					this.SendPropertyChanging();
					this._SafetyMeasuresId = value;
					this.SendPropertyChanged("SafetyMeasuresId");
					this.OnSafetyMeasuresIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures", DbType="NVarChar(2000)")]
		public string SafetyMeasures
		{
			get
			{
				return this._SafetyMeasures;
			}
			set
			{
				if ((this._SafetyMeasures != value))
				{
					this.OnSafetyMeasuresChanging(value);
					this.SendPropertyChanging();
					this._SafetyMeasures = value;
					this.SendPropertyChanged("SafetyMeasures");
					this.OnSafetyMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseType", DbType="NVarChar(50)")]
		public string LicenseType
		{
			get
			{
				return this._LicenseType;
			}
			set
			{
				if ((this._LicenseType != value))
				{
					this.OnLicenseTypeChanging(value);
					this.SendPropertyChanging();
					this._LicenseType = value;
					this.SendPropertyChanged("LicenseType");
					this.OnLicenseTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_SCL")]
	public partial class Base_SCL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SCLId;
		
		private System.Nullable<int> _SortIndex;
		
		private string _CheckItem;
		
		private string _Standard;
		
		private string _Consequence;
		
		private string _NowControlMeasures;
		
		private System.Nullable<decimal> _HazardJudge_L;
		
		private System.Nullable<decimal> _HazardJudge_S;
		
		private System.Nullable<decimal> _HazardJudge_R;
		
		private string _RiskLevel;
		
		private string _ControlMeasures;
		
		private string _EuipmentTypeId;
		
		private EntityRef<Base_EuipmentType> _Base_EuipmentType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSCLIdChanging(string value);
    partial void OnSCLIdChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnCheckItemChanging(string value);
    partial void OnCheckItemChanged();
    partial void OnStandardChanging(string value);
    partial void OnStandardChanged();
    partial void OnConsequenceChanging(string value);
    partial void OnConsequenceChanged();
    partial void OnNowControlMeasuresChanging(string value);
    partial void OnNowControlMeasuresChanged();
    partial void OnHazardJudge_LChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_LChanged();
    partial void OnHazardJudge_SChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_SChanged();
    partial void OnHazardJudge_RChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_RChanged();
    partial void OnRiskLevelChanging(string value);
    partial void OnRiskLevelChanged();
    partial void OnControlMeasuresChanging(string value);
    partial void OnControlMeasuresChanged();
    partial void OnEuipmentTypeIdChanging(string value);
    partial void OnEuipmentTypeIdChanged();
    #endregion
		
		public Base_SCL()
		{
			this._Base_EuipmentType = default(EntityRef<Base_EuipmentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCLId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SCLId
		{
			get
			{
				return this._SCLId;
			}
			set
			{
				if ((this._SCLId != value))
				{
					this.OnSCLIdChanging(value);
					this.SendPropertyChanging();
					this._SCLId = value;
					this.SendPropertyChanged("SCLId");
					this.OnSCLIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckItem", DbType="NVarChar(50)")]
		public string CheckItem
		{
			get
			{
				return this._CheckItem;
			}
			set
			{
				if ((this._CheckItem != value))
				{
					this.OnCheckItemChanging(value);
					this.SendPropertyChanging();
					this._CheckItem = value;
					this.SendPropertyChanged("CheckItem");
					this.OnCheckItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standard", DbType="NVarChar(500)")]
		public string Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._Standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consequence", DbType="NVarChar(500)")]
		public string Consequence
		{
			get
			{
				return this._Consequence;
			}
			set
			{
				if ((this._Consequence != value))
				{
					this.OnConsequenceChanging(value);
					this.SendPropertyChanging();
					this._Consequence = value;
					this.SendPropertyChanged("Consequence");
					this.OnConsequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NowControlMeasures", DbType="NVarChar(800)")]
		public string NowControlMeasures
		{
			get
			{
				return this._NowControlMeasures;
			}
			set
			{
				if ((this._NowControlMeasures != value))
				{
					this.OnNowControlMeasuresChanging(value);
					this.SendPropertyChanging();
					this._NowControlMeasures = value;
					this.SendPropertyChanged("NowControlMeasures");
					this.OnNowControlMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_L", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_L
		{
			get
			{
				return this._HazardJudge_L;
			}
			set
			{
				if ((this._HazardJudge_L != value))
				{
					this.OnHazardJudge_LChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_L = value;
					this.SendPropertyChanged("HazardJudge_L");
					this.OnHazardJudge_LChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S
		{
			get
			{
				return this._HazardJudge_S;
			}
			set
			{
				if ((this._HazardJudge_S != value))
				{
					this.OnHazardJudge_SChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_S = value;
					this.SendPropertyChanged("HazardJudge_S");
					this.OnHazardJudge_SChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_R", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_R
		{
			get
			{
				return this._HazardJudge_R;
			}
			set
			{
				if ((this._HazardJudge_R != value))
				{
					this.OnHazardJudge_RChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_R = value;
					this.SendPropertyChanged("HazardJudge_R");
					this.OnHazardJudge_RChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="NVarChar(50)")]
		public string RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this.OnRiskLevelChanging(value);
					this.SendPropertyChanging();
					this._RiskLevel = value;
					this.SendPropertyChanged("RiskLevel");
					this.OnRiskLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlMeasures", DbType="NVarChar(800)")]
		public string ControlMeasures
		{
			get
			{
				return this._ControlMeasures;
			}
			set
			{
				if ((this._ControlMeasures != value))
				{
					this.OnControlMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ControlMeasures = value;
					this.SendPropertyChanged("ControlMeasures");
					this.OnControlMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EuipmentTypeId", DbType="NVarChar(50)")]
		public string EuipmentTypeId
		{
			get
			{
				return this._EuipmentTypeId;
			}
			set
			{
				if ((this._EuipmentTypeId != value))
				{
					if (this._Base_EuipmentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEuipmentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EuipmentTypeId = value;
					this.SendPropertyChanged("EuipmentTypeId");
					this.OnEuipmentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_SCL_Base_EuipmentType", Storage="_Base_EuipmentType", ThisKey="EuipmentTypeId", OtherKey="EuipmentTypeId", IsForeignKey=true)]
		public Base_EuipmentType Base_EuipmentType
		{
			get
			{
				return this._Base_EuipmentType.Entity;
			}
			set
			{
				Base_EuipmentType previousValue = this._Base_EuipmentType.Entity;
				if (((previousValue != value) 
							|| (this._Base_EuipmentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_EuipmentType.Entity = null;
						previousValue.Base_SCL.Remove(this);
					}
					this._Base_EuipmentType.Entity = value;
					if ((value != null))
					{
						value.Base_SCL.Add(this);
						this._EuipmentTypeId = value.EuipmentTypeId;
					}
					else
					{
						this._EuipmentTypeId = default(string);
					}
					this.SendPropertyChanged("Base_EuipmentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_SpecialSchemeType")]
	public partial class Base_SpecialSchemeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SpecialSchemeTypeId;
		
		private string _SpecialSchemeTypeCode;
		
		private string _SpecialSchemeTypeName;
		
		private string _Remark;
		
		private EntitySet<Technique_SpecialScheme> _Technique_SpecialScheme;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecialSchemeTypeIdChanging(string value);
    partial void OnSpecialSchemeTypeIdChanged();
    partial void OnSpecialSchemeTypeCodeChanging(string value);
    partial void OnSpecialSchemeTypeCodeChanged();
    partial void OnSpecialSchemeTypeNameChanging(string value);
    partial void OnSpecialSchemeTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_SpecialSchemeType()
		{
			this._Technique_SpecialScheme = new EntitySet<Technique_SpecialScheme>(new Action<Technique_SpecialScheme>(this.attach_Technique_SpecialScheme), new Action<Technique_SpecialScheme>(this.detach_Technique_SpecialScheme));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SpecialSchemeTypeId
		{
			get
			{
				return this._SpecialSchemeTypeId;
			}
			set
			{
				if ((this._SpecialSchemeTypeId != value))
				{
					this.OnSpecialSchemeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SpecialSchemeTypeId = value;
					this.SendPropertyChanged("SpecialSchemeTypeId");
					this.OnSpecialSchemeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeTypeCode", DbType="NVarChar(50)")]
		public string SpecialSchemeTypeCode
		{
			get
			{
				return this._SpecialSchemeTypeCode;
			}
			set
			{
				if ((this._SpecialSchemeTypeCode != value))
				{
					this.OnSpecialSchemeTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._SpecialSchemeTypeCode = value;
					this.SendPropertyChanged("SpecialSchemeTypeCode");
					this.OnSpecialSchemeTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeTypeName", DbType="NVarChar(500)")]
		public string SpecialSchemeTypeName
		{
			get
			{
				return this._SpecialSchemeTypeName;
			}
			set
			{
				if ((this._SpecialSchemeTypeName != value))
				{
					this.OnSpecialSchemeTypeNameChanging(value);
					this.SendPropertyChanging();
					this._SpecialSchemeTypeName = value;
					this.SendPropertyChanged("SpecialSchemeTypeName");
					this.OnSpecialSchemeTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(2000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_SpecialScheme_Base_SpecialSchemeType", Storage="_Technique_SpecialScheme", ThisKey="SpecialSchemeTypeId", OtherKey="SpecialSchemeTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Technique_SpecialScheme> Technique_SpecialScheme
		{
			get
			{
				return this._Technique_SpecialScheme;
			}
			set
			{
				this._Technique_SpecialScheme.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Technique_SpecialScheme(Technique_SpecialScheme entity)
		{
			this.SendPropertyChanging();
			entity.Base_SpecialSchemeType = this;
		}
		
		private void detach_Technique_SpecialScheme(Technique_SpecialScheme entity)
		{
			this.SendPropertyChanging();
			entity.Base_SpecialSchemeType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Specialty")]
	public partial class Base_Specialty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SpecialtyId;
		
		private string _SpecialtyName;
		
		private string _SpecialtyCode;
		
		private string _Remark;
		
		private EntitySet<Base_Standard> _Base_Standard;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecialtyIdChanging(string value);
    partial void OnSpecialtyIdChanged();
    partial void OnSpecialtyNameChanging(string value);
    partial void OnSpecialtyNameChanged();
    partial void OnSpecialtyCodeChanging(string value);
    partial void OnSpecialtyCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Specialty()
		{
			this._Base_Standard = new EntitySet<Base_Standard>(new Action<Base_Standard>(this.attach_Base_Standard), new Action<Base_Standard>(this.detach_Base_Standard));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialtyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SpecialtyId
		{
			get
			{
				return this._SpecialtyId;
			}
			set
			{
				if ((this._SpecialtyId != value))
				{
					this.OnSpecialtyIdChanging(value);
					this.SendPropertyChanging();
					this._SpecialtyId = value;
					this.SendPropertyChanged("SpecialtyId");
					this.OnSpecialtyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialtyName", DbType="NVarChar(100)")]
		public string SpecialtyName
		{
			get
			{
				return this._SpecialtyName;
			}
			set
			{
				if ((this._SpecialtyName != value))
				{
					this.OnSpecialtyNameChanging(value);
					this.SendPropertyChanging();
					this._SpecialtyName = value;
					this.SendPropertyChanged("SpecialtyName");
					this.OnSpecialtyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialtyCode", DbType="NVarChar(50)")]
		public string SpecialtyCode
		{
			get
			{
				return this._SpecialtyCode;
			}
			set
			{
				if ((this._SpecialtyCode != value))
				{
					this.OnSpecialtyCodeChanging(value);
					this.SendPropertyChanging();
					this._SpecialtyCode = value;
					this.SendPropertyChanged("SpecialtyCode");
					this.OnSpecialtyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Standard_Base_Specialty", Storage="_Base_Standard", ThisKey="SpecialtyId", OtherKey="SpecialtyId", DeleteRule="NO ACTION")]
		public EntitySet<Base_Standard> Base_Standard
		{
			get
			{
				return this._Base_Standard;
			}
			set
			{
				this._Base_Standard.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_Standard(Base_Standard entity)
		{
			this.SendPropertyChanging();
			entity.Base_Specialty = this;
		}
		
		private void detach_Base_Standard(Base_Standard entity)
		{
			this.SendPropertyChanging();
			entity.Base_Specialty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Standard")]
	public partial class Base_Standard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _StandardId;
		
		private string _StandardName;
		
		private string _StandardCode;
		
		private string _Remark;
		
		private string _SpecialtyId;
		
		private EntityRef<Base_Specialty> _Base_Specialty;
		
		private EntitySet<Standard_ManagedObject> _Standard_ManagedObject;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStandardIdChanging(string value);
    partial void OnStandardIdChanged();
    partial void OnStandardNameChanging(string value);
    partial void OnStandardNameChanged();
    partial void OnStandardCodeChanging(string value);
    partial void OnStandardCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnSpecialtyIdChanging(string value);
    partial void OnSpecialtyIdChanged();
    #endregion
		
		public Base_Standard()
		{
			this._Base_Specialty = default(EntityRef<Base_Specialty>);
			this._Standard_ManagedObject = new EntitySet<Standard_ManagedObject>(new Action<Standard_ManagedObject>(this.attach_Standard_ManagedObject), new Action<Standard_ManagedObject>(this.detach_Standard_ManagedObject));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string StandardId
		{
			get
			{
				return this._StandardId;
			}
			set
			{
				if ((this._StandardId != value))
				{
					this.OnStandardIdChanging(value);
					this.SendPropertyChanging();
					this._StandardId = value;
					this.SendPropertyChanged("StandardId");
					this.OnStandardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardName", DbType="NVarChar(100)")]
		public string StandardName
		{
			get
			{
				return this._StandardName;
			}
			set
			{
				if ((this._StandardName != value))
				{
					this.OnStandardNameChanging(value);
					this.SendPropertyChanging();
					this._StandardName = value;
					this.SendPropertyChanged("StandardName");
					this.OnStandardNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardCode", DbType="NVarChar(50)")]
		public string StandardCode
		{
			get
			{
				return this._StandardCode;
			}
			set
			{
				if ((this._StandardCode != value))
				{
					this.OnStandardCodeChanging(value);
					this.SendPropertyChanging();
					this._StandardCode = value;
					this.SendPropertyChanged("StandardCode");
					this.OnStandardCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialtyId", DbType="NVarChar(50)")]
		public string SpecialtyId
		{
			get
			{
				return this._SpecialtyId;
			}
			set
			{
				if ((this._SpecialtyId != value))
				{
					if (this._Base_Specialty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialtyIdChanging(value);
					this.SendPropertyChanging();
					this._SpecialtyId = value;
					this.SendPropertyChanged("SpecialtyId");
					this.OnSpecialtyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Standard_Base_Specialty", Storage="_Base_Specialty", ThisKey="SpecialtyId", OtherKey="SpecialtyId", IsForeignKey=true)]
		public Base_Specialty Base_Specialty
		{
			get
			{
				return this._Base_Specialty.Entity;
			}
			set
			{
				Base_Specialty previousValue = this._Base_Specialty.Entity;
				if (((previousValue != value) 
							|| (this._Base_Specialty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Specialty.Entity = null;
						previousValue.Base_Standard.Remove(this);
					}
					this._Base_Specialty.Entity = value;
					if ((value != null))
					{
						value.Base_Standard.Add(this);
						this._SpecialtyId = value.SpecialtyId;
					}
					else
					{
						this._SpecialtyId = default(string);
					}
					this.SendPropertyChanged("Base_Specialty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Standard_ManagedObject_Base_Standard", Storage="_Standard_ManagedObject", ThisKey="StandardId", OtherKey="StandardId", DeleteRule="NO ACTION")]
		public EntitySet<Standard_ManagedObject> Standard_ManagedObject
		{
			get
			{
				return this._Standard_ManagedObject;
			}
			set
			{
				this._Standard_ManagedObject.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Standard_ManagedObject(Standard_ManagedObject entity)
		{
			this.SendPropertyChanging();
			entity.Base_Standard = this;
		}
		
		private void detach_Standard_ManagedObject(Standard_ManagedObject entity)
		{
			this.SendPropertyChanging();
			entity.Base_Standard = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_TeamGroup")]
	public partial class Base_TeamGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TeamGroupId;
		
		private string _UnitId;
		
		private string _InstallationId;
		
		private string _WorkAreaId;
		
		private string _DepartId;
		
		private string _TeamGroupCode;
		
		private string _TeamGroupName;
		
		private string _Remark;
		
		private string _LeaderIds;
		
		private string _LeaderNames;
		
		private string _TeamType;
		
		private EntityRef<Base_Depart> _Base_Depart;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_WorkArea> _Base_WorkArea;
		
		private EntitySet<Base_TeamGroupUser> _Base_TeamGroupUser;
		
		private EntitySet<License_Overhaul> _License_Overhaul;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeamGroupIdChanging(string value);
    partial void OnTeamGroupIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnWorkAreaIdChanging(string value);
    partial void OnWorkAreaIdChanged();
    partial void OnDepartIdChanging(string value);
    partial void OnDepartIdChanged();
    partial void OnTeamGroupCodeChanging(string value);
    partial void OnTeamGroupCodeChanged();
    partial void OnTeamGroupNameChanging(string value);
    partial void OnTeamGroupNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnLeaderIdsChanging(string value);
    partial void OnLeaderIdsChanged();
    partial void OnLeaderNamesChanging(string value);
    partial void OnLeaderNamesChanged();
    partial void OnTeamTypeChanging(string value);
    partial void OnTeamTypeChanged();
    #endregion
		
		public Base_TeamGroup()
		{
			this._Base_Depart = default(EntityRef<Base_Depart>);
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Base_WorkArea = default(EntityRef<Base_WorkArea>);
			this._Base_TeamGroupUser = new EntitySet<Base_TeamGroupUser>(new Action<Base_TeamGroupUser>(this.attach_Base_TeamGroupUser), new Action<Base_TeamGroupUser>(this.detach_Base_TeamGroupUser));
			this._License_Overhaul = new EntitySet<License_Overhaul>(new Action<License_Overhaul>(this.attach_License_Overhaul), new Action<License_Overhaul>(this.detach_License_Overhaul));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TeamGroupId
		{
			get
			{
				return this._TeamGroupId;
			}
			set
			{
				if ((this._TeamGroupId != value))
				{
					this.OnTeamGroupIdChanging(value);
					this.SendPropertyChanging();
					this._TeamGroupId = value;
					this.SendPropertyChanged("TeamGroupId");
					this.OnTeamGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50)")]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					if (this._Base_WorkArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkAreaIdChanging(value);
					this.SendPropertyChanging();
					this._WorkAreaId = value;
					this.SendPropertyChanged("WorkAreaId");
					this.OnWorkAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartId", DbType="NVarChar(50)")]
		public string DepartId
		{
			get
			{
				return this._DepartId;
			}
			set
			{
				if ((this._DepartId != value))
				{
					if (this._Base_Depart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartIdChanging(value);
					this.SendPropertyChanging();
					this._DepartId = value;
					this.SendPropertyChanged("DepartId");
					this.OnDepartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupCode", DbType="NVarChar(50)")]
		public string TeamGroupCode
		{
			get
			{
				return this._TeamGroupCode;
			}
			set
			{
				if ((this._TeamGroupCode != value))
				{
					this.OnTeamGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._TeamGroupCode = value;
					this.SendPropertyChanged("TeamGroupCode");
					this.OnTeamGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupName", DbType="NVarChar(50)")]
		public string TeamGroupName
		{
			get
			{
				return this._TeamGroupName;
			}
			set
			{
				if ((this._TeamGroupName != value))
				{
					this.OnTeamGroupNameChanging(value);
					this.SendPropertyChanging();
					this._TeamGroupName = value;
					this.SendPropertyChanged("TeamGroupName");
					this.OnTeamGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderIds", DbType="NVarChar(2000)")]
		public string LeaderIds
		{
			get
			{
				return this._LeaderIds;
			}
			set
			{
				if ((this._LeaderIds != value))
				{
					this.OnLeaderIdsChanging(value);
					this.SendPropertyChanging();
					this._LeaderIds = value;
					this.SendPropertyChanged("LeaderIds");
					this.OnLeaderIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderNames", DbType="NVarChar(2000)")]
		public string LeaderNames
		{
			get
			{
				return this._LeaderNames;
			}
			set
			{
				if ((this._LeaderNames != value))
				{
					this.OnLeaderNamesChanging(value);
					this.SendPropertyChanging();
					this._LeaderNames = value;
					this.SendPropertyChanged("LeaderNames");
					this.OnLeaderNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamType", DbType="Char(1)")]
		public string TeamType
		{
			get
			{
				return this._TeamType;
			}
			set
			{
				if ((this._TeamType != value))
				{
					this.OnTeamTypeChanging(value);
					this.SendPropertyChanging();
					this._TeamType = value;
					this.SendPropertyChanged("TeamType");
					this.OnTeamTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TeamGroup_Base_Depart", Storage="_Base_Depart", ThisKey="DepartId", OtherKey="DepartId", IsForeignKey=true)]
		public Base_Depart Base_Depart
		{
			get
			{
				return this._Base_Depart.Entity;
			}
			set
			{
				Base_Depart previousValue = this._Base_Depart.Entity;
				if (((previousValue != value) 
							|| (this._Base_Depart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Depart.Entity = null;
						previousValue.Base_TeamGroup.Remove(this);
					}
					this._Base_Depart.Entity = value;
					if ((value != null))
					{
						value.Base_TeamGroup.Add(this);
						this._DepartId = value.DepartId;
					}
					else
					{
						this._DepartId = default(string);
					}
					this.SendPropertyChanged("Base_Depart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TeamGroup_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.Base_TeamGroup.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.Base_TeamGroup.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TeamGroup_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Base_TeamGroup.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Base_TeamGroup.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TeamGroup_Base_WorkArea", Storage="_Base_WorkArea", ThisKey="WorkAreaId", OtherKey="WorkAreaId", IsForeignKey=true)]
		public Base_WorkArea Base_WorkArea
		{
			get
			{
				return this._Base_WorkArea.Entity;
			}
			set
			{
				Base_WorkArea previousValue = this._Base_WorkArea.Entity;
				if (((previousValue != value) 
							|| (this._Base_WorkArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WorkArea.Entity = null;
						previousValue.Base_TeamGroup.Remove(this);
					}
					this._Base_WorkArea.Entity = value;
					if ((value != null))
					{
						value.Base_TeamGroup.Add(this);
						this._WorkAreaId = value.WorkAreaId;
					}
					else
					{
						this._WorkAreaId = default(string);
					}
					this.SendPropertyChanged("Base_WorkArea");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TeamGroupUser_Base_TeamGroup", Storage="_Base_TeamGroupUser", ThisKey="TeamGroupId", OtherKey="TeamGroupId", DeleteRule="NO ACTION")]
		public EntitySet<Base_TeamGroupUser> Base_TeamGroupUser
		{
			get
			{
				return this._Base_TeamGroupUser;
			}
			set
			{
				this._Base_TeamGroupUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Base_TeamGroup_TeamGroup", Storage="_License_Overhaul", ThisKey="TeamGroupId", OtherKey="TeamGroupId", DeleteRule="NO ACTION")]
		public EntitySet<License_Overhaul> License_Overhaul
		{
			get
			{
				return this._License_Overhaul;
			}
			set
			{
				this._License_Overhaul.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_TeamGroupUser(Base_TeamGroupUser entity)
		{
			this.SendPropertyChanging();
			entity.Base_TeamGroup = this;
		}
		
		private void detach_Base_TeamGroupUser(Base_TeamGroupUser entity)
		{
			this.SendPropertyChanging();
			entity.Base_TeamGroup = null;
		}
		
		private void attach_License_Overhaul(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.Base_TeamGroup = this;
		}
		
		private void detach_License_Overhaul(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.Base_TeamGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_TeamGroupUser")]
	public partial class Base_TeamGroupUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TeamGroupUserId;
		
		private string _TeamGroupId;
		
		private string _UserId;
		
		private string _WorkPostId;
		
		private EntityRef<Base_TeamGroup> _Base_TeamGroup;
		
		private EntityRef<Base_WorkPost> _Base_WorkPost;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeamGroupUserIdChanging(string value);
    partial void OnTeamGroupUserIdChanged();
    partial void OnTeamGroupIdChanging(string value);
    partial void OnTeamGroupIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnWorkPostIdChanging(string value);
    partial void OnWorkPostIdChanged();
    #endregion
		
		public Base_TeamGroupUser()
		{
			this._Base_TeamGroup = default(EntityRef<Base_TeamGroup>);
			this._Base_WorkPost = default(EntityRef<Base_WorkPost>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupUserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TeamGroupUserId
		{
			get
			{
				return this._TeamGroupUserId;
			}
			set
			{
				if ((this._TeamGroupUserId != value))
				{
					this.OnTeamGroupUserIdChanging(value);
					this.SendPropertyChanging();
					this._TeamGroupUserId = value;
					this.SendPropertyChanged("TeamGroupUserId");
					this.OnTeamGroupUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupId", DbType="NVarChar(50)")]
		public string TeamGroupId
		{
			get
			{
				return this._TeamGroupId;
			}
			set
			{
				if ((this._TeamGroupId != value))
				{
					if (this._Base_TeamGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamGroupIdChanging(value);
					this.SendPropertyChanging();
					this._TeamGroupId = value;
					this.SendPropertyChanged("TeamGroupId");
					this.OnTeamGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostId", DbType="NVarChar(50)")]
		public string WorkPostId
		{
			get
			{
				return this._WorkPostId;
			}
			set
			{
				if ((this._WorkPostId != value))
				{
					if (this._Base_WorkPost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkPostIdChanging(value);
					this.SendPropertyChanging();
					this._WorkPostId = value;
					this.SendPropertyChanged("WorkPostId");
					this.OnWorkPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TeamGroupUser_Base_TeamGroup", Storage="_Base_TeamGroup", ThisKey="TeamGroupId", OtherKey="TeamGroupId", IsForeignKey=true)]
		public Base_TeamGroup Base_TeamGroup
		{
			get
			{
				return this._Base_TeamGroup.Entity;
			}
			set
			{
				Base_TeamGroup previousValue = this._Base_TeamGroup.Entity;
				if (((previousValue != value) 
							|| (this._Base_TeamGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_TeamGroup.Entity = null;
						previousValue.Base_TeamGroupUser.Remove(this);
					}
					this._Base_TeamGroup.Entity = value;
					if ((value != null))
					{
						value.Base_TeamGroupUser.Add(this);
						this._TeamGroupId = value.TeamGroupId;
					}
					else
					{
						this._TeamGroupId = default(string);
					}
					this.SendPropertyChanged("Base_TeamGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TeamGroupUser_Base_WorkPost", Storage="_Base_WorkPost", ThisKey="WorkPostId", OtherKey="WorkPostId", IsForeignKey=true)]
		public Base_WorkPost Base_WorkPost
		{
			get
			{
				return this._Base_WorkPost.Entity;
			}
			set
			{
				Base_WorkPost previousValue = this._Base_WorkPost.Entity;
				if (((previousValue != value) 
							|| (this._Base_WorkPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WorkPost.Entity = null;
						previousValue.Base_TeamGroupUser.Remove(this);
					}
					this._Base_WorkPost.Entity = value;
					if ((value != null))
					{
						value.Base_TeamGroupUser.Add(this);
						this._WorkPostId = value.WorkPostId;
					}
					else
					{
						this._WorkPostId = default(string);
					}
					this.SendPropertyChanged("Base_WorkPost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TeamGroupUser_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Base_TeamGroupUser.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Base_TeamGroupUser.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_TrainType")]
	public partial class Base_TrainType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainTypeId;
		
		private string _TrainTypeCode;
		
		private string _TrainTypeName;
		
		private string _Remark;
		
		private EntitySet<Training_TrainRecord> _Training_TrainRecord;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainTypeIdChanging(string value);
    partial void OnTrainTypeIdChanged();
    partial void OnTrainTypeCodeChanging(string value);
    partial void OnTrainTypeCodeChanged();
    partial void OnTrainTypeNameChanging(string value);
    partial void OnTrainTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_TrainType()
		{
			this._Training_TrainRecord = new EntitySet<Training_TrainRecord>(new Action<Training_TrainRecord>(this.attach_Training_TrainRecord), new Action<Training_TrainRecord>(this.detach_Training_TrainRecord));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainTypeId
		{
			get
			{
				return this._TrainTypeId;
			}
			set
			{
				if ((this._TrainTypeId != value))
				{
					this.OnTrainTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TrainTypeId = value;
					this.SendPropertyChanged("TrainTypeId");
					this.OnTrainTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTypeCode", DbType="NVarChar(50)")]
		public string TrainTypeCode
		{
			get
			{
				return this._TrainTypeCode;
			}
			set
			{
				if ((this._TrainTypeCode != value))
				{
					this.OnTrainTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainTypeCode = value;
					this.SendPropertyChanged("TrainTypeCode");
					this.OnTrainTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTypeName", DbType="NVarChar(50)")]
		public string TrainTypeName
		{
			get
			{
				return this._TrainTypeName;
			}
			set
			{
				if ((this._TrainTypeName != value))
				{
					this.OnTrainTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TrainTypeName = value;
					this.SendPropertyChanged("TrainTypeName");
					this.OnTrainTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainRecord_Base_TrainType", Storage="_Training_TrainRecord", ThisKey="TrainTypeId", OtherKey="TrainTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TrainRecord> Training_TrainRecord
		{
			get
			{
				return this._Training_TrainRecord;
			}
			set
			{
				this._Training_TrainRecord.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_TrainRecord(Training_TrainRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_TrainType = this;
		}
		
		private void detach_Training_TrainRecord(Training_TrainRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_TrainType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Unit")]
	public partial class Base_Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UnitId;
		
		private string _UnitCode;
		
		private string _UnitName;
		
		private string _UnitTypeId;
		
		private string _ProjectRange;
		
		private string _Corporate;
		
		private string _Address;
		
		private string _Telephone;
		
		private string _Fax;
		
		private System.Nullable<bool> _IsThisUnit;
		
		private System.Nullable<bool> _IsBuild;
		
		private string _EMail;
		
		private System.Nullable<bool> _IsHide;
		
		private string _ManagerIds;
		
		private string _ManagerNames;
		
		private EntitySet<Base_TeamGroup> _Base_TeamGroup;
		
		private EntityRef<Base_UnitType> _Base_UnitType;
		
		private EntitySet<Base_WorkPost> _Base_WorkPost;
		
		private EntitySet<Hazard_HiddenHazard> _Hazard_HiddenHazard;
		
		private EntitySet<Hazard_RiskList> _Hazard_RiskList;
		
		private EntitySet<License_BlindPlate> _License_BlindPlate;
		
		private EntitySet<License_BlindPlate> _Unit;
		
		private EntitySet<License_BreakGround> _License_BreakGround;
		
		private EntitySet<License_Electricity> _License_Electricity;
		
		private EntitySet<License_Electricity> _License_Electricity_Base_Unit_JobUnitId;
		
		private EntitySet<License_FireWork> _License_FireWork;
		
		private EntitySet<License_FireWork> _License_FireWork_Base_Unit1;
		
		private EntitySet<License_HeightWork> _License_HeightWork;
		
		private EntitySet<License_Interlocking> _License_Interlocking;
		
		private EntitySet<License_Interlocking> _License_Interlocking_Base_Unit_PerformUnit;
		
		private EntitySet<License_LimitedSpace> _License_LimitedSpace;
		
		private EntitySet<License_LimitedSpace> _License_LimitedSpace_Base_Unit_JobUnitId;
		
		private EntitySet<License_LimitedSpace> _License_LimitedSpace_Base_Unit1;
		
		private EntitySet<License_OpenCircuit> _License_OpenCircuit;
		
		private EntitySet<License_OpenCircuit> _License_OpenCircuit_Base_Unit1;
		
		private EntitySet<License_Overhaul> _License_Overhaul;
		
		private EntitySet<QualityAudit_EquipmentQuality> _QualityAudit_EquipmentQuality;
		
		private EntitySet<QualityAudit_PersonQuality> _QualityAudit_PersonQuality;
		
		private EntitySet<QualityAudit_SubUnitQuality> _QualityAudit_SubUnitQuality;
		
		private EntitySet<Sys_User> _Sys_User;
		
		private EntitySet<Technique_HAZOP> _Technique_HAZOP;
		
		private EntitySet<Technique_SpecialScheme> _Technique_SpecialScheme;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUnitCodeChanging(string value);
    partial void OnUnitCodeChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnUnitTypeIdChanging(string value);
    partial void OnUnitTypeIdChanged();
    partial void OnProjectRangeChanging(string value);
    partial void OnProjectRangeChanged();
    partial void OnCorporateChanging(string value);
    partial void OnCorporateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnIsThisUnitChanging(System.Nullable<bool> value);
    partial void OnIsThisUnitChanged();
    partial void OnIsBuildChanging(System.Nullable<bool> value);
    partial void OnIsBuildChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnIsHideChanging(System.Nullable<bool> value);
    partial void OnIsHideChanged();
    partial void OnManagerIdsChanging(string value);
    partial void OnManagerIdsChanged();
    partial void OnManagerNamesChanging(string value);
    partial void OnManagerNamesChanged();
    #endregion
		
		public Base_Unit()
		{
			this._Base_TeamGroup = new EntitySet<Base_TeamGroup>(new Action<Base_TeamGroup>(this.attach_Base_TeamGroup), new Action<Base_TeamGroup>(this.detach_Base_TeamGroup));
			this._Base_UnitType = default(EntityRef<Base_UnitType>);
			this._Base_WorkPost = new EntitySet<Base_WorkPost>(new Action<Base_WorkPost>(this.attach_Base_WorkPost), new Action<Base_WorkPost>(this.detach_Base_WorkPost));
			this._Hazard_HiddenHazard = new EntitySet<Hazard_HiddenHazard>(new Action<Hazard_HiddenHazard>(this.attach_Hazard_HiddenHazard), new Action<Hazard_HiddenHazard>(this.detach_Hazard_HiddenHazard));
			this._Hazard_RiskList = new EntitySet<Hazard_RiskList>(new Action<Hazard_RiskList>(this.attach_Hazard_RiskList), new Action<Hazard_RiskList>(this.detach_Hazard_RiskList));
			this._License_BlindPlate = new EntitySet<License_BlindPlate>(new Action<License_BlindPlate>(this.attach_License_BlindPlate), new Action<License_BlindPlate>(this.detach_License_BlindPlate));
			this._Unit = new EntitySet<License_BlindPlate>(new Action<License_BlindPlate>(this.attach_Unit), new Action<License_BlindPlate>(this.detach_Unit));
			this._License_BreakGround = new EntitySet<License_BreakGround>(new Action<License_BreakGround>(this.attach_License_BreakGround), new Action<License_BreakGround>(this.detach_License_BreakGround));
			this._License_Electricity = new EntitySet<License_Electricity>(new Action<License_Electricity>(this.attach_License_Electricity), new Action<License_Electricity>(this.detach_License_Electricity));
			this._License_Electricity_Base_Unit_JobUnitId = new EntitySet<License_Electricity>(new Action<License_Electricity>(this.attach_License_Electricity_Base_Unit_JobUnitId), new Action<License_Electricity>(this.detach_License_Electricity_Base_Unit_JobUnitId));
			this._License_FireWork = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork), new Action<License_FireWork>(this.detach_License_FireWork));
			this._License_FireWork_Base_Unit1 = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork_Base_Unit1), new Action<License_FireWork>(this.detach_License_FireWork_Base_Unit1));
			this._License_HeightWork = new EntitySet<License_HeightWork>(new Action<License_HeightWork>(this.attach_License_HeightWork), new Action<License_HeightWork>(this.detach_License_HeightWork));
			this._License_Interlocking = new EntitySet<License_Interlocking>(new Action<License_Interlocking>(this.attach_License_Interlocking), new Action<License_Interlocking>(this.detach_License_Interlocking));
			this._License_Interlocking_Base_Unit_PerformUnit = new EntitySet<License_Interlocking>(new Action<License_Interlocking>(this.attach_License_Interlocking_Base_Unit_PerformUnit), new Action<License_Interlocking>(this.detach_License_Interlocking_Base_Unit_PerformUnit));
			this._License_LimitedSpace = new EntitySet<License_LimitedSpace>(new Action<License_LimitedSpace>(this.attach_License_LimitedSpace), new Action<License_LimitedSpace>(this.detach_License_LimitedSpace));
			this._License_LimitedSpace_Base_Unit_JobUnitId = new EntitySet<License_LimitedSpace>(new Action<License_LimitedSpace>(this.attach_License_LimitedSpace_Base_Unit_JobUnitId), new Action<License_LimitedSpace>(this.detach_License_LimitedSpace_Base_Unit_JobUnitId));
			this._License_LimitedSpace_Base_Unit1 = new EntitySet<License_LimitedSpace>(new Action<License_LimitedSpace>(this.attach_License_LimitedSpace_Base_Unit1), new Action<License_LimitedSpace>(this.detach_License_LimitedSpace_Base_Unit1));
			this._License_OpenCircuit = new EntitySet<License_OpenCircuit>(new Action<License_OpenCircuit>(this.attach_License_OpenCircuit), new Action<License_OpenCircuit>(this.detach_License_OpenCircuit));
			this._License_OpenCircuit_Base_Unit1 = new EntitySet<License_OpenCircuit>(new Action<License_OpenCircuit>(this.attach_License_OpenCircuit_Base_Unit1), new Action<License_OpenCircuit>(this.detach_License_OpenCircuit_Base_Unit1));
			this._License_Overhaul = new EntitySet<License_Overhaul>(new Action<License_Overhaul>(this.attach_License_Overhaul), new Action<License_Overhaul>(this.detach_License_Overhaul));
			this._QualityAudit_EquipmentQuality = new EntitySet<QualityAudit_EquipmentQuality>(new Action<QualityAudit_EquipmentQuality>(this.attach_QualityAudit_EquipmentQuality), new Action<QualityAudit_EquipmentQuality>(this.detach_QualityAudit_EquipmentQuality));
			this._QualityAudit_PersonQuality = new EntitySet<QualityAudit_PersonQuality>(new Action<QualityAudit_PersonQuality>(this.attach_QualityAudit_PersonQuality), new Action<QualityAudit_PersonQuality>(this.detach_QualityAudit_PersonQuality));
			this._QualityAudit_SubUnitQuality = new EntitySet<QualityAudit_SubUnitQuality>(new Action<QualityAudit_SubUnitQuality>(this.attach_QualityAudit_SubUnitQuality), new Action<QualityAudit_SubUnitQuality>(this.detach_QualityAudit_SubUnitQuality));
			this._Sys_User = new EntitySet<Sys_User>(new Action<Sys_User>(this.attach_Sys_User), new Action<Sys_User>(this.detach_Sys_User));
			this._Technique_HAZOP = new EntitySet<Technique_HAZOP>(new Action<Technique_HAZOP>(this.attach_Technique_HAZOP), new Action<Technique_HAZOP>(this.detach_Technique_HAZOP));
			this._Technique_SpecialScheme = new EntitySet<Technique_SpecialScheme>(new Action<Technique_SpecialScheme>(this.attach_Technique_SpecialScheme), new Action<Technique_SpecialScheme>(this.detach_Technique_SpecialScheme));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this.OnUnitCodeChanging(value);
					this.SendPropertyChanging();
					this._UnitCode = value;
					this.SendPropertyChanged("UnitCode");
					this.OnUnitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitTypeId", DbType="NVarChar(50)")]
		public string UnitTypeId
		{
			get
			{
				return this._UnitTypeId;
			}
			set
			{
				if ((this._UnitTypeId != value))
				{
					if (this._Base_UnitType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UnitTypeId = value;
					this.SendPropertyChanged("UnitTypeId");
					this.OnUnitTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectRange", DbType="NVarChar(1000)")]
		public string ProjectRange
		{
			get
			{
				return this._ProjectRange;
			}
			set
			{
				if ((this._ProjectRange != value))
				{
					this.OnProjectRangeChanging(value);
					this.SendPropertyChanging();
					this._ProjectRange = value;
					this.SendPropertyChanged("ProjectRange");
					this.OnProjectRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corporate", DbType="NVarChar(20)")]
		public string Corporate
		{
			get
			{
				return this._Corporate;
			}
			set
			{
				if ((this._Corporate != value))
				{
					this.OnCorporateChanging(value);
					this.SendPropertyChanging();
					this._Corporate = value;
					this.SendPropertyChanged("Corporate");
					this.OnCorporateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsThisUnit", DbType="Bit")]
		public System.Nullable<bool> IsThisUnit
		{
			get
			{
				return this._IsThisUnit;
			}
			set
			{
				if ((this._IsThisUnit != value))
				{
					this.OnIsThisUnitChanging(value);
					this.SendPropertyChanging();
					this._IsThisUnit = value;
					this.SendPropertyChanged("IsThisUnit");
					this.OnIsThisUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this.OnIsBuildChanging(value);
					this.SendPropertyChanging();
					this._IsBuild = value;
					this.SendPropertyChanged("IsBuild");
					this.OnIsBuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(200)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHide", DbType="Bit")]
		public System.Nullable<bool> IsHide
		{
			get
			{
				return this._IsHide;
			}
			set
			{
				if ((this._IsHide != value))
				{
					this.OnIsHideChanging(value);
					this.SendPropertyChanging();
					this._IsHide = value;
					this.SendPropertyChanged("IsHide");
					this.OnIsHideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerIds", DbType="NVarChar(500)")]
		public string ManagerIds
		{
			get
			{
				return this._ManagerIds;
			}
			set
			{
				if ((this._ManagerIds != value))
				{
					this.OnManagerIdsChanging(value);
					this.SendPropertyChanging();
					this._ManagerIds = value;
					this.SendPropertyChanged("ManagerIds");
					this.OnManagerIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerNames", DbType="NVarChar(500)")]
		public string ManagerNames
		{
			get
			{
				return this._ManagerNames;
			}
			set
			{
				if ((this._ManagerNames != value))
				{
					this.OnManagerNamesChanging(value);
					this.SendPropertyChanging();
					this._ManagerNames = value;
					this.SendPropertyChanged("ManagerNames");
					this.OnManagerNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TeamGroup_Base_Unit", Storage="_Base_TeamGroup", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Base_TeamGroup> Base_TeamGroup
		{
			get
			{
				return this._Base_TeamGroup;
			}
			set
			{
				this._Base_TeamGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Unit_Base_UnitType", Storage="_Base_UnitType", ThisKey="UnitTypeId", OtherKey="UnitTypeId", IsForeignKey=true)]
		public Base_UnitType Base_UnitType
		{
			get
			{
				return this._Base_UnitType.Entity;
			}
			set
			{
				Base_UnitType previousValue = this._Base_UnitType.Entity;
				if (((previousValue != value) 
							|| (this._Base_UnitType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_UnitType.Entity = null;
						previousValue.Base_Unit.Remove(this);
					}
					this._Base_UnitType.Entity = value;
					if ((value != null))
					{
						value.Base_Unit.Add(this);
						this._UnitTypeId = value.UnitTypeId;
					}
					else
					{
						this._UnitTypeId = default(string);
					}
					this.SendPropertyChanged("Base_UnitType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_WorkPost_Base_Unit", Storage="_Base_WorkPost", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Base_WorkPost> Base_WorkPost
		{
			get
			{
				return this._Base_WorkPost;
			}
			set
			{
				this._Base_WorkPost.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Base_Unit", Storage="_Hazard_HiddenHazard", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_HiddenHazard> Hazard_HiddenHazard
		{
			get
			{
				return this._Hazard_HiddenHazard;
			}
			set
			{
				this._Hazard_HiddenHazard.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskList_Base_Unit", Storage="_Hazard_RiskList", ThisKey="UnitId", OtherKey="ControlUnitId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_RiskList> Hazard_RiskList
		{
			get
			{
				return this._Hazard_RiskList;
			}
			set
			{
				this._Hazard_RiskList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Base_Unit", Storage="_License_BlindPlate", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<License_BlindPlate> License_BlindPlate
		{
			get
			{
				return this._License_BlindPlate;
			}
			set
			{
				this._License_BlindPlate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Base_Unit_JobUnitId", Storage="_Unit", ThisKey="UnitId", OtherKey="JobUnitId", DeleteRule="NO ACTION")]
		public EntitySet<License_BlindPlate> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				this._Unit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Base_Unit", Storage="_License_BreakGround", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<License_BreakGround> License_BreakGround
		{
			get
			{
				return this._License_BreakGround;
			}
			set
			{
				this._License_BreakGround.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Base_Unit", Storage="_License_Electricity", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<License_Electricity> License_Electricity
		{
			get
			{
				return this._License_Electricity;
			}
			set
			{
				this._License_Electricity.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Base_Unit_JobUnitId", Storage="_License_Electricity_Base_Unit_JobUnitId", ThisKey="UnitId", OtherKey="JobUnitId", DeleteRule="NO ACTION")]
		public EntitySet<License_Electricity> License_Electricity_Base_Unit_JobUnitId
		{
			get
			{
				return this._License_Electricity_Base_Unit_JobUnitId;
			}
			set
			{
				this._License_Electricity_Base_Unit_JobUnitId.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Base_Unit", Storage="_License_FireWork", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork
		{
			get
			{
				return this._License_FireWork;
			}
			set
			{
				this._License_FireWork.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Base_Unit1", Storage="_License_FireWork_Base_Unit1", ThisKey="UnitId", OtherKey="ApplyUnitId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork_Base_Unit1
		{
			get
			{
				return this._License_FireWork_Base_Unit1;
			}
			set
			{
				this._License_FireWork_Base_Unit1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Base_Unit", Storage="_License_HeightWork", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<License_HeightWork> License_HeightWork
		{
			get
			{
				return this._License_HeightWork;
			}
			set
			{
				this._License_HeightWork.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Base_Unit_ApplyUnit", Storage="_License_Interlocking", ThisKey="UnitId", OtherKey="ApplyUnitId", DeleteRule="NO ACTION")]
		public EntitySet<License_Interlocking> License_Interlocking
		{
			get
			{
				return this._License_Interlocking;
			}
			set
			{
				this._License_Interlocking.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Base_Unit_PerformUnit", Storage="_License_Interlocking_Base_Unit_PerformUnit", ThisKey="UnitId", OtherKey="PerformUnitId", DeleteRule="NO ACTION")]
		public EntitySet<License_Interlocking> License_Interlocking_Base_Unit_PerformUnit
		{
			get
			{
				return this._License_Interlocking_Base_Unit_PerformUnit;
			}
			set
			{
				this._License_Interlocking_Base_Unit_PerformUnit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Base_Unit", Storage="_License_LimitedSpace", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpace> License_LimitedSpace
		{
			get
			{
				return this._License_LimitedSpace;
			}
			set
			{
				this._License_LimitedSpace.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Base_Unit_JobUnitId", Storage="_License_LimitedSpace_Base_Unit_JobUnitId", ThisKey="UnitId", OtherKey="JobUnitId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpace> License_LimitedSpace_Base_Unit_JobUnitId
		{
			get
			{
				return this._License_LimitedSpace_Base_Unit_JobUnitId;
			}
			set
			{
				this._License_LimitedSpace_Base_Unit_JobUnitId.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Base_Unit1", Storage="_License_LimitedSpace_Base_Unit1", ThisKey="UnitId", OtherKey="LimitedSpaceUnitId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpace> License_LimitedSpace_Base_Unit1
		{
			get
			{
				return this._License_LimitedSpace_Base_Unit1;
			}
			set
			{
				this._License_LimitedSpace_Base_Unit1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Base_Unit", Storage="_License_OpenCircuit", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<License_OpenCircuit> License_OpenCircuit
		{
			get
			{
				return this._License_OpenCircuit;
			}
			set
			{
				this._License_OpenCircuit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Base_Unit1", Storage="_License_OpenCircuit_Base_Unit1", ThisKey="UnitId", OtherKey="JobUnitId", DeleteRule="NO ACTION")]
		public EntitySet<License_OpenCircuit> License_OpenCircuit_Base_Unit1
		{
			get
			{
				return this._License_OpenCircuit_Base_Unit1;
			}
			set
			{
				this._License_OpenCircuit_Base_Unit1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Base_Unit", Storage="_License_Overhaul", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<License_Overhaul> License_Overhaul
		{
			get
			{
				return this._License_Overhaul;
			}
			set
			{
				this._License_Overhaul.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentQuality_Base_Unit", Storage="_QualityAudit_EquipmentQuality", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_EquipmentQuality> QualityAudit_EquipmentQuality
		{
			get
			{
				return this._QualityAudit_EquipmentQuality;
			}
			set
			{
				this._QualityAudit_EquipmentQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Base_Unit", Storage="_QualityAudit_PersonQuality", ThisKey="UnitId", OtherKey="SendUnit", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_PersonQuality> QualityAudit_PersonQuality
		{
			get
			{
				return this._QualityAudit_PersonQuality;
			}
			set
			{
				this._QualityAudit_PersonQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SubUnitQuality_Base_Unit", Storage="_QualityAudit_SubUnitQuality", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_SubUnitQuality> QualityAudit_SubUnitQuality
		{
			get
			{
				return this._QualityAudit_SubUnitQuality;
			}
			set
			{
				this._QualityAudit_SubUnitQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Base_Unit", Storage="_Sys_User", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_User> Sys_User
		{
			get
			{
				return this._Sys_User;
			}
			set
			{
				this._Sys_User.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_HAZOP_Base_Unit", Storage="_Technique_HAZOP", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Technique_HAZOP> Technique_HAZOP
		{
			get
			{
				return this._Technique_HAZOP;
			}
			set
			{
				this._Technique_HAZOP.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_SpecialScheme_Base_Unit", Storage="_Technique_SpecialScheme", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Technique_SpecialScheme> Technique_SpecialScheme
		{
			get
			{
				return this._Technique_SpecialScheme;
			}
			set
			{
				this._Technique_SpecialScheme.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_TeamGroup(Base_TeamGroup entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Base_TeamGroup(Base_TeamGroup entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Base_WorkPost(Base_WorkPost entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Base_WorkPost(Base_WorkPost entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Hazard_HiddenHazard(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Hazard_HiddenHazard(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Hazard_RiskList(Hazard_RiskList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Hazard_RiskList(Hazard_RiskList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_License_BlindPlate(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_License_BlindPlate(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Unit(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.JobUnit = this;
		}
		
		private void detach_Unit(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.JobUnit = null;
		}
		
		private void attach_License_BreakGround(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_License_BreakGround(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_License_Electricity(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_License_Electricity(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_License_Electricity_Base_Unit_JobUnitId(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.JobUnit = this;
		}
		
		private void detach_License_Electricity_Base_Unit_JobUnitId(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.JobUnit = null;
		}
		
		private void attach_License_FireWork(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_License_FireWork(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_License_FireWork_Base_Unit1(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.ApplyUnit = this;
		}
		
		private void detach_License_FireWork_Base_Unit1(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.ApplyUnit = null;
		}
		
		private void attach_License_HeightWork(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_License_HeightWork(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_License_Interlocking(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_License_Interlocking(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_License_Interlocking_Base_Unit_PerformUnit(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.PerformUnit = this;
		}
		
		private void detach_License_Interlocking_Base_Unit_PerformUnit(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.PerformUnit = null;
		}
		
		private void attach_License_LimitedSpace(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_License_LimitedSpace(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_License_LimitedSpace_Base_Unit_JobUnitId(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.JobUnit = this;
		}
		
		private void detach_License_LimitedSpace_Base_Unit_JobUnitId(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.JobUnit = null;
		}
		
		private void attach_License_LimitedSpace_Base_Unit1(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.LimitedSpaceUnit = this;
		}
		
		private void detach_License_LimitedSpace_Base_Unit1(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.LimitedSpaceUnit = null;
		}
		
		private void attach_License_OpenCircuit(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_License_OpenCircuit(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_License_OpenCircuit_Base_Unit1(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.JobUnit = this;
		}
		
		private void detach_License_OpenCircuit_Base_Unit1(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.JobUnit = null;
		}
		
		private void attach_License_Overhaul(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_License_Overhaul(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_QualityAudit_EquipmentQuality(QualityAudit_EquipmentQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_QualityAudit_EquipmentQuality(QualityAudit_EquipmentQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_QualityAudit_SubUnitQuality(QualityAudit_SubUnitQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_QualityAudit_SubUnitQuality(QualityAudit_SubUnitQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Technique_HAZOP(Technique_HAZOP entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Technique_HAZOP(Technique_HAZOP entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Technique_SpecialScheme(Technique_SpecialScheme entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Technique_SpecialScheme(Technique_SpecialScheme entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_UnitType")]
	public partial class Base_UnitType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UnitTypeId;
		
		private string _UnitTypeCode;
		
		private string _UnitTypeName;
		
		private string _Remark;
		
		private EntitySet<Base_Unit> _Base_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitTypeIdChanging(string value);
    partial void OnUnitTypeIdChanged();
    partial void OnUnitTypeCodeChanging(string value);
    partial void OnUnitTypeCodeChanged();
    partial void OnUnitTypeNameChanging(string value);
    partial void OnUnitTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_UnitType()
		{
			this._Base_Unit = new EntitySet<Base_Unit>(new Action<Base_Unit>(this.attach_Base_Unit), new Action<Base_Unit>(this.detach_Base_Unit));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UnitTypeId
		{
			get
			{
				return this._UnitTypeId;
			}
			set
			{
				if ((this._UnitTypeId != value))
				{
					this.OnUnitTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UnitTypeId = value;
					this.SendPropertyChanged("UnitTypeId");
					this.OnUnitTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitTypeCode", DbType="NVarChar(50)")]
		public string UnitTypeCode
		{
			get
			{
				return this._UnitTypeCode;
			}
			set
			{
				if ((this._UnitTypeCode != value))
				{
					this.OnUnitTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._UnitTypeCode = value;
					this.SendPropertyChanged("UnitTypeCode");
					this.OnUnitTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitTypeName
		{
			get
			{
				return this._UnitTypeName;
			}
			set
			{
				if ((this._UnitTypeName != value))
				{
					this.OnUnitTypeNameChanging(value);
					this.SendPropertyChanging();
					this._UnitTypeName = value;
					this.SendPropertyChanged("UnitTypeName");
					this.OnUnitTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Unit_Base_UnitType", Storage="_Base_Unit", ThisKey="UnitTypeId", OtherKey="UnitTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Base_Unit> Base_Unit
		{
			get
			{
				return this._Base_Unit;
			}
			set
			{
				this._Base_Unit.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_Unit(Base_Unit entity)
		{
			this.SendPropertyChanging();
			entity.Base_UnitType = this;
		}
		
		private void detach_Base_Unit(Base_Unit entity)
		{
			this.SendPropertyChanging();
			entity.Base_UnitType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_WorkArea")]
	public partial class Base_WorkArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WorkAreaId;
		
		private string _InstallationId;
		
		private string _WorkAreaCode;
		
		private string _WorkAreaName;
		
		private System.Nullable<bool> _IsUsed;
		
		private string _Remark;
		
		private EntitySet<Base_Euipment> _Base_Euipment;
		
		private EntitySet<Base_JobActivity> _Base_JobActivity;
		
		private EntitySet<Base_JobEnvironment> _Base_JobEnvironment;
		
		private EntitySet<Base_TeamGroup> _Base_TeamGroup;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkAreaIdChanging(string value);
    partial void OnWorkAreaIdChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnWorkAreaCodeChanging(string value);
    partial void OnWorkAreaCodeChanged();
    partial void OnWorkAreaNameChanging(string value);
    partial void OnWorkAreaNameChanged();
    partial void OnIsUsedChanging(System.Nullable<bool> value);
    partial void OnIsUsedChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_WorkArea()
		{
			this._Base_Euipment = new EntitySet<Base_Euipment>(new Action<Base_Euipment>(this.attach_Base_Euipment), new Action<Base_Euipment>(this.detach_Base_Euipment));
			this._Base_JobActivity = new EntitySet<Base_JobActivity>(new Action<Base_JobActivity>(this.attach_Base_JobActivity), new Action<Base_JobActivity>(this.detach_Base_JobActivity));
			this._Base_JobEnvironment = new EntitySet<Base_JobEnvironment>(new Action<Base_JobEnvironment>(this.attach_Base_JobEnvironment), new Action<Base_JobEnvironment>(this.detach_Base_JobEnvironment));
			this._Base_TeamGroup = new EntitySet<Base_TeamGroup>(new Action<Base_TeamGroup>(this.attach_Base_TeamGroup), new Action<Base_TeamGroup>(this.detach_Base_TeamGroup));
			this._Base_Installation = default(EntityRef<Base_Installation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					this.OnWorkAreaIdChanging(value);
					this.SendPropertyChanging();
					this._WorkAreaId = value;
					this.SendPropertyChanged("WorkAreaId");
					this.OnWorkAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkAreaCode
		{
			get
			{
				return this._WorkAreaCode;
			}
			set
			{
				if ((this._WorkAreaCode != value))
				{
					this.OnWorkAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._WorkAreaCode = value;
					this.SendPropertyChanged("WorkAreaCode");
					this.OnWorkAreaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkAreaName
		{
			get
			{
				return this._WorkAreaName;
			}
			set
			{
				if ((this._WorkAreaName != value))
				{
					this.OnWorkAreaNameChanging(value);
					this.SendPropertyChanging();
					this._WorkAreaName = value;
					this.SendPropertyChanged("WorkAreaName");
					this.OnWorkAreaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Euipment_Base_WorkArea", Storage="_Base_Euipment", ThisKey="WorkAreaId", OtherKey="WorkAreaId", DeleteRule="NO ACTION")]
		public EntitySet<Base_Euipment> Base_Euipment
		{
			get
			{
				return this._Base_Euipment;
			}
			set
			{
				this._Base_Euipment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_JobActivity_Base_WorkArea", Storage="_Base_JobActivity", ThisKey="WorkAreaId", OtherKey="WorkAreaId", DeleteRule="NO ACTION")]
		public EntitySet<Base_JobActivity> Base_JobActivity
		{
			get
			{
				return this._Base_JobActivity;
			}
			set
			{
				this._Base_JobActivity.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_JobEnvironment_Base_WorkArea", Storage="_Base_JobEnvironment", ThisKey="WorkAreaId", OtherKey="WorkAreaId", DeleteRule="NO ACTION")]
		public EntitySet<Base_JobEnvironment> Base_JobEnvironment
		{
			get
			{
				return this._Base_JobEnvironment;
			}
			set
			{
				this._Base_JobEnvironment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TeamGroup_Base_WorkArea", Storage="_Base_TeamGroup", ThisKey="WorkAreaId", OtherKey="WorkAreaId", DeleteRule="NO ACTION")]
		public EntitySet<Base_TeamGroup> Base_TeamGroup
		{
			get
			{
				return this._Base_TeamGroup;
			}
			set
			{
				this._Base_TeamGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_WorkArea_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.Base_WorkArea.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.Base_WorkArea.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_Euipment(Base_Euipment entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkArea = this;
		}
		
		private void detach_Base_Euipment(Base_Euipment entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkArea = null;
		}
		
		private void attach_Base_JobActivity(Base_JobActivity entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkArea = this;
		}
		
		private void detach_Base_JobActivity(Base_JobActivity entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkArea = null;
		}
		
		private void attach_Base_JobEnvironment(Base_JobEnvironment entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkArea = this;
		}
		
		private void detach_Base_JobEnvironment(Base_JobEnvironment entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkArea = null;
		}
		
		private void attach_Base_TeamGroup(Base_TeamGroup entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkArea = this;
		}
		
		private void detach_Base_TeamGroup(Base_TeamGroup entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkArea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_WorkPost")]
	public partial class Base_WorkPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WorkPostId;
		
		private string _SupWorkPostId;
		
		private string _InstallationId;
		
		private string _UnitId;
		
		private string _DepartId;
		
		private string _WorkPostName;
		
		private string _WorkPostCode;
		
		private string _Remark;
		
		private string _PostType;
		
		private System.Nullable<bool> _IsHsse;
		
		private System.Nullable<bool> _IsUsed;
		
		private System.Nullable<bool> _IsAuditFlow;
		
		private string _RiskLevelId;
		
		private System.Nullable<int> _Frequency;
		
		private string _RiskLevelName;
		
		private System.Nullable<bool> _IsShowChart;
		
		private EntitySet<Base_TeamGroupUser> _Base_TeamGroupUser;
		
		private EntityRef<Base_Depart> _Base_Depart;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkPostIdChanging(string value);
    partial void OnWorkPostIdChanged();
    partial void OnSupWorkPostIdChanging(string value);
    partial void OnSupWorkPostIdChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnDepartIdChanging(string value);
    partial void OnDepartIdChanged();
    partial void OnWorkPostNameChanging(string value);
    partial void OnWorkPostNameChanged();
    partial void OnWorkPostCodeChanging(string value);
    partial void OnWorkPostCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnPostTypeChanging(string value);
    partial void OnPostTypeChanged();
    partial void OnIsHsseChanging(System.Nullable<bool> value);
    partial void OnIsHsseChanged();
    partial void OnIsUsedChanging(System.Nullable<bool> value);
    partial void OnIsUsedChanged();
    partial void OnIsAuditFlowChanging(System.Nullable<bool> value);
    partial void OnIsAuditFlowChanged();
    partial void OnRiskLevelIdChanging(string value);
    partial void OnRiskLevelIdChanged();
    partial void OnFrequencyChanging(System.Nullable<int> value);
    partial void OnFrequencyChanged();
    partial void OnRiskLevelNameChanging(string value);
    partial void OnRiskLevelNameChanged();
    partial void OnIsShowChartChanging(System.Nullable<bool> value);
    partial void OnIsShowChartChanged();
    #endregion
		
		public Base_WorkPost()
		{
			this._Base_TeamGroupUser = new EntitySet<Base_TeamGroupUser>(new Action<Base_TeamGroupUser>(this.attach_Base_TeamGroupUser), new Action<Base_TeamGroupUser>(this.detach_Base_TeamGroupUser));
			this._Base_Depart = default(EntityRef<Base_Depart>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Base_Installation = default(EntityRef<Base_Installation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WorkPostId
		{
			get
			{
				return this._WorkPostId;
			}
			set
			{
				if ((this._WorkPostId != value))
				{
					this.OnWorkPostIdChanging(value);
					this.SendPropertyChanging();
					this._WorkPostId = value;
					this.SendPropertyChanged("WorkPostId");
					this.OnWorkPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupWorkPostId", DbType="NVarChar(50)")]
		public string SupWorkPostId
		{
			get
			{
				return this._SupWorkPostId;
			}
			set
			{
				if ((this._SupWorkPostId != value))
				{
					this.OnSupWorkPostIdChanging(value);
					this.SendPropertyChanging();
					this._SupWorkPostId = value;
					this.SendPropertyChanged("SupWorkPostId");
					this.OnSupWorkPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartId", DbType="NVarChar(50)")]
		public string DepartId
		{
			get
			{
				return this._DepartId;
			}
			set
			{
				if ((this._DepartId != value))
				{
					if (this._Base_Depart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartIdChanging(value);
					this.SendPropertyChanging();
					this._DepartId = value;
					this.SendPropertyChanged("DepartId");
					this.OnDepartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostName", DbType="NVarChar(100)")]
		public string WorkPostName
		{
			get
			{
				return this._WorkPostName;
			}
			set
			{
				if ((this._WorkPostName != value))
				{
					this.OnWorkPostNameChanging(value);
					this.SendPropertyChanging();
					this._WorkPostName = value;
					this.SendPropertyChanged("WorkPostName");
					this.OnWorkPostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostCode", DbType="NVarChar(50)")]
		public string WorkPostCode
		{
			get
			{
				return this._WorkPostCode;
			}
			set
			{
				if ((this._WorkPostCode != value))
				{
					this.OnWorkPostCodeChanging(value);
					this.SendPropertyChanging();
					this._WorkPostCode = value;
					this.SendPropertyChanged("WorkPostCode");
					this.OnWorkPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostType", DbType="NChar(1)")]
		public string PostType
		{
			get
			{
				return this._PostType;
			}
			set
			{
				if ((this._PostType != value))
				{
					this.OnPostTypeChanging(value);
					this.SendPropertyChanging();
					this._PostType = value;
					this.SendPropertyChanged("PostType");
					this.OnPostTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHsse", DbType="Bit")]
		public System.Nullable<bool> IsHsse
		{
			get
			{
				return this._IsHsse;
			}
			set
			{
				if ((this._IsHsse != value))
				{
					this.OnIsHsseChanging(value);
					this.SendPropertyChanging();
					this._IsHsse = value;
					this.SendPropertyChanged("IsHsse");
					this.OnIsHsseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAuditFlow", DbType="Bit")]
		public System.Nullable<bool> IsAuditFlow
		{
			get
			{
				return this._IsAuditFlow;
			}
			set
			{
				if ((this._IsAuditFlow != value))
				{
					this.OnIsAuditFlowChanging(value);
					this.SendPropertyChanging();
					this._IsAuditFlow = value;
					this.SendPropertyChanged("IsAuditFlow");
					this.OnIsAuditFlowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevelId", DbType="NVarChar(200)")]
		public string RiskLevelId
		{
			get
			{
				return this._RiskLevelId;
			}
			set
			{
				if ((this._RiskLevelId != value))
				{
					this.OnRiskLevelIdChanging(value);
					this.SendPropertyChanging();
					this._RiskLevelId = value;
					this.SendPropertyChanged("RiskLevelId");
					this.OnRiskLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Int")]
		public System.Nullable<int> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevelName", DbType="NVarChar(200)")]
		public string RiskLevelName
		{
			get
			{
				return this._RiskLevelName;
			}
			set
			{
				if ((this._RiskLevelName != value))
				{
					this.OnRiskLevelNameChanging(value);
					this.SendPropertyChanging();
					this._RiskLevelName = value;
					this.SendPropertyChanged("RiskLevelName");
					this.OnRiskLevelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShowChart", DbType="Bit")]
		public System.Nullable<bool> IsShowChart
		{
			get
			{
				return this._IsShowChart;
			}
			set
			{
				if ((this._IsShowChart != value))
				{
					this.OnIsShowChartChanging(value);
					this.SendPropertyChanging();
					this._IsShowChart = value;
					this.SendPropertyChanged("IsShowChart");
					this.OnIsShowChartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TeamGroupUser_Base_WorkPost", Storage="_Base_TeamGroupUser", ThisKey="WorkPostId", OtherKey="WorkPostId", DeleteRule="NO ACTION")]
		public EntitySet<Base_TeamGroupUser> Base_TeamGroupUser
		{
			get
			{
				return this._Base_TeamGroupUser;
			}
			set
			{
				this._Base_TeamGroupUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_WorkPost_Base_Depart", Storage="_Base_Depart", ThisKey="DepartId", OtherKey="DepartId", IsForeignKey=true)]
		public Base_Depart Base_Depart
		{
			get
			{
				return this._Base_Depart.Entity;
			}
			set
			{
				Base_Depart previousValue = this._Base_Depart.Entity;
				if (((previousValue != value) 
							|| (this._Base_Depart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Depart.Entity = null;
						previousValue.Base_WorkPost.Remove(this);
					}
					this._Base_Depart.Entity = value;
					if ((value != null))
					{
						value.Base_WorkPost.Add(this);
						this._DepartId = value.DepartId;
					}
					else
					{
						this._DepartId = default(string);
					}
					this.SendPropertyChanged("Base_Depart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_WorkPost_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Base_WorkPost.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Base_WorkPost.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_WorkPost_Base_WorkPost", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.Base_WorkPost.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.Base_WorkPost.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_TeamGroupUser(Base_TeamGroupUser entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkPost = this;
		}
		
		private void detach_Base_TeamGroupUser(Base_TeamGroupUser entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkPost = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EduTrain_AccidentCase")]
	public partial class EduTrain_AccidentCase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccidentCaseId;
		
		private string _AccidentCaseCode;
		
		private string _AccidentCaseName;
		
		private string _SupAccidentCaseId;
		
		private System.Nullable<bool> _IsEndLever;
		
		private EntitySet<EduTrain_AccidentCaseItem> _EduTrain_AccidentCaseItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccidentCaseIdChanging(string value);
    partial void OnAccidentCaseIdChanged();
    partial void OnAccidentCaseCodeChanging(string value);
    partial void OnAccidentCaseCodeChanged();
    partial void OnAccidentCaseNameChanging(string value);
    partial void OnAccidentCaseNameChanged();
    partial void OnSupAccidentCaseIdChanging(string value);
    partial void OnSupAccidentCaseIdChanged();
    partial void OnIsEndLeverChanging(System.Nullable<bool> value);
    partial void OnIsEndLeverChanged();
    #endregion
		
		public EduTrain_AccidentCase()
		{
			this._EduTrain_AccidentCaseItem = new EntitySet<EduTrain_AccidentCaseItem>(new Action<EduTrain_AccidentCaseItem>(this.attach_EduTrain_AccidentCaseItem), new Action<EduTrain_AccidentCaseItem>(this.detach_EduTrain_AccidentCaseItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentCaseId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccidentCaseId
		{
			get
			{
				return this._AccidentCaseId;
			}
			set
			{
				if ((this._AccidentCaseId != value))
				{
					this.OnAccidentCaseIdChanging(value);
					this.SendPropertyChanging();
					this._AccidentCaseId = value;
					this.SendPropertyChanged("AccidentCaseId");
					this.OnAccidentCaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentCaseCode", DbType="NVarChar(50)")]
		public string AccidentCaseCode
		{
			get
			{
				return this._AccidentCaseCode;
			}
			set
			{
				if ((this._AccidentCaseCode != value))
				{
					this.OnAccidentCaseCodeChanging(value);
					this.SendPropertyChanging();
					this._AccidentCaseCode = value;
					this.SendPropertyChanged("AccidentCaseCode");
					this.OnAccidentCaseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentCaseName", DbType="NVarChar(50)")]
		public string AccidentCaseName
		{
			get
			{
				return this._AccidentCaseName;
			}
			set
			{
				if ((this._AccidentCaseName != value))
				{
					this.OnAccidentCaseNameChanging(value);
					this.SendPropertyChanging();
					this._AccidentCaseName = value;
					this.SendPropertyChanged("AccidentCaseName");
					this.OnAccidentCaseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupAccidentCaseId", DbType="NVarChar(50)")]
		public string SupAccidentCaseId
		{
			get
			{
				return this._SupAccidentCaseId;
			}
			set
			{
				if ((this._SupAccidentCaseId != value))
				{
					this.OnSupAccidentCaseIdChanging(value);
					this.SendPropertyChanging();
					this._SupAccidentCaseId = value;
					this.SendPropertyChanged("SupAccidentCaseId");
					this.OnSupAccidentCaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEndLever", DbType="Bit")]
		public System.Nullable<bool> IsEndLever
		{
			get
			{
				return this._IsEndLever;
			}
			set
			{
				if ((this._IsEndLever != value))
				{
					this.OnIsEndLeverChanging(value);
					this.SendPropertyChanging();
					this._IsEndLever = value;
					this.SendPropertyChanged("IsEndLever");
					this.OnIsEndLeverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EduTrain_AccidentCaseItem_EduTrain_AccidentCase", Storage="_EduTrain_AccidentCaseItem", ThisKey="AccidentCaseId", OtherKey="AccidentCaseId", DeleteRule="NO ACTION")]
		public EntitySet<EduTrain_AccidentCaseItem> EduTrain_AccidentCaseItem
		{
			get
			{
				return this._EduTrain_AccidentCaseItem;
			}
			set
			{
				this._EduTrain_AccidentCaseItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EduTrain_AccidentCaseItem(EduTrain_AccidentCaseItem entity)
		{
			this.SendPropertyChanging();
			entity.EduTrain_AccidentCase = this;
		}
		
		private void detach_EduTrain_AccidentCaseItem(EduTrain_AccidentCaseItem entity)
		{
			this.SendPropertyChanging();
			entity.EduTrain_AccidentCase = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EduTrain_AccidentCaseItem")]
	public partial class EduTrain_AccidentCaseItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccidentCaseItemId;
		
		private string _AccidentCaseId;
		
		private string _Activities;
		
		private string _AccidentName;
		
		private string _AccidentProfiles;
		
		private string _AccidentReview;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private EntityRef<EduTrain_AccidentCase> _EduTrain_AccidentCase;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccidentCaseItemIdChanging(string value);
    partial void OnAccidentCaseItemIdChanged();
    partial void OnAccidentCaseIdChanging(string value);
    partial void OnAccidentCaseIdChanged();
    partial void OnActivitiesChanging(string value);
    partial void OnActivitiesChanged();
    partial void OnAccidentNameChanging(string value);
    partial void OnAccidentNameChanged();
    partial void OnAccidentProfilesChanging(string value);
    partial void OnAccidentProfilesChanged();
    partial void OnAccidentReviewChanging(string value);
    partial void OnAccidentReviewChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    #endregion
		
		public EduTrain_AccidentCaseItem()
		{
			this._EduTrain_AccidentCase = default(EntityRef<EduTrain_AccidentCase>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentCaseItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccidentCaseItemId
		{
			get
			{
				return this._AccidentCaseItemId;
			}
			set
			{
				if ((this._AccidentCaseItemId != value))
				{
					this.OnAccidentCaseItemIdChanging(value);
					this.SendPropertyChanging();
					this._AccidentCaseItemId = value;
					this.SendPropertyChanged("AccidentCaseItemId");
					this.OnAccidentCaseItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentCaseId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccidentCaseId
		{
			get
			{
				return this._AccidentCaseId;
			}
			set
			{
				if ((this._AccidentCaseId != value))
				{
					if (this._EduTrain_AccidentCase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccidentCaseIdChanging(value);
					this.SendPropertyChanging();
					this._AccidentCaseId = value;
					this.SendPropertyChanged("AccidentCaseId");
					this.OnAccidentCaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activities", DbType="NVarChar(50)")]
		public string Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				if ((this._Activities != value))
				{
					this.OnActivitiesChanging(value);
					this.SendPropertyChanging();
					this._Activities = value;
					this.SendPropertyChanged("Activities");
					this.OnActivitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentName", DbType="NVarChar(50)")]
		public string AccidentName
		{
			get
			{
				return this._AccidentName;
			}
			set
			{
				if ((this._AccidentName != value))
				{
					this.OnAccidentNameChanging(value);
					this.SendPropertyChanging();
					this._AccidentName = value;
					this.SendPropertyChanged("AccidentName");
					this.OnAccidentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentProfiles", DbType="NVarChar(2000)")]
		public string AccidentProfiles
		{
			get
			{
				return this._AccidentProfiles;
			}
			set
			{
				if ((this._AccidentProfiles != value))
				{
					this.OnAccidentProfilesChanging(value);
					this.SendPropertyChanging();
					this._AccidentProfiles = value;
					this.SendPropertyChanged("AccidentProfiles");
					this.OnAccidentProfilesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentReview", DbType="NVarChar(2000)")]
		public string AccidentReview
		{
			get
			{
				return this._AccidentReview;
			}
			set
			{
				if ((this._AccidentReview != value))
				{
					this.OnAccidentReviewChanging(value);
					this.SendPropertyChanging();
					this._AccidentReview = value;
					this.SendPropertyChanged("AccidentReview");
					this.OnAccidentReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EduTrain_AccidentCaseItem_EduTrain_AccidentCase", Storage="_EduTrain_AccidentCase", ThisKey="AccidentCaseId", OtherKey="AccidentCaseId", IsForeignKey=true)]
		public EduTrain_AccidentCase EduTrain_AccidentCase
		{
			get
			{
				return this._EduTrain_AccidentCase.Entity;
			}
			set
			{
				EduTrain_AccidentCase previousValue = this._EduTrain_AccidentCase.Entity;
				if (((previousValue != value) 
							|| (this._EduTrain_AccidentCase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EduTrain_AccidentCase.Entity = null;
						previousValue.EduTrain_AccidentCaseItem.Remove(this);
					}
					this._EduTrain_AccidentCase.Entity = value;
					if ((value != null))
					{
						value.EduTrain_AccidentCaseItem.Add(this);
						this._AccidentCaseId = value.AccidentCaseId;
					}
					else
					{
						this._AccidentCaseId = default(string);
					}
					this.SendPropertyChanged("EduTrain_AccidentCase");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Emergency_RescueInfo")]
	public partial class Emergency_RescueInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RescueInfoId;
		
		private string _ReceiveMan;
		
		private System.Nullable<System.DateTime> _ReceiveTime;
		
		private string _Telephone;
		
		private string _MessageContent;
		
		private System.Nullable<System.DateTime> _PushDateTime;
		
		private string _PushStates;
		
		private string _InstallationIds;
		
		private string _InstallationNames;
		
		private string _AccidentType;
		
		private string _AccidentPlace;
		
		private string _AccidentOverview;
		
		private string _DeathsNumber;
		
		private string _InjuredNumber;
		
		private string _AccidentPerson;
		
		private string _PoliceTelephone;
		
		private string _PoliceType;
		
		private string _PoliceLevel;
		
		private string _PoliceMan;
		
		private System.Nullable<System.DateTime> _PoliceTime;
		
		private string _PlanName;
		
		private string _PlanType;
		
		private EntitySet<Emergency_RescueInfoPlan> _Emergency_RescueInfoPlan;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRescueInfoIdChanging(string value);
    partial void OnRescueInfoIdChanged();
    partial void OnReceiveManChanging(string value);
    partial void OnReceiveManChanged();
    partial void OnReceiveTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiveTimeChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnMessageContentChanging(string value);
    partial void OnMessageContentChanged();
    partial void OnPushDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPushDateTimeChanged();
    partial void OnPushStatesChanging(string value);
    partial void OnPushStatesChanged();
    partial void OnInstallationIdsChanging(string value);
    partial void OnInstallationIdsChanged();
    partial void OnInstallationNamesChanging(string value);
    partial void OnInstallationNamesChanged();
    partial void OnAccidentTypeChanging(string value);
    partial void OnAccidentTypeChanged();
    partial void OnAccidentPlaceChanging(string value);
    partial void OnAccidentPlaceChanged();
    partial void OnAccidentOverviewChanging(string value);
    partial void OnAccidentOverviewChanged();
    partial void OnDeathsNumberChanging(string value);
    partial void OnDeathsNumberChanged();
    partial void OnInjuredNumberChanging(string value);
    partial void OnInjuredNumberChanged();
    partial void OnAccidentPersonChanging(string value);
    partial void OnAccidentPersonChanged();
    partial void OnPoliceTelephoneChanging(string value);
    partial void OnPoliceTelephoneChanged();
    partial void OnPoliceTypeChanging(string value);
    partial void OnPoliceTypeChanged();
    partial void OnPoliceLevelChanging(string value);
    partial void OnPoliceLevelChanged();
    partial void OnPoliceManChanging(string value);
    partial void OnPoliceManChanged();
    partial void OnPoliceTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPoliceTimeChanged();
    partial void OnPlanNameChanging(string value);
    partial void OnPlanNameChanged();
    partial void OnPlanTypeChanging(string value);
    partial void OnPlanTypeChanged();
    #endregion
		
		public Emergency_RescueInfo()
		{
			this._Emergency_RescueInfoPlan = new EntitySet<Emergency_RescueInfoPlan>(new Action<Emergency_RescueInfoPlan>(this.attach_Emergency_RescueInfoPlan), new Action<Emergency_RescueInfoPlan>(this.detach_Emergency_RescueInfoPlan));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RescueInfoId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RescueInfoId
		{
			get
			{
				return this._RescueInfoId;
			}
			set
			{
				if ((this._RescueInfoId != value))
				{
					this.OnRescueInfoIdChanging(value);
					this.SendPropertyChanging();
					this._RescueInfoId = value;
					this.SendPropertyChanged("RescueInfoId");
					this.OnRescueInfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveMan", DbType="NVarChar(4000)")]
		public string ReceiveMan
		{
			get
			{
				return this._ReceiveMan;
			}
			set
			{
				if ((this._ReceiveMan != value))
				{
					this.OnReceiveManChanging(value);
					this.SendPropertyChanging();
					this._ReceiveMan = value;
					this.SendPropertyChanged("ReceiveMan");
					this.OnReceiveManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceiveTime
		{
			get
			{
				return this._ReceiveTime;
			}
			set
			{
				if ((this._ReceiveTime != value))
				{
					this.OnReceiveTimeChanging(value);
					this.SendPropertyChanging();
					this._ReceiveTime = value;
					this.SendPropertyChanged("ReceiveTime");
					this.OnReceiveTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(4000)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageContent", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string MessageContent
		{
			get
			{
				return this._MessageContent;
			}
			set
			{
				if ((this._MessageContent != value))
				{
					this.OnMessageContentChanging(value);
					this.SendPropertyChanging();
					this._MessageContent = value;
					this.SendPropertyChanged("MessageContent");
					this.OnMessageContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PushDateTime
		{
			get
			{
				return this._PushDateTime;
			}
			set
			{
				if ((this._PushDateTime != value))
				{
					this.OnPushDateTimeChanging(value);
					this.SendPropertyChanging();
					this._PushDateTime = value;
					this.SendPropertyChanged("PushDateTime");
					this.OnPushDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushStates", DbType="Char(1)")]
		public string PushStates
		{
			get
			{
				return this._PushStates;
			}
			set
			{
				if ((this._PushStates != value))
				{
					this.OnPushStatesChanging(value);
					this.SendPropertyChanging();
					this._PushStates = value;
					this.SendPropertyChanged("PushStates");
					this.OnPushStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationIds", DbType="NVarChar(4000)")]
		public string InstallationIds
		{
			get
			{
				return this._InstallationIds;
			}
			set
			{
				if ((this._InstallationIds != value))
				{
					this.OnInstallationIdsChanging(value);
					this.SendPropertyChanging();
					this._InstallationIds = value;
					this.SendPropertyChanged("InstallationIds");
					this.OnInstallationIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationNames", DbType="NVarChar(4000)")]
		public string InstallationNames
		{
			get
			{
				return this._InstallationNames;
			}
			set
			{
				if ((this._InstallationNames != value))
				{
					this.OnInstallationNamesChanging(value);
					this.SendPropertyChanging();
					this._InstallationNames = value;
					this.SendPropertyChanged("InstallationNames");
					this.OnInstallationNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentType", DbType="NVarChar(50)")]
		public string AccidentType
		{
			get
			{
				return this._AccidentType;
			}
			set
			{
				if ((this._AccidentType != value))
				{
					this.OnAccidentTypeChanging(value);
					this.SendPropertyChanging();
					this._AccidentType = value;
					this.SendPropertyChanged("AccidentType");
					this.OnAccidentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentPlace", DbType="NVarChar(500)")]
		public string AccidentPlace
		{
			get
			{
				return this._AccidentPlace;
			}
			set
			{
				if ((this._AccidentPlace != value))
				{
					this.OnAccidentPlaceChanging(value);
					this.SendPropertyChanging();
					this._AccidentPlace = value;
					this.SendPropertyChanged("AccidentPlace");
					this.OnAccidentPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentOverview", DbType="NVarChar(2000)")]
		public string AccidentOverview
		{
			get
			{
				return this._AccidentOverview;
			}
			set
			{
				if ((this._AccidentOverview != value))
				{
					this.OnAccidentOverviewChanging(value);
					this.SendPropertyChanging();
					this._AccidentOverview = value;
					this.SendPropertyChanged("AccidentOverview");
					this.OnAccidentOverviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathsNumber", DbType="NVarChar(50)")]
		public string DeathsNumber
		{
			get
			{
				return this._DeathsNumber;
			}
			set
			{
				if ((this._DeathsNumber != value))
				{
					this.OnDeathsNumberChanging(value);
					this.SendPropertyChanging();
					this._DeathsNumber = value;
					this.SendPropertyChanged("DeathsNumber");
					this.OnDeathsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InjuredNumber", DbType="NVarChar(50)")]
		public string InjuredNumber
		{
			get
			{
				return this._InjuredNumber;
			}
			set
			{
				if ((this._InjuredNumber != value))
				{
					this.OnInjuredNumberChanging(value);
					this.SendPropertyChanging();
					this._InjuredNumber = value;
					this.SendPropertyChanged("InjuredNumber");
					this.OnInjuredNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentPerson", DbType="NVarChar(500)")]
		public string AccidentPerson
		{
			get
			{
				return this._AccidentPerson;
			}
			set
			{
				if ((this._AccidentPerson != value))
				{
					this.OnAccidentPersonChanging(value);
					this.SendPropertyChanging();
					this._AccidentPerson = value;
					this.SendPropertyChanged("AccidentPerson");
					this.OnAccidentPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoliceTelephone", DbType="NVarChar(50)")]
		public string PoliceTelephone
		{
			get
			{
				return this._PoliceTelephone;
			}
			set
			{
				if ((this._PoliceTelephone != value))
				{
					this.OnPoliceTelephoneChanging(value);
					this.SendPropertyChanging();
					this._PoliceTelephone = value;
					this.SendPropertyChanged("PoliceTelephone");
					this.OnPoliceTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoliceType", DbType="NVarChar(50)")]
		public string PoliceType
		{
			get
			{
				return this._PoliceType;
			}
			set
			{
				if ((this._PoliceType != value))
				{
					this.OnPoliceTypeChanging(value);
					this.SendPropertyChanging();
					this._PoliceType = value;
					this.SendPropertyChanged("PoliceType");
					this.OnPoliceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoliceLevel", DbType="NVarChar(50)")]
		public string PoliceLevel
		{
			get
			{
				return this._PoliceLevel;
			}
			set
			{
				if ((this._PoliceLevel != value))
				{
					this.OnPoliceLevelChanging(value);
					this.SendPropertyChanging();
					this._PoliceLevel = value;
					this.SendPropertyChanged("PoliceLevel");
					this.OnPoliceLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoliceMan", DbType="NVarChar(50)")]
		public string PoliceMan
		{
			get
			{
				return this._PoliceMan;
			}
			set
			{
				if ((this._PoliceMan != value))
				{
					this.OnPoliceManChanging(value);
					this.SendPropertyChanging();
					this._PoliceMan = value;
					this.SendPropertyChanged("PoliceMan");
					this.OnPoliceManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoliceTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PoliceTime
		{
			get
			{
				return this._PoliceTime;
			}
			set
			{
				if ((this._PoliceTime != value))
				{
					this.OnPoliceTimeChanging(value);
					this.SendPropertyChanging();
					this._PoliceTime = value;
					this.SendPropertyChanged("PoliceTime");
					this.OnPoliceTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanName", DbType="NVarChar(500)")]
		public string PlanName
		{
			get
			{
				return this._PlanName;
			}
			set
			{
				if ((this._PlanName != value))
				{
					this.OnPlanNameChanging(value);
					this.SendPropertyChanging();
					this._PlanName = value;
					this.SendPropertyChanged("PlanName");
					this.OnPlanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanType", DbType="NVarChar(500)")]
		public string PlanType
		{
			get
			{
				return this._PlanType;
			}
			set
			{
				if ((this._PlanType != value))
				{
					this.OnPlanTypeChanging(value);
					this.SendPropertyChanging();
					this._PlanType = value;
					this.SendPropertyChanged("PlanType");
					this.OnPlanTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Emergency_RescueInfoPlan_Emergency_RescueInfo", Storage="_Emergency_RescueInfoPlan", ThisKey="RescueInfoId", OtherKey="RescueInfoId", DeleteRule="NO ACTION")]
		public EntitySet<Emergency_RescueInfoPlan> Emergency_RescueInfoPlan
		{
			get
			{
				return this._Emergency_RescueInfoPlan;
			}
			set
			{
				this._Emergency_RescueInfoPlan.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Emergency_RescueInfoPlan(Emergency_RescueInfoPlan entity)
		{
			this.SendPropertyChanging();
			entity.Emergency_RescueInfo = this;
		}
		
		private void detach_Emergency_RescueInfoPlan(Emergency_RescueInfoPlan entity)
		{
			this.SendPropertyChanging();
			entity.Emergency_RescueInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Emergency_RescueInfoPlan")]
	public partial class Emergency_RescueInfoPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RescueInfoPlanId;
		
		private string _RescueInfoId;
		
		private string _Treatment;
		
		private string _Department;
		
		private string _Obligation;
		
		private System.Nullable<System.DateTime> _ReceiveTime;
		
		private EntityRef<Emergency_RescueInfo> _Emergency_RescueInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRescueInfoPlanIdChanging(string value);
    partial void OnRescueInfoPlanIdChanged();
    partial void OnRescueInfoIdChanging(string value);
    partial void OnRescueInfoIdChanged();
    partial void OnTreatmentChanging(string value);
    partial void OnTreatmentChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnObligationChanging(string value);
    partial void OnObligationChanged();
    partial void OnReceiveTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiveTimeChanged();
    #endregion
		
		public Emergency_RescueInfoPlan()
		{
			this._Emergency_RescueInfo = default(EntityRef<Emergency_RescueInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RescueInfoPlanId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RescueInfoPlanId
		{
			get
			{
				return this._RescueInfoPlanId;
			}
			set
			{
				if ((this._RescueInfoPlanId != value))
				{
					this.OnRescueInfoPlanIdChanging(value);
					this.SendPropertyChanging();
					this._RescueInfoPlanId = value;
					this.SendPropertyChanged("RescueInfoPlanId");
					this.OnRescueInfoPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RescueInfoId", DbType="NVarChar(50)")]
		public string RescueInfoId
		{
			get
			{
				return this._RescueInfoId;
			}
			set
			{
				if ((this._RescueInfoId != value))
				{
					if (this._Emergency_RescueInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRescueInfoIdChanging(value);
					this.SendPropertyChanging();
					this._RescueInfoId = value;
					this.SendPropertyChanged("RescueInfoId");
					this.OnRescueInfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Treatment", DbType="NVarChar(4000)")]
		public string Treatment
		{
			get
			{
				return this._Treatment;
			}
			set
			{
				if ((this._Treatment != value))
				{
					this.OnTreatmentChanging(value);
					this.SendPropertyChanging();
					this._Treatment = value;
					this.SendPropertyChanged("Treatment");
					this.OnTreatmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(200)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Obligation", DbType="NVarChar(2000)")]
		public string Obligation
		{
			get
			{
				return this._Obligation;
			}
			set
			{
				if ((this._Obligation != value))
				{
					this.OnObligationChanging(value);
					this.SendPropertyChanging();
					this._Obligation = value;
					this.SendPropertyChanged("Obligation");
					this.OnObligationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceiveTime
		{
			get
			{
				return this._ReceiveTime;
			}
			set
			{
				if ((this._ReceiveTime != value))
				{
					this.OnReceiveTimeChanging(value);
					this.SendPropertyChanging();
					this._ReceiveTime = value;
					this.SendPropertyChanged("ReceiveTime");
					this.OnReceiveTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Emergency_RescueInfoPlan_Emergency_RescueInfo", Storage="_Emergency_RescueInfo", ThisKey="RescueInfoId", OtherKey="RescueInfoId", IsForeignKey=true)]
		public Emergency_RescueInfo Emergency_RescueInfo
		{
			get
			{
				return this._Emergency_RescueInfo.Entity;
			}
			set
			{
				Emergency_RescueInfo previousValue = this._Emergency_RescueInfo.Entity;
				if (((previousValue != value) 
							|| (this._Emergency_RescueInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Emergency_RescueInfo.Entity = null;
						previousValue.Emergency_RescueInfoPlan.Remove(this);
					}
					this._Emergency_RescueInfo.Entity = value;
					if ((value != null))
					{
						value.Emergency_RescueInfoPlan.Add(this);
						this._RescueInfoId = value.RescueInfoId;
					}
					else
					{
						this._RescueInfoId = default(string);
					}
					this.SendPropertyChanged("Emergency_RescueInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Emergency_Warning")]
	public partial class Emergency_Warning : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WarningId;
		
		private string _InstallationIds;
		
		private string _InstallationNames;
		
		private string _Name;
		
		private string _Place;
		
		private System.Nullable<System.DateTime> _OccurredTime;
		
		private string _CurrentValue;
		
		private string _AlarmStatus;
		
		private string _ProcessState;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWarningIdChanging(string value);
    partial void OnWarningIdChanged();
    partial void OnInstallationIdsChanging(string value);
    partial void OnInstallationIdsChanged();
    partial void OnInstallationNamesChanging(string value);
    partial void OnInstallationNamesChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPlaceChanging(string value);
    partial void OnPlaceChanged();
    partial void OnOccurredTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOccurredTimeChanged();
    partial void OnCurrentValueChanging(string value);
    partial void OnCurrentValueChanged();
    partial void OnAlarmStatusChanging(string value);
    partial void OnAlarmStatusChanged();
    partial void OnProcessStateChanging(string value);
    partial void OnProcessStateChanged();
    #endregion
		
		public Emergency_Warning()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarningId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WarningId
		{
			get
			{
				return this._WarningId;
			}
			set
			{
				if ((this._WarningId != value))
				{
					this.OnWarningIdChanging(value);
					this.SendPropertyChanging();
					this._WarningId = value;
					this.SendPropertyChanged("WarningId");
					this.OnWarningIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationIds", DbType="NVarChar(4000)")]
		public string InstallationIds
		{
			get
			{
				return this._InstallationIds;
			}
			set
			{
				if ((this._InstallationIds != value))
				{
					this.OnInstallationIdsChanging(value);
					this.SendPropertyChanging();
					this._InstallationIds = value;
					this.SendPropertyChanged("InstallationIds");
					this.OnInstallationIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationNames", DbType="NVarChar(4000)")]
		public string InstallationNames
		{
			get
			{
				return this._InstallationNames;
			}
			set
			{
				if ((this._InstallationNames != value))
				{
					this.OnInstallationNamesChanging(value);
					this.SendPropertyChanging();
					this._InstallationNames = value;
					this.SendPropertyChanged("InstallationNames");
					this.OnInstallationNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place", DbType="NVarChar(500)")]
		public string Place
		{
			get
			{
				return this._Place;
			}
			set
			{
				if ((this._Place != value))
				{
					this.OnPlaceChanging(value);
					this.SendPropertyChanging();
					this._Place = value;
					this.SendPropertyChanged("Place");
					this.OnPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccurredTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OccurredTime
		{
			get
			{
				return this._OccurredTime;
			}
			set
			{
				if ((this._OccurredTime != value))
				{
					this.OnOccurredTimeChanging(value);
					this.SendPropertyChanging();
					this._OccurredTime = value;
					this.SendPropertyChanged("OccurredTime");
					this.OnOccurredTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentValue", DbType="NVarChar(200)")]
		public string CurrentValue
		{
			get
			{
				return this._CurrentValue;
			}
			set
			{
				if ((this._CurrentValue != value))
				{
					this.OnCurrentValueChanging(value);
					this.SendPropertyChanging();
					this._CurrentValue = value;
					this.SendPropertyChanged("CurrentValue");
					this.OnCurrentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlarmStatus", DbType="NVarChar(50)")]
		public string AlarmStatus
		{
			get
			{
				return this._AlarmStatus;
			}
			set
			{
				if ((this._AlarmStatus != value))
				{
					this.OnAlarmStatusChanging(value);
					this.SendPropertyChanging();
					this._AlarmStatus = value;
					this.SendPropertyChanged("AlarmStatus");
					this.OnAlarmStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessState", DbType="NVarChar(50)")]
		public string ProcessState
		{
			get
			{
				return this._ProcessState;
			}
			set
			{
				if ((this._ProcessState != value))
				{
					this.OnProcessStateChanging(value);
					this.SendPropertyChanging();
					this._ProcessState = value;
					this.SendPropertyChanged("ProcessState");
					this.OnProcessStateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hazard_HiddenHazard")]
	public partial class Hazard_HiddenHazard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HiddenHazardId;
		
		private string _HiddenHazardCode;
		
		private string _HiddenHazardName;
		
		private string _InstallationId;
		
		private string _DepartId;
		
		private string _FindManId;
		
		private System.Nullable<System.DateTime> _FindTime;
		
		private string _Description;
		
		private string _HiddenHazardPlace;
		
		private string _BePohotoUrl;
		
		private string _UnitId;
		
		private string _CorrectManId;
		
		private System.Nullable<bool> _IsMajor;
		
		private System.Nullable<System.DateTime> _LimitTime;
		
		private string _HiddenHazardTypeId;
		
		private string _CorrectMeasures;
		
		private string _ControlMeasures;
		
		private System.Nullable<decimal> _CorrectMoney;
		
		private string _CorrectScheme;
		
		private string _AuditManId;
		
		private System.Nullable<System.DateTime> _AuditTime;
		
		private string _QHSEAuditManId;
		
		private System.Nullable<System.DateTime> _QHSEAuditTime;
		
		private string _AfPohotoUrl;
		
		private System.Nullable<System.DateTime> _CorrectTime;
		
		private string _AcceptanceManId;
		
		private System.Nullable<System.DateTime> _AcceptanceTime;
		
		private string _States;
		
		private string _CorrectSchemeUrl;
		
		private System.Nullable<System.DateTime> _CorrectSchemeTime;
		
		private string _ReasonAnalysis;
		
		private System.Nullable<decimal> _HazardJudge_L;
		
		private System.Nullable<decimal> _HazardJudge_E;
		
		private System.Nullable<decimal> _HazardJudge_C;
		
		private System.Nullable<decimal> _HazardJudge_D;
		
		private string _RiskLevel;
		
		private string _OperateManIds;
		
		private string _OperateManNames;
		
		private System.Nullable<bool> _IsFiled;
		
		private EntityRef<Base_Depart> _Base_Depart;
		
		private EntityRef<Base_HiddenHazardType> _Base_HiddenHazardType;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _AcceptanceMan;
		
		private EntityRef<Sys_User> _AuditMan;
		
		private EntityRef<Sys_User> _FindMan;
		
		private EntityRef<Sys_User> _QHSEAuditMan;
		
		private EntitySet<Hazard_HiddenHazardDelay> _Hazard_HiddenHazardDelay;
		
		private EntitySet<Hazard_RiskList> _Hazard_RiskList;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHiddenHazardIdChanging(string value);
    partial void OnHiddenHazardIdChanged();
    partial void OnHiddenHazardCodeChanging(string value);
    partial void OnHiddenHazardCodeChanged();
    partial void OnHiddenHazardNameChanging(string value);
    partial void OnHiddenHazardNameChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnDepartIdChanging(string value);
    partial void OnDepartIdChanged();
    partial void OnFindManIdChanging(string value);
    partial void OnFindManIdChanged();
    partial void OnFindTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFindTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnHiddenHazardPlaceChanging(string value);
    partial void OnHiddenHazardPlaceChanged();
    partial void OnBePohotoUrlChanging(string value);
    partial void OnBePohotoUrlChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnCorrectManIdChanging(string value);
    partial void OnCorrectManIdChanged();
    partial void OnIsMajorChanging(System.Nullable<bool> value);
    partial void OnIsMajorChanged();
    partial void OnLimitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLimitTimeChanged();
    partial void OnHiddenHazardTypeIdChanging(string value);
    partial void OnHiddenHazardTypeIdChanged();
    partial void OnCorrectMeasuresChanging(string value);
    partial void OnCorrectMeasuresChanged();
    partial void OnControlMeasuresChanging(string value);
    partial void OnControlMeasuresChanged();
    partial void OnCorrectMoneyChanging(System.Nullable<decimal> value);
    partial void OnCorrectMoneyChanged();
    partial void OnCorrectSchemeChanging(string value);
    partial void OnCorrectSchemeChanged();
    partial void OnAuditManIdChanging(string value);
    partial void OnAuditManIdChanged();
    partial void OnAuditTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditTimeChanged();
    partial void OnQHSEAuditManIdChanging(string value);
    partial void OnQHSEAuditManIdChanged();
    partial void OnQHSEAuditTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnQHSEAuditTimeChanged();
    partial void OnAfPohotoUrlChanging(string value);
    partial void OnAfPohotoUrlChanged();
    partial void OnCorrectTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCorrectTimeChanged();
    partial void OnAcceptanceManIdChanging(string value);
    partial void OnAcceptanceManIdChanged();
    partial void OnAcceptanceTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptanceTimeChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnCorrectSchemeUrlChanging(string value);
    partial void OnCorrectSchemeUrlChanged();
    partial void OnCorrectSchemeTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCorrectSchemeTimeChanged();
    partial void OnReasonAnalysisChanging(string value);
    partial void OnReasonAnalysisChanged();
    partial void OnHazardJudge_LChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_LChanged();
    partial void OnHazardJudge_EChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_EChanged();
    partial void OnHazardJudge_CChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_CChanged();
    partial void OnHazardJudge_DChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_DChanged();
    partial void OnRiskLevelChanging(string value);
    partial void OnRiskLevelChanged();
    partial void OnOperateManIdsChanging(string value);
    partial void OnOperateManIdsChanged();
    partial void OnOperateManNamesChanging(string value);
    partial void OnOperateManNamesChanged();
    partial void OnIsFiledChanging(System.Nullable<bool> value);
    partial void OnIsFiledChanged();
    #endregion
		
		public Hazard_HiddenHazard()
		{
			this._Base_Depart = default(EntityRef<Base_Depart>);
			this._Base_HiddenHazardType = default(EntityRef<Base_HiddenHazardType>);
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._AcceptanceMan = default(EntityRef<Sys_User>);
			this._AuditMan = default(EntityRef<Sys_User>);
			this._FindMan = default(EntityRef<Sys_User>);
			this._QHSEAuditMan = default(EntityRef<Sys_User>);
			this._Hazard_HiddenHazardDelay = new EntitySet<Hazard_HiddenHazardDelay>(new Action<Hazard_HiddenHazardDelay>(this.attach_Hazard_HiddenHazardDelay), new Action<Hazard_HiddenHazardDelay>(this.detach_Hazard_HiddenHazardDelay));
			this._Hazard_RiskList = new EntitySet<Hazard_RiskList>(new Action<Hazard_RiskList>(this.attach_Hazard_RiskList), new Action<Hazard_RiskList>(this.detach_Hazard_RiskList));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HiddenHazardId
		{
			get
			{
				return this._HiddenHazardId;
			}
			set
			{
				if ((this._HiddenHazardId != value))
				{
					this.OnHiddenHazardIdChanging(value);
					this.SendPropertyChanging();
					this._HiddenHazardId = value;
					this.SendPropertyChanged("HiddenHazardId");
					this.OnHiddenHazardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardCode", DbType="NVarChar(50)")]
		public string HiddenHazardCode
		{
			get
			{
				return this._HiddenHazardCode;
			}
			set
			{
				if ((this._HiddenHazardCode != value))
				{
					this.OnHiddenHazardCodeChanging(value);
					this.SendPropertyChanging();
					this._HiddenHazardCode = value;
					this.SendPropertyChanged("HiddenHazardCode");
					this.OnHiddenHazardCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardName", DbType="NVarChar(200)")]
		public string HiddenHazardName
		{
			get
			{
				return this._HiddenHazardName;
			}
			set
			{
				if ((this._HiddenHazardName != value))
				{
					this.OnHiddenHazardNameChanging(value);
					this.SendPropertyChanging();
					this._HiddenHazardName = value;
					this.SendPropertyChanged("HiddenHazardName");
					this.OnHiddenHazardNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartId", DbType="NVarChar(50)")]
		public string DepartId
		{
			get
			{
				return this._DepartId;
			}
			set
			{
				if ((this._DepartId != value))
				{
					if (this._Base_Depart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartIdChanging(value);
					this.SendPropertyChanging();
					this._DepartId = value;
					this.SendPropertyChanged("DepartId");
					this.OnDepartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindManId", DbType="NVarChar(50)")]
		public string FindManId
		{
			get
			{
				return this._FindManId;
			}
			set
			{
				if ((this._FindManId != value))
				{
					if (this._FindMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFindManIdChanging(value);
					this.SendPropertyChanging();
					this._FindManId = value;
					this.SendPropertyChanged("FindManId");
					this.OnFindManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FindTime
		{
			get
			{
				return this._FindTime;
			}
			set
			{
				if ((this._FindTime != value))
				{
					this.OnFindTimeChanging(value);
					this.SendPropertyChanging();
					this._FindTime = value;
					this.SendPropertyChanged("FindTime");
					this.OnFindTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardPlace", DbType="NVarChar(200)")]
		public string HiddenHazardPlace
		{
			get
			{
				return this._HiddenHazardPlace;
			}
			set
			{
				if ((this._HiddenHazardPlace != value))
				{
					this.OnHiddenHazardPlaceChanging(value);
					this.SendPropertyChanging();
					this._HiddenHazardPlace = value;
					this.SendPropertyChanged("HiddenHazardPlace");
					this.OnHiddenHazardPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BePohotoUrl", DbType="NVarChar(2000)")]
		public string BePohotoUrl
		{
			get
			{
				return this._BePohotoUrl;
			}
			set
			{
				if ((this._BePohotoUrl != value))
				{
					this.OnBePohotoUrlChanging(value);
					this.SendPropertyChanging();
					this._BePohotoUrl = value;
					this.SendPropertyChanged("BePohotoUrl");
					this.OnBePohotoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectManId", DbType="NVarChar(50)")]
		public string CorrectManId
		{
			get
			{
				return this._CorrectManId;
			}
			set
			{
				if ((this._CorrectManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCorrectManIdChanging(value);
					this.SendPropertyChanging();
					this._CorrectManId = value;
					this.SendPropertyChanged("CorrectManId");
					this.OnCorrectManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMajor", DbType="Bit")]
		public System.Nullable<bool> IsMajor
		{
			get
			{
				return this._IsMajor;
			}
			set
			{
				if ((this._IsMajor != value))
				{
					this.OnIsMajorChanging(value);
					this.SendPropertyChanging();
					this._IsMajor = value;
					this.SendPropertyChanged("IsMajor");
					this.OnIsMajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitTime
		{
			get
			{
				return this._LimitTime;
			}
			set
			{
				if ((this._LimitTime != value))
				{
					this.OnLimitTimeChanging(value);
					this.SendPropertyChanging();
					this._LimitTime = value;
					this.SendPropertyChanged("LimitTime");
					this.OnLimitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardTypeId", DbType="NVarChar(50)")]
		public string HiddenHazardTypeId
		{
			get
			{
				return this._HiddenHazardTypeId;
			}
			set
			{
				if ((this._HiddenHazardTypeId != value))
				{
					if (this._Base_HiddenHazardType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHiddenHazardTypeIdChanging(value);
					this.SendPropertyChanging();
					this._HiddenHazardTypeId = value;
					this.SendPropertyChanged("HiddenHazardTypeId");
					this.OnHiddenHazardTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectMeasures", DbType="NVarChar(500)")]
		public string CorrectMeasures
		{
			get
			{
				return this._CorrectMeasures;
			}
			set
			{
				if ((this._CorrectMeasures != value))
				{
					this.OnCorrectMeasuresChanging(value);
					this.SendPropertyChanging();
					this._CorrectMeasures = value;
					this.SendPropertyChanged("CorrectMeasures");
					this.OnCorrectMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlMeasures", DbType="NVarChar(500)")]
		public string ControlMeasures
		{
			get
			{
				return this._ControlMeasures;
			}
			set
			{
				if ((this._ControlMeasures != value))
				{
					this.OnControlMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ControlMeasures = value;
					this.SendPropertyChanged("ControlMeasures");
					this.OnControlMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectMoney", DbType="Money")]
		public System.Nullable<decimal> CorrectMoney
		{
			get
			{
				return this._CorrectMoney;
			}
			set
			{
				if ((this._CorrectMoney != value))
				{
					this.OnCorrectMoneyChanging(value);
					this.SendPropertyChanging();
					this._CorrectMoney = value;
					this.SendPropertyChanged("CorrectMoney");
					this.OnCorrectMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectScheme", DbType="NVarChar(800)")]
		public string CorrectScheme
		{
			get
			{
				return this._CorrectScheme;
			}
			set
			{
				if ((this._CorrectScheme != value))
				{
					this.OnCorrectSchemeChanging(value);
					this.SendPropertyChanging();
					this._CorrectScheme = value;
					this.SendPropertyChanged("CorrectScheme");
					this.OnCorrectSchemeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditManId", DbType="NVarChar(50)")]
		public string AuditManId
		{
			get
			{
				return this._AuditManId;
			}
			set
			{
				if ((this._AuditManId != value))
				{
					if (this._AuditMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditManIdChanging(value);
					this.SendPropertyChanging();
					this._AuditManId = value;
					this.SendPropertyChanged("AuditManId");
					this.OnAuditManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditTime
		{
			get
			{
				return this._AuditTime;
			}
			set
			{
				if ((this._AuditTime != value))
				{
					this.OnAuditTimeChanging(value);
					this.SendPropertyChanging();
					this._AuditTime = value;
					this.SendPropertyChanged("AuditTime");
					this.OnAuditTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QHSEAuditManId", DbType="NVarChar(50)")]
		public string QHSEAuditManId
		{
			get
			{
				return this._QHSEAuditManId;
			}
			set
			{
				if ((this._QHSEAuditManId != value))
				{
					if (this._QHSEAuditMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQHSEAuditManIdChanging(value);
					this.SendPropertyChanging();
					this._QHSEAuditManId = value;
					this.SendPropertyChanged("QHSEAuditManId");
					this.OnQHSEAuditManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QHSEAuditTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> QHSEAuditTime
		{
			get
			{
				return this._QHSEAuditTime;
			}
			set
			{
				if ((this._QHSEAuditTime != value))
				{
					this.OnQHSEAuditTimeChanging(value);
					this.SendPropertyChanging();
					this._QHSEAuditTime = value;
					this.SendPropertyChanged("QHSEAuditTime");
					this.OnQHSEAuditTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AfPohotoUrl", DbType="NVarChar(2000)")]
		public string AfPohotoUrl
		{
			get
			{
				return this._AfPohotoUrl;
			}
			set
			{
				if ((this._AfPohotoUrl != value))
				{
					this.OnAfPohotoUrlChanging(value);
					this.SendPropertyChanging();
					this._AfPohotoUrl = value;
					this.SendPropertyChanged("AfPohotoUrl");
					this.OnAfPohotoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CorrectTime
		{
			get
			{
				return this._CorrectTime;
			}
			set
			{
				if ((this._CorrectTime != value))
				{
					this.OnCorrectTimeChanging(value);
					this.SendPropertyChanging();
					this._CorrectTime = value;
					this.SendPropertyChanged("CorrectTime");
					this.OnCorrectTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceManId", DbType="NVarChar(50)")]
		public string AcceptanceManId
		{
			get
			{
				return this._AcceptanceManId;
			}
			set
			{
				if ((this._AcceptanceManId != value))
				{
					if (this._AcceptanceMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcceptanceManIdChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceManId = value;
					this.SendPropertyChanged("AcceptanceManId");
					this.OnAcceptanceManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptanceTime
		{
			get
			{
				return this._AcceptanceTime;
			}
			set
			{
				if ((this._AcceptanceTime != value))
				{
					this.OnAcceptanceTimeChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceTime = value;
					this.SendPropertyChanged("AcceptanceTime");
					this.OnAcceptanceTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectSchemeUrl", DbType="NVarChar(2000)")]
		public string CorrectSchemeUrl
		{
			get
			{
				return this._CorrectSchemeUrl;
			}
			set
			{
				if ((this._CorrectSchemeUrl != value))
				{
					this.OnCorrectSchemeUrlChanging(value);
					this.SendPropertyChanging();
					this._CorrectSchemeUrl = value;
					this.SendPropertyChanged("CorrectSchemeUrl");
					this.OnCorrectSchemeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectSchemeTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CorrectSchemeTime
		{
			get
			{
				return this._CorrectSchemeTime;
			}
			set
			{
				if ((this._CorrectSchemeTime != value))
				{
					this.OnCorrectSchemeTimeChanging(value);
					this.SendPropertyChanging();
					this._CorrectSchemeTime = value;
					this.SendPropertyChanged("CorrectSchemeTime");
					this.OnCorrectSchemeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonAnalysis", DbType="NVarChar(2000)")]
		public string ReasonAnalysis
		{
			get
			{
				return this._ReasonAnalysis;
			}
			set
			{
				if ((this._ReasonAnalysis != value))
				{
					this.OnReasonAnalysisChanging(value);
					this.SendPropertyChanging();
					this._ReasonAnalysis = value;
					this.SendPropertyChanged("ReasonAnalysis");
					this.OnReasonAnalysisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_L", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_L
		{
			get
			{
				return this._HazardJudge_L;
			}
			set
			{
				if ((this._HazardJudge_L != value))
				{
					this.OnHazardJudge_LChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_L = value;
					this.SendPropertyChanged("HazardJudge_L");
					this.OnHazardJudge_LChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_E", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_E
		{
			get
			{
				return this._HazardJudge_E;
			}
			set
			{
				if ((this._HazardJudge_E != value))
				{
					this.OnHazardJudge_EChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_E = value;
					this.SendPropertyChanged("HazardJudge_E");
					this.OnHazardJudge_EChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_C", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_C
		{
			get
			{
				return this._HazardJudge_C;
			}
			set
			{
				if ((this._HazardJudge_C != value))
				{
					this.OnHazardJudge_CChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_C = value;
					this.SendPropertyChanged("HazardJudge_C");
					this.OnHazardJudge_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_D", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_D
		{
			get
			{
				return this._HazardJudge_D;
			}
			set
			{
				if ((this._HazardJudge_D != value))
				{
					this.OnHazardJudge_DChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_D = value;
					this.SendPropertyChanged("HazardJudge_D");
					this.OnHazardJudge_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="NVarChar(50)")]
		public string RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this.OnRiskLevelChanging(value);
					this.SendPropertyChanging();
					this._RiskLevel = value;
					this.SendPropertyChanged("RiskLevel");
					this.OnRiskLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateManIds", DbType="NVarChar(2000)")]
		public string OperateManIds
		{
			get
			{
				return this._OperateManIds;
			}
			set
			{
				if ((this._OperateManIds != value))
				{
					this.OnOperateManIdsChanging(value);
					this.SendPropertyChanging();
					this._OperateManIds = value;
					this.SendPropertyChanged("OperateManIds");
					this.OnOperateManIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateManNames", DbType="NVarChar(2000)")]
		public string OperateManNames
		{
			get
			{
				return this._OperateManNames;
			}
			set
			{
				if ((this._OperateManNames != value))
				{
					this.OnOperateManNamesChanging(value);
					this.SendPropertyChanging();
					this._OperateManNames = value;
					this.SendPropertyChanged("OperateManNames");
					this.OnOperateManNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="isFiled", Storage="_IsFiled", DbType="Bit")]
		public System.Nullable<bool> IsFiled
		{
			get
			{
				return this._IsFiled;
			}
			set
			{
				if ((this._IsFiled != value))
				{
					this.OnIsFiledChanging(value);
					this.SendPropertyChanging();
					this._IsFiled = value;
					this.SendPropertyChanged("IsFiled");
					this.OnIsFiledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Base_Depart", Storage="_Base_Depart", ThisKey="DepartId", OtherKey="DepartId", IsForeignKey=true)]
		public Base_Depart Base_Depart
		{
			get
			{
				return this._Base_Depart.Entity;
			}
			set
			{
				Base_Depart previousValue = this._Base_Depart.Entity;
				if (((previousValue != value) 
							|| (this._Base_Depart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Depart.Entity = null;
						previousValue.Hazard_HiddenHazard.Remove(this);
					}
					this._Base_Depart.Entity = value;
					if ((value != null))
					{
						value.Hazard_HiddenHazard.Add(this);
						this._DepartId = value.DepartId;
					}
					else
					{
						this._DepartId = default(string);
					}
					this.SendPropertyChanged("Base_Depart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Base_HiddenHazardType", Storage="_Base_HiddenHazardType", ThisKey="HiddenHazardTypeId", OtherKey="HiddenHazardTypeId", IsForeignKey=true)]
		public Base_HiddenHazardType Base_HiddenHazardType
		{
			get
			{
				return this._Base_HiddenHazardType.Entity;
			}
			set
			{
				Base_HiddenHazardType previousValue = this._Base_HiddenHazardType.Entity;
				if (((previousValue != value) 
							|| (this._Base_HiddenHazardType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_HiddenHazardType.Entity = null;
						previousValue.Hazard_HiddenHazard.Remove(this);
					}
					this._Base_HiddenHazardType.Entity = value;
					if ((value != null))
					{
						value.Hazard_HiddenHazard.Add(this);
						this._HiddenHazardTypeId = value.HiddenHazardTypeId;
					}
					else
					{
						this._HiddenHazardTypeId = default(string);
					}
					this.SendPropertyChanged("Base_HiddenHazardType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.Hazard_HiddenHazard.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.Hazard_HiddenHazard.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Hazard_HiddenHazard.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Hazard_HiddenHazard.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Sys_User", Storage="_Sys_User", ThisKey="CorrectManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Hazard_HiddenHazard.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Hazard_HiddenHazard.Add(this);
						this._CorrectManId = value.UserId;
					}
					else
					{
						this._CorrectManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Sys_User_AcceptanceMan", Storage="_AcceptanceMan", ThisKey="AcceptanceManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User AcceptanceMan
		{
			get
			{
				return this._AcceptanceMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._AcceptanceMan.Entity;
				if (((previousValue != value) 
							|| (this._AcceptanceMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcceptanceMan.Entity = null;
						previousValue.Hazard_HiddenHazard_Sys_User_AcceptanceMan.Remove(this);
					}
					this._AcceptanceMan.Entity = value;
					if ((value != null))
					{
						value.Hazard_HiddenHazard_Sys_User_AcceptanceMan.Add(this);
						this._AcceptanceManId = value.UserId;
					}
					else
					{
						this._AcceptanceManId = default(string);
					}
					this.SendPropertyChanged("AcceptanceMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Sys_User_AuditMan", Storage="_AuditMan", ThisKey="AuditManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User AuditMan
		{
			get
			{
				return this._AuditMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._AuditMan.Entity;
				if (((previousValue != value) 
							|| (this._AuditMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AuditMan.Entity = null;
						previousValue.Hazard_HiddenHazard_Sys_User_AuditMan.Remove(this);
					}
					this._AuditMan.Entity = value;
					if ((value != null))
					{
						value.Hazard_HiddenHazard_Sys_User_AuditMan.Add(this);
						this._AuditManId = value.UserId;
					}
					else
					{
						this._AuditManId = default(string);
					}
					this.SendPropertyChanged("AuditMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Sys_User_FindMan", Storage="_FindMan", ThisKey="FindManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User FindMan
		{
			get
			{
				return this._FindMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._FindMan.Entity;
				if (((previousValue != value) 
							|| (this._FindMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FindMan.Entity = null;
						previousValue.Hazard_HiddenHazard_Sys_User_FindMan.Remove(this);
					}
					this._FindMan.Entity = value;
					if ((value != null))
					{
						value.Hazard_HiddenHazard_Sys_User_FindMan.Add(this);
						this._FindManId = value.UserId;
					}
					else
					{
						this._FindManId = default(string);
					}
					this.SendPropertyChanged("FindMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Sys_User_QHSEAuditMan", Storage="_QHSEAuditMan", ThisKey="QHSEAuditManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User QHSEAuditMan
		{
			get
			{
				return this._QHSEAuditMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._QHSEAuditMan.Entity;
				if (((previousValue != value) 
							|| (this._QHSEAuditMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QHSEAuditMan.Entity = null;
						previousValue.Hazard_HiddenHazard_Sys_User_QHSEAuditMan.Remove(this);
					}
					this._QHSEAuditMan.Entity = value;
					if ((value != null))
					{
						value.Hazard_HiddenHazard_Sys_User_QHSEAuditMan.Add(this);
						this._QHSEAuditManId = value.UserId;
					}
					else
					{
						this._QHSEAuditManId = default(string);
					}
					this.SendPropertyChanged("QHSEAuditMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazardDelay_Hazard_HiddenHazard", Storage="_Hazard_HiddenHazardDelay", ThisKey="HiddenHazardId", OtherKey="HiddenHazardId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_HiddenHazardDelay> Hazard_HiddenHazardDelay
		{
			get
			{
				return this._Hazard_HiddenHazardDelay;
			}
			set
			{
				this._Hazard_HiddenHazardDelay.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskList_Hazard_HiddenHazard", Storage="_Hazard_RiskList", ThisKey="HiddenHazardId", OtherKey="HiddenHazardId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_RiskList> Hazard_RiskList
		{
			get
			{
				return this._Hazard_RiskList;
			}
			set
			{
				this._Hazard_RiskList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hazard_HiddenHazardDelay(Hazard_HiddenHazardDelay entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_HiddenHazard = this;
		}
		
		private void detach_Hazard_HiddenHazardDelay(Hazard_HiddenHazardDelay entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_HiddenHazard = null;
		}
		
		private void attach_Hazard_RiskList(Hazard_RiskList entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_HiddenHazard = this;
		}
		
		private void detach_Hazard_RiskList(Hazard_RiskList entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_HiddenHazard = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hazard_HiddenHazardDelay")]
	public partial class Hazard_HiddenHazardDelay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DelayId;
		
		private string _HiddenHazardId;
		
		private string _ApplicantManId;
		
		private string _DelayReasons;
		
		private System.Nullable<System.DateTime> _LimitTime;
		
		private string _InstallAuditManId;
		
		private System.Nullable<System.DateTime> _InstallAuditTime;
		
		private string _InstallOpinion;
		
		private string _QHSEAuditManId;
		
		private System.Nullable<System.DateTime> _QHSEAuditTime;
		
		private string _QHSEOpinion;
		
		private string _LeaderManId;
		
		private System.Nullable<System.DateTime> _LeaderTime;
		
		private string _LeaderOpinion;
		
		private string _States;
		
		private System.Nullable<System.DateTime> _OldLimitTime;
		
		private EntityRef<Hazard_HiddenHazard> _Hazard_HiddenHazard;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _InstallAuditMan;
		
		private EntityRef<Sys_User> _LeaderMan;
		
		private EntityRef<Sys_User> _QHSEAuditMan;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDelayIdChanging(string value);
    partial void OnDelayIdChanged();
    partial void OnHiddenHazardIdChanging(string value);
    partial void OnHiddenHazardIdChanged();
    partial void OnApplicantManIdChanging(string value);
    partial void OnApplicantManIdChanged();
    partial void OnDelayReasonsChanging(string value);
    partial void OnDelayReasonsChanged();
    partial void OnLimitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLimitTimeChanged();
    partial void OnInstallAuditManIdChanging(string value);
    partial void OnInstallAuditManIdChanged();
    partial void OnInstallAuditTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallAuditTimeChanged();
    partial void OnInstallOpinionChanging(string value);
    partial void OnInstallOpinionChanged();
    partial void OnQHSEAuditManIdChanging(string value);
    partial void OnQHSEAuditManIdChanged();
    partial void OnQHSEAuditTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnQHSEAuditTimeChanged();
    partial void OnQHSEOpinionChanging(string value);
    partial void OnQHSEOpinionChanged();
    partial void OnLeaderManIdChanging(string value);
    partial void OnLeaderManIdChanged();
    partial void OnLeaderTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaderTimeChanged();
    partial void OnLeaderOpinionChanging(string value);
    partial void OnLeaderOpinionChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnOldLimitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOldLimitTimeChanged();
    #endregion
		
		public Hazard_HiddenHazardDelay()
		{
			this._Hazard_HiddenHazard = default(EntityRef<Hazard_HiddenHazard>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._InstallAuditMan = default(EntityRef<Sys_User>);
			this._LeaderMan = default(EntityRef<Sys_User>);
			this._QHSEAuditMan = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelayId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DelayId
		{
			get
			{
				return this._DelayId;
			}
			set
			{
				if ((this._DelayId != value))
				{
					this.OnDelayIdChanging(value);
					this.SendPropertyChanging();
					this._DelayId = value;
					this.SendPropertyChanged("DelayId");
					this.OnDelayIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HiddenHazardId
		{
			get
			{
				return this._HiddenHazardId;
			}
			set
			{
				if ((this._HiddenHazardId != value))
				{
					if (this._Hazard_HiddenHazard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHiddenHazardIdChanging(value);
					this.SendPropertyChanging();
					this._HiddenHazardId = value;
					this.SendPropertyChanged("HiddenHazardId");
					this.OnHiddenHazardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantManId", DbType="NVarChar(50)")]
		public string ApplicantManId
		{
			get
			{
				return this._ApplicantManId;
			}
			set
			{
				if ((this._ApplicantManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantManIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicantManId = value;
					this.SendPropertyChanged("ApplicantManId");
					this.OnApplicantManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelayReasons", DbType="NVarChar(500)")]
		public string DelayReasons
		{
			get
			{
				return this._DelayReasons;
			}
			set
			{
				if ((this._DelayReasons != value))
				{
					this.OnDelayReasonsChanging(value);
					this.SendPropertyChanging();
					this._DelayReasons = value;
					this.SendPropertyChanged("DelayReasons");
					this.OnDelayReasonsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitTime
		{
			get
			{
				return this._LimitTime;
			}
			set
			{
				if ((this._LimitTime != value))
				{
					this.OnLimitTimeChanging(value);
					this.SendPropertyChanging();
					this._LimitTime = value;
					this.SendPropertyChanged("LimitTime");
					this.OnLimitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAuditManId", DbType="NVarChar(50)")]
		public string InstallAuditManId
		{
			get
			{
				return this._InstallAuditManId;
			}
			set
			{
				if ((this._InstallAuditManId != value))
				{
					if (this._InstallAuditMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallAuditManIdChanging(value);
					this.SendPropertyChanging();
					this._InstallAuditManId = value;
					this.SendPropertyChanged("InstallAuditManId");
					this.OnInstallAuditManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAuditTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> InstallAuditTime
		{
			get
			{
				return this._InstallAuditTime;
			}
			set
			{
				if ((this._InstallAuditTime != value))
				{
					this.OnInstallAuditTimeChanging(value);
					this.SendPropertyChanging();
					this._InstallAuditTime = value;
					this.SendPropertyChanged("InstallAuditTime");
					this.OnInstallAuditTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallOpinion", DbType="NVarChar(500)")]
		public string InstallOpinion
		{
			get
			{
				return this._InstallOpinion;
			}
			set
			{
				if ((this._InstallOpinion != value))
				{
					this.OnInstallOpinionChanging(value);
					this.SendPropertyChanging();
					this._InstallOpinion = value;
					this.SendPropertyChanged("InstallOpinion");
					this.OnInstallOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QHSEAuditManId", DbType="NVarChar(50)")]
		public string QHSEAuditManId
		{
			get
			{
				return this._QHSEAuditManId;
			}
			set
			{
				if ((this._QHSEAuditManId != value))
				{
					if (this._QHSEAuditMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQHSEAuditManIdChanging(value);
					this.SendPropertyChanging();
					this._QHSEAuditManId = value;
					this.SendPropertyChanged("QHSEAuditManId");
					this.OnQHSEAuditManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QHSEAuditTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> QHSEAuditTime
		{
			get
			{
				return this._QHSEAuditTime;
			}
			set
			{
				if ((this._QHSEAuditTime != value))
				{
					this.OnQHSEAuditTimeChanging(value);
					this.SendPropertyChanging();
					this._QHSEAuditTime = value;
					this.SendPropertyChanged("QHSEAuditTime");
					this.OnQHSEAuditTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QHSEOpinion", DbType="NVarChar(500)")]
		public string QHSEOpinion
		{
			get
			{
				return this._QHSEOpinion;
			}
			set
			{
				if ((this._QHSEOpinion != value))
				{
					this.OnQHSEOpinionChanging(value);
					this.SendPropertyChanging();
					this._QHSEOpinion = value;
					this.SendPropertyChanged("QHSEOpinion");
					this.OnQHSEOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderManId", DbType="NVarChar(50)")]
		public string LeaderManId
		{
			get
			{
				return this._LeaderManId;
			}
			set
			{
				if ((this._LeaderManId != value))
				{
					if (this._LeaderMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeaderManIdChanging(value);
					this.SendPropertyChanging();
					this._LeaderManId = value;
					this.SendPropertyChanged("LeaderManId");
					this.OnLeaderManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LeaderTime
		{
			get
			{
				return this._LeaderTime;
			}
			set
			{
				if ((this._LeaderTime != value))
				{
					this.OnLeaderTimeChanging(value);
					this.SendPropertyChanging();
					this._LeaderTime = value;
					this.SendPropertyChanged("LeaderTime");
					this.OnLeaderTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderOpinion", DbType="NVarChar(500)")]
		public string LeaderOpinion
		{
			get
			{
				return this._LeaderOpinion;
			}
			set
			{
				if ((this._LeaderOpinion != value))
				{
					this.OnLeaderOpinionChanging(value);
					this.SendPropertyChanging();
					this._LeaderOpinion = value;
					this.SendPropertyChanged("LeaderOpinion");
					this.OnLeaderOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldLimitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OldLimitTime
		{
			get
			{
				return this._OldLimitTime;
			}
			set
			{
				if ((this._OldLimitTime != value))
				{
					this.OnOldLimitTimeChanging(value);
					this.SendPropertyChanging();
					this._OldLimitTime = value;
					this.SendPropertyChanged("OldLimitTime");
					this.OnOldLimitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazardDelay_Hazard_HiddenHazard", Storage="_Hazard_HiddenHazard", ThisKey="HiddenHazardId", OtherKey="HiddenHazardId", IsForeignKey=true)]
		public Hazard_HiddenHazard Hazard_HiddenHazard
		{
			get
			{
				return this._Hazard_HiddenHazard.Entity;
			}
			set
			{
				Hazard_HiddenHazard previousValue = this._Hazard_HiddenHazard.Entity;
				if (((previousValue != value) 
							|| (this._Hazard_HiddenHazard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hazard_HiddenHazard.Entity = null;
						previousValue.Hazard_HiddenHazardDelay.Remove(this);
					}
					this._Hazard_HiddenHazard.Entity = value;
					if ((value != null))
					{
						value.Hazard_HiddenHazardDelay.Add(this);
						this._HiddenHazardId = value.HiddenHazardId;
					}
					else
					{
						this._HiddenHazardId = default(string);
					}
					this.SendPropertyChanged("Hazard_HiddenHazard");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazardDelay_Sys_User", Storage="_Sys_User", ThisKey="ApplicantManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Hazard_HiddenHazardDelay.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Hazard_HiddenHazardDelay.Add(this);
						this._ApplicantManId = value.UserId;
					}
					else
					{
						this._ApplicantManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazardDelay_Sys_User_InstallAuditMan", Storage="_InstallAuditMan", ThisKey="InstallAuditManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User InstallAuditMan
		{
			get
			{
				return this._InstallAuditMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._InstallAuditMan.Entity;
				if (((previousValue != value) 
							|| (this._InstallAuditMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstallAuditMan.Entity = null;
						previousValue.Hazard_HiddenHazardDelay_Sys_User_InstallAuditMan.Remove(this);
					}
					this._InstallAuditMan.Entity = value;
					if ((value != null))
					{
						value.Hazard_HiddenHazardDelay_Sys_User_InstallAuditMan.Add(this);
						this._InstallAuditManId = value.UserId;
					}
					else
					{
						this._InstallAuditManId = default(string);
					}
					this.SendPropertyChanged("InstallAuditMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazardDelay_Sys_User_LeaderMan", Storage="_LeaderMan", ThisKey="LeaderManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User LeaderMan
		{
			get
			{
				return this._LeaderMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._LeaderMan.Entity;
				if (((previousValue != value) 
							|| (this._LeaderMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LeaderMan.Entity = null;
						previousValue.Hazard_HiddenHazardDelay_Sys_User_LeaderMan.Remove(this);
					}
					this._LeaderMan.Entity = value;
					if ((value != null))
					{
						value.Hazard_HiddenHazardDelay_Sys_User_LeaderMan.Add(this);
						this._LeaderManId = value.UserId;
					}
					else
					{
						this._LeaderManId = default(string);
					}
					this.SendPropertyChanged("LeaderMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazardDelay_Sys_User1", Storage="_QHSEAuditMan", ThisKey="QHSEAuditManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User QHSEAuditMan
		{
			get
			{
				return this._QHSEAuditMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._QHSEAuditMan.Entity;
				if (((previousValue != value) 
							|| (this._QHSEAuditMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QHSEAuditMan.Entity = null;
						previousValue.Hazard_HiddenHazardDelay_Sys_User1.Remove(this);
					}
					this._QHSEAuditMan.Entity = value;
					if ((value != null))
					{
						value.Hazard_HiddenHazardDelay_Sys_User1.Add(this);
						this._QHSEAuditManId = value.UserId;
					}
					else
					{
						this._QHSEAuditManId = default(string);
					}
					this.SendPropertyChanged("QHSEAuditMan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hazard_JHAItem")]
	public partial class Hazard_JHAItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JHAItemId;
		
		private System.Nullable<int> _SortIndex;
		
		private string _JobStep;
		
		private string _PossibleAccidents;
		
		private string _NowControlMeasures;
		
		private System.Nullable<decimal> _HazardJudge_L;
		
		private System.Nullable<decimal> _HazardJudge_S;
		
		private System.Nullable<decimal> _HazardJudge_R;
		
		private string _RiskLevel;
		
		private string _ControlMeasures;
		
		private string _JobActivityId;
		
		private System.Nullable<decimal> _HazardJudge_L1;
		
		private System.Nullable<decimal> _HazardJudge_L2;
		
		private System.Nullable<decimal> _HazardJudge_L3;
		
		private System.Nullable<decimal> _HazardJudge_L4;
		
		private System.Nullable<decimal> _HazardJudge_S1;
		
		private System.Nullable<decimal> _HazardJudge_S2;
		
		private System.Nullable<decimal> _HazardJudge_S3;
		
		private System.Nullable<decimal> _HazardJudge_S4;
		
		private System.Nullable<decimal> _HazardJudge_S5;
		
		private string _ManagementMeasures;
		
		private string _ProtectiveMeasures;
		
		private string _OtherMeasures;
		
		private string _Method;
		
		private System.Nullable<decimal> _LECJudge_L;
		
		private System.Nullable<decimal> _LECJudge_E;
		
		private System.Nullable<decimal> _LECJudge_C;
		
		private System.Nullable<decimal> _LECJudge_D;
		
		private EntityRef<Base_JobActivity> _Base_JobActivity;
		
		private EntitySet<Hazard_JHAItemRecord> _Hazard_JHAItemRecord;
		
		private EntitySet<Hazard_RiskList> _Hazard_RiskList;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJHAItemIdChanging(string value);
    partial void OnJHAItemIdChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnJobStepChanging(string value);
    partial void OnJobStepChanged();
    partial void OnPossibleAccidentsChanging(string value);
    partial void OnPossibleAccidentsChanged();
    partial void OnNowControlMeasuresChanging(string value);
    partial void OnNowControlMeasuresChanged();
    partial void OnHazardJudge_LChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_LChanged();
    partial void OnHazardJudge_SChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_SChanged();
    partial void OnHazardJudge_RChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_RChanged();
    partial void OnRiskLevelChanging(string value);
    partial void OnRiskLevelChanged();
    partial void OnControlMeasuresChanging(string value);
    partial void OnControlMeasuresChanged();
    partial void OnJobActivityIdChanging(string value);
    partial void OnJobActivityIdChanged();
    partial void OnHazardJudge_L1Changing(System.Nullable<decimal> value);
    partial void OnHazardJudge_L1Changed();
    partial void OnHazardJudge_L2Changing(System.Nullable<decimal> value);
    partial void OnHazardJudge_L2Changed();
    partial void OnHazardJudge_L3Changing(System.Nullable<decimal> value);
    partial void OnHazardJudge_L3Changed();
    partial void OnHazardJudge_L4Changing(System.Nullable<decimal> value);
    partial void OnHazardJudge_L4Changed();
    partial void OnHazardJudge_S1Changing(System.Nullable<decimal> value);
    partial void OnHazardJudge_S1Changed();
    partial void OnHazardJudge_S2Changing(System.Nullable<decimal> value);
    partial void OnHazardJudge_S2Changed();
    partial void OnHazardJudge_S3Changing(System.Nullable<decimal> value);
    partial void OnHazardJudge_S3Changed();
    partial void OnHazardJudge_S4Changing(System.Nullable<decimal> value);
    partial void OnHazardJudge_S4Changed();
    partial void OnHazardJudge_S5Changing(System.Nullable<decimal> value);
    partial void OnHazardJudge_S5Changed();
    partial void OnManagementMeasuresChanging(string value);
    partial void OnManagementMeasuresChanged();
    partial void OnProtectiveMeasuresChanging(string value);
    partial void OnProtectiveMeasuresChanged();
    partial void OnOtherMeasuresChanging(string value);
    partial void OnOtherMeasuresChanged();
    partial void OnMethodChanging(string value);
    partial void OnMethodChanged();
    partial void OnLECJudge_LChanging(System.Nullable<decimal> value);
    partial void OnLECJudge_LChanged();
    partial void OnLECJudge_EChanging(System.Nullable<decimal> value);
    partial void OnLECJudge_EChanged();
    partial void OnLECJudge_CChanging(System.Nullable<decimal> value);
    partial void OnLECJudge_CChanged();
    partial void OnLECJudge_DChanging(System.Nullable<decimal> value);
    partial void OnLECJudge_DChanged();
    #endregion
		
		public Hazard_JHAItem()
		{
			this._Base_JobActivity = default(EntityRef<Base_JobActivity>);
			this._Hazard_JHAItemRecord = new EntitySet<Hazard_JHAItemRecord>(new Action<Hazard_JHAItemRecord>(this.attach_Hazard_JHAItemRecord), new Action<Hazard_JHAItemRecord>(this.detach_Hazard_JHAItemRecord));
			this._Hazard_RiskList = new EntitySet<Hazard_RiskList>(new Action<Hazard_RiskList>(this.attach_Hazard_RiskList), new Action<Hazard_RiskList>(this.detach_Hazard_RiskList));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JHAItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JHAItemId
		{
			get
			{
				return this._JHAItemId;
			}
			set
			{
				if ((this._JHAItemId != value))
				{
					this.OnJHAItemIdChanging(value);
					this.SendPropertyChanging();
					this._JHAItemId = value;
					this.SendPropertyChanged("JHAItemId");
					this.OnJHAItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStep", DbType="NVarChar(50)")]
		public string JobStep
		{
			get
			{
				return this._JobStep;
			}
			set
			{
				if ((this._JobStep != value))
				{
					this.OnJobStepChanging(value);
					this.SendPropertyChanging();
					this._JobStep = value;
					this.SendPropertyChanged("JobStep");
					this.OnJobStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossibleAccidents", DbType="NVarChar(500)")]
		public string PossibleAccidents
		{
			get
			{
				return this._PossibleAccidents;
			}
			set
			{
				if ((this._PossibleAccidents != value))
				{
					this.OnPossibleAccidentsChanging(value);
					this.SendPropertyChanging();
					this._PossibleAccidents = value;
					this.SendPropertyChanged("PossibleAccidents");
					this.OnPossibleAccidentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NowControlMeasures", DbType="NVarChar(800)")]
		public string NowControlMeasures
		{
			get
			{
				return this._NowControlMeasures;
			}
			set
			{
				if ((this._NowControlMeasures != value))
				{
					this.OnNowControlMeasuresChanging(value);
					this.SendPropertyChanging();
					this._NowControlMeasures = value;
					this.SendPropertyChanged("NowControlMeasures");
					this.OnNowControlMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_L", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_L
		{
			get
			{
				return this._HazardJudge_L;
			}
			set
			{
				if ((this._HazardJudge_L != value))
				{
					this.OnHazardJudge_LChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_L = value;
					this.SendPropertyChanged("HazardJudge_L");
					this.OnHazardJudge_LChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S
		{
			get
			{
				return this._HazardJudge_S;
			}
			set
			{
				if ((this._HazardJudge_S != value))
				{
					this.OnHazardJudge_SChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_S = value;
					this.SendPropertyChanged("HazardJudge_S");
					this.OnHazardJudge_SChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_R", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_R
		{
			get
			{
				return this._HazardJudge_R;
			}
			set
			{
				if ((this._HazardJudge_R != value))
				{
					this.OnHazardJudge_RChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_R = value;
					this.SendPropertyChanged("HazardJudge_R");
					this.OnHazardJudge_RChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="NVarChar(50)")]
		public string RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this.OnRiskLevelChanging(value);
					this.SendPropertyChanging();
					this._RiskLevel = value;
					this.SendPropertyChanged("RiskLevel");
					this.OnRiskLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlMeasures", DbType="NVarChar(800)")]
		public string ControlMeasures
		{
			get
			{
				return this._ControlMeasures;
			}
			set
			{
				if ((this._ControlMeasures != value))
				{
					this.OnControlMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ControlMeasures = value;
					this.SendPropertyChanged("ControlMeasures");
					this.OnControlMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobActivityId", DbType="NVarChar(50)")]
		public string JobActivityId
		{
			get
			{
				return this._JobActivityId;
			}
			set
			{
				if ((this._JobActivityId != value))
				{
					if (this._Base_JobActivity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobActivityIdChanging(value);
					this.SendPropertyChanging();
					this._JobActivityId = value;
					this.SendPropertyChanged("JobActivityId");
					this.OnJobActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_L1", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_L1
		{
			get
			{
				return this._HazardJudge_L1;
			}
			set
			{
				if ((this._HazardJudge_L1 != value))
				{
					this.OnHazardJudge_L1Changing(value);
					this.SendPropertyChanging();
					this._HazardJudge_L1 = value;
					this.SendPropertyChanged("HazardJudge_L1");
					this.OnHazardJudge_L1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_L2", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_L2
		{
			get
			{
				return this._HazardJudge_L2;
			}
			set
			{
				if ((this._HazardJudge_L2 != value))
				{
					this.OnHazardJudge_L2Changing(value);
					this.SendPropertyChanging();
					this._HazardJudge_L2 = value;
					this.SendPropertyChanged("HazardJudge_L2");
					this.OnHazardJudge_L2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_L3", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_L3
		{
			get
			{
				return this._HazardJudge_L3;
			}
			set
			{
				if ((this._HazardJudge_L3 != value))
				{
					this.OnHazardJudge_L3Changing(value);
					this.SendPropertyChanging();
					this._HazardJudge_L3 = value;
					this.SendPropertyChanged("HazardJudge_L3");
					this.OnHazardJudge_L3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_L4", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_L4
		{
			get
			{
				return this._HazardJudge_L4;
			}
			set
			{
				if ((this._HazardJudge_L4 != value))
				{
					this.OnHazardJudge_L4Changing(value);
					this.SendPropertyChanging();
					this._HazardJudge_L4 = value;
					this.SendPropertyChanged("HazardJudge_L4");
					this.OnHazardJudge_L4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S1", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S1
		{
			get
			{
				return this._HazardJudge_S1;
			}
			set
			{
				if ((this._HazardJudge_S1 != value))
				{
					this.OnHazardJudge_S1Changing(value);
					this.SendPropertyChanging();
					this._HazardJudge_S1 = value;
					this.SendPropertyChanged("HazardJudge_S1");
					this.OnHazardJudge_S1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S2", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S2
		{
			get
			{
				return this._HazardJudge_S2;
			}
			set
			{
				if ((this._HazardJudge_S2 != value))
				{
					this.OnHazardJudge_S2Changing(value);
					this.SendPropertyChanging();
					this._HazardJudge_S2 = value;
					this.SendPropertyChanged("HazardJudge_S2");
					this.OnHazardJudge_S2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S3", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S3
		{
			get
			{
				return this._HazardJudge_S3;
			}
			set
			{
				if ((this._HazardJudge_S3 != value))
				{
					this.OnHazardJudge_S3Changing(value);
					this.SendPropertyChanging();
					this._HazardJudge_S3 = value;
					this.SendPropertyChanged("HazardJudge_S3");
					this.OnHazardJudge_S3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S4", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S4
		{
			get
			{
				return this._HazardJudge_S4;
			}
			set
			{
				if ((this._HazardJudge_S4 != value))
				{
					this.OnHazardJudge_S4Changing(value);
					this.SendPropertyChanging();
					this._HazardJudge_S4 = value;
					this.SendPropertyChanged("HazardJudge_S4");
					this.OnHazardJudge_S4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S5", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S5
		{
			get
			{
				return this._HazardJudge_S5;
			}
			set
			{
				if ((this._HazardJudge_S5 != value))
				{
					this.OnHazardJudge_S5Changing(value);
					this.SendPropertyChanging();
					this._HazardJudge_S5 = value;
					this.SendPropertyChanged("HazardJudge_S5");
					this.OnHazardJudge_S5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagementMeasures", DbType="NVarChar(800)")]
		public string ManagementMeasures
		{
			get
			{
				return this._ManagementMeasures;
			}
			set
			{
				if ((this._ManagementMeasures != value))
				{
					this.OnManagementMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ManagementMeasures = value;
					this.SendPropertyChanged("ManagementMeasures");
					this.OnManagementMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtectiveMeasures", DbType="NVarChar(800)")]
		public string ProtectiveMeasures
		{
			get
			{
				return this._ProtectiveMeasures;
			}
			set
			{
				if ((this._ProtectiveMeasures != value))
				{
					this.OnProtectiveMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ProtectiveMeasures = value;
					this.SendPropertyChanged("ProtectiveMeasures");
					this.OnProtectiveMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(800)")]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this.OnOtherMeasuresChanging(value);
					this.SendPropertyChanging();
					this._OtherMeasures = value;
					this.SendPropertyChanged("OtherMeasures");
					this.OnOtherMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Method", DbType="NVarChar(10)")]
		public string Method
		{
			get
			{
				return this._Method;
			}
			set
			{
				if ((this._Method != value))
				{
					this.OnMethodChanging(value);
					this.SendPropertyChanging();
					this._Method = value;
					this.SendPropertyChanged("Method");
					this.OnMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LECJudge_L", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> LECJudge_L
		{
			get
			{
				return this._LECJudge_L;
			}
			set
			{
				if ((this._LECJudge_L != value))
				{
					this.OnLECJudge_LChanging(value);
					this.SendPropertyChanging();
					this._LECJudge_L = value;
					this.SendPropertyChanged("LECJudge_L");
					this.OnLECJudge_LChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LECJudge_E", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> LECJudge_E
		{
			get
			{
				return this._LECJudge_E;
			}
			set
			{
				if ((this._LECJudge_E != value))
				{
					this.OnLECJudge_EChanging(value);
					this.SendPropertyChanging();
					this._LECJudge_E = value;
					this.SendPropertyChanged("LECJudge_E");
					this.OnLECJudge_EChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LECJudge_C", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> LECJudge_C
		{
			get
			{
				return this._LECJudge_C;
			}
			set
			{
				if ((this._LECJudge_C != value))
				{
					this.OnLECJudge_CChanging(value);
					this.SendPropertyChanging();
					this._LECJudge_C = value;
					this.SendPropertyChanged("LECJudge_C");
					this.OnLECJudge_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LECJudge_D", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> LECJudge_D
		{
			get
			{
				return this._LECJudge_D;
			}
			set
			{
				if ((this._LECJudge_D != value))
				{
					this.OnLECJudge_DChanging(value);
					this.SendPropertyChanging();
					this._LECJudge_D = value;
					this.SendPropertyChanged("LECJudge_D");
					this.OnLECJudge_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_JHAItem_Base_JobActivity", Storage="_Base_JobActivity", ThisKey="JobActivityId", OtherKey="JobActivityId", IsForeignKey=true)]
		public Base_JobActivity Base_JobActivity
		{
			get
			{
				return this._Base_JobActivity.Entity;
			}
			set
			{
				Base_JobActivity previousValue = this._Base_JobActivity.Entity;
				if (((previousValue != value) 
							|| (this._Base_JobActivity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_JobActivity.Entity = null;
						previousValue.Hazard_JHAItem.Remove(this);
					}
					this._Base_JobActivity.Entity = value;
					if ((value != null))
					{
						value.Hazard_JHAItem.Add(this);
						this._JobActivityId = value.JobActivityId;
					}
					else
					{
						this._JobActivityId = default(string);
					}
					this.SendPropertyChanged("Base_JobActivity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_JHAItemRecord_Hazard_JHAItem", Storage="_Hazard_JHAItemRecord", ThisKey="JHAItemId", OtherKey="JHAItemId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_JHAItemRecord> Hazard_JHAItemRecord
		{
			get
			{
				return this._Hazard_JHAItemRecord;
			}
			set
			{
				this._Hazard_JHAItemRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskList_Hazard_JHAItem", Storage="_Hazard_RiskList", ThisKey="JHAItemId", OtherKey="JHAItemId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_RiskList> Hazard_RiskList
		{
			get
			{
				return this._Hazard_RiskList;
			}
			set
			{
				this._Hazard_RiskList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hazard_JHAItemRecord(Hazard_JHAItemRecord entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_JHAItem = this;
		}
		
		private void detach_Hazard_JHAItemRecord(Hazard_JHAItemRecord entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_JHAItem = null;
		}
		
		private void attach_Hazard_RiskList(Hazard_RiskList entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_JHAItem = this;
		}
		
		private void detach_Hazard_RiskList(Hazard_RiskList entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_JHAItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hazard_JHAItemRecord")]
	public partial class Hazard_JHAItemRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JHAItemRecordId;
		
		private string _JHAItemId;
		
		private string _EvaluatorId;
		
		private System.Nullable<System.DateTime> _EvaluationTime;
		
		private string _RiskLevel;
		
		private EntityRef<Hazard_JHAItem> _Hazard_JHAItem;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJHAItemRecordIdChanging(string value);
    partial void OnJHAItemRecordIdChanged();
    partial void OnJHAItemIdChanging(string value);
    partial void OnJHAItemIdChanged();
    partial void OnEvaluatorIdChanging(string value);
    partial void OnEvaluatorIdChanged();
    partial void OnEvaluationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEvaluationTimeChanged();
    partial void OnRiskLevelChanging(string value);
    partial void OnRiskLevelChanged();
    #endregion
		
		public Hazard_JHAItemRecord()
		{
			this._Hazard_JHAItem = default(EntityRef<Hazard_JHAItem>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JHAItemRecordId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JHAItemRecordId
		{
			get
			{
				return this._JHAItemRecordId;
			}
			set
			{
				if ((this._JHAItemRecordId != value))
				{
					this.OnJHAItemRecordIdChanging(value);
					this.SendPropertyChanging();
					this._JHAItemRecordId = value;
					this.SendPropertyChanged("JHAItemRecordId");
					this.OnJHAItemRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JHAItemId", DbType="NVarChar(50)")]
		public string JHAItemId
		{
			get
			{
				return this._JHAItemId;
			}
			set
			{
				if ((this._JHAItemId != value))
				{
					if (this._Hazard_JHAItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJHAItemIdChanging(value);
					this.SendPropertyChanging();
					this._JHAItemId = value;
					this.SendPropertyChanged("JHAItemId");
					this.OnJHAItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatorId", DbType="NVarChar(50)")]
		public string EvaluatorId
		{
			get
			{
				return this._EvaluatorId;
			}
			set
			{
				if ((this._EvaluatorId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluatorIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluatorId = value;
					this.SendPropertyChanged("EvaluatorId");
					this.OnEvaluatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EvaluationTime
		{
			get
			{
				return this._EvaluationTime;
			}
			set
			{
				if ((this._EvaluationTime != value))
				{
					this.OnEvaluationTimeChanging(value);
					this.SendPropertyChanging();
					this._EvaluationTime = value;
					this.SendPropertyChanged("EvaluationTime");
					this.OnEvaluationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="NVarChar(50)")]
		public string RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this.OnRiskLevelChanging(value);
					this.SendPropertyChanging();
					this._RiskLevel = value;
					this.SendPropertyChanged("RiskLevel");
					this.OnRiskLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_JHAItemRecord_Hazard_JHAItem", Storage="_Hazard_JHAItem", ThisKey="JHAItemId", OtherKey="JHAItemId", IsForeignKey=true)]
		public Hazard_JHAItem Hazard_JHAItem
		{
			get
			{
				return this._Hazard_JHAItem.Entity;
			}
			set
			{
				Hazard_JHAItem previousValue = this._Hazard_JHAItem.Entity;
				if (((previousValue != value) 
							|| (this._Hazard_JHAItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hazard_JHAItem.Entity = null;
						previousValue.Hazard_JHAItemRecord.Remove(this);
					}
					this._Hazard_JHAItem.Entity = value;
					if ((value != null))
					{
						value.Hazard_JHAItemRecord.Add(this);
						this._JHAItemId = value.JHAItemId;
					}
					else
					{
						this._JHAItemId = default(string);
					}
					this.SendPropertyChanged("Hazard_JHAItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_JHAItemRecord_Sys_User", Storage="_Sys_User", ThisKey="EvaluatorId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Hazard_JHAItemRecord.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Hazard_JHAItemRecord.Add(this);
						this._EvaluatorId = value.UserId;
					}
					else
					{
						this._EvaluatorId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hazard_LECItem")]
	public partial class Hazard_LECItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LECItemId;
		
		private System.Nullable<int> _SortIndex;
		
		private string _HazardDescription;
		
		private string _PossibleAccidents;
		
		private System.Nullable<decimal> _HazardJudge_L;
		
		private System.Nullable<decimal> _HazardJudge_E;
		
		private System.Nullable<decimal> _HazardJudge_C;
		
		private System.Nullable<decimal> _HazardJudge_D;
		
		private string _RiskLevel;
		
		private string _ControlMeasures;
		
		private string _Remark;
		
		private string _DataId;
		
		private string _DataType;
		
		private string _States;
		
		private string _ManagementMeasures;
		
		private string _ProtectiveMeasures;
		
		private string _OtherMeasures;
		
		private EntitySet<Hazard_LECItemRecord> _Hazard_LECItemRecord;
		
		private EntitySet<Hazard_RiskList> _Hazard_RiskList;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLECItemIdChanging(string value);
    partial void OnLECItemIdChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnHazardDescriptionChanging(string value);
    partial void OnHazardDescriptionChanged();
    partial void OnPossibleAccidentsChanging(string value);
    partial void OnPossibleAccidentsChanged();
    partial void OnHazardJudge_LChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_LChanged();
    partial void OnHazardJudge_EChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_EChanged();
    partial void OnHazardJudge_CChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_CChanged();
    partial void OnHazardJudge_DChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_DChanged();
    partial void OnRiskLevelChanging(string value);
    partial void OnRiskLevelChanged();
    partial void OnControlMeasuresChanging(string value);
    partial void OnControlMeasuresChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnDataIdChanging(string value);
    partial void OnDataIdChanged();
    partial void OnDataTypeChanging(string value);
    partial void OnDataTypeChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnManagementMeasuresChanging(string value);
    partial void OnManagementMeasuresChanged();
    partial void OnProtectiveMeasuresChanging(string value);
    partial void OnProtectiveMeasuresChanged();
    partial void OnOtherMeasuresChanging(string value);
    partial void OnOtherMeasuresChanged();
    #endregion
		
		public Hazard_LECItem()
		{
			this._Hazard_LECItemRecord = new EntitySet<Hazard_LECItemRecord>(new Action<Hazard_LECItemRecord>(this.attach_Hazard_LECItemRecord), new Action<Hazard_LECItemRecord>(this.detach_Hazard_LECItemRecord));
			this._Hazard_RiskList = new EntitySet<Hazard_RiskList>(new Action<Hazard_RiskList>(this.attach_Hazard_RiskList), new Action<Hazard_RiskList>(this.detach_Hazard_RiskList));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LECItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LECItemId
		{
			get
			{
				return this._LECItemId;
			}
			set
			{
				if ((this._LECItemId != value))
				{
					this.OnLECItemIdChanging(value);
					this.SendPropertyChanging();
					this._LECItemId = value;
					this.SendPropertyChanged("LECItemId");
					this.OnLECItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardDescription", DbType="NVarChar(500)")]
		public string HazardDescription
		{
			get
			{
				return this._HazardDescription;
			}
			set
			{
				if ((this._HazardDescription != value))
				{
					this.OnHazardDescriptionChanging(value);
					this.SendPropertyChanging();
					this._HazardDescription = value;
					this.SendPropertyChanged("HazardDescription");
					this.OnHazardDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossibleAccidents", DbType="NVarChar(200)")]
		public string PossibleAccidents
		{
			get
			{
				return this._PossibleAccidents;
			}
			set
			{
				if ((this._PossibleAccidents != value))
				{
					this.OnPossibleAccidentsChanging(value);
					this.SendPropertyChanging();
					this._PossibleAccidents = value;
					this.SendPropertyChanged("PossibleAccidents");
					this.OnPossibleAccidentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_L", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_L
		{
			get
			{
				return this._HazardJudge_L;
			}
			set
			{
				if ((this._HazardJudge_L != value))
				{
					this.OnHazardJudge_LChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_L = value;
					this.SendPropertyChanged("HazardJudge_L");
					this.OnHazardJudge_LChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_E", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_E
		{
			get
			{
				return this._HazardJudge_E;
			}
			set
			{
				if ((this._HazardJudge_E != value))
				{
					this.OnHazardJudge_EChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_E = value;
					this.SendPropertyChanged("HazardJudge_E");
					this.OnHazardJudge_EChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_C", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_C
		{
			get
			{
				return this._HazardJudge_C;
			}
			set
			{
				if ((this._HazardJudge_C != value))
				{
					this.OnHazardJudge_CChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_C = value;
					this.SendPropertyChanged("HazardJudge_C");
					this.OnHazardJudge_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_D", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_D
		{
			get
			{
				return this._HazardJudge_D;
			}
			set
			{
				if ((this._HazardJudge_D != value))
				{
					this.OnHazardJudge_DChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_D = value;
					this.SendPropertyChanged("HazardJudge_D");
					this.OnHazardJudge_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="NVarChar(50)")]
		public string RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this.OnRiskLevelChanging(value);
					this.SendPropertyChanging();
					this._RiskLevel = value;
					this.SendPropertyChanged("RiskLevel");
					this.OnRiskLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlMeasures", DbType="NVarChar(800)")]
		public string ControlMeasures
		{
			get
			{
				return this._ControlMeasures;
			}
			set
			{
				if ((this._ControlMeasures != value))
				{
					this.OnControlMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ControlMeasures = value;
					this.SendPropertyChanged("ControlMeasures");
					this.OnControlMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataId", DbType="NVarChar(50)")]
		public string DataId
		{
			get
			{
				return this._DataId;
			}
			set
			{
				if ((this._DataId != value))
				{
					this.OnDataIdChanging(value);
					this.SendPropertyChanging();
					this._DataId = value;
					this.SendPropertyChanged("DataId");
					this.OnDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataType", DbType="NVarChar(50)")]
		public string DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					this.OnDataTypeChanging(value);
					this.SendPropertyChanging();
					this._DataType = value;
					this.SendPropertyChanged("DataType");
					this.OnDataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagementMeasures", DbType="NVarChar(800)")]
		public string ManagementMeasures
		{
			get
			{
				return this._ManagementMeasures;
			}
			set
			{
				if ((this._ManagementMeasures != value))
				{
					this.OnManagementMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ManagementMeasures = value;
					this.SendPropertyChanged("ManagementMeasures");
					this.OnManagementMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtectiveMeasures", DbType="NVarChar(800)")]
		public string ProtectiveMeasures
		{
			get
			{
				return this._ProtectiveMeasures;
			}
			set
			{
				if ((this._ProtectiveMeasures != value))
				{
					this.OnProtectiveMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ProtectiveMeasures = value;
					this.SendPropertyChanged("ProtectiveMeasures");
					this.OnProtectiveMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(800)")]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this.OnOtherMeasuresChanging(value);
					this.SendPropertyChanging();
					this._OtherMeasures = value;
					this.SendPropertyChanged("OtherMeasures");
					this.OnOtherMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_LECItemRecord_Hazard_LECItem", Storage="_Hazard_LECItemRecord", ThisKey="LECItemId", OtherKey="LECItemId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_LECItemRecord> Hazard_LECItemRecord
		{
			get
			{
				return this._Hazard_LECItemRecord;
			}
			set
			{
				this._Hazard_LECItemRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskList_Hazard_LECItem", Storage="_Hazard_RiskList", ThisKey="LECItemId", OtherKey="LECItemId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_RiskList> Hazard_RiskList
		{
			get
			{
				return this._Hazard_RiskList;
			}
			set
			{
				this._Hazard_RiskList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hazard_LECItemRecord(Hazard_LECItemRecord entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_LECItem = this;
		}
		
		private void detach_Hazard_LECItemRecord(Hazard_LECItemRecord entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_LECItem = null;
		}
		
		private void attach_Hazard_RiskList(Hazard_RiskList entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_LECItem = this;
		}
		
		private void detach_Hazard_RiskList(Hazard_RiskList entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_LECItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hazard_LECItemRecord")]
	public partial class Hazard_LECItemRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LECItemRecordId;
		
		private string _LECItemId;
		
		private string _EvaluatorId;
		
		private System.Nullable<System.DateTime> _EvaluationTime;
		
		private string _RiskLevel;
		
		private EntityRef<Hazard_LECItem> _Hazard_LECItem;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLECItemRecordIdChanging(string value);
    partial void OnLECItemRecordIdChanged();
    partial void OnLECItemIdChanging(string value);
    partial void OnLECItemIdChanged();
    partial void OnEvaluatorIdChanging(string value);
    partial void OnEvaluatorIdChanged();
    partial void OnEvaluationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEvaluationTimeChanged();
    partial void OnRiskLevelChanging(string value);
    partial void OnRiskLevelChanged();
    #endregion
		
		public Hazard_LECItemRecord()
		{
			this._Hazard_LECItem = default(EntityRef<Hazard_LECItem>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LECItemRecordId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LECItemRecordId
		{
			get
			{
				return this._LECItemRecordId;
			}
			set
			{
				if ((this._LECItemRecordId != value))
				{
					this.OnLECItemRecordIdChanging(value);
					this.SendPropertyChanging();
					this._LECItemRecordId = value;
					this.SendPropertyChanged("LECItemRecordId");
					this.OnLECItemRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LECItemId", DbType="NVarChar(50)")]
		public string LECItemId
		{
			get
			{
				return this._LECItemId;
			}
			set
			{
				if ((this._LECItemId != value))
				{
					if (this._Hazard_LECItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLECItemIdChanging(value);
					this.SendPropertyChanging();
					this._LECItemId = value;
					this.SendPropertyChanged("LECItemId");
					this.OnLECItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatorId", DbType="NVarChar(50)")]
		public string EvaluatorId
		{
			get
			{
				return this._EvaluatorId;
			}
			set
			{
				if ((this._EvaluatorId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluatorIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluatorId = value;
					this.SendPropertyChanged("EvaluatorId");
					this.OnEvaluatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EvaluationTime
		{
			get
			{
				return this._EvaluationTime;
			}
			set
			{
				if ((this._EvaluationTime != value))
				{
					this.OnEvaluationTimeChanging(value);
					this.SendPropertyChanging();
					this._EvaluationTime = value;
					this.SendPropertyChanged("EvaluationTime");
					this.OnEvaluationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="NVarChar(50)")]
		public string RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this.OnRiskLevelChanging(value);
					this.SendPropertyChanging();
					this._RiskLevel = value;
					this.SendPropertyChanged("RiskLevel");
					this.OnRiskLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_LECItemRecord_Hazard_LECItem", Storage="_Hazard_LECItem", ThisKey="LECItemId", OtherKey="LECItemId", IsForeignKey=true)]
		public Hazard_LECItem Hazard_LECItem
		{
			get
			{
				return this._Hazard_LECItem.Entity;
			}
			set
			{
				Hazard_LECItem previousValue = this._Hazard_LECItem.Entity;
				if (((previousValue != value) 
							|| (this._Hazard_LECItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hazard_LECItem.Entity = null;
						previousValue.Hazard_LECItemRecord.Remove(this);
					}
					this._Hazard_LECItem.Entity = value;
					if ((value != null))
					{
						value.Hazard_LECItemRecord.Add(this);
						this._LECItemId = value.LECItemId;
					}
					else
					{
						this._LECItemId = default(string);
					}
					this.SendPropertyChanged("Hazard_LECItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_LECItemRecord_Sys_User", Storage="_Sys_User", ThisKey="EvaluatorId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Hazard_LECItemRecord.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Hazard_LECItemRecord.Add(this);
						this._EvaluatorId = value.UserId;
					}
					else
					{
						this._EvaluatorId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hazard_PatrolPlan")]
	public partial class Hazard_PatrolPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PatrolPlanId;
		
		private string _UserId;
		
		private string _RiskListId;
		
		private System.Nullable<bool> _IsRiskOwner;
		
		private System.Nullable<int> _Frequency;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private EntityRef<Hazard_RiskList> _Hazard_RiskList;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatrolPlanIdChanging(string value);
    partial void OnPatrolPlanIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRiskListIdChanging(string value);
    partial void OnRiskListIdChanged();
    partial void OnIsRiskOwnerChanging(System.Nullable<bool> value);
    partial void OnIsRiskOwnerChanged();
    partial void OnFrequencyChanging(System.Nullable<int> value);
    partial void OnFrequencyChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDateChanged();
    #endregion
		
		public Hazard_PatrolPlan()
		{
			this._Hazard_RiskList = default(EntityRef<Hazard_RiskList>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatrolPlanId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PatrolPlanId
		{
			get
			{
				return this._PatrolPlanId;
			}
			set
			{
				if ((this._PatrolPlanId != value))
				{
					this.OnPatrolPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PatrolPlanId = value;
					this.SendPropertyChanged("PatrolPlanId");
					this.OnPatrolPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskListId", DbType="NVarChar(50)")]
		public string RiskListId
		{
			get
			{
				return this._RiskListId;
			}
			set
			{
				if ((this._RiskListId != value))
				{
					if (this._Hazard_RiskList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRiskListIdChanging(value);
					this.SendPropertyChanging();
					this._RiskListId = value;
					this.SendPropertyChanged("RiskListId");
					this.OnRiskListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRiskOwner", DbType="Bit")]
		public System.Nullable<bool> IsRiskOwner
		{
			get
			{
				return this._IsRiskOwner;
			}
			set
			{
				if ((this._IsRiskOwner != value))
				{
					this.OnIsRiskOwnerChanging(value);
					this.SendPropertyChanging();
					this._IsRiskOwner = value;
					this.SendPropertyChanged("IsRiskOwner");
					this.OnIsRiskOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Int")]
		public System.Nullable<int> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_PatrolPlan_Hazard_RiskList", Storage="_Hazard_RiskList", ThisKey="RiskListId", OtherKey="RiskListId", IsForeignKey=true)]
		public Hazard_RiskList Hazard_RiskList
		{
			get
			{
				return this._Hazard_RiskList.Entity;
			}
			set
			{
				Hazard_RiskList previousValue = this._Hazard_RiskList.Entity;
				if (((previousValue != value) 
							|| (this._Hazard_RiskList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hazard_RiskList.Entity = null;
						previousValue.Hazard_PatrolPlan.Remove(this);
					}
					this._Hazard_RiskList.Entity = value;
					if ((value != null))
					{
						value.Hazard_PatrolPlan.Add(this);
						this._RiskListId = value.RiskListId;
					}
					else
					{
						this._RiskListId = default(string);
					}
					this.SendPropertyChanged("Hazard_RiskList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_PatrolPlan_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Hazard_PatrolPlan.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Hazard_PatrolPlan.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hazard_RiskList")]
	public partial class Hazard_RiskList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RiskListId;
		
		private string _HiddenHazardId;
		
		private string _InstallationId;
		
		private string _RiskPlace;
		
		private string _TaskActivity;
		
		private string _HazardDescription;
		
		private string _PossibleAccidents;
		
		private string _RiskLevel;
		
		private System.Nullable<int> _RiskValue;
		
		private string _ControlMeasures;
		
		private string _ControlUnit;
		
		private string _ControlRiskLevel;
		
		private string _EvaluationMethod;
		
		private System.Nullable<bool> _Cancelled;
		
		private string _States;
		
		private string _ControlUnitId;
		
		private string _ControlInstallationId;
		
		private System.Nullable<int> _PatrolFrequency;
		
		private string _LECItemId;
		
		private string _SCLItemId;
		
		private string _JHAItemId;
		
		private string _RiskManId;
		
		private System.Nullable<System.DateTime> _EvaluationTime;
		
		private string _EuipmentId;
		
		private string _ManagementMeasures;
		
		private string _ProtectiveMeasures;
		
		private string _OtherMeasures;
		
		private string _RiskOwnerIds;
		
		private string _RiskOwnerNames;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private string _QRCodePosition;
		
		private System.Nullable<bool> _IsUsed;
		
		private EntitySet<Hazard_PatrolPlan> _Hazard_PatrolPlan;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Installation> _ControlInstallation;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Hazard_HiddenHazard> _Hazard_HiddenHazard;
		
		private EntityRef<Hazard_JHAItem> _Hazard_JHAItem;
		
		private EntityRef<Hazard_LECItem> _Hazard_LECItem;
		
		private EntityRef<Hazard_SCLItem> _Hazard_SCLItem;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntitySet<Hazard_RiskListItem> _Hazard_RiskListItem;
		
		private EntitySet<Hazard_RoutingInspection> _Hazard_RoutingInspection;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRiskListIdChanging(string value);
    partial void OnRiskListIdChanged();
    partial void OnHiddenHazardIdChanging(string value);
    partial void OnHiddenHazardIdChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnRiskPlaceChanging(string value);
    partial void OnRiskPlaceChanged();
    partial void OnTaskActivityChanging(string value);
    partial void OnTaskActivityChanged();
    partial void OnHazardDescriptionChanging(string value);
    partial void OnHazardDescriptionChanged();
    partial void OnPossibleAccidentsChanging(string value);
    partial void OnPossibleAccidentsChanged();
    partial void OnRiskLevelChanging(string value);
    partial void OnRiskLevelChanged();
    partial void OnRiskValueChanging(System.Nullable<int> value);
    partial void OnRiskValueChanged();
    partial void OnControlMeasuresChanging(string value);
    partial void OnControlMeasuresChanged();
    partial void OnControlUnitChanging(string value);
    partial void OnControlUnitChanged();
    partial void OnControlRiskLevelChanging(string value);
    partial void OnControlRiskLevelChanged();
    partial void OnEvaluationMethodChanging(string value);
    partial void OnEvaluationMethodChanged();
    partial void OnCancelledChanging(System.Nullable<bool> value);
    partial void OnCancelledChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnControlUnitIdChanging(string value);
    partial void OnControlUnitIdChanged();
    partial void OnControlInstallationIdChanging(string value);
    partial void OnControlInstallationIdChanged();
    partial void OnPatrolFrequencyChanging(System.Nullable<int> value);
    partial void OnPatrolFrequencyChanged();
    partial void OnLECItemIdChanging(string value);
    partial void OnLECItemIdChanged();
    partial void OnSCLItemIdChanging(string value);
    partial void OnSCLItemIdChanged();
    partial void OnJHAItemIdChanging(string value);
    partial void OnJHAItemIdChanged();
    partial void OnRiskManIdChanging(string value);
    partial void OnRiskManIdChanged();
    partial void OnEvaluationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEvaluationTimeChanged();
    partial void OnEuipmentIdChanging(string value);
    partial void OnEuipmentIdChanged();
    partial void OnManagementMeasuresChanging(string value);
    partial void OnManagementMeasuresChanged();
    partial void OnProtectiveMeasuresChanging(string value);
    partial void OnProtectiveMeasuresChanged();
    partial void OnOtherMeasuresChanging(string value);
    partial void OnOtherMeasuresChanged();
    partial void OnRiskOwnerIdsChanging(string value);
    partial void OnRiskOwnerIdsChanged();
    partial void OnRiskOwnerNamesChanging(string value);
    partial void OnRiskOwnerNamesChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnQRCodePositionChanging(string value);
    partial void OnQRCodePositionChanged();
    partial void OnIsUsedChanging(System.Nullable<bool> value);
    partial void OnIsUsedChanged();
    #endregion
		
		public Hazard_RiskList()
		{
			this._Hazard_PatrolPlan = new EntitySet<Hazard_PatrolPlan>(new Action<Hazard_PatrolPlan>(this.attach_Hazard_PatrolPlan), new Action<Hazard_PatrolPlan>(this.detach_Hazard_PatrolPlan));
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._ControlInstallation = default(EntityRef<Base_Installation>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Hazard_HiddenHazard = default(EntityRef<Hazard_HiddenHazard>);
			this._Hazard_JHAItem = default(EntityRef<Hazard_JHAItem>);
			this._Hazard_LECItem = default(EntityRef<Hazard_LECItem>);
			this._Hazard_SCLItem = default(EntityRef<Hazard_SCLItem>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Hazard_RiskListItem = new EntitySet<Hazard_RiskListItem>(new Action<Hazard_RiskListItem>(this.attach_Hazard_RiskListItem), new Action<Hazard_RiskListItem>(this.detach_Hazard_RiskListItem));
			this._Hazard_RoutingInspection = new EntitySet<Hazard_RoutingInspection>(new Action<Hazard_RoutingInspection>(this.attach_Hazard_RoutingInspection), new Action<Hazard_RoutingInspection>(this.detach_Hazard_RoutingInspection));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskListId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RiskListId
		{
			get
			{
				return this._RiskListId;
			}
			set
			{
				if ((this._RiskListId != value))
				{
					this.OnRiskListIdChanging(value);
					this.SendPropertyChanging();
					this._RiskListId = value;
					this.SendPropertyChanged("RiskListId");
					this.OnRiskListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardId", DbType="NVarChar(50)")]
		public string HiddenHazardId
		{
			get
			{
				return this._HiddenHazardId;
			}
			set
			{
				if ((this._HiddenHazardId != value))
				{
					if (this._Hazard_HiddenHazard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHiddenHazardIdChanging(value);
					this.SendPropertyChanging();
					this._HiddenHazardId = value;
					this.SendPropertyChanged("HiddenHazardId");
					this.OnHiddenHazardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskPlace", DbType="NVarChar(200)")]
		public string RiskPlace
		{
			get
			{
				return this._RiskPlace;
			}
			set
			{
				if ((this._RiskPlace != value))
				{
					this.OnRiskPlaceChanging(value);
					this.SendPropertyChanging();
					this._RiskPlace = value;
					this.SendPropertyChanged("RiskPlace");
					this.OnRiskPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskActivity", DbType="NVarChar(200)")]
		public string TaskActivity
		{
			get
			{
				return this._TaskActivity;
			}
			set
			{
				if ((this._TaskActivity != value))
				{
					this.OnTaskActivityChanging(value);
					this.SendPropertyChanging();
					this._TaskActivity = value;
					this.SendPropertyChanged("TaskActivity");
					this.OnTaskActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardDescription", DbType="NVarChar(500)")]
		public string HazardDescription
		{
			get
			{
				return this._HazardDescription;
			}
			set
			{
				if ((this._HazardDescription != value))
				{
					this.OnHazardDescriptionChanging(value);
					this.SendPropertyChanging();
					this._HazardDescription = value;
					this.SendPropertyChanged("HazardDescription");
					this.OnHazardDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossibleAccidents", DbType="NVarChar(200)")]
		public string PossibleAccidents
		{
			get
			{
				return this._PossibleAccidents;
			}
			set
			{
				if ((this._PossibleAccidents != value))
				{
					this.OnPossibleAccidentsChanging(value);
					this.SendPropertyChanging();
					this._PossibleAccidents = value;
					this.SendPropertyChanged("PossibleAccidents");
					this.OnPossibleAccidentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="NVarChar(50)")]
		public string RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this.OnRiskLevelChanging(value);
					this.SendPropertyChanging();
					this._RiskLevel = value;
					this.SendPropertyChanged("RiskLevel");
					this.OnRiskLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskValue", DbType="Int")]
		public System.Nullable<int> RiskValue
		{
			get
			{
				return this._RiskValue;
			}
			set
			{
				if ((this._RiskValue != value))
				{
					this.OnRiskValueChanging(value);
					this.SendPropertyChanging();
					this._RiskValue = value;
					this.SendPropertyChanged("RiskValue");
					this.OnRiskValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlMeasures", DbType="NVarChar(800)")]
		public string ControlMeasures
		{
			get
			{
				return this._ControlMeasures;
			}
			set
			{
				if ((this._ControlMeasures != value))
				{
					this.OnControlMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ControlMeasures = value;
					this.SendPropertyChanged("ControlMeasures");
					this.OnControlMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlUnit", DbType="NVarChar(200)")]
		public string ControlUnit
		{
			get
			{
				return this._ControlUnit;
			}
			set
			{
				if ((this._ControlUnit != value))
				{
					this.OnControlUnitChanging(value);
					this.SendPropertyChanging();
					this._ControlUnit = value;
					this.SendPropertyChanged("ControlUnit");
					this.OnControlUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlRiskLevel", DbType="NVarChar(50)")]
		public string ControlRiskLevel
		{
			get
			{
				return this._ControlRiskLevel;
			}
			set
			{
				if ((this._ControlRiskLevel != value))
				{
					this.OnControlRiskLevelChanging(value);
					this.SendPropertyChanging();
					this._ControlRiskLevel = value;
					this.SendPropertyChanged("ControlRiskLevel");
					this.OnControlRiskLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationMethod", DbType="NVarChar(50)")]
		public string EvaluationMethod
		{
			get
			{
				return this._EvaluationMethod;
			}
			set
			{
				if ((this._EvaluationMethod != value))
				{
					this.OnEvaluationMethodChanging(value);
					this.SendPropertyChanging();
					this._EvaluationMethod = value;
					this.SendPropertyChanged("EvaluationMethod");
					this.OnEvaluationMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cancelled", DbType="Bit")]
		public System.Nullable<bool> Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this.OnCancelledChanging(value);
					this.SendPropertyChanging();
					this._Cancelled = value;
					this.SendPropertyChanged("Cancelled");
					this.OnCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlUnitId", DbType="NVarChar(50)")]
		public string ControlUnitId
		{
			get
			{
				return this._ControlUnitId;
			}
			set
			{
				if ((this._ControlUnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnControlUnitIdChanging(value);
					this.SendPropertyChanging();
					this._ControlUnitId = value;
					this.SendPropertyChanged("ControlUnitId");
					this.OnControlUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlInstallationId", DbType="NVarChar(50)")]
		public string ControlInstallationId
		{
			get
			{
				return this._ControlInstallationId;
			}
			set
			{
				if ((this._ControlInstallationId != value))
				{
					if (this._ControlInstallation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnControlInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._ControlInstallationId = value;
					this.SendPropertyChanged("ControlInstallationId");
					this.OnControlInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatrolFrequency", DbType="Int")]
		public System.Nullable<int> PatrolFrequency
		{
			get
			{
				return this._PatrolFrequency;
			}
			set
			{
				if ((this._PatrolFrequency != value))
				{
					this.OnPatrolFrequencyChanging(value);
					this.SendPropertyChanging();
					this._PatrolFrequency = value;
					this.SendPropertyChanged("PatrolFrequency");
					this.OnPatrolFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LECItemId", DbType="NVarChar(50)")]
		public string LECItemId
		{
			get
			{
				return this._LECItemId;
			}
			set
			{
				if ((this._LECItemId != value))
				{
					if (this._Hazard_LECItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLECItemIdChanging(value);
					this.SendPropertyChanging();
					this._LECItemId = value;
					this.SendPropertyChanged("LECItemId");
					this.OnLECItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCLItemId", DbType="NVarChar(50)")]
		public string SCLItemId
		{
			get
			{
				return this._SCLItemId;
			}
			set
			{
				if ((this._SCLItemId != value))
				{
					if (this._Hazard_SCLItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSCLItemIdChanging(value);
					this.SendPropertyChanging();
					this._SCLItemId = value;
					this.SendPropertyChanged("SCLItemId");
					this.OnSCLItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JHAItemId", DbType="NVarChar(50)")]
		public string JHAItemId
		{
			get
			{
				return this._JHAItemId;
			}
			set
			{
				if ((this._JHAItemId != value))
				{
					if (this._Hazard_JHAItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJHAItemIdChanging(value);
					this.SendPropertyChanging();
					this._JHAItemId = value;
					this.SendPropertyChanged("JHAItemId");
					this.OnJHAItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskManId", DbType="NVarChar(50)")]
		public string RiskManId
		{
			get
			{
				return this._RiskManId;
			}
			set
			{
				if ((this._RiskManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRiskManIdChanging(value);
					this.SendPropertyChanging();
					this._RiskManId = value;
					this.SendPropertyChanged("RiskManId");
					this.OnRiskManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EvaluationTime
		{
			get
			{
				return this._EvaluationTime;
			}
			set
			{
				if ((this._EvaluationTime != value))
				{
					this.OnEvaluationTimeChanging(value);
					this.SendPropertyChanging();
					this._EvaluationTime = value;
					this.SendPropertyChanged("EvaluationTime");
					this.OnEvaluationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EuipmentId", DbType="NVarChar(50)")]
		public string EuipmentId
		{
			get
			{
				return this._EuipmentId;
			}
			set
			{
				if ((this._EuipmentId != value))
				{
					this.OnEuipmentIdChanging(value);
					this.SendPropertyChanging();
					this._EuipmentId = value;
					this.SendPropertyChanged("EuipmentId");
					this.OnEuipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagementMeasures", DbType="NVarChar(800)")]
		public string ManagementMeasures
		{
			get
			{
				return this._ManagementMeasures;
			}
			set
			{
				if ((this._ManagementMeasures != value))
				{
					this.OnManagementMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ManagementMeasures = value;
					this.SendPropertyChanged("ManagementMeasures");
					this.OnManagementMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtectiveMeasures", DbType="NVarChar(800)")]
		public string ProtectiveMeasures
		{
			get
			{
				return this._ProtectiveMeasures;
			}
			set
			{
				if ((this._ProtectiveMeasures != value))
				{
					this.OnProtectiveMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ProtectiveMeasures = value;
					this.SendPropertyChanged("ProtectiveMeasures");
					this.OnProtectiveMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(800)")]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this.OnOtherMeasuresChanging(value);
					this.SendPropertyChanging();
					this._OtherMeasures = value;
					this.SendPropertyChanged("OtherMeasures");
					this.OnOtherMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskOwnerIds", DbType="NVarChar(4000)")]
		public string RiskOwnerIds
		{
			get
			{
				return this._RiskOwnerIds;
			}
			set
			{
				if ((this._RiskOwnerIds != value))
				{
					this.OnRiskOwnerIdsChanging(value);
					this.SendPropertyChanging();
					this._RiskOwnerIds = value;
					this.SendPropertyChanged("RiskOwnerIds");
					this.OnRiskOwnerIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskOwnerNames", DbType="NVarChar(4000)")]
		public string RiskOwnerNames
		{
			get
			{
				return this._RiskOwnerNames;
			}
			set
			{
				if ((this._RiskOwnerNames != value))
				{
					this.OnRiskOwnerNamesChanging(value);
					this.SendPropertyChanging();
					this._RiskOwnerNames = value;
					this.SendPropertyChanged("RiskOwnerNames");
					this.OnRiskOwnerNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodePosition", DbType="NVarChar(200)")]
		public string QRCodePosition
		{
			get
			{
				return this._QRCodePosition;
			}
			set
			{
				if ((this._QRCodePosition != value))
				{
					this.OnQRCodePositionChanging(value);
					this.SendPropertyChanging();
					this._QRCodePosition = value;
					this.SendPropertyChanged("QRCodePosition");
					this.OnQRCodePositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_PatrolPlan_Hazard_RiskList", Storage="_Hazard_PatrolPlan", ThisKey="RiskListId", OtherKey="RiskListId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_PatrolPlan> Hazard_PatrolPlan
		{
			get
			{
				return this._Hazard_PatrolPlan;
			}
			set
			{
				this._Hazard_PatrolPlan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskList_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.Hazard_RiskList.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.Hazard_RiskList.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskList_Base_Installation1", Storage="_ControlInstallation", ThisKey="ControlInstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation ControlInstallation
		{
			get
			{
				return this._ControlInstallation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._ControlInstallation.Entity;
				if (((previousValue != value) 
							|| (this._ControlInstallation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ControlInstallation.Entity = null;
						previousValue.Installation.Remove(this);
					}
					this._ControlInstallation.Entity = value;
					if ((value != null))
					{
						value.Installation.Add(this);
						this._ControlInstallationId = value.InstallationId;
					}
					else
					{
						this._ControlInstallationId = default(string);
					}
					this.SendPropertyChanged("ControlInstallation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskList_Base_Unit", Storage="_Base_Unit", ThisKey="ControlUnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Hazard_RiskList.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Hazard_RiskList.Add(this);
						this._ControlUnitId = value.UnitId;
					}
					else
					{
						this._ControlUnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskList_Hazard_HiddenHazard", Storage="_Hazard_HiddenHazard", ThisKey="HiddenHazardId", OtherKey="HiddenHazardId", IsForeignKey=true)]
		public Hazard_HiddenHazard Hazard_HiddenHazard
		{
			get
			{
				return this._Hazard_HiddenHazard.Entity;
			}
			set
			{
				Hazard_HiddenHazard previousValue = this._Hazard_HiddenHazard.Entity;
				if (((previousValue != value) 
							|| (this._Hazard_HiddenHazard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hazard_HiddenHazard.Entity = null;
						previousValue.Hazard_RiskList.Remove(this);
					}
					this._Hazard_HiddenHazard.Entity = value;
					if ((value != null))
					{
						value.Hazard_RiskList.Add(this);
						this._HiddenHazardId = value.HiddenHazardId;
					}
					else
					{
						this._HiddenHazardId = default(string);
					}
					this.SendPropertyChanged("Hazard_HiddenHazard");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskList_Hazard_JHAItem", Storage="_Hazard_JHAItem", ThisKey="JHAItemId", OtherKey="JHAItemId", IsForeignKey=true)]
		public Hazard_JHAItem Hazard_JHAItem
		{
			get
			{
				return this._Hazard_JHAItem.Entity;
			}
			set
			{
				Hazard_JHAItem previousValue = this._Hazard_JHAItem.Entity;
				if (((previousValue != value) 
							|| (this._Hazard_JHAItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hazard_JHAItem.Entity = null;
						previousValue.Hazard_RiskList.Remove(this);
					}
					this._Hazard_JHAItem.Entity = value;
					if ((value != null))
					{
						value.Hazard_RiskList.Add(this);
						this._JHAItemId = value.JHAItemId;
					}
					else
					{
						this._JHAItemId = default(string);
					}
					this.SendPropertyChanged("Hazard_JHAItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskList_Hazard_LECItem", Storage="_Hazard_LECItem", ThisKey="LECItemId", OtherKey="LECItemId", IsForeignKey=true)]
		public Hazard_LECItem Hazard_LECItem
		{
			get
			{
				return this._Hazard_LECItem.Entity;
			}
			set
			{
				Hazard_LECItem previousValue = this._Hazard_LECItem.Entity;
				if (((previousValue != value) 
							|| (this._Hazard_LECItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hazard_LECItem.Entity = null;
						previousValue.Hazard_RiskList.Remove(this);
					}
					this._Hazard_LECItem.Entity = value;
					if ((value != null))
					{
						value.Hazard_RiskList.Add(this);
						this._LECItemId = value.LECItemId;
					}
					else
					{
						this._LECItemId = default(string);
					}
					this.SendPropertyChanged("Hazard_LECItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskList_Hazard_SCLItem", Storage="_Hazard_SCLItem", ThisKey="SCLItemId", OtherKey="SCLItemId", IsForeignKey=true)]
		public Hazard_SCLItem Hazard_SCLItem
		{
			get
			{
				return this._Hazard_SCLItem.Entity;
			}
			set
			{
				Hazard_SCLItem previousValue = this._Hazard_SCLItem.Entity;
				if (((previousValue != value) 
							|| (this._Hazard_SCLItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hazard_SCLItem.Entity = null;
						previousValue.Hazard_RiskList.Remove(this);
					}
					this._Hazard_SCLItem.Entity = value;
					if ((value != null))
					{
						value.Hazard_RiskList.Add(this);
						this._SCLItemId = value.SCLItemId;
					}
					else
					{
						this._SCLItemId = default(string);
					}
					this.SendPropertyChanged("Hazard_SCLItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskList_Sys_User_RiskManId", Storage="_Sys_User", ThisKey="RiskManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Hazard_RiskList.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Hazard_RiskList.Add(this);
						this._RiskManId = value.UserId;
					}
					else
					{
						this._RiskManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskListItem_Hazard_RiskList", Storage="_Hazard_RiskListItem", ThisKey="RiskListId", OtherKey="RiskListId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_RiskListItem> Hazard_RiskListItem
		{
			get
			{
				return this._Hazard_RiskListItem;
			}
			set
			{
				this._Hazard_RiskListItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RoutingInspection_Hazard_RiskList", Storage="_Hazard_RoutingInspection", ThisKey="RiskListId", OtherKey="RiskListId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_RoutingInspection> Hazard_RoutingInspection
		{
			get
			{
				return this._Hazard_RoutingInspection;
			}
			set
			{
				this._Hazard_RoutingInspection.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hazard_PatrolPlan(Hazard_PatrolPlan entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_RiskList = this;
		}
		
		private void detach_Hazard_PatrolPlan(Hazard_PatrolPlan entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_RiskList = null;
		}
		
		private void attach_Hazard_RiskListItem(Hazard_RiskListItem entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_RiskList = this;
		}
		
		private void detach_Hazard_RiskListItem(Hazard_RiskListItem entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_RiskList = null;
		}
		
		private void attach_Hazard_RoutingInspection(Hazard_RoutingInspection entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_RiskList = this;
		}
		
		private void detach_Hazard_RoutingInspection(Hazard_RoutingInspection entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_RiskList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hazard_RiskListItem")]
	public partial class Hazard_RiskListItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RiskItemId;
		
		private string _RiskListId;
		
		private string _RiskOwnerId;
		
		private System.Nullable<int> _Frequency;
		
		private System.Nullable<bool> _IsRiskOwner;
		
		private EntityRef<Hazard_RiskList> _Hazard_RiskList;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRiskItemIdChanging(string value);
    partial void OnRiskItemIdChanged();
    partial void OnRiskListIdChanging(string value);
    partial void OnRiskListIdChanged();
    partial void OnRiskOwnerIdChanging(string value);
    partial void OnRiskOwnerIdChanged();
    partial void OnFrequencyChanging(System.Nullable<int> value);
    partial void OnFrequencyChanged();
    partial void OnIsRiskOwnerChanging(System.Nullable<bool> value);
    partial void OnIsRiskOwnerChanged();
    #endregion
		
		public Hazard_RiskListItem()
		{
			this._Hazard_RiskList = default(EntityRef<Hazard_RiskList>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RiskItemId
		{
			get
			{
				return this._RiskItemId;
			}
			set
			{
				if ((this._RiskItemId != value))
				{
					this.OnRiskItemIdChanging(value);
					this.SendPropertyChanging();
					this._RiskItemId = value;
					this.SendPropertyChanged("RiskItemId");
					this.OnRiskItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskListId", DbType="NVarChar(50)")]
		public string RiskListId
		{
			get
			{
				return this._RiskListId;
			}
			set
			{
				if ((this._RiskListId != value))
				{
					if (this._Hazard_RiskList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRiskListIdChanging(value);
					this.SendPropertyChanging();
					this._RiskListId = value;
					this.SendPropertyChanged("RiskListId");
					this.OnRiskListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskOwnerId", DbType="NVarChar(50)")]
		public string RiskOwnerId
		{
			get
			{
				return this._RiskOwnerId;
			}
			set
			{
				if ((this._RiskOwnerId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRiskOwnerIdChanging(value);
					this.SendPropertyChanging();
					this._RiskOwnerId = value;
					this.SendPropertyChanged("RiskOwnerId");
					this.OnRiskOwnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Int")]
		public System.Nullable<int> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRiskOwner", DbType="Bit")]
		public System.Nullable<bool> IsRiskOwner
		{
			get
			{
				return this._IsRiskOwner;
			}
			set
			{
				if ((this._IsRiskOwner != value))
				{
					this.OnIsRiskOwnerChanging(value);
					this.SendPropertyChanging();
					this._IsRiskOwner = value;
					this.SendPropertyChanged("IsRiskOwner");
					this.OnIsRiskOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskListItem_Hazard_RiskList", Storage="_Hazard_RiskList", ThisKey="RiskListId", OtherKey="RiskListId", IsForeignKey=true)]
		public Hazard_RiskList Hazard_RiskList
		{
			get
			{
				return this._Hazard_RiskList.Entity;
			}
			set
			{
				Hazard_RiskList previousValue = this._Hazard_RiskList.Entity;
				if (((previousValue != value) 
							|| (this._Hazard_RiskList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hazard_RiskList.Entity = null;
						previousValue.Hazard_RiskListItem.Remove(this);
					}
					this._Hazard_RiskList.Entity = value;
					if ((value != null))
					{
						value.Hazard_RiskListItem.Add(this);
						this._RiskListId = value.RiskListId;
					}
					else
					{
						this._RiskListId = default(string);
					}
					this.SendPropertyChanged("Hazard_RiskList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskListItem_Sys_User", Storage="_Sys_User", ThisKey="RiskOwnerId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Hazard_RiskListItem.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Hazard_RiskListItem.Add(this);
						this._RiskOwnerId = value.UserId;
					}
					else
					{
						this._RiskOwnerId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hazard_RoutingInspection")]
	public partial class Hazard_RoutingInspection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoutingInspectionId;
		
		private string _RiskListId;
		
		private string _PatrolManId;
		
		private System.Nullable<System.DateTime> _PatrolTime;
		
		private string _PatrolResult;
		
		private string _RiskLevel;
		
		private string _PohotoUrl;
		
		private string _States;
		
		private string _ControlMeasures;
		
		private string _ManagementMeasures;
		
		private string _ProtectiveMeasures;
		
		private string _OtherMeasures;
		
		private string _DealReason;
		
		private string _RiskManId;
		
		private string _EvaluationState;
		
		private System.Nullable<bool> _IsFiled;
		
		private EntityRef<Hazard_RiskList> _Hazard_RiskList;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoutingInspectionIdChanging(string value);
    partial void OnRoutingInspectionIdChanged();
    partial void OnRiskListIdChanging(string value);
    partial void OnRiskListIdChanged();
    partial void OnPatrolManIdChanging(string value);
    partial void OnPatrolManIdChanged();
    partial void OnPatrolTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPatrolTimeChanged();
    partial void OnPatrolResultChanging(string value);
    partial void OnPatrolResultChanged();
    partial void OnRiskLevelChanging(string value);
    partial void OnRiskLevelChanged();
    partial void OnPohotoUrlChanging(string value);
    partial void OnPohotoUrlChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnControlMeasuresChanging(string value);
    partial void OnControlMeasuresChanged();
    partial void OnManagementMeasuresChanging(string value);
    partial void OnManagementMeasuresChanged();
    partial void OnProtectiveMeasuresChanging(string value);
    partial void OnProtectiveMeasuresChanged();
    partial void OnOtherMeasuresChanging(string value);
    partial void OnOtherMeasuresChanged();
    partial void OnDealReasonChanging(string value);
    partial void OnDealReasonChanged();
    partial void OnRiskManIdChanging(string value);
    partial void OnRiskManIdChanged();
    partial void OnEvaluationStateChanging(string value);
    partial void OnEvaluationStateChanged();
    partial void OnIsFiledChanging(System.Nullable<bool> value);
    partial void OnIsFiledChanged();
    #endregion
		
		public Hazard_RoutingInspection()
		{
			this._Hazard_RiskList = default(EntityRef<Hazard_RiskList>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoutingInspectionId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoutingInspectionId
		{
			get
			{
				return this._RoutingInspectionId;
			}
			set
			{
				if ((this._RoutingInspectionId != value))
				{
					this.OnRoutingInspectionIdChanging(value);
					this.SendPropertyChanging();
					this._RoutingInspectionId = value;
					this.SendPropertyChanged("RoutingInspectionId");
					this.OnRoutingInspectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskListId", DbType="NVarChar(50)")]
		public string RiskListId
		{
			get
			{
				return this._RiskListId;
			}
			set
			{
				if ((this._RiskListId != value))
				{
					if (this._Hazard_RiskList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRiskListIdChanging(value);
					this.SendPropertyChanging();
					this._RiskListId = value;
					this.SendPropertyChanged("RiskListId");
					this.OnRiskListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatrolManId", DbType="NVarChar(50)")]
		public string PatrolManId
		{
			get
			{
				return this._PatrolManId;
			}
			set
			{
				if ((this._PatrolManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatrolManIdChanging(value);
					this.SendPropertyChanging();
					this._PatrolManId = value;
					this.SendPropertyChanged("PatrolManId");
					this.OnPatrolManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatrolTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PatrolTime
		{
			get
			{
				return this._PatrolTime;
			}
			set
			{
				if ((this._PatrolTime != value))
				{
					this.OnPatrolTimeChanging(value);
					this.SendPropertyChanging();
					this._PatrolTime = value;
					this.SendPropertyChanged("PatrolTime");
					this.OnPatrolTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatrolResult", DbType="VarChar(2)")]
		public string PatrolResult
		{
			get
			{
				return this._PatrolResult;
			}
			set
			{
				if ((this._PatrolResult != value))
				{
					this.OnPatrolResultChanging(value);
					this.SendPropertyChanging();
					this._PatrolResult = value;
					this.SendPropertyChanged("PatrolResult");
					this.OnPatrolResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="NVarChar(50)")]
		public string RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this.OnRiskLevelChanging(value);
					this.SendPropertyChanging();
					this._RiskLevel = value;
					this.SendPropertyChanged("RiskLevel");
					this.OnRiskLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PohotoUrl", DbType="NVarChar(2000)")]
		public string PohotoUrl
		{
			get
			{
				return this._PohotoUrl;
			}
			set
			{
				if ((this._PohotoUrl != value))
				{
					this.OnPohotoUrlChanging(value);
					this.SendPropertyChanging();
					this._PohotoUrl = value;
					this.SendPropertyChanged("PohotoUrl");
					this.OnPohotoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlMeasures", DbType="NVarChar(500)")]
		public string ControlMeasures
		{
			get
			{
				return this._ControlMeasures;
			}
			set
			{
				if ((this._ControlMeasures != value))
				{
					this.OnControlMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ControlMeasures = value;
					this.SendPropertyChanged("ControlMeasures");
					this.OnControlMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagementMeasures", DbType="NVarChar(500)")]
		public string ManagementMeasures
		{
			get
			{
				return this._ManagementMeasures;
			}
			set
			{
				if ((this._ManagementMeasures != value))
				{
					this.OnManagementMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ManagementMeasures = value;
					this.SendPropertyChanged("ManagementMeasures");
					this.OnManagementMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtectiveMeasures", DbType="NVarChar(500)")]
		public string ProtectiveMeasures
		{
			get
			{
				return this._ProtectiveMeasures;
			}
			set
			{
				if ((this._ProtectiveMeasures != value))
				{
					this.OnProtectiveMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ProtectiveMeasures = value;
					this.SendPropertyChanged("ProtectiveMeasures");
					this.OnProtectiveMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(500)")]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this.OnOtherMeasuresChanging(value);
					this.SendPropertyChanging();
					this._OtherMeasures = value;
					this.SendPropertyChanged("OtherMeasures");
					this.OnOtherMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealReason", DbType="NVarChar(500)")]
		public string DealReason
		{
			get
			{
				return this._DealReason;
			}
			set
			{
				if ((this._DealReason != value))
				{
					this.OnDealReasonChanging(value);
					this.SendPropertyChanging();
					this._DealReason = value;
					this.SendPropertyChanged("DealReason");
					this.OnDealReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskManId", DbType="NVarChar(50)")]
		public string RiskManId
		{
			get
			{
				return this._RiskManId;
			}
			set
			{
				if ((this._RiskManId != value))
				{
					this.OnRiskManIdChanging(value);
					this.SendPropertyChanging();
					this._RiskManId = value;
					this.SendPropertyChanged("RiskManId");
					this.OnRiskManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationState", DbType="VarChar(2)")]
		public string EvaluationState
		{
			get
			{
				return this._EvaluationState;
			}
			set
			{
				if ((this._EvaluationState != value))
				{
					this.OnEvaluationStateChanging(value);
					this.SendPropertyChanging();
					this._EvaluationState = value;
					this.SendPropertyChanged("EvaluationState");
					this.OnEvaluationStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="isFiled", Storage="_IsFiled", DbType="Bit")]
		public System.Nullable<bool> IsFiled
		{
			get
			{
				return this._IsFiled;
			}
			set
			{
				if ((this._IsFiled != value))
				{
					this.OnIsFiledChanging(value);
					this.SendPropertyChanging();
					this._IsFiled = value;
					this.SendPropertyChanged("IsFiled");
					this.OnIsFiledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RoutingInspection_Hazard_RiskList", Storage="_Hazard_RiskList", ThisKey="RiskListId", OtherKey="RiskListId", IsForeignKey=true)]
		public Hazard_RiskList Hazard_RiskList
		{
			get
			{
				return this._Hazard_RiskList.Entity;
			}
			set
			{
				Hazard_RiskList previousValue = this._Hazard_RiskList.Entity;
				if (((previousValue != value) 
							|| (this._Hazard_RiskList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hazard_RiskList.Entity = null;
						previousValue.Hazard_RoutingInspection.Remove(this);
					}
					this._Hazard_RiskList.Entity = value;
					if ((value != null))
					{
						value.Hazard_RoutingInspection.Add(this);
						this._RiskListId = value.RiskListId;
					}
					else
					{
						this._RiskListId = default(string);
					}
					this.SendPropertyChanged("Hazard_RiskList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RoutingInspection_Sys_User", Storage="_Sys_User", ThisKey="PatrolManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Hazard_RoutingInspection.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Hazard_RoutingInspection.Add(this);
						this._PatrolManId = value.UserId;
					}
					else
					{
						this._PatrolManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hazard_SCLItem")]
	public partial class Hazard_SCLItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SCLItemId;
		
		private System.Nullable<int> _SortIndex;
		
		private string _CheckItem;
		
		private string _Standard;
		
		private string _Consequence;
		
		private string _NowControlMeasures;
		
		private System.Nullable<decimal> _HazardJudge_L;
		
		private System.Nullable<decimal> _HazardJudge_S;
		
		private System.Nullable<decimal> _HazardJudge_R;
		
		private string _RiskLevel;
		
		private string _ControlMeasures;
		
		private string _EuipmentId;
		
		private string _States;
		
		private System.Nullable<decimal> _HazardJudge_S1;
		
		private System.Nullable<decimal> _HazardJudge_S2;
		
		private System.Nullable<decimal> _HazardJudge_S3;
		
		private System.Nullable<decimal> _HazardJudge_S4;
		
		private System.Nullable<decimal> _HazardJudge_S5;
		
		private string _ManagementMeasures;
		
		private string _ProtectiveMeasures;
		
		private string _OtherMeasures;
		
		private EntitySet<Hazard_RiskList> _Hazard_RiskList;
		
		private EntityRef<Base_Euipment> _Base_Euipment;
		
		private EntitySet<Hazard_SCLItemRecord> _Hazard_SCLItemRecord;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSCLItemIdChanging(string value);
    partial void OnSCLItemIdChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnCheckItemChanging(string value);
    partial void OnCheckItemChanged();
    partial void OnStandardChanging(string value);
    partial void OnStandardChanged();
    partial void OnConsequenceChanging(string value);
    partial void OnConsequenceChanged();
    partial void OnNowControlMeasuresChanging(string value);
    partial void OnNowControlMeasuresChanged();
    partial void OnHazardJudge_LChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_LChanged();
    partial void OnHazardJudge_SChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_SChanged();
    partial void OnHazardJudge_RChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_RChanged();
    partial void OnRiskLevelChanging(string value);
    partial void OnRiskLevelChanged();
    partial void OnControlMeasuresChanging(string value);
    partial void OnControlMeasuresChanged();
    partial void OnEuipmentIdChanging(string value);
    partial void OnEuipmentIdChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnHazardJudge_S1Changing(System.Nullable<decimal> value);
    partial void OnHazardJudge_S1Changed();
    partial void OnHazardJudge_S2Changing(System.Nullable<decimal> value);
    partial void OnHazardJudge_S2Changed();
    partial void OnHazardJudge_S3Changing(System.Nullable<decimal> value);
    partial void OnHazardJudge_S3Changed();
    partial void OnHazardJudge_S4Changing(System.Nullable<decimal> value);
    partial void OnHazardJudge_S4Changed();
    partial void OnHazardJudge_S5Changing(System.Nullable<decimal> value);
    partial void OnHazardJudge_S5Changed();
    partial void OnManagementMeasuresChanging(string value);
    partial void OnManagementMeasuresChanged();
    partial void OnProtectiveMeasuresChanging(string value);
    partial void OnProtectiveMeasuresChanged();
    partial void OnOtherMeasuresChanging(string value);
    partial void OnOtherMeasuresChanged();
    #endregion
		
		public Hazard_SCLItem()
		{
			this._Hazard_RiskList = new EntitySet<Hazard_RiskList>(new Action<Hazard_RiskList>(this.attach_Hazard_RiskList), new Action<Hazard_RiskList>(this.detach_Hazard_RiskList));
			this._Base_Euipment = default(EntityRef<Base_Euipment>);
			this._Hazard_SCLItemRecord = new EntitySet<Hazard_SCLItemRecord>(new Action<Hazard_SCLItemRecord>(this.attach_Hazard_SCLItemRecord), new Action<Hazard_SCLItemRecord>(this.detach_Hazard_SCLItemRecord));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCLItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SCLItemId
		{
			get
			{
				return this._SCLItemId;
			}
			set
			{
				if ((this._SCLItemId != value))
				{
					this.OnSCLItemIdChanging(value);
					this.SendPropertyChanging();
					this._SCLItemId = value;
					this.SendPropertyChanged("SCLItemId");
					this.OnSCLItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckItem", DbType="NVarChar(50)")]
		public string CheckItem
		{
			get
			{
				return this._CheckItem;
			}
			set
			{
				if ((this._CheckItem != value))
				{
					this.OnCheckItemChanging(value);
					this.SendPropertyChanging();
					this._CheckItem = value;
					this.SendPropertyChanged("CheckItem");
					this.OnCheckItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standard", DbType="NVarChar(500)")]
		public string Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._Standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consequence", DbType="NVarChar(500)")]
		public string Consequence
		{
			get
			{
				return this._Consequence;
			}
			set
			{
				if ((this._Consequence != value))
				{
					this.OnConsequenceChanging(value);
					this.SendPropertyChanging();
					this._Consequence = value;
					this.SendPropertyChanged("Consequence");
					this.OnConsequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NowControlMeasures", DbType="NVarChar(800)")]
		public string NowControlMeasures
		{
			get
			{
				return this._NowControlMeasures;
			}
			set
			{
				if ((this._NowControlMeasures != value))
				{
					this.OnNowControlMeasuresChanging(value);
					this.SendPropertyChanging();
					this._NowControlMeasures = value;
					this.SendPropertyChanged("NowControlMeasures");
					this.OnNowControlMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_L", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_L
		{
			get
			{
				return this._HazardJudge_L;
			}
			set
			{
				if ((this._HazardJudge_L != value))
				{
					this.OnHazardJudge_LChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_L = value;
					this.SendPropertyChanged("HazardJudge_L");
					this.OnHazardJudge_LChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S
		{
			get
			{
				return this._HazardJudge_S;
			}
			set
			{
				if ((this._HazardJudge_S != value))
				{
					this.OnHazardJudge_SChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_S = value;
					this.SendPropertyChanged("HazardJudge_S");
					this.OnHazardJudge_SChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_R", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_R
		{
			get
			{
				return this._HazardJudge_R;
			}
			set
			{
				if ((this._HazardJudge_R != value))
				{
					this.OnHazardJudge_RChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_R = value;
					this.SendPropertyChanged("HazardJudge_R");
					this.OnHazardJudge_RChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="NVarChar(50)")]
		public string RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this.OnRiskLevelChanging(value);
					this.SendPropertyChanging();
					this._RiskLevel = value;
					this.SendPropertyChanged("RiskLevel");
					this.OnRiskLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlMeasures", DbType="NVarChar(800)")]
		public string ControlMeasures
		{
			get
			{
				return this._ControlMeasures;
			}
			set
			{
				if ((this._ControlMeasures != value))
				{
					this.OnControlMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ControlMeasures = value;
					this.SendPropertyChanged("ControlMeasures");
					this.OnControlMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EuipmentId", DbType="NVarChar(50)")]
		public string EuipmentId
		{
			get
			{
				return this._EuipmentId;
			}
			set
			{
				if ((this._EuipmentId != value))
				{
					if (this._Base_Euipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEuipmentIdChanging(value);
					this.SendPropertyChanging();
					this._EuipmentId = value;
					this.SendPropertyChanged("EuipmentId");
					this.OnEuipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S1", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S1
		{
			get
			{
				return this._HazardJudge_S1;
			}
			set
			{
				if ((this._HazardJudge_S1 != value))
				{
					this.OnHazardJudge_S1Changing(value);
					this.SendPropertyChanging();
					this._HazardJudge_S1 = value;
					this.SendPropertyChanged("HazardJudge_S1");
					this.OnHazardJudge_S1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S2", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S2
		{
			get
			{
				return this._HazardJudge_S2;
			}
			set
			{
				if ((this._HazardJudge_S2 != value))
				{
					this.OnHazardJudge_S2Changing(value);
					this.SendPropertyChanging();
					this._HazardJudge_S2 = value;
					this.SendPropertyChanged("HazardJudge_S2");
					this.OnHazardJudge_S2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S3", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S3
		{
			get
			{
				return this._HazardJudge_S3;
			}
			set
			{
				if ((this._HazardJudge_S3 != value))
				{
					this.OnHazardJudge_S3Changing(value);
					this.SendPropertyChanging();
					this._HazardJudge_S3 = value;
					this.SendPropertyChanged("HazardJudge_S3");
					this.OnHazardJudge_S3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S4", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S4
		{
			get
			{
				return this._HazardJudge_S4;
			}
			set
			{
				if ((this._HazardJudge_S4 != value))
				{
					this.OnHazardJudge_S4Changing(value);
					this.SendPropertyChanging();
					this._HazardJudge_S4 = value;
					this.SendPropertyChanged("HazardJudge_S4");
					this.OnHazardJudge_S4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S5", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S5
		{
			get
			{
				return this._HazardJudge_S5;
			}
			set
			{
				if ((this._HazardJudge_S5 != value))
				{
					this.OnHazardJudge_S5Changing(value);
					this.SendPropertyChanging();
					this._HazardJudge_S5 = value;
					this.SendPropertyChanged("HazardJudge_S5");
					this.OnHazardJudge_S5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagementMeasures", DbType="NVarChar(800)")]
		public string ManagementMeasures
		{
			get
			{
				return this._ManagementMeasures;
			}
			set
			{
				if ((this._ManagementMeasures != value))
				{
					this.OnManagementMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ManagementMeasures = value;
					this.SendPropertyChanged("ManagementMeasures");
					this.OnManagementMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtectiveMeasures", DbType="NVarChar(800)")]
		public string ProtectiveMeasures
		{
			get
			{
				return this._ProtectiveMeasures;
			}
			set
			{
				if ((this._ProtectiveMeasures != value))
				{
					this.OnProtectiveMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ProtectiveMeasures = value;
					this.SendPropertyChanged("ProtectiveMeasures");
					this.OnProtectiveMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(800)")]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this.OnOtherMeasuresChanging(value);
					this.SendPropertyChanging();
					this._OtherMeasures = value;
					this.SendPropertyChanged("OtherMeasures");
					this.OnOtherMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskList_Hazard_SCLItem", Storage="_Hazard_RiskList", ThisKey="SCLItemId", OtherKey="SCLItemId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_RiskList> Hazard_RiskList
		{
			get
			{
				return this._Hazard_RiskList;
			}
			set
			{
				this._Hazard_RiskList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_SCLItem_Base_Euipment", Storage="_Base_Euipment", ThisKey="EuipmentId", OtherKey="EuipmentId", IsForeignKey=true)]
		public Base_Euipment Base_Euipment
		{
			get
			{
				return this._Base_Euipment.Entity;
			}
			set
			{
				Base_Euipment previousValue = this._Base_Euipment.Entity;
				if (((previousValue != value) 
							|| (this._Base_Euipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Euipment.Entity = null;
						previousValue.Hazard_SCLItem.Remove(this);
					}
					this._Base_Euipment.Entity = value;
					if ((value != null))
					{
						value.Hazard_SCLItem.Add(this);
						this._EuipmentId = value.EuipmentId;
					}
					else
					{
						this._EuipmentId = default(string);
					}
					this.SendPropertyChanged("Base_Euipment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_SCLItemRecord_Hazard_SCLItem", Storage="_Hazard_SCLItemRecord", ThisKey="SCLItemId", OtherKey="SCLItemId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_SCLItemRecord> Hazard_SCLItemRecord
		{
			get
			{
				return this._Hazard_SCLItemRecord;
			}
			set
			{
				this._Hazard_SCLItemRecord.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hazard_RiskList(Hazard_RiskList entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_SCLItem = this;
		}
		
		private void detach_Hazard_RiskList(Hazard_RiskList entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_SCLItem = null;
		}
		
		private void attach_Hazard_SCLItemRecord(Hazard_SCLItemRecord entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_SCLItem = this;
		}
		
		private void detach_Hazard_SCLItemRecord(Hazard_SCLItemRecord entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_SCLItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hazard_SCLItemRecord")]
	public partial class Hazard_SCLItemRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SCLItemRecordId;
		
		private string _SCLItemId;
		
		private string _EvaluatorId;
		
		private System.Nullable<System.DateTime> _EvaluationTime;
		
		private string _RiskLevel;
		
		private EntityRef<Hazard_SCLItem> _Hazard_SCLItem;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSCLItemRecordIdChanging(string value);
    partial void OnSCLItemRecordIdChanged();
    partial void OnSCLItemIdChanging(string value);
    partial void OnSCLItemIdChanged();
    partial void OnEvaluatorIdChanging(string value);
    partial void OnEvaluatorIdChanged();
    partial void OnEvaluationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEvaluationTimeChanged();
    partial void OnRiskLevelChanging(string value);
    partial void OnRiskLevelChanged();
    #endregion
		
		public Hazard_SCLItemRecord()
		{
			this._Hazard_SCLItem = default(EntityRef<Hazard_SCLItem>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCLItemRecordId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SCLItemRecordId
		{
			get
			{
				return this._SCLItemRecordId;
			}
			set
			{
				if ((this._SCLItemRecordId != value))
				{
					this.OnSCLItemRecordIdChanging(value);
					this.SendPropertyChanging();
					this._SCLItemRecordId = value;
					this.SendPropertyChanged("SCLItemRecordId");
					this.OnSCLItemRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCLItemId", DbType="NVarChar(50)")]
		public string SCLItemId
		{
			get
			{
				return this._SCLItemId;
			}
			set
			{
				if ((this._SCLItemId != value))
				{
					if (this._Hazard_SCLItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSCLItemIdChanging(value);
					this.SendPropertyChanging();
					this._SCLItemId = value;
					this.SendPropertyChanged("SCLItemId");
					this.OnSCLItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatorId", DbType="NVarChar(50)")]
		public string EvaluatorId
		{
			get
			{
				return this._EvaluatorId;
			}
			set
			{
				if ((this._EvaluatorId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluatorIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluatorId = value;
					this.SendPropertyChanged("EvaluatorId");
					this.OnEvaluatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EvaluationTime
		{
			get
			{
				return this._EvaluationTime;
			}
			set
			{
				if ((this._EvaluationTime != value))
				{
					this.OnEvaluationTimeChanging(value);
					this.SendPropertyChanging();
					this._EvaluationTime = value;
					this.SendPropertyChanged("EvaluationTime");
					this.OnEvaluationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="NVarChar(50)")]
		public string RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this.OnRiskLevelChanging(value);
					this.SendPropertyChanging();
					this._RiskLevel = value;
					this.SendPropertyChanged("RiskLevel");
					this.OnRiskLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_SCLItemRecord_Hazard_SCLItem", Storage="_Hazard_SCLItem", ThisKey="SCLItemId", OtherKey="SCLItemId", IsForeignKey=true)]
		public Hazard_SCLItem Hazard_SCLItem
		{
			get
			{
				return this._Hazard_SCLItem.Entity;
			}
			set
			{
				Hazard_SCLItem previousValue = this._Hazard_SCLItem.Entity;
				if (((previousValue != value) 
							|| (this._Hazard_SCLItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hazard_SCLItem.Entity = null;
						previousValue.Hazard_SCLItemRecord.Remove(this);
					}
					this._Hazard_SCLItem.Entity = value;
					if ((value != null))
					{
						value.Hazard_SCLItemRecord.Add(this);
						this._SCLItemId = value.SCLItemId;
					}
					else
					{
						this._SCLItemId = default(string);
					}
					this.SendPropertyChanged("Hazard_SCLItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_SCLItemRecord_Sys_User", Storage="_Sys_User", ThisKey="EvaluatorId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Hazard_SCLItemRecord.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Hazard_SCLItemRecord.Add(this);
						this._EvaluatorId = value.UserId;
					}
					else
					{
						this._EvaluatorId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InformationProject_FileCabinetA")]
	public partial class InformationProject_FileCabinetA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FileCabinetAId;
		
		private string _MenuId;
		
		private string _Code;
		
		private string _Title;
		
		private string _SupFileCabinetAId;
		
		private System.Nullable<bool> _IsEndLever;
		
		private EntityRef<Sys_Menu> _Sys_Menu;
		
		private EntitySet<InformationProject_FileCabinetAItem> _InformationProject_FileCabinetAItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileCabinetAIdChanging(string value);
    partial void OnFileCabinetAIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSupFileCabinetAIdChanging(string value);
    partial void OnSupFileCabinetAIdChanged();
    partial void OnIsEndLeverChanging(System.Nullable<bool> value);
    partial void OnIsEndLeverChanged();
    #endregion
		
		public InformationProject_FileCabinetA()
		{
			this._Sys_Menu = default(EntityRef<Sys_Menu>);
			this._InformationProject_FileCabinetAItem = new EntitySet<InformationProject_FileCabinetAItem>(new Action<InformationProject_FileCabinetAItem>(this.attach_InformationProject_FileCabinetAItem), new Action<InformationProject_FileCabinetAItem>(this.detach_InformationProject_FileCabinetAItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileCabinetAId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FileCabinetAId
		{
			get
			{
				return this._FileCabinetAId;
			}
			set
			{
				if ((this._FileCabinetAId != value))
				{
					this.OnFileCabinetAIdChanging(value);
					this.SendPropertyChanging();
					this._FileCabinetAId = value;
					this.SendPropertyChanged("FileCabinetAId");
					this.OnFileCabinetAIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Sys_Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupFileCabinetAId", DbType="NVarChar(50)")]
		public string SupFileCabinetAId
		{
			get
			{
				return this._SupFileCabinetAId;
			}
			set
			{
				if ((this._SupFileCabinetAId != value))
				{
					this.OnSupFileCabinetAIdChanging(value);
					this.SendPropertyChanging();
					this._SupFileCabinetAId = value;
					this.SendPropertyChanged("SupFileCabinetAId");
					this.OnSupFileCabinetAIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEndLever", DbType="Bit")]
		public System.Nullable<bool> IsEndLever
		{
			get
			{
				return this._IsEndLever;
			}
			set
			{
				if ((this._IsEndLever != value))
				{
					this.OnIsEndLeverChanging(value);
					this.SendPropertyChanging();
					this._IsEndLever = value;
					this.SendPropertyChanged("IsEndLever");
					this.OnIsEndLeverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_InformationProject_FileCabinetA_Sys_Menu", Storage="_Sys_Menu", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true)]
		public Sys_Menu Sys_Menu
		{
			get
			{
				return this._Sys_Menu.Entity;
			}
			set
			{
				Sys_Menu previousValue = this._Sys_Menu.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Menu.Entity = null;
						previousValue.InformationProject_FileCabinetA.Remove(this);
					}
					this._Sys_Menu.Entity = value;
					if ((value != null))
					{
						value.InformationProject_FileCabinetA.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(string);
					}
					this.SendPropertyChanged("Sys_Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_InformationProject_FileCabinetAItem_InformationProject_FileCabinetA", Storage="_InformationProject_FileCabinetAItem", ThisKey="FileCabinetAId", OtherKey="FileCabinetAId", DeleteRule="NO ACTION")]
		public EntitySet<InformationProject_FileCabinetAItem> InformationProject_FileCabinetAItem
		{
			get
			{
				return this._InformationProject_FileCabinetAItem;
			}
			set
			{
				this._InformationProject_FileCabinetAItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InformationProject_FileCabinetAItem(InformationProject_FileCabinetAItem entity)
		{
			this.SendPropertyChanging();
			entity.InformationProject_FileCabinetA = this;
		}
		
		private void detach_InformationProject_FileCabinetAItem(InformationProject_FileCabinetAItem entity)
		{
			this.SendPropertyChanging();
			entity.InformationProject_FileCabinetA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InformationProject_FileCabinetAItem")]
	public partial class InformationProject_FileCabinetAItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FileCabinetAItemId;
		
		private string _FileCabinetAId;
		
		private string _Code;
		
		private string _Title;
		
		private string _FileContent;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _Remark;
		
		private string _AttachUrl;
		
		private System.Nullable<bool> _IsMenu;
		
		private string _Url;
		
		private EntityRef<InformationProject_FileCabinetA> _InformationProject_FileCabinetA;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileCabinetAItemIdChanging(string value);
    partial void OnFileCabinetAItemIdChanged();
    partial void OnFileCabinetAIdChanging(string value);
    partial void OnFileCabinetAIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFileContentChanging(string value);
    partial void OnFileContentChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnIsMenuChanging(System.Nullable<bool> value);
    partial void OnIsMenuChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public InformationProject_FileCabinetAItem()
		{
			this._InformationProject_FileCabinetA = default(EntityRef<InformationProject_FileCabinetA>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileCabinetAItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FileCabinetAItemId
		{
			get
			{
				return this._FileCabinetAItemId;
			}
			set
			{
				if ((this._FileCabinetAItemId != value))
				{
					this.OnFileCabinetAItemIdChanging(value);
					this.SendPropertyChanging();
					this._FileCabinetAItemId = value;
					this.SendPropertyChanged("FileCabinetAItemId");
					this.OnFileCabinetAItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileCabinetAId", DbType="NVarChar(50)")]
		public string FileCabinetAId
		{
			get
			{
				return this._FileCabinetAId;
			}
			set
			{
				if ((this._FileCabinetAId != value))
				{
					if (this._InformationProject_FileCabinetA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileCabinetAIdChanging(value);
					this.SendPropertyChanging();
					this._FileCabinetAId = value;
					this.SendPropertyChanged("FileCabinetAId");
					this.OnFileCabinetAIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(800)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContent", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string FileContent
		{
			get
			{
				return this._FileContent;
			}
			set
			{
				if ((this._FileContent != value))
				{
					this.OnFileContentChanging(value);
					this.SendPropertyChanging();
					this._FileContent = value;
					this.SendPropertyChanged("FileContent");
					this.OnFileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(2000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMenu", DbType="Bit")]
		public System.Nullable<bool> IsMenu
		{
			get
			{
				return this._IsMenu;
			}
			set
			{
				if ((this._IsMenu != value))
				{
					this.OnIsMenuChanging(value);
					this.SendPropertyChanging();
					this._IsMenu = value;
					this.SendPropertyChanged("IsMenu");
					this.OnIsMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(500)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_InformationProject_FileCabinetAItem_InformationProject_FileCabinetA", Storage="_InformationProject_FileCabinetA", ThisKey="FileCabinetAId", OtherKey="FileCabinetAId", IsForeignKey=true)]
		public InformationProject_FileCabinetA InformationProject_FileCabinetA
		{
			get
			{
				return this._InformationProject_FileCabinetA.Entity;
			}
			set
			{
				InformationProject_FileCabinetA previousValue = this._InformationProject_FileCabinetA.Entity;
				if (((previousValue != value) 
							|| (this._InformationProject_FileCabinetA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InformationProject_FileCabinetA.Entity = null;
						previousValue.InformationProject_FileCabinetAItem.Remove(this);
					}
					this._InformationProject_FileCabinetA.Entity = value;
					if ((value != null))
					{
						value.InformationProject_FileCabinetAItem.Add(this);
						this._FileCabinetAId = value.FileCabinetAId;
					}
					else
					{
						this._FileCabinetAId = default(string);
					}
					this.SendPropertyChanged("InformationProject_FileCabinetA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_InformationProject_FileCabinetAItem_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.InformationProject_FileCabinetAItem.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.InformationProject_FileCabinetAItem.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.License_BlindPlate")]
	public partial class License_BlindPlate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BlindPlateId;
		
		private string _LicenseCode;
		
		private string _InstallationId;
		
		private string _UnitId;
		
		private string _ApplyUnit;
		
		private string _ApplyManId;
		
		private string _EquipmentName;
		
		private string _Medium;
		
		private string _Temperature;
		
		private string _Pressure;
		
		private string _Specification;
		
		private string _Number;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private string _Implement;
		
		private string _ProcessGuardian;
		
		private string _OtherSpecial;
		
		private string _Numbering;
		
		private string _PositionUrl;
		
		private string _CompileManId;
		
		private System.Nullable<System.DateTime> _CompileManTime;
		
		private string _OperatorManId;
		
		private System.Nullable<System.DateTime> _OperatorManTime;
		
		private string _OperatorHeadId;
		
		private System.Nullable<System.DateTime> _OperatorHeadTime;
		
		private string _UnitHeadId;
		
		private System.Nullable<System.DateTime> _UnitHeadTime;
		
		private string _MeasuresManId;
		
		private System.Nullable<System.DateTime> _MeasuresManTime;
		
		private string _OtherMeasures;
		
		private string _CompileMan2Id;
		
		private System.Nullable<System.DateTime> _CompileMan2Time;
		
		private string _SafeEduManId;
		
		private System.Nullable<System.DateTime> _SafeEduManTime;
		
		private string _SafeEduMan2Id;
		
		private System.Nullable<System.DateTime> _SafeEduMan2Time;
		
		private string _ProduceUnitOpinion;
		
		private string _ProduceUnitManId;
		
		private System.Nullable<System.DateTime> _ProduceUnitManTime;
		
		private string _OperationUnitOpinion;
		
		private string _OperationUnitManId;
		
		private System.Nullable<System.DateTime> _OperationUnitManTime;
		
		private string _ProductionDepOpinion;
		
		private string _ProductionDepManId;
		
		private System.Nullable<System.DateTime> _ProductionDepManTime;
		
		private string _AccOperationUnitOpinion;
		
		private string _AccOperationUnitManId;
		
		private System.Nullable<System.DateTime> _AccOperationUnitManTime;
		
		private string _AccProduceUnitOpinion;
		
		private string _AccProduceUnitManId;
		
		private System.Nullable<System.DateTime> _AccProduceUnitManTime;
		
		private string _QRCodeUrl;
		
		private string _AttachUrl;
		
		private string _States;
		
		private string _JobInstallationId;
		
		private System.Nullable<System.DateTime> _PauseTime;
		
		private string _PauseDescribe;
		
		private string _JobUnitId;
		
		private string _JobManName;
		
		private string _Material;
		
		private string _JobPlace;
		
		private System.Nullable<System.DateTime> _EffectiveEndDate;
		
		private string _GeoCoordinate;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Installation> _JobInstallation;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_Unit> _JobUnit;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _AccProduceUnitMan;
		
		private EntityRef<Sys_User> _ApplyMan;
		
		private EntityRef<Sys_User> _CompileMan;
		
		private EntityRef<Sys_User> _CompileMan2;
		
		private EntityRef<Sys_User> _MeasuresMan;
		
		private EntityRef<Sys_User> _OperationUnitMan;
		
		private EntityRef<Sys_User> _OperatorHead;
		
		private EntityRef<Sys_User> _ProduceUnitMan;
		
		private EntityRef<Sys_User> _ProductionDepMan;
		
		private EntityRef<Sys_User> _SafeEduMan;
		
		private EntityRef<Sys_User> _SafeEduMan2;
		
		private EntityRef<Sys_User> _UnitHead;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlindPlateIdChanging(string value);
    partial void OnBlindPlateIdChanged();
    partial void OnLicenseCodeChanging(string value);
    partial void OnLicenseCodeChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnApplyUnitChanging(string value);
    partial void OnApplyUnitChanged();
    partial void OnApplyManIdChanging(string value);
    partial void OnApplyManIdChanged();
    partial void OnEquipmentNameChanging(string value);
    partial void OnEquipmentNameChanged();
    partial void OnMediumChanging(string value);
    partial void OnMediumChanged();
    partial void OnTemperatureChanging(string value);
    partial void OnTemperatureChanged();
    partial void OnPressureChanging(string value);
    partial void OnPressureChanged();
    partial void OnSpecificationChanging(string value);
    partial void OnSpecificationChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveDateChanged();
    partial void OnImplementChanging(string value);
    partial void OnImplementChanged();
    partial void OnProcessGuardianChanging(string value);
    partial void OnProcessGuardianChanged();
    partial void OnOtherSpecialChanging(string value);
    partial void OnOtherSpecialChanged();
    partial void OnNumberingChanging(string value);
    partial void OnNumberingChanged();
    partial void OnPositionUrlChanging(string value);
    partial void OnPositionUrlChanged();
    partial void OnCompileManIdChanging(string value);
    partial void OnCompileManIdChanged();
    partial void OnCompileManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileManTimeChanged();
    partial void OnOperatorManIdChanging(string value);
    partial void OnOperatorManIdChanged();
    partial void OnOperatorManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperatorManTimeChanged();
    partial void OnOperatorHeadIdChanging(string value);
    partial void OnOperatorHeadIdChanged();
    partial void OnOperatorHeadTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperatorHeadTimeChanged();
    partial void OnUnitHeadIdChanging(string value);
    partial void OnUnitHeadIdChanged();
    partial void OnUnitHeadTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUnitHeadTimeChanged();
    partial void OnMeasuresManIdChanging(string value);
    partial void OnMeasuresManIdChanged();
    partial void OnMeasuresManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnMeasuresManTimeChanged();
    partial void OnOtherMeasuresChanging(string value);
    partial void OnOtherMeasuresChanged();
    partial void OnCompileMan2IdChanging(string value);
    partial void OnCompileMan2IdChanged();
    partial void OnCompileMan2TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileMan2TimeChanged();
    partial void OnSafeEduManIdChanging(string value);
    partial void OnSafeEduManIdChanged();
    partial void OnSafeEduManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSafeEduManTimeChanged();
    partial void OnSafeEduMan2IdChanging(string value);
    partial void OnSafeEduMan2IdChanged();
    partial void OnSafeEduMan2TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSafeEduMan2TimeChanged();
    partial void OnProduceUnitOpinionChanging(string value);
    partial void OnProduceUnitOpinionChanged();
    partial void OnProduceUnitManIdChanging(string value);
    partial void OnProduceUnitManIdChanged();
    partial void OnProduceUnitManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProduceUnitManTimeChanged();
    partial void OnOperationUnitOpinionChanging(string value);
    partial void OnOperationUnitOpinionChanged();
    partial void OnOperationUnitManIdChanging(string value);
    partial void OnOperationUnitManIdChanged();
    partial void OnOperationUnitManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperationUnitManTimeChanged();
    partial void OnProductionDepOpinionChanging(string value);
    partial void OnProductionDepOpinionChanged();
    partial void OnProductionDepManIdChanging(string value);
    partial void OnProductionDepManIdChanged();
    partial void OnProductionDepManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProductionDepManTimeChanged();
    partial void OnAccOperationUnitOpinionChanging(string value);
    partial void OnAccOperationUnitOpinionChanged();
    partial void OnAccOperationUnitManIdChanging(string value);
    partial void OnAccOperationUnitManIdChanged();
    partial void OnAccOperationUnitManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAccOperationUnitManTimeChanged();
    partial void OnAccProduceUnitOpinionChanging(string value);
    partial void OnAccProduceUnitOpinionChanged();
    partial void OnAccProduceUnitManIdChanging(string value);
    partial void OnAccProduceUnitManIdChanged();
    partial void OnAccProduceUnitManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAccProduceUnitManTimeChanged();
    partial void OnQRCodeUrlChanging(string value);
    partial void OnQRCodeUrlChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnJobInstallationIdChanging(string value);
    partial void OnJobInstallationIdChanged();
    partial void OnPauseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPauseTimeChanged();
    partial void OnPauseDescribeChanging(string value);
    partial void OnPauseDescribeChanged();
    partial void OnJobUnitIdChanging(string value);
    partial void OnJobUnitIdChanged();
    partial void OnJobManNameChanging(string value);
    partial void OnJobManNameChanged();
    partial void OnMaterialChanging(string value);
    partial void OnMaterialChanged();
    partial void OnJobPlaceChanging(string value);
    partial void OnJobPlaceChanged();
    partial void OnEffectiveEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveEndDateChanged();
    partial void OnGeoCoordinateChanging(string value);
    partial void OnGeoCoordinateChanged();
    #endregion
		
		public License_BlindPlate()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._JobInstallation = default(EntityRef<Base_Installation>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._JobUnit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._AccProduceUnitMan = default(EntityRef<Sys_User>);
			this._ApplyMan = default(EntityRef<Sys_User>);
			this._CompileMan = default(EntityRef<Sys_User>);
			this._CompileMan2 = default(EntityRef<Sys_User>);
			this._MeasuresMan = default(EntityRef<Sys_User>);
			this._OperationUnitMan = default(EntityRef<Sys_User>);
			this._OperatorHead = default(EntityRef<Sys_User>);
			this._ProduceUnitMan = default(EntityRef<Sys_User>);
			this._ProductionDepMan = default(EntityRef<Sys_User>);
			this._SafeEduMan = default(EntityRef<Sys_User>);
			this._SafeEduMan2 = default(EntityRef<Sys_User>);
			this._UnitHead = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlindPlateId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BlindPlateId
		{
			get
			{
				return this._BlindPlateId;
			}
			set
			{
				if ((this._BlindPlateId != value))
				{
					this.OnBlindPlateIdChanging(value);
					this.SendPropertyChanging();
					this._BlindPlateId = value;
					this.SendPropertyChanged("BlindPlateId");
					this.OnBlindPlateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(50)")]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this.OnLicenseCodeChanging(value);
					this.SendPropertyChanging();
					this._LicenseCode = value;
					this.SendPropertyChanged("LicenseCode");
					this.OnLicenseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnit", DbType="NVarChar(500)")]
		public string ApplyUnit
		{
			get
			{
				return this._ApplyUnit;
			}
			set
			{
				if ((this._ApplyUnit != value))
				{
					this.OnApplyUnitChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnit = value;
					this.SendPropertyChanged("ApplyUnit");
					this.OnApplyUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyManId", DbType="NVarChar(50)")]
		public string ApplyManId
		{
			get
			{
				return this._ApplyManId;
			}
			set
			{
				if ((this._ApplyManId != value))
				{
					if (this._ApplyMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyManIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyManId = value;
					this.SendPropertyChanged("ApplyManId");
					this.OnApplyManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentName", DbType="NVarChar(200)")]
		public string EquipmentName
		{
			get
			{
				return this._EquipmentName;
			}
			set
			{
				if ((this._EquipmentName != value))
				{
					this.OnEquipmentNameChanging(value);
					this.SendPropertyChanging();
					this._EquipmentName = value;
					this.SendPropertyChanged("EquipmentName");
					this.OnEquipmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Medium", DbType="NVarChar(50)")]
		public string Medium
		{
			get
			{
				return this._Medium;
			}
			set
			{
				if ((this._Medium != value))
				{
					this.OnMediumChanging(value);
					this.SendPropertyChanging();
					this._Medium = value;
					this.SendPropertyChanged("Medium");
					this.OnMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temperature", DbType="NVarChar(50)")]
		public string Temperature
		{
			get
			{
				return this._Temperature;
			}
			set
			{
				if ((this._Temperature != value))
				{
					this.OnTemperatureChanging(value);
					this.SendPropertyChanging();
					this._Temperature = value;
					this.SendPropertyChanged("Temperature");
					this.OnTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pressure", DbType="NVarChar(50)")]
		public string Pressure
		{
			get
			{
				return this._Pressure;
			}
			set
			{
				if ((this._Pressure != value))
				{
					this.OnPressureChanging(value);
					this.SendPropertyChanging();
					this._Pressure = value;
					this.SendPropertyChanged("Pressure");
					this.OnPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specification", DbType="NVarChar(50)")]
		public string Specification
		{
			get
			{
				return this._Specification;
			}
			set
			{
				if ((this._Specification != value))
				{
					this.OnSpecificationChanging(value);
					this.SendPropertyChanging();
					this._Specification = value;
					this.SendPropertyChanged("Specification");
					this.OnSpecificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Implement", DbType="NChar(1)")]
		public string Implement
		{
			get
			{
				return this._Implement;
			}
			set
			{
				if ((this._Implement != value))
				{
					this.OnImplementChanging(value);
					this.SendPropertyChanging();
					this._Implement = value;
					this.SendPropertyChanged("Implement");
					this.OnImplementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessGuardian", DbType="NVarChar(50)")]
		public string ProcessGuardian
		{
			get
			{
				return this._ProcessGuardian;
			}
			set
			{
				if ((this._ProcessGuardian != value))
				{
					this.OnProcessGuardianChanging(value);
					this.SendPropertyChanging();
					this._ProcessGuardian = value;
					this.SendPropertyChanged("ProcessGuardian");
					this.OnProcessGuardianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherSpecial", DbType="NVarChar(100)")]
		public string OtherSpecial
		{
			get
			{
				return this._OtherSpecial;
			}
			set
			{
				if ((this._OtherSpecial != value))
				{
					this.OnOtherSpecialChanging(value);
					this.SendPropertyChanging();
					this._OtherSpecial = value;
					this.SendPropertyChanged("OtherSpecial");
					this.OnOtherSpecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numbering", DbType="NVarChar(50)")]
		public string Numbering
		{
			get
			{
				return this._Numbering;
			}
			set
			{
				if ((this._Numbering != value))
				{
					this.OnNumberingChanging(value);
					this.SendPropertyChanging();
					this._Numbering = value;
					this.SendPropertyChanged("Numbering");
					this.OnNumberingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionUrl", DbType="NVarChar(2000)")]
		public string PositionUrl
		{
			get
			{
				return this._PositionUrl;
			}
			set
			{
				if ((this._PositionUrl != value))
				{
					this.OnPositionUrlChanging(value);
					this.SendPropertyChanging();
					this._PositionUrl = value;
					this.SendPropertyChanged("PositionUrl");
					this.OnPositionUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManId", DbType="NVarChar(50)")]
		public string CompileManId
		{
			get
			{
				return this._CompileManId;
			}
			set
			{
				if ((this._CompileManId != value))
				{
					if (this._CompileMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManIdChanging(value);
					this.SendPropertyChanging();
					this._CompileManId = value;
					this.SendPropertyChanged("CompileManId");
					this.OnCompileManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileManTime
		{
			get
			{
				return this._CompileManTime;
			}
			set
			{
				if ((this._CompileManTime != value))
				{
					this.OnCompileManTimeChanging(value);
					this.SendPropertyChanging();
					this._CompileManTime = value;
					this.SendPropertyChanged("CompileManTime");
					this.OnCompileManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorManId", DbType="NVarChar(2000)")]
		public string OperatorManId
		{
			get
			{
				return this._OperatorManId;
			}
			set
			{
				if ((this._OperatorManId != value))
				{
					this.OnOperatorManIdChanging(value);
					this.SendPropertyChanging();
					this._OperatorManId = value;
					this.SendPropertyChanged("OperatorManId");
					this.OnOperatorManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperatorManTime
		{
			get
			{
				return this._OperatorManTime;
			}
			set
			{
				if ((this._OperatorManTime != value))
				{
					this.OnOperatorManTimeChanging(value);
					this.SendPropertyChanging();
					this._OperatorManTime = value;
					this.SendPropertyChanged("OperatorManTime");
					this.OnOperatorManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorHeadId", DbType="NVarChar(50)")]
		public string OperatorHeadId
		{
			get
			{
				return this._OperatorHeadId;
			}
			set
			{
				if ((this._OperatorHeadId != value))
				{
					if (this._OperatorHead.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperatorHeadIdChanging(value);
					this.SendPropertyChanging();
					this._OperatorHeadId = value;
					this.SendPropertyChanged("OperatorHeadId");
					this.OnOperatorHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorHeadTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperatorHeadTime
		{
			get
			{
				return this._OperatorHeadTime;
			}
			set
			{
				if ((this._OperatorHeadTime != value))
				{
					this.OnOperatorHeadTimeChanging(value);
					this.SendPropertyChanging();
					this._OperatorHeadTime = value;
					this.SendPropertyChanged("OperatorHeadTime");
					this.OnOperatorHeadTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitHeadId", DbType="NVarChar(50)")]
		public string UnitHeadId
		{
			get
			{
				return this._UnitHeadId;
			}
			set
			{
				if ((this._UnitHeadId != value))
				{
					if (this._UnitHead.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitHeadIdChanging(value);
					this.SendPropertyChanging();
					this._UnitHeadId = value;
					this.SendPropertyChanged("UnitHeadId");
					this.OnUnitHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitHeadTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UnitHeadTime
		{
			get
			{
				return this._UnitHeadTime;
			}
			set
			{
				if ((this._UnitHeadTime != value))
				{
					this.OnUnitHeadTimeChanging(value);
					this.SendPropertyChanging();
					this._UnitHeadTime = value;
					this.SendPropertyChanged("UnitHeadTime");
					this.OnUnitHeadTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasuresManId", DbType="NVarChar(50)")]
		public string MeasuresManId
		{
			get
			{
				return this._MeasuresManId;
			}
			set
			{
				if ((this._MeasuresManId != value))
				{
					if (this._MeasuresMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeasuresManIdChanging(value);
					this.SendPropertyChanging();
					this._MeasuresManId = value;
					this.SendPropertyChanged("MeasuresManId");
					this.OnMeasuresManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasuresManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> MeasuresManTime
		{
			get
			{
				return this._MeasuresManTime;
			}
			set
			{
				if ((this._MeasuresManTime != value))
				{
					this.OnMeasuresManTimeChanging(value);
					this.SendPropertyChanging();
					this._MeasuresManTime = value;
					this.SendPropertyChanged("MeasuresManTime");
					this.OnMeasuresManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(500)")]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this.OnOtherMeasuresChanging(value);
					this.SendPropertyChanging();
					this._OtherMeasures = value;
					this.SendPropertyChanged("OtherMeasures");
					this.OnOtherMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan2Id", DbType="NVarChar(50)")]
		public string CompileMan2Id
		{
			get
			{
				return this._CompileMan2Id;
			}
			set
			{
				if ((this._CompileMan2Id != value))
				{
					if (this._CompileMan2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileMan2IdChanging(value);
					this.SendPropertyChanging();
					this._CompileMan2Id = value;
					this.SendPropertyChanged("CompileMan2Id");
					this.OnCompileMan2IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan2Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileMan2Time
		{
			get
			{
				return this._CompileMan2Time;
			}
			set
			{
				if ((this._CompileMan2Time != value))
				{
					this.OnCompileMan2TimeChanging(value);
					this.SendPropertyChanging();
					this._CompileMan2Time = value;
					this.SendPropertyChanged("CompileMan2Time");
					this.OnCompileMan2TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduManId", DbType="NVarChar(50)")]
		public string SafeEduManId
		{
			get
			{
				return this._SafeEduManId;
			}
			set
			{
				if ((this._SafeEduManId != value))
				{
					if (this._SafeEduMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSafeEduManIdChanging(value);
					this.SendPropertyChanging();
					this._SafeEduManId = value;
					this.SendPropertyChanged("SafeEduManId");
					this.OnSafeEduManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SafeEduManTime
		{
			get
			{
				return this._SafeEduManTime;
			}
			set
			{
				if ((this._SafeEduManTime != value))
				{
					this.OnSafeEduManTimeChanging(value);
					this.SendPropertyChanging();
					this._SafeEduManTime = value;
					this.SendPropertyChanged("SafeEduManTime");
					this.OnSafeEduManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduMan2Id", DbType="NVarChar(50)")]
		public string SafeEduMan2Id
		{
			get
			{
				return this._SafeEduMan2Id;
			}
			set
			{
				if ((this._SafeEduMan2Id != value))
				{
					if (this._SafeEduMan2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSafeEduMan2IdChanging(value);
					this.SendPropertyChanging();
					this._SafeEduMan2Id = value;
					this.SendPropertyChanged("SafeEduMan2Id");
					this.OnSafeEduMan2IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduMan2Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> SafeEduMan2Time
		{
			get
			{
				return this._SafeEduMan2Time;
			}
			set
			{
				if ((this._SafeEduMan2Time != value))
				{
					this.OnSafeEduMan2TimeChanging(value);
					this.SendPropertyChanging();
					this._SafeEduMan2Time = value;
					this.SendPropertyChanged("SafeEduMan2Time");
					this.OnSafeEduMan2TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProduceUnitOpinion", DbType="NVarChar(500)")]
		public string ProduceUnitOpinion
		{
			get
			{
				return this._ProduceUnitOpinion;
			}
			set
			{
				if ((this._ProduceUnitOpinion != value))
				{
					this.OnProduceUnitOpinionChanging(value);
					this.SendPropertyChanging();
					this._ProduceUnitOpinion = value;
					this.SendPropertyChanged("ProduceUnitOpinion");
					this.OnProduceUnitOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProduceUnitManId", DbType="NVarChar(50)")]
		public string ProduceUnitManId
		{
			get
			{
				return this._ProduceUnitManId;
			}
			set
			{
				if ((this._ProduceUnitManId != value))
				{
					if (this._ProduceUnitMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduceUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._ProduceUnitManId = value;
					this.SendPropertyChanged("ProduceUnitManId");
					this.OnProduceUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProduceUnitManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProduceUnitManTime
		{
			get
			{
				return this._ProduceUnitManTime;
			}
			set
			{
				if ((this._ProduceUnitManTime != value))
				{
					this.OnProduceUnitManTimeChanging(value);
					this.SendPropertyChanging();
					this._ProduceUnitManTime = value;
					this.SendPropertyChanged("ProduceUnitManTime");
					this.OnProduceUnitManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationUnitOpinion", DbType="NVarChar(500)")]
		public string OperationUnitOpinion
		{
			get
			{
				return this._OperationUnitOpinion;
			}
			set
			{
				if ((this._OperationUnitOpinion != value))
				{
					this.OnOperationUnitOpinionChanging(value);
					this.SendPropertyChanging();
					this._OperationUnitOpinion = value;
					this.SendPropertyChanged("OperationUnitOpinion");
					this.OnOperationUnitOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationUnitManId", DbType="NVarChar(50)")]
		public string OperationUnitManId
		{
			get
			{
				return this._OperationUnitManId;
			}
			set
			{
				if ((this._OperationUnitManId != value))
				{
					if (this._OperationUnitMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperationUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._OperationUnitManId = value;
					this.SendPropertyChanged("OperationUnitManId");
					this.OnOperationUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationUnitManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperationUnitManTime
		{
			get
			{
				return this._OperationUnitManTime;
			}
			set
			{
				if ((this._OperationUnitManTime != value))
				{
					this.OnOperationUnitManTimeChanging(value);
					this.SendPropertyChanging();
					this._OperationUnitManTime = value;
					this.SendPropertyChanged("OperationUnitManTime");
					this.OnOperationUnitManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductionDepOpinion", DbType="NVarChar(500)")]
		public string ProductionDepOpinion
		{
			get
			{
				return this._ProductionDepOpinion;
			}
			set
			{
				if ((this._ProductionDepOpinion != value))
				{
					this.OnProductionDepOpinionChanging(value);
					this.SendPropertyChanging();
					this._ProductionDepOpinion = value;
					this.SendPropertyChanged("ProductionDepOpinion");
					this.OnProductionDepOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductionDepManId", DbType="NVarChar(50)")]
		public string ProductionDepManId
		{
			get
			{
				return this._ProductionDepManId;
			}
			set
			{
				if ((this._ProductionDepManId != value))
				{
					if (this._ProductionDepMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductionDepManIdChanging(value);
					this.SendPropertyChanging();
					this._ProductionDepManId = value;
					this.SendPropertyChanged("ProductionDepManId");
					this.OnProductionDepManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductionDepManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProductionDepManTime
		{
			get
			{
				return this._ProductionDepManTime;
			}
			set
			{
				if ((this._ProductionDepManTime != value))
				{
					this.OnProductionDepManTimeChanging(value);
					this.SendPropertyChanging();
					this._ProductionDepManTime = value;
					this.SendPropertyChanged("ProductionDepManTime");
					this.OnProductionDepManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccOperationUnitOpinion", DbType="NVarChar(500)")]
		public string AccOperationUnitOpinion
		{
			get
			{
				return this._AccOperationUnitOpinion;
			}
			set
			{
				if ((this._AccOperationUnitOpinion != value))
				{
					this.OnAccOperationUnitOpinionChanging(value);
					this.SendPropertyChanging();
					this._AccOperationUnitOpinion = value;
					this.SendPropertyChanged("AccOperationUnitOpinion");
					this.OnAccOperationUnitOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccOperationUnitManId", DbType="NVarChar(50)")]
		public string AccOperationUnitManId
		{
			get
			{
				return this._AccOperationUnitManId;
			}
			set
			{
				if ((this._AccOperationUnitManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccOperationUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._AccOperationUnitManId = value;
					this.SendPropertyChanged("AccOperationUnitManId");
					this.OnAccOperationUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccOperationUnitManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AccOperationUnitManTime
		{
			get
			{
				return this._AccOperationUnitManTime;
			}
			set
			{
				if ((this._AccOperationUnitManTime != value))
				{
					this.OnAccOperationUnitManTimeChanging(value);
					this.SendPropertyChanging();
					this._AccOperationUnitManTime = value;
					this.SendPropertyChanged("AccOperationUnitManTime");
					this.OnAccOperationUnitManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccProduceUnitOpinion", DbType="NVarChar(500)")]
		public string AccProduceUnitOpinion
		{
			get
			{
				return this._AccProduceUnitOpinion;
			}
			set
			{
				if ((this._AccProduceUnitOpinion != value))
				{
					this.OnAccProduceUnitOpinionChanging(value);
					this.SendPropertyChanging();
					this._AccProduceUnitOpinion = value;
					this.SendPropertyChanged("AccProduceUnitOpinion");
					this.OnAccProduceUnitOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccProduceUnitManId", DbType="NVarChar(50)")]
		public string AccProduceUnitManId
		{
			get
			{
				return this._AccProduceUnitManId;
			}
			set
			{
				if ((this._AccProduceUnitManId != value))
				{
					if (this._AccProduceUnitMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccProduceUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._AccProduceUnitManId = value;
					this.SendPropertyChanged("AccProduceUnitManId");
					this.OnAccProduceUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccProduceUnitManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AccProduceUnitManTime
		{
			get
			{
				return this._AccProduceUnitManTime;
			}
			set
			{
				if ((this._AccProduceUnitManTime != value))
				{
					this.OnAccProduceUnitManTimeChanging(value);
					this.SendPropertyChanging();
					this._AccProduceUnitManTime = value;
					this.SendPropertyChanged("AccProduceUnitManTime");
					this.OnAccProduceUnitManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this.OnQRCodeUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeUrl = value;
					this.SendPropertyChanged("QRCodeUrl");
					this.OnQRCodeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobInstallationId", DbType="NVarChar(50)")]
		public string JobInstallationId
		{
			get
			{
				return this._JobInstallationId;
			}
			set
			{
				if ((this._JobInstallationId != value))
				{
					if (this._JobInstallation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._JobInstallationId = value;
					this.SendPropertyChanged("JobInstallationId");
					this.OnJobInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PauseTime
		{
			get
			{
				return this._PauseTime;
			}
			set
			{
				if ((this._PauseTime != value))
				{
					this.OnPauseTimeChanging(value);
					this.SendPropertyChanging();
					this._PauseTime = value;
					this.SendPropertyChanged("PauseTime");
					this.OnPauseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseDescribe", DbType="NVarChar(4000)")]
		public string PauseDescribe
		{
			get
			{
				return this._PauseDescribe;
			}
			set
			{
				if ((this._PauseDescribe != value))
				{
					this.OnPauseDescribeChanging(value);
					this.SendPropertyChanging();
					this._PauseDescribe = value;
					this.SendPropertyChanged("PauseDescribe");
					this.OnPauseDescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnitId", DbType="NVarChar(50)")]
		public string JobUnitId
		{
			get
			{
				return this._JobUnitId;
			}
			set
			{
				if ((this._JobUnitId != value))
				{
					if (this._JobUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobUnitIdChanging(value);
					this.SendPropertyChanging();
					this._JobUnitId = value;
					this.SendPropertyChanged("JobUnitId");
					this.OnJobUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobManName", DbType="NVarChar(2000)")]
		public string JobManName
		{
			get
			{
				return this._JobManName;
			}
			set
			{
				if ((this._JobManName != value))
				{
					this.OnJobManNameChanging(value);
					this.SendPropertyChanging();
					this._JobManName = value;
					this.SendPropertyChanged("JobManName");
					this.OnJobManNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material", DbType="NVarChar(200)")]
		public string Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				if ((this._Material != value))
				{
					this.OnMaterialChanging(value);
					this.SendPropertyChanging();
					this._Material = value;
					this.SendPropertyChanged("Material");
					this.OnMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPlace", DbType="NVarChar(2000)")]
		public string JobPlace
		{
			get
			{
				return this._JobPlace;
			}
			set
			{
				if ((this._JobPlace != value))
				{
					this.OnJobPlaceChanging(value);
					this.SendPropertyChanging();
					this._JobPlace = value;
					this.SendPropertyChanged("JobPlace");
					this.OnJobPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveEndDate
		{
			get
			{
				return this._EffectiveEndDate;
			}
			set
			{
				if ((this._EffectiveEndDate != value))
				{
					this.OnEffectiveEndDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveEndDate = value;
					this.SendPropertyChanged("EffectiveEndDate");
					this.OnEffectiveEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoCoordinate", DbType="NVarChar(50)")]
		public string GeoCoordinate
		{
			get
			{
				return this._GeoCoordinate;
			}
			set
			{
				if ((this._GeoCoordinate != value))
				{
					this.OnGeoCoordinateChanging(value);
					this.SendPropertyChanging();
					this._GeoCoordinate = value;
					this.SendPropertyChanged("GeoCoordinate");
					this.OnGeoCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.License_BlindPlate.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.License_BlindPlate.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Base_Installation1", Storage="_JobInstallation", ThisKey="JobInstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation JobInstallation
		{
			get
			{
				return this._JobInstallation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._JobInstallation.Entity;
				if (((previousValue != value) 
							|| (this._JobInstallation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobInstallation.Entity = null;
						previousValue.License_BlindPlate_Base_Installation1.Remove(this);
					}
					this._JobInstallation.Entity = value;
					if ((value != null))
					{
						value.License_BlindPlate_Base_Installation1.Add(this);
						this._JobInstallationId = value.InstallationId;
					}
					else
					{
						this._JobInstallationId = default(string);
					}
					this.SendPropertyChanged("JobInstallation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.License_BlindPlate.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.License_BlindPlate.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Base_Unit_JobUnitId", Storage="_JobUnit", ThisKey="JobUnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit JobUnit
		{
			get
			{
				return this._JobUnit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._JobUnit.Entity;
				if (((previousValue != value) 
							|| (this._JobUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobUnit.Entity = null;
						previousValue.Unit.Remove(this);
					}
					this._JobUnit.Entity = value;
					if ((value != null))
					{
						value.Unit.Add(this);
						this._JobUnitId = value.UnitId;
					}
					else
					{
						this._JobUnitId = default(string);
					}
					this.SendPropertyChanged("JobUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_AccOperationUnitMan", Storage="_Sys_User", ThisKey="AccOperationUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.License_BlindPlate.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.License_BlindPlate.Add(this);
						this._AccOperationUnitManId = value.UserId;
					}
					else
					{
						this._AccOperationUnitManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_AccProduceUnitMan", Storage="_AccProduceUnitMan", ThisKey="AccProduceUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User AccProduceUnitMan
		{
			get
			{
				return this._AccProduceUnitMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._AccProduceUnitMan.Entity;
				if (((previousValue != value) 
							|| (this._AccProduceUnitMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccProduceUnitMan.Entity = null;
						previousValue.License_BlindPlate_Sys_User_AccProduceUnitMan.Remove(this);
					}
					this._AccProduceUnitMan.Entity = value;
					if ((value != null))
					{
						value.License_BlindPlate_Sys_User_AccProduceUnitMan.Add(this);
						this._AccProduceUnitManId = value.UserId;
					}
					else
					{
						this._AccProduceUnitManId = default(string);
					}
					this.SendPropertyChanged("AccProduceUnitMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_ApplyMan", Storage="_ApplyMan", ThisKey="ApplyManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ApplyMan
		{
			get
			{
				return this._ApplyMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ApplyMan.Entity;
				if (((previousValue != value) 
							|| (this._ApplyMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplyMan.Entity = null;
						previousValue.License_BlindPlate_Sys_User_ApplyMan.Remove(this);
					}
					this._ApplyMan.Entity = value;
					if ((value != null))
					{
						value.License_BlindPlate_Sys_User_ApplyMan.Add(this);
						this._ApplyManId = value.UserId;
					}
					else
					{
						this._ApplyManId = default(string);
					}
					this.SendPropertyChanged("ApplyMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_CompileMan", Storage="_CompileMan", ThisKey="CompileManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User CompileMan
		{
			get
			{
				return this._CompileMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._CompileMan.Entity;
				if (((previousValue != value) 
							|| (this._CompileMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompileMan.Entity = null;
						previousValue.License_BlindPlate_Sys_User_CompileMan.Remove(this);
					}
					this._CompileMan.Entity = value;
					if ((value != null))
					{
						value.License_BlindPlate_Sys_User_CompileMan.Add(this);
						this._CompileManId = value.UserId;
					}
					else
					{
						this._CompileManId = default(string);
					}
					this.SendPropertyChanged("CompileMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_CompileMan2", Storage="_CompileMan2", ThisKey="CompileMan2Id", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User CompileMan2
		{
			get
			{
				return this._CompileMan2.Entity;
			}
			set
			{
				Sys_User previousValue = this._CompileMan2.Entity;
				if (((previousValue != value) 
							|| (this._CompileMan2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompileMan2.Entity = null;
						previousValue.License_BlindPlate_Sys_User_CompileMan2.Remove(this);
					}
					this._CompileMan2.Entity = value;
					if ((value != null))
					{
						value.License_BlindPlate_Sys_User_CompileMan2.Add(this);
						this._CompileMan2Id = value.UserId;
					}
					else
					{
						this._CompileMan2Id = default(string);
					}
					this.SendPropertyChanged("CompileMan2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_MeasuresMan", Storage="_MeasuresMan", ThisKey="MeasuresManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User MeasuresMan
		{
			get
			{
				return this._MeasuresMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._MeasuresMan.Entity;
				if (((previousValue != value) 
							|| (this._MeasuresMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeasuresMan.Entity = null;
						previousValue.License_BlindPlate_Sys_User_MeasuresMan.Remove(this);
					}
					this._MeasuresMan.Entity = value;
					if ((value != null))
					{
						value.License_BlindPlate_Sys_User_MeasuresMan.Add(this);
						this._MeasuresManId = value.UserId;
					}
					else
					{
						this._MeasuresManId = default(string);
					}
					this.SendPropertyChanged("MeasuresMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_OperationUnitMan", Storage="_OperationUnitMan", ThisKey="OperationUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User OperationUnitMan
		{
			get
			{
				return this._OperationUnitMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._OperationUnitMan.Entity;
				if (((previousValue != value) 
							|| (this._OperationUnitMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OperationUnitMan.Entity = null;
						previousValue.License_BlindPlate_Sys_User_OperationUnitMan.Remove(this);
					}
					this._OperationUnitMan.Entity = value;
					if ((value != null))
					{
						value.License_BlindPlate_Sys_User_OperationUnitMan.Add(this);
						this._OperationUnitManId = value.UserId;
					}
					else
					{
						this._OperationUnitManId = default(string);
					}
					this.SendPropertyChanged("OperationUnitMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_OperatorHead", Storage="_OperatorHead", ThisKey="OperatorHeadId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User OperatorHead
		{
			get
			{
				return this._OperatorHead.Entity;
			}
			set
			{
				Sys_User previousValue = this._OperatorHead.Entity;
				if (((previousValue != value) 
							|| (this._OperatorHead.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OperatorHead.Entity = null;
						previousValue.License_BlindPlate_Sys_User_OperatorHead.Remove(this);
					}
					this._OperatorHead.Entity = value;
					if ((value != null))
					{
						value.License_BlindPlate_Sys_User_OperatorHead.Add(this);
						this._OperatorHeadId = value.UserId;
					}
					else
					{
						this._OperatorHeadId = default(string);
					}
					this.SendPropertyChanged("OperatorHead");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_ProduceUnitMan", Storage="_ProduceUnitMan", ThisKey="ProduceUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ProduceUnitMan
		{
			get
			{
				return this._ProduceUnitMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ProduceUnitMan.Entity;
				if (((previousValue != value) 
							|| (this._ProduceUnitMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProduceUnitMan.Entity = null;
						previousValue.License_BlindPlate_Sys_User_ProduceUnitMan.Remove(this);
					}
					this._ProduceUnitMan.Entity = value;
					if ((value != null))
					{
						value.License_BlindPlate_Sys_User_ProduceUnitMan.Add(this);
						this._ProduceUnitManId = value.UserId;
					}
					else
					{
						this._ProduceUnitManId = default(string);
					}
					this.SendPropertyChanged("ProduceUnitMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_ProductionDepMan", Storage="_ProductionDepMan", ThisKey="ProductionDepManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ProductionDepMan
		{
			get
			{
				return this._ProductionDepMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ProductionDepMan.Entity;
				if (((previousValue != value) 
							|| (this._ProductionDepMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductionDepMan.Entity = null;
						previousValue.License_BlindPlate_Sys_User_ProductionDepMan.Remove(this);
					}
					this._ProductionDepMan.Entity = value;
					if ((value != null))
					{
						value.License_BlindPlate_Sys_User_ProductionDepMan.Add(this);
						this._ProductionDepManId = value.UserId;
					}
					else
					{
						this._ProductionDepManId = default(string);
					}
					this.SendPropertyChanged("ProductionDepMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_SafeEduMan", Storage="_SafeEduMan", ThisKey="SafeEduManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User SafeEduMan
		{
			get
			{
				return this._SafeEduMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._SafeEduMan.Entity;
				if (((previousValue != value) 
							|| (this._SafeEduMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SafeEduMan.Entity = null;
						previousValue.License_BlindPlate_Sys_User_SafeEduMan.Remove(this);
					}
					this._SafeEduMan.Entity = value;
					if ((value != null))
					{
						value.License_BlindPlate_Sys_User_SafeEduMan.Add(this);
						this._SafeEduManId = value.UserId;
					}
					else
					{
						this._SafeEduManId = default(string);
					}
					this.SendPropertyChanged("SafeEduMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_SafeEduMan2", Storage="_SafeEduMan2", ThisKey="SafeEduMan2Id", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User SafeEduMan2
		{
			get
			{
				return this._SafeEduMan2.Entity;
			}
			set
			{
				Sys_User previousValue = this._SafeEduMan2.Entity;
				if (((previousValue != value) 
							|| (this._SafeEduMan2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SafeEduMan2.Entity = null;
						previousValue.License_BlindPlate_Sys_User_SafeEduMan2.Remove(this);
					}
					this._SafeEduMan2.Entity = value;
					if ((value != null))
					{
						value.License_BlindPlate_Sys_User_SafeEduMan2.Add(this);
						this._SafeEduMan2Id = value.UserId;
					}
					else
					{
						this._SafeEduMan2Id = default(string);
					}
					this.SendPropertyChanged("SafeEduMan2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_UnitHead", Storage="_UnitHead", ThisKey="UnitHeadId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User UnitHead
		{
			get
			{
				return this._UnitHead.Entity;
			}
			set
			{
				Sys_User previousValue = this._UnitHead.Entity;
				if (((previousValue != value) 
							|| (this._UnitHead.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitHead.Entity = null;
						previousValue.License_BlindPlate_Sys_User_UnitHead.Remove(this);
					}
					this._UnitHead.Entity = value;
					if ((value != null))
					{
						value.License_BlindPlate_Sys_User_UnitHead.Add(this);
						this._UnitHeadId = value.UserId;
					}
					else
					{
						this._UnitHeadId = default(string);
					}
					this.SendPropertyChanged("UnitHead");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.License_BreakGround")]
	public partial class License_BreakGround : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BreakGroundId;
		
		private string _LicenseCode;
		
		private string _InstallationId;
		
		private string _UnitId;
		
		private string _ApplyUnit;
		
		private string _ApplyManId;
		
		private string _JobMans;
		
		private string _JobPalce;
		
		private string _JobUnit;
		
		private System.Nullable<System.DateTime> _JobStartTime;
		
		private System.Nullable<System.DateTime> _JobEndTime;
		
		private string _OtherMeasures;
		
		private string _PictureUrl;
		
		private string _ApplyMan1Id;
		
		private System.Nullable<System.DateTime> _ApplyManTime;
		
		private string _HAZID;
		
		private string _MeasuresManId;
		
		private System.Nullable<System.DateTime> _MeasuresManTime;
		
		private string _OtherMeasures1;
		
		private string _CompileManId;
		
		private System.Nullable<System.DateTime> _CompileManTime;
		
		private string _SafeEduManId;
		
		private System.Nullable<System.DateTime> _SafeEduManTime;
		
		private string _ApplyUnitOpinion;
		
		private string _ApplyUnitManId;
		
		private System.Nullable<System.DateTime> _ApplyUnitTime;
		
		private string _JobUnitOpinion;
		
		private string _JobUnitManId;
		
		private System.Nullable<System.DateTime> _JobUnitTime;
		
		private string _CountersignOpinion;
		
		private string _CountersignManId;
		
		private System.Nullable<System.DateTime> _CountersignTime;
		
		private string _ApprovalDepOpinion;
		
		private string _ApprovalDepManId;
		
		private System.Nullable<System.DateTime> _ApprovalDepTime;
		
		private string _AcceptanceOpinion;
		
		private string _AcceptanceManId;
		
		private System.Nullable<System.DateTime> _AcceptanceTime;
		
		private string _QRCodeUrl;
		
		private string _AttachUrl;
		
		private string _States;
		
		private string _JobInstallationId;
		
		private string _JobContent;
		
		private System.Nullable<System.DateTime> _PauseTime;
		
		private string _PauseDescribe;
		
		private string _HAZIDName;
		
		private string _GeoCoordinate;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Installation> _JobInstallation;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _ApplyMan;
		
		private EntityRef<Sys_User> _ApplyMan1;
		
		private EntityRef<Sys_User> _ApplyUnitMan;
		
		private EntityRef<Sys_User> _ApprovalDepMan;
		
		private EntityRef<Sys_User> _CompileMan;
		
		private EntityRef<Sys_User> _CountersignMan;
		
		private EntityRef<Sys_User> _JobUnitMan;
		
		private EntityRef<Sys_User> _MeasuresMan;
		
		private EntityRef<Sys_User> _SafeEduMan;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBreakGroundIdChanging(string value);
    partial void OnBreakGroundIdChanged();
    partial void OnLicenseCodeChanging(string value);
    partial void OnLicenseCodeChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnApplyUnitChanging(string value);
    partial void OnApplyUnitChanged();
    partial void OnApplyManIdChanging(string value);
    partial void OnApplyManIdChanged();
    partial void OnJobMansChanging(string value);
    partial void OnJobMansChanged();
    partial void OnJobPalceChanging(string value);
    partial void OnJobPalceChanged();
    partial void OnJobUnitChanging(string value);
    partial void OnJobUnitChanged();
    partial void OnJobStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobStartTimeChanged();
    partial void OnJobEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobEndTimeChanged();
    partial void OnOtherMeasuresChanging(string value);
    partial void OnOtherMeasuresChanged();
    partial void OnPictureUrlChanging(string value);
    partial void OnPictureUrlChanged();
    partial void OnApplyMan1IdChanging(string value);
    partial void OnApplyMan1IdChanged();
    partial void OnApplyManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnApplyManTimeChanged();
    partial void OnHAZIDChanging(string value);
    partial void OnHAZIDChanged();
    partial void OnMeasuresManIdChanging(string value);
    partial void OnMeasuresManIdChanged();
    partial void OnMeasuresManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnMeasuresManTimeChanged();
    partial void OnOtherMeasures1Changing(string value);
    partial void OnOtherMeasures1Changed();
    partial void OnCompileManIdChanging(string value);
    partial void OnCompileManIdChanged();
    partial void OnCompileManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileManTimeChanged();
    partial void OnSafeEduManIdChanging(string value);
    partial void OnSafeEduManIdChanged();
    partial void OnSafeEduManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSafeEduManTimeChanged();
    partial void OnApplyUnitOpinionChanging(string value);
    partial void OnApplyUnitOpinionChanged();
    partial void OnApplyUnitManIdChanging(string value);
    partial void OnApplyUnitManIdChanged();
    partial void OnApplyUnitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnApplyUnitTimeChanged();
    partial void OnJobUnitOpinionChanging(string value);
    partial void OnJobUnitOpinionChanged();
    partial void OnJobUnitManIdChanging(string value);
    partial void OnJobUnitManIdChanged();
    partial void OnJobUnitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobUnitTimeChanged();
    partial void OnCountersignOpinionChanging(string value);
    partial void OnCountersignOpinionChanged();
    partial void OnCountersignManIdChanging(string value);
    partial void OnCountersignManIdChanged();
    partial void OnCountersignTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCountersignTimeChanged();
    partial void OnApprovalDepOpinionChanging(string value);
    partial void OnApprovalDepOpinionChanged();
    partial void OnApprovalDepManIdChanging(string value);
    partial void OnApprovalDepManIdChanged();
    partial void OnApprovalDepTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovalDepTimeChanged();
    partial void OnAcceptanceOpinionChanging(string value);
    partial void OnAcceptanceOpinionChanged();
    partial void OnAcceptanceManIdChanging(string value);
    partial void OnAcceptanceManIdChanged();
    partial void OnAcceptanceTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptanceTimeChanged();
    partial void OnQRCodeUrlChanging(string value);
    partial void OnQRCodeUrlChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnJobInstallationIdChanging(string value);
    partial void OnJobInstallationIdChanged();
    partial void OnJobContentChanging(string value);
    partial void OnJobContentChanged();
    partial void OnPauseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPauseTimeChanged();
    partial void OnPauseDescribeChanging(string value);
    partial void OnPauseDescribeChanged();
    partial void OnHAZIDNameChanging(string value);
    partial void OnHAZIDNameChanged();
    partial void OnGeoCoordinateChanging(string value);
    partial void OnGeoCoordinateChanged();
    #endregion
		
		public License_BreakGround()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._JobInstallation = default(EntityRef<Base_Installation>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._ApplyMan = default(EntityRef<Sys_User>);
			this._ApplyMan1 = default(EntityRef<Sys_User>);
			this._ApplyUnitMan = default(EntityRef<Sys_User>);
			this._ApprovalDepMan = default(EntityRef<Sys_User>);
			this._CompileMan = default(EntityRef<Sys_User>);
			this._CountersignMan = default(EntityRef<Sys_User>);
			this._JobUnitMan = default(EntityRef<Sys_User>);
			this._MeasuresMan = default(EntityRef<Sys_User>);
			this._SafeEduMan = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakGroundId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BreakGroundId
		{
			get
			{
				return this._BreakGroundId;
			}
			set
			{
				if ((this._BreakGroundId != value))
				{
					this.OnBreakGroundIdChanging(value);
					this.SendPropertyChanging();
					this._BreakGroundId = value;
					this.SendPropertyChanged("BreakGroundId");
					this.OnBreakGroundIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(50)")]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this.OnLicenseCodeChanging(value);
					this.SendPropertyChanging();
					this._LicenseCode = value;
					this.SendPropertyChanged("LicenseCode");
					this.OnLicenseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnit", DbType="NVarChar(500)")]
		public string ApplyUnit
		{
			get
			{
				return this._ApplyUnit;
			}
			set
			{
				if ((this._ApplyUnit != value))
				{
					this.OnApplyUnitChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnit = value;
					this.SendPropertyChanged("ApplyUnit");
					this.OnApplyUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyManId", DbType="NVarChar(50)")]
		public string ApplyManId
		{
			get
			{
				return this._ApplyManId;
			}
			set
			{
				if ((this._ApplyManId != value))
				{
					if (this._ApplyMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyManIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyManId = value;
					this.SendPropertyChanged("ApplyManId");
					this.OnApplyManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobMans", DbType="NVarChar(200)")]
		public string JobMans
		{
			get
			{
				return this._JobMans;
			}
			set
			{
				if ((this._JobMans != value))
				{
					this.OnJobMansChanging(value);
					this.SendPropertyChanging();
					this._JobMans = value;
					this.SendPropertyChanged("JobMans");
					this.OnJobMansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPalce", DbType="NVarChar(500)")]
		public string JobPalce
		{
			get
			{
				return this._JobPalce;
			}
			set
			{
				if ((this._JobPalce != value))
				{
					this.OnJobPalceChanging(value);
					this.SendPropertyChanging();
					this._JobPalce = value;
					this.SendPropertyChanged("JobPalce");
					this.OnJobPalceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnit", DbType="NVarChar(500)")]
		public string JobUnit
		{
			get
			{
				return this._JobUnit;
			}
			set
			{
				if ((this._JobUnit != value))
				{
					this.OnJobUnitChanging(value);
					this.SendPropertyChanging();
					this._JobUnit = value;
					this.SendPropertyChanged("JobUnit");
					this.OnJobUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobStartTime
		{
			get
			{
				return this._JobStartTime;
			}
			set
			{
				if ((this._JobStartTime != value))
				{
					this.OnJobStartTimeChanging(value);
					this.SendPropertyChanging();
					this._JobStartTime = value;
					this.SendPropertyChanged("JobStartTime");
					this.OnJobStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobEndTime
		{
			get
			{
				return this._JobEndTime;
			}
			set
			{
				if ((this._JobEndTime != value))
				{
					this.OnJobEndTimeChanging(value);
					this.SendPropertyChanging();
					this._JobEndTime = value;
					this.SendPropertyChanged("JobEndTime");
					this.OnJobEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(500)")]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this.OnOtherMeasuresChanging(value);
					this.SendPropertyChanging();
					this._OtherMeasures = value;
					this.SendPropertyChanged("OtherMeasures");
					this.OnOtherMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureUrl", DbType="NVarChar(2000)")]
		public string PictureUrl
		{
			get
			{
				return this._PictureUrl;
			}
			set
			{
				if ((this._PictureUrl != value))
				{
					this.OnPictureUrlChanging(value);
					this.SendPropertyChanging();
					this._PictureUrl = value;
					this.SendPropertyChanged("PictureUrl");
					this.OnPictureUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyMan1Id", DbType="NVarChar(50)")]
		public string ApplyMan1Id
		{
			get
			{
				return this._ApplyMan1Id;
			}
			set
			{
				if ((this._ApplyMan1Id != value))
				{
					if (this._ApplyMan1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyMan1IdChanging(value);
					this.SendPropertyChanging();
					this._ApplyMan1Id = value;
					this.SendPropertyChanged("ApplyMan1Id");
					this.OnApplyMan1IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApplyManTime
		{
			get
			{
				return this._ApplyManTime;
			}
			set
			{
				if ((this._ApplyManTime != value))
				{
					this.OnApplyManTimeChanging(value);
					this.SendPropertyChanging();
					this._ApplyManTime = value;
					this.SendPropertyChanged("ApplyManTime");
					this.OnApplyManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZID", DbType="NVarChar(4000)")]
		public string HAZID
		{
			get
			{
				return this._HAZID;
			}
			set
			{
				if ((this._HAZID != value))
				{
					this.OnHAZIDChanging(value);
					this.SendPropertyChanging();
					this._HAZID = value;
					this.SendPropertyChanged("HAZID");
					this.OnHAZIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasuresManId", DbType="NVarChar(50)")]
		public string MeasuresManId
		{
			get
			{
				return this._MeasuresManId;
			}
			set
			{
				if ((this._MeasuresManId != value))
				{
					if (this._MeasuresMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeasuresManIdChanging(value);
					this.SendPropertyChanging();
					this._MeasuresManId = value;
					this.SendPropertyChanged("MeasuresManId");
					this.OnMeasuresManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasuresManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> MeasuresManTime
		{
			get
			{
				return this._MeasuresManTime;
			}
			set
			{
				if ((this._MeasuresManTime != value))
				{
					this.OnMeasuresManTimeChanging(value);
					this.SendPropertyChanging();
					this._MeasuresManTime = value;
					this.SendPropertyChanged("MeasuresManTime");
					this.OnMeasuresManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures1", DbType="NVarChar(500)")]
		public string OtherMeasures1
		{
			get
			{
				return this._OtherMeasures1;
			}
			set
			{
				if ((this._OtherMeasures1 != value))
				{
					this.OnOtherMeasures1Changing(value);
					this.SendPropertyChanging();
					this._OtherMeasures1 = value;
					this.SendPropertyChanged("OtherMeasures1");
					this.OnOtherMeasures1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManId", DbType="NVarChar(50)")]
		public string CompileManId
		{
			get
			{
				return this._CompileManId;
			}
			set
			{
				if ((this._CompileManId != value))
				{
					if (this._CompileMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManIdChanging(value);
					this.SendPropertyChanging();
					this._CompileManId = value;
					this.SendPropertyChanged("CompileManId");
					this.OnCompileManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileManTime
		{
			get
			{
				return this._CompileManTime;
			}
			set
			{
				if ((this._CompileManTime != value))
				{
					this.OnCompileManTimeChanging(value);
					this.SendPropertyChanging();
					this._CompileManTime = value;
					this.SendPropertyChanged("CompileManTime");
					this.OnCompileManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduManId", DbType="NVarChar(50)")]
		public string SafeEduManId
		{
			get
			{
				return this._SafeEduManId;
			}
			set
			{
				if ((this._SafeEduManId != value))
				{
					if (this._SafeEduMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSafeEduManIdChanging(value);
					this.SendPropertyChanging();
					this._SafeEduManId = value;
					this.SendPropertyChanged("SafeEduManId");
					this.OnSafeEduManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SafeEduManTime
		{
			get
			{
				return this._SafeEduManTime;
			}
			set
			{
				if ((this._SafeEduManTime != value))
				{
					this.OnSafeEduManTimeChanging(value);
					this.SendPropertyChanging();
					this._SafeEduManTime = value;
					this.SendPropertyChanged("SafeEduManTime");
					this.OnSafeEduManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitOpinion", DbType="NVarChar(500)")]
		public string ApplyUnitOpinion
		{
			get
			{
				return this._ApplyUnitOpinion;
			}
			set
			{
				if ((this._ApplyUnitOpinion != value))
				{
					this.OnApplyUnitOpinionChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitOpinion = value;
					this.SendPropertyChanged("ApplyUnitOpinion");
					this.OnApplyUnitOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitManId", DbType="NVarChar(50)")]
		public string ApplyUnitManId
		{
			get
			{
				return this._ApplyUnitManId;
			}
			set
			{
				if ((this._ApplyUnitManId != value))
				{
					if (this._ApplyUnitMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitManId = value;
					this.SendPropertyChanged("ApplyUnitManId");
					this.OnApplyUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApplyUnitTime
		{
			get
			{
				return this._ApplyUnitTime;
			}
			set
			{
				if ((this._ApplyUnitTime != value))
				{
					this.OnApplyUnitTimeChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitTime = value;
					this.SendPropertyChanged("ApplyUnitTime");
					this.OnApplyUnitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnitOpinion", DbType="NVarChar(500)")]
		public string JobUnitOpinion
		{
			get
			{
				return this._JobUnitOpinion;
			}
			set
			{
				if ((this._JobUnitOpinion != value))
				{
					this.OnJobUnitOpinionChanging(value);
					this.SendPropertyChanging();
					this._JobUnitOpinion = value;
					this.SendPropertyChanged("JobUnitOpinion");
					this.OnJobUnitOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnitManId", DbType="NVarChar(50)")]
		public string JobUnitManId
		{
			get
			{
				return this._JobUnitManId;
			}
			set
			{
				if ((this._JobUnitManId != value))
				{
					if (this._JobUnitMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._JobUnitManId = value;
					this.SendPropertyChanged("JobUnitManId");
					this.OnJobUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobUnitTime
		{
			get
			{
				return this._JobUnitTime;
			}
			set
			{
				if ((this._JobUnitTime != value))
				{
					this.OnJobUnitTimeChanging(value);
					this.SendPropertyChanging();
					this._JobUnitTime = value;
					this.SendPropertyChanged("JobUnitTime");
					this.OnJobUnitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountersignOpinion", DbType="NVarChar(500)")]
		public string CountersignOpinion
		{
			get
			{
				return this._CountersignOpinion;
			}
			set
			{
				if ((this._CountersignOpinion != value))
				{
					this.OnCountersignOpinionChanging(value);
					this.SendPropertyChanging();
					this._CountersignOpinion = value;
					this.SendPropertyChanged("CountersignOpinion");
					this.OnCountersignOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountersignManId", DbType="NVarChar(50)")]
		public string CountersignManId
		{
			get
			{
				return this._CountersignManId;
			}
			set
			{
				if ((this._CountersignManId != value))
				{
					if (this._CountersignMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountersignManIdChanging(value);
					this.SendPropertyChanging();
					this._CountersignManId = value;
					this.SendPropertyChanged("CountersignManId");
					this.OnCountersignManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountersignTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CountersignTime
		{
			get
			{
				return this._CountersignTime;
			}
			set
			{
				if ((this._CountersignTime != value))
				{
					this.OnCountersignTimeChanging(value);
					this.SendPropertyChanging();
					this._CountersignTime = value;
					this.SendPropertyChanged("CountersignTime");
					this.OnCountersignTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDepOpinion", DbType="NVarChar(500)")]
		public string ApprovalDepOpinion
		{
			get
			{
				return this._ApprovalDepOpinion;
			}
			set
			{
				if ((this._ApprovalDepOpinion != value))
				{
					this.OnApprovalDepOpinionChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDepOpinion = value;
					this.SendPropertyChanged("ApprovalDepOpinion");
					this.OnApprovalDepOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDepManId", DbType="NVarChar(50)")]
		public string ApprovalDepManId
		{
			get
			{
				return this._ApprovalDepManId;
			}
			set
			{
				if ((this._ApprovalDepManId != value))
				{
					if (this._ApprovalDepMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovalDepManIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDepManId = value;
					this.SendPropertyChanged("ApprovalDepManId");
					this.OnApprovalDepManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDepTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovalDepTime
		{
			get
			{
				return this._ApprovalDepTime;
			}
			set
			{
				if ((this._ApprovalDepTime != value))
				{
					this.OnApprovalDepTimeChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDepTime = value;
					this.SendPropertyChanged("ApprovalDepTime");
					this.OnApprovalDepTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceOpinion", DbType="NVarChar(500)")]
		public string AcceptanceOpinion
		{
			get
			{
				return this._AcceptanceOpinion;
			}
			set
			{
				if ((this._AcceptanceOpinion != value))
				{
					this.OnAcceptanceOpinionChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceOpinion = value;
					this.SendPropertyChanged("AcceptanceOpinion");
					this.OnAcceptanceOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceManId", DbType="NVarChar(50)")]
		public string AcceptanceManId
		{
			get
			{
				return this._AcceptanceManId;
			}
			set
			{
				if ((this._AcceptanceManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcceptanceManIdChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceManId = value;
					this.SendPropertyChanged("AcceptanceManId");
					this.OnAcceptanceManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptanceTime
		{
			get
			{
				return this._AcceptanceTime;
			}
			set
			{
				if ((this._AcceptanceTime != value))
				{
					this.OnAcceptanceTimeChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceTime = value;
					this.SendPropertyChanged("AcceptanceTime");
					this.OnAcceptanceTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this.OnQRCodeUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeUrl = value;
					this.SendPropertyChanged("QRCodeUrl");
					this.OnQRCodeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobInstallationId", DbType="NVarChar(50)")]
		public string JobInstallationId
		{
			get
			{
				return this._JobInstallationId;
			}
			set
			{
				if ((this._JobInstallationId != value))
				{
					if (this._JobInstallation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._JobInstallationId = value;
					this.SendPropertyChanged("JobInstallationId");
					this.OnJobInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobContent", DbType="NVarChar(500)")]
		public string JobContent
		{
			get
			{
				return this._JobContent;
			}
			set
			{
				if ((this._JobContent != value))
				{
					this.OnJobContentChanging(value);
					this.SendPropertyChanging();
					this._JobContent = value;
					this.SendPropertyChanged("JobContent");
					this.OnJobContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PauseTime
		{
			get
			{
				return this._PauseTime;
			}
			set
			{
				if ((this._PauseTime != value))
				{
					this.OnPauseTimeChanging(value);
					this.SendPropertyChanging();
					this._PauseTime = value;
					this.SendPropertyChanged("PauseTime");
					this.OnPauseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseDescribe", DbType="NVarChar(4000)")]
		public string PauseDescribe
		{
			get
			{
				return this._PauseDescribe;
			}
			set
			{
				if ((this._PauseDescribe != value))
				{
					this.OnPauseDescribeChanging(value);
					this.SendPropertyChanging();
					this._PauseDescribe = value;
					this.SendPropertyChanged("PauseDescribe");
					this.OnPauseDescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZIDName", DbType="NVarChar(4000)")]
		public string HAZIDName
		{
			get
			{
				return this._HAZIDName;
			}
			set
			{
				if ((this._HAZIDName != value))
				{
					this.OnHAZIDNameChanging(value);
					this.SendPropertyChanging();
					this._HAZIDName = value;
					this.SendPropertyChanged("HAZIDName");
					this.OnHAZIDNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoCoordinate", DbType="NVarChar(50)")]
		public string GeoCoordinate
		{
			get
			{
				return this._GeoCoordinate;
			}
			set
			{
				if ((this._GeoCoordinate != value))
				{
					this.OnGeoCoordinateChanging(value);
					this.SendPropertyChanging();
					this._GeoCoordinate = value;
					this.SendPropertyChanged("GeoCoordinate");
					this.OnGeoCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.License_BreakGround.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.License_BreakGround.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Base_Installation1", Storage="_JobInstallation", ThisKey="JobInstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation JobInstallation
		{
			get
			{
				return this._JobInstallation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._JobInstallation.Entity;
				if (((previousValue != value) 
							|| (this._JobInstallation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobInstallation.Entity = null;
						previousValue.License_BreakGround_Base_Installation1.Remove(this);
					}
					this._JobInstallation.Entity = value;
					if ((value != null))
					{
						value.License_BreakGround_Base_Installation1.Add(this);
						this._JobInstallationId = value.InstallationId;
					}
					else
					{
						this._JobInstallationId = default(string);
					}
					this.SendPropertyChanged("JobInstallation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.License_BreakGround.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.License_BreakGround.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_AcceptanceMan", Storage="_Sys_User", ThisKey="AcceptanceManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.License_BreakGround.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.License_BreakGround.Add(this);
						this._AcceptanceManId = value.UserId;
					}
					else
					{
						this._AcceptanceManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_ApplyMan", Storage="_ApplyMan", ThisKey="ApplyManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ApplyMan
		{
			get
			{
				return this._ApplyMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ApplyMan.Entity;
				if (((previousValue != value) 
							|| (this._ApplyMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplyMan.Entity = null;
						previousValue.License_BreakGround_Sys_User_ApplyMan.Remove(this);
					}
					this._ApplyMan.Entity = value;
					if ((value != null))
					{
						value.License_BreakGround_Sys_User_ApplyMan.Add(this);
						this._ApplyManId = value.UserId;
					}
					else
					{
						this._ApplyManId = default(string);
					}
					this.SendPropertyChanged("ApplyMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_ApplyMan1", Storage="_ApplyMan1", ThisKey="ApplyMan1Id", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ApplyMan1
		{
			get
			{
				return this._ApplyMan1.Entity;
			}
			set
			{
				Sys_User previousValue = this._ApplyMan1.Entity;
				if (((previousValue != value) 
							|| (this._ApplyMan1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplyMan1.Entity = null;
						previousValue.License_BreakGround_Sys_User_ApplyMan1.Remove(this);
					}
					this._ApplyMan1.Entity = value;
					if ((value != null))
					{
						value.License_BreakGround_Sys_User_ApplyMan1.Add(this);
						this._ApplyMan1Id = value.UserId;
					}
					else
					{
						this._ApplyMan1Id = default(string);
					}
					this.SendPropertyChanged("ApplyMan1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_ApplyUnitMan", Storage="_ApplyUnitMan", ThisKey="ApplyUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ApplyUnitMan
		{
			get
			{
				return this._ApplyUnitMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ApplyUnitMan.Entity;
				if (((previousValue != value) 
							|| (this._ApplyUnitMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplyUnitMan.Entity = null;
						previousValue.License_BreakGround_Sys_User_ApplyUnitMan.Remove(this);
					}
					this._ApplyUnitMan.Entity = value;
					if ((value != null))
					{
						value.License_BreakGround_Sys_User_ApplyUnitMan.Add(this);
						this._ApplyUnitManId = value.UserId;
					}
					else
					{
						this._ApplyUnitManId = default(string);
					}
					this.SendPropertyChanged("ApplyUnitMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_ApprovalDepMan", Storage="_ApprovalDepMan", ThisKey="ApprovalDepManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ApprovalDepMan
		{
			get
			{
				return this._ApprovalDepMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ApprovalDepMan.Entity;
				if (((previousValue != value) 
							|| (this._ApprovalDepMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApprovalDepMan.Entity = null;
						previousValue.License_BreakGround_Sys_User_ApprovalDepMan.Remove(this);
					}
					this._ApprovalDepMan.Entity = value;
					if ((value != null))
					{
						value.License_BreakGround_Sys_User_ApprovalDepMan.Add(this);
						this._ApprovalDepManId = value.UserId;
					}
					else
					{
						this._ApprovalDepManId = default(string);
					}
					this.SendPropertyChanged("ApprovalDepMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_CompileMan", Storage="_CompileMan", ThisKey="CompileManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User CompileMan
		{
			get
			{
				return this._CompileMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._CompileMan.Entity;
				if (((previousValue != value) 
							|| (this._CompileMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompileMan.Entity = null;
						previousValue.License_BreakGround_Sys_User_CompileMan.Remove(this);
					}
					this._CompileMan.Entity = value;
					if ((value != null))
					{
						value.License_BreakGround_Sys_User_CompileMan.Add(this);
						this._CompileManId = value.UserId;
					}
					else
					{
						this._CompileManId = default(string);
					}
					this.SendPropertyChanged("CompileMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_CountersignMan", Storage="_CountersignMan", ThisKey="CountersignManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User CountersignMan
		{
			get
			{
				return this._CountersignMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._CountersignMan.Entity;
				if (((previousValue != value) 
							|| (this._CountersignMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CountersignMan.Entity = null;
						previousValue.License_BreakGround_Sys_User_CountersignMan.Remove(this);
					}
					this._CountersignMan.Entity = value;
					if ((value != null))
					{
						value.License_BreakGround_Sys_User_CountersignMan.Add(this);
						this._CountersignManId = value.UserId;
					}
					else
					{
						this._CountersignManId = default(string);
					}
					this.SendPropertyChanged("CountersignMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_JobUnitMan", Storage="_JobUnitMan", ThisKey="JobUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User JobUnitMan
		{
			get
			{
				return this._JobUnitMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._JobUnitMan.Entity;
				if (((previousValue != value) 
							|| (this._JobUnitMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobUnitMan.Entity = null;
						previousValue.License_BreakGround_Sys_User_JobUnitMan.Remove(this);
					}
					this._JobUnitMan.Entity = value;
					if ((value != null))
					{
						value.License_BreakGround_Sys_User_JobUnitMan.Add(this);
						this._JobUnitManId = value.UserId;
					}
					else
					{
						this._JobUnitManId = default(string);
					}
					this.SendPropertyChanged("JobUnitMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_MeasuresMan", Storage="_MeasuresMan", ThisKey="MeasuresManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User MeasuresMan
		{
			get
			{
				return this._MeasuresMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._MeasuresMan.Entity;
				if (((previousValue != value) 
							|| (this._MeasuresMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeasuresMan.Entity = null;
						previousValue.License_BreakGround_Sys_User_MeasuresMan.Remove(this);
					}
					this._MeasuresMan.Entity = value;
					if ((value != null))
					{
						value.License_BreakGround_Sys_User_MeasuresMan.Add(this);
						this._MeasuresManId = value.UserId;
					}
					else
					{
						this._MeasuresManId = default(string);
					}
					this.SendPropertyChanged("MeasuresMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_SafeEduMan", Storage="_SafeEduMan", ThisKey="SafeEduManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User SafeEduMan
		{
			get
			{
				return this._SafeEduMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._SafeEduMan.Entity;
				if (((previousValue != value) 
							|| (this._SafeEduMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SafeEduMan.Entity = null;
						previousValue.License_BreakGround_Sys_User_SafeEduMan.Remove(this);
					}
					this._SafeEduMan.Entity = value;
					if ((value != null))
					{
						value.License_BreakGround_Sys_User_SafeEduMan.Add(this);
						this._SafeEduManId = value.UserId;
					}
					else
					{
						this._SafeEduManId = default(string);
					}
					this.SendPropertyChanged("SafeEduMan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.License_Electricity")]
	public partial class License_Electricity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ElectricityId;
		
		private string _LicenseCode;
		
		private string _InstallationId;
		
		private string _UnitId;
		
		private string _ApplicantManId;
		
		private System.Nullable<System.DateTime> _JobStartTime;
		
		private System.Nullable<System.DateTime> _JobEndTime;
		
		private string _JobPalce;
		
		private string _AccessPoint;
		
		private string _WorkingVoltage;
		
		private string _EquipmentPower;
		
		private string _MeterReading;
		
		private string _JobManId;
		
		private System.Nullable<System.DateTime> _JobManTime;
		
		private string _HAZID;
		
		private string _MeasuresManId;
		
		private System.Nullable<System.DateTime> _MeasuresManTime;
		
		private string _OtherMeasures;
		
		private string _CompileManId;
		
		private System.Nullable<System.DateTime> _CompileManTime;
		
		private string _SafeEduManId;
		
		private System.Nullable<System.DateTime> _SafeEduManTime;
		
		private string _OperationUnitOpinion;
		
		private string _OperationUnitManId;
		
		private System.Nullable<System.DateTime> _OperationUnitTime;
		
		private string _ElectricUnitOpinion;
		
		private string _ElectricUnitManId;
		
		private System.Nullable<System.DateTime> _ElectricUnitTime;
		
		private string _AuditDepOpinion;
		
		private string _AuditDepManId;
		
		private System.Nullable<System.DateTime> _AuditDepTime;
		
		private string _AcceptanceOpinion;
		
		private string _AcceptanceManId;
		
		private System.Nullable<System.DateTime> _AcceptanceTime;
		
		private string _QRCodeUrl;
		
		private string _AttachUrl;
		
		private string _States;
		
		private string _JobInstallationId;
		
		private System.Nullable<System.DateTime> _PauseTime;
		
		private string _PauseDescribe;
		
		private string _JobUnitId;
		
		private string _JobOtherManName;
		
		private string _JobManCode;
		
		private string _HAZIDName;
		
		private string _GeoCoordinate;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Installation> _JobInstallation;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_Unit> _JobUnit;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _ApplicantMan;
		
		private EntityRef<Sys_User> _AuditDepMan;
		
		private EntityRef<Sys_User> _CompileMan;
		
		private EntityRef<Sys_User> _ElectricUnitMan;
		
		private EntityRef<Sys_User> _JobMan;
		
		private EntityRef<Sys_User> _MeasuresMan;
		
		private EntityRef<Sys_User> _OperationUnitMan;
		
		private EntityRef<Sys_User> _SafeEduMan;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnElectricityIdChanging(string value);
    partial void OnElectricityIdChanged();
    partial void OnLicenseCodeChanging(string value);
    partial void OnLicenseCodeChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnApplicantManIdChanging(string value);
    partial void OnApplicantManIdChanged();
    partial void OnJobStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobStartTimeChanged();
    partial void OnJobEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobEndTimeChanged();
    partial void OnJobPalceChanging(string value);
    partial void OnJobPalceChanged();
    partial void OnAccessPointChanging(string value);
    partial void OnAccessPointChanged();
    partial void OnWorkingVoltageChanging(string value);
    partial void OnWorkingVoltageChanged();
    partial void OnEquipmentPowerChanging(string value);
    partial void OnEquipmentPowerChanged();
    partial void OnMeterReadingChanging(string value);
    partial void OnMeterReadingChanged();
    partial void OnJobManIdChanging(string value);
    partial void OnJobManIdChanged();
    partial void OnJobManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobManTimeChanged();
    partial void OnHAZIDChanging(string value);
    partial void OnHAZIDChanged();
    partial void OnMeasuresManIdChanging(string value);
    partial void OnMeasuresManIdChanged();
    partial void OnMeasuresManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnMeasuresManTimeChanged();
    partial void OnOtherMeasuresChanging(string value);
    partial void OnOtherMeasuresChanged();
    partial void OnCompileManIdChanging(string value);
    partial void OnCompileManIdChanged();
    partial void OnCompileManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileManTimeChanged();
    partial void OnSafeEduManIdChanging(string value);
    partial void OnSafeEduManIdChanged();
    partial void OnSafeEduManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSafeEduManTimeChanged();
    partial void OnOperationUnitOpinionChanging(string value);
    partial void OnOperationUnitOpinionChanged();
    partial void OnOperationUnitManIdChanging(string value);
    partial void OnOperationUnitManIdChanged();
    partial void OnOperationUnitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperationUnitTimeChanged();
    partial void OnElectricUnitOpinionChanging(string value);
    partial void OnElectricUnitOpinionChanged();
    partial void OnElectricUnitManIdChanging(string value);
    partial void OnElectricUnitManIdChanged();
    partial void OnElectricUnitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnElectricUnitTimeChanged();
    partial void OnAuditDepOpinionChanging(string value);
    partial void OnAuditDepOpinionChanged();
    partial void OnAuditDepManIdChanging(string value);
    partial void OnAuditDepManIdChanged();
    partial void OnAuditDepTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDepTimeChanged();
    partial void OnAcceptanceOpinionChanging(string value);
    partial void OnAcceptanceOpinionChanged();
    partial void OnAcceptanceManIdChanging(string value);
    partial void OnAcceptanceManIdChanged();
    partial void OnAcceptanceTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptanceTimeChanged();
    partial void OnQRCodeUrlChanging(string value);
    partial void OnQRCodeUrlChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnJobInstallationIdChanging(string value);
    partial void OnJobInstallationIdChanged();
    partial void OnPauseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPauseTimeChanged();
    partial void OnPauseDescribeChanging(string value);
    partial void OnPauseDescribeChanged();
    partial void OnJobUnitIdChanging(string value);
    partial void OnJobUnitIdChanged();
    partial void OnJobOtherManNameChanging(string value);
    partial void OnJobOtherManNameChanged();
    partial void OnJobManCodeChanging(string value);
    partial void OnJobManCodeChanged();
    partial void OnHAZIDNameChanging(string value);
    partial void OnHAZIDNameChanged();
    partial void OnGeoCoordinateChanging(string value);
    partial void OnGeoCoordinateChanged();
    #endregion
		
		public License_Electricity()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._JobInstallation = default(EntityRef<Base_Installation>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._JobUnit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._ApplicantMan = default(EntityRef<Sys_User>);
			this._AuditDepMan = default(EntityRef<Sys_User>);
			this._CompileMan = default(EntityRef<Sys_User>);
			this._ElectricUnitMan = default(EntityRef<Sys_User>);
			this._JobMan = default(EntityRef<Sys_User>);
			this._MeasuresMan = default(EntityRef<Sys_User>);
			this._OperationUnitMan = default(EntityRef<Sys_User>);
			this._SafeEduMan = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectricityId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ElectricityId
		{
			get
			{
				return this._ElectricityId;
			}
			set
			{
				if ((this._ElectricityId != value))
				{
					this.OnElectricityIdChanging(value);
					this.SendPropertyChanging();
					this._ElectricityId = value;
					this.SendPropertyChanged("ElectricityId");
					this.OnElectricityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(50)")]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this.OnLicenseCodeChanging(value);
					this.SendPropertyChanging();
					this._LicenseCode = value;
					this.SendPropertyChanged("LicenseCode");
					this.OnLicenseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantManId", DbType="NVarChar(50)")]
		public string ApplicantManId
		{
			get
			{
				return this._ApplicantManId;
			}
			set
			{
				if ((this._ApplicantManId != value))
				{
					if (this._ApplicantMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantManIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicantManId = value;
					this.SendPropertyChanged("ApplicantManId");
					this.OnApplicantManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobStartTime
		{
			get
			{
				return this._JobStartTime;
			}
			set
			{
				if ((this._JobStartTime != value))
				{
					this.OnJobStartTimeChanging(value);
					this.SendPropertyChanging();
					this._JobStartTime = value;
					this.SendPropertyChanged("JobStartTime");
					this.OnJobStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobEndTime
		{
			get
			{
				return this._JobEndTime;
			}
			set
			{
				if ((this._JobEndTime != value))
				{
					this.OnJobEndTimeChanging(value);
					this.SendPropertyChanging();
					this._JobEndTime = value;
					this.SendPropertyChanged("JobEndTime");
					this.OnJobEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPalce", DbType="NVarChar(200)")]
		public string JobPalce
		{
			get
			{
				return this._JobPalce;
			}
			set
			{
				if ((this._JobPalce != value))
				{
					this.OnJobPalceChanging(value);
					this.SendPropertyChanging();
					this._JobPalce = value;
					this.SendPropertyChanged("JobPalce");
					this.OnJobPalceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessPoint", DbType="NVarChar(100)")]
		public string AccessPoint
		{
			get
			{
				return this._AccessPoint;
			}
			set
			{
				if ((this._AccessPoint != value))
				{
					this.OnAccessPointChanging(value);
					this.SendPropertyChanging();
					this._AccessPoint = value;
					this.SendPropertyChanged("AccessPoint");
					this.OnAccessPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingVoltage", DbType="NVarChar(50)")]
		public string WorkingVoltage
		{
			get
			{
				return this._WorkingVoltage;
			}
			set
			{
				if ((this._WorkingVoltage != value))
				{
					this.OnWorkingVoltageChanging(value);
					this.SendPropertyChanging();
					this._WorkingVoltage = value;
					this.SendPropertyChanged("WorkingVoltage");
					this.OnWorkingVoltageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentPower", DbType="NVarChar(100)")]
		public string EquipmentPower
		{
			get
			{
				return this._EquipmentPower;
			}
			set
			{
				if ((this._EquipmentPower != value))
				{
					this.OnEquipmentPowerChanging(value);
					this.SendPropertyChanging();
					this._EquipmentPower = value;
					this.SendPropertyChanged("EquipmentPower");
					this.OnEquipmentPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeterReading", DbType="NVarChar(50)")]
		public string MeterReading
		{
			get
			{
				return this._MeterReading;
			}
			set
			{
				if ((this._MeterReading != value))
				{
					this.OnMeterReadingChanging(value);
					this.SendPropertyChanging();
					this._MeterReading = value;
					this.SendPropertyChanged("MeterReading");
					this.OnMeterReadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobManId", DbType="NVarChar(50)")]
		public string JobManId
		{
			get
			{
				return this._JobManId;
			}
			set
			{
				if ((this._JobManId != value))
				{
					if (this._JobMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobManIdChanging(value);
					this.SendPropertyChanging();
					this._JobManId = value;
					this.SendPropertyChanged("JobManId");
					this.OnJobManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobManTime
		{
			get
			{
				return this._JobManTime;
			}
			set
			{
				if ((this._JobManTime != value))
				{
					this.OnJobManTimeChanging(value);
					this.SendPropertyChanging();
					this._JobManTime = value;
					this.SendPropertyChanged("JobManTime");
					this.OnJobManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZID", DbType="NVarChar(4000)")]
		public string HAZID
		{
			get
			{
				return this._HAZID;
			}
			set
			{
				if ((this._HAZID != value))
				{
					this.OnHAZIDChanging(value);
					this.SendPropertyChanging();
					this._HAZID = value;
					this.SendPropertyChanged("HAZID");
					this.OnHAZIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasuresManId", DbType="NVarChar(50)")]
		public string MeasuresManId
		{
			get
			{
				return this._MeasuresManId;
			}
			set
			{
				if ((this._MeasuresManId != value))
				{
					if (this._MeasuresMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeasuresManIdChanging(value);
					this.SendPropertyChanging();
					this._MeasuresManId = value;
					this.SendPropertyChanged("MeasuresManId");
					this.OnMeasuresManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasuresManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> MeasuresManTime
		{
			get
			{
				return this._MeasuresManTime;
			}
			set
			{
				if ((this._MeasuresManTime != value))
				{
					this.OnMeasuresManTimeChanging(value);
					this.SendPropertyChanging();
					this._MeasuresManTime = value;
					this.SendPropertyChanged("MeasuresManTime");
					this.OnMeasuresManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(500)")]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this.OnOtherMeasuresChanging(value);
					this.SendPropertyChanging();
					this._OtherMeasures = value;
					this.SendPropertyChanged("OtherMeasures");
					this.OnOtherMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManId", DbType="NVarChar(50)")]
		public string CompileManId
		{
			get
			{
				return this._CompileManId;
			}
			set
			{
				if ((this._CompileManId != value))
				{
					if (this._CompileMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManIdChanging(value);
					this.SendPropertyChanging();
					this._CompileManId = value;
					this.SendPropertyChanged("CompileManId");
					this.OnCompileManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileManTime
		{
			get
			{
				return this._CompileManTime;
			}
			set
			{
				if ((this._CompileManTime != value))
				{
					this.OnCompileManTimeChanging(value);
					this.SendPropertyChanging();
					this._CompileManTime = value;
					this.SendPropertyChanged("CompileManTime");
					this.OnCompileManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduManId", DbType="NVarChar(50)")]
		public string SafeEduManId
		{
			get
			{
				return this._SafeEduManId;
			}
			set
			{
				if ((this._SafeEduManId != value))
				{
					if (this._SafeEduMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSafeEduManIdChanging(value);
					this.SendPropertyChanging();
					this._SafeEduManId = value;
					this.SendPropertyChanged("SafeEduManId");
					this.OnSafeEduManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SafeEduManTime
		{
			get
			{
				return this._SafeEduManTime;
			}
			set
			{
				if ((this._SafeEduManTime != value))
				{
					this.OnSafeEduManTimeChanging(value);
					this.SendPropertyChanging();
					this._SafeEduManTime = value;
					this.SendPropertyChanged("SafeEduManTime");
					this.OnSafeEduManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationUnitOpinion", DbType="NVarChar(500)")]
		public string OperationUnitOpinion
		{
			get
			{
				return this._OperationUnitOpinion;
			}
			set
			{
				if ((this._OperationUnitOpinion != value))
				{
					this.OnOperationUnitOpinionChanging(value);
					this.SendPropertyChanging();
					this._OperationUnitOpinion = value;
					this.SendPropertyChanged("OperationUnitOpinion");
					this.OnOperationUnitOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationUnitManId", DbType="NVarChar(50)")]
		public string OperationUnitManId
		{
			get
			{
				return this._OperationUnitManId;
			}
			set
			{
				if ((this._OperationUnitManId != value))
				{
					if (this._OperationUnitMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperationUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._OperationUnitManId = value;
					this.SendPropertyChanged("OperationUnitManId");
					this.OnOperationUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationUnitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperationUnitTime
		{
			get
			{
				return this._OperationUnitTime;
			}
			set
			{
				if ((this._OperationUnitTime != value))
				{
					this.OnOperationUnitTimeChanging(value);
					this.SendPropertyChanging();
					this._OperationUnitTime = value;
					this.SendPropertyChanged("OperationUnitTime");
					this.OnOperationUnitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectricUnitOpinion", DbType="NVarChar(500)")]
		public string ElectricUnitOpinion
		{
			get
			{
				return this._ElectricUnitOpinion;
			}
			set
			{
				if ((this._ElectricUnitOpinion != value))
				{
					this.OnElectricUnitOpinionChanging(value);
					this.SendPropertyChanging();
					this._ElectricUnitOpinion = value;
					this.SendPropertyChanged("ElectricUnitOpinion");
					this.OnElectricUnitOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectricUnitManId", DbType="NVarChar(50)")]
		public string ElectricUnitManId
		{
			get
			{
				return this._ElectricUnitManId;
			}
			set
			{
				if ((this._ElectricUnitManId != value))
				{
					if (this._ElectricUnitMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnElectricUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._ElectricUnitManId = value;
					this.SendPropertyChanged("ElectricUnitManId");
					this.OnElectricUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectricUnitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ElectricUnitTime
		{
			get
			{
				return this._ElectricUnitTime;
			}
			set
			{
				if ((this._ElectricUnitTime != value))
				{
					this.OnElectricUnitTimeChanging(value);
					this.SendPropertyChanging();
					this._ElectricUnitTime = value;
					this.SendPropertyChanged("ElectricUnitTime");
					this.OnElectricUnitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDepOpinion", DbType="NVarChar(500)")]
		public string AuditDepOpinion
		{
			get
			{
				return this._AuditDepOpinion;
			}
			set
			{
				if ((this._AuditDepOpinion != value))
				{
					this.OnAuditDepOpinionChanging(value);
					this.SendPropertyChanging();
					this._AuditDepOpinion = value;
					this.SendPropertyChanged("AuditDepOpinion");
					this.OnAuditDepOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDepManId", DbType="NVarChar(50)")]
		public string AuditDepManId
		{
			get
			{
				return this._AuditDepManId;
			}
			set
			{
				if ((this._AuditDepManId != value))
				{
					if (this._AuditDepMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditDepManIdChanging(value);
					this.SendPropertyChanging();
					this._AuditDepManId = value;
					this.SendPropertyChanged("AuditDepManId");
					this.OnAuditDepManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDepTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDepTime
		{
			get
			{
				return this._AuditDepTime;
			}
			set
			{
				if ((this._AuditDepTime != value))
				{
					this.OnAuditDepTimeChanging(value);
					this.SendPropertyChanging();
					this._AuditDepTime = value;
					this.SendPropertyChanged("AuditDepTime");
					this.OnAuditDepTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceOpinion", DbType="NVarChar(500)")]
		public string AcceptanceOpinion
		{
			get
			{
				return this._AcceptanceOpinion;
			}
			set
			{
				if ((this._AcceptanceOpinion != value))
				{
					this.OnAcceptanceOpinionChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceOpinion = value;
					this.SendPropertyChanged("AcceptanceOpinion");
					this.OnAcceptanceOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceManId", DbType="NVarChar(50)")]
		public string AcceptanceManId
		{
			get
			{
				return this._AcceptanceManId;
			}
			set
			{
				if ((this._AcceptanceManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcceptanceManIdChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceManId = value;
					this.SendPropertyChanged("AcceptanceManId");
					this.OnAcceptanceManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptanceTime
		{
			get
			{
				return this._AcceptanceTime;
			}
			set
			{
				if ((this._AcceptanceTime != value))
				{
					this.OnAcceptanceTimeChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceTime = value;
					this.SendPropertyChanged("AcceptanceTime");
					this.OnAcceptanceTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this.OnQRCodeUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeUrl = value;
					this.SendPropertyChanged("QRCodeUrl");
					this.OnQRCodeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobInstallationId", DbType="NVarChar(50)")]
		public string JobInstallationId
		{
			get
			{
				return this._JobInstallationId;
			}
			set
			{
				if ((this._JobInstallationId != value))
				{
					if (this._JobInstallation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._JobInstallationId = value;
					this.SendPropertyChanged("JobInstallationId");
					this.OnJobInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PauseTime
		{
			get
			{
				return this._PauseTime;
			}
			set
			{
				if ((this._PauseTime != value))
				{
					this.OnPauseTimeChanging(value);
					this.SendPropertyChanging();
					this._PauseTime = value;
					this.SendPropertyChanged("PauseTime");
					this.OnPauseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseDescribe", DbType="NVarChar(4000)")]
		public string PauseDescribe
		{
			get
			{
				return this._PauseDescribe;
			}
			set
			{
				if ((this._PauseDescribe != value))
				{
					this.OnPauseDescribeChanging(value);
					this.SendPropertyChanging();
					this._PauseDescribe = value;
					this.SendPropertyChanged("PauseDescribe");
					this.OnPauseDescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnitId", DbType="NVarChar(50)")]
		public string JobUnitId
		{
			get
			{
				return this._JobUnitId;
			}
			set
			{
				if ((this._JobUnitId != value))
				{
					if (this._JobUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobUnitIdChanging(value);
					this.SendPropertyChanging();
					this._JobUnitId = value;
					this.SendPropertyChanged("JobUnitId");
					this.OnJobUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobOtherManName", DbType="NVarChar(50)")]
		public string JobOtherManName
		{
			get
			{
				return this._JobOtherManName;
			}
			set
			{
				if ((this._JobOtherManName != value))
				{
					this.OnJobOtherManNameChanging(value);
					this.SendPropertyChanging();
					this._JobOtherManName = value;
					this.SendPropertyChanged("JobOtherManName");
					this.OnJobOtherManNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobManCode", DbType="NVarChar(200)")]
		public string JobManCode
		{
			get
			{
				return this._JobManCode;
			}
			set
			{
				if ((this._JobManCode != value))
				{
					this.OnJobManCodeChanging(value);
					this.SendPropertyChanging();
					this._JobManCode = value;
					this.SendPropertyChanged("JobManCode");
					this.OnJobManCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZIDName", DbType="NVarChar(4000)")]
		public string HAZIDName
		{
			get
			{
				return this._HAZIDName;
			}
			set
			{
				if ((this._HAZIDName != value))
				{
					this.OnHAZIDNameChanging(value);
					this.SendPropertyChanging();
					this._HAZIDName = value;
					this.SendPropertyChanged("HAZIDName");
					this.OnHAZIDNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoCoordinate", DbType="NVarChar(50)")]
		public string GeoCoordinate
		{
			get
			{
				return this._GeoCoordinate;
			}
			set
			{
				if ((this._GeoCoordinate != value))
				{
					this.OnGeoCoordinateChanging(value);
					this.SendPropertyChanging();
					this._GeoCoordinate = value;
					this.SendPropertyChanged("GeoCoordinate");
					this.OnGeoCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.License_Electricity.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.License_Electricity.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Base_Installation1", Storage="_JobInstallation", ThisKey="JobInstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation JobInstallation
		{
			get
			{
				return this._JobInstallation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._JobInstallation.Entity;
				if (((previousValue != value) 
							|| (this._JobInstallation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobInstallation.Entity = null;
						previousValue.License_Electricity_Base_Installation1.Remove(this);
					}
					this._JobInstallation.Entity = value;
					if ((value != null))
					{
						value.License_Electricity_Base_Installation1.Add(this);
						this._JobInstallationId = value.InstallationId;
					}
					else
					{
						this._JobInstallationId = default(string);
					}
					this.SendPropertyChanged("JobInstallation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.License_Electricity.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.License_Electricity.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Base_Unit_JobUnitId", Storage="_JobUnit", ThisKey="JobUnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit JobUnit
		{
			get
			{
				return this._JobUnit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._JobUnit.Entity;
				if (((previousValue != value) 
							|| (this._JobUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobUnit.Entity = null;
						previousValue.License_Electricity_Base_Unit_JobUnitId.Remove(this);
					}
					this._JobUnit.Entity = value;
					if ((value != null))
					{
						value.License_Electricity_Base_Unit_JobUnitId.Add(this);
						this._JobUnitId = value.UnitId;
					}
					else
					{
						this._JobUnitId = default(string);
					}
					this.SendPropertyChanged("JobUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_AcceptanceMan", Storage="_Sys_User", ThisKey="AcceptanceManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.License_Electricity.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.License_Electricity.Add(this);
						this._AcceptanceManId = value.UserId;
					}
					else
					{
						this._AcceptanceManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_ApplicantMan", Storage="_ApplicantMan", ThisKey="ApplicantManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ApplicantMan
		{
			get
			{
				return this._ApplicantMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ApplicantMan.Entity;
				if (((previousValue != value) 
							|| (this._ApplicantMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicantMan.Entity = null;
						previousValue.License_Electricity_Sys_User_ApplicantMan.Remove(this);
					}
					this._ApplicantMan.Entity = value;
					if ((value != null))
					{
						value.License_Electricity_Sys_User_ApplicantMan.Add(this);
						this._ApplicantManId = value.UserId;
					}
					else
					{
						this._ApplicantManId = default(string);
					}
					this.SendPropertyChanged("ApplicantMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_AuditDepMan", Storage="_AuditDepMan", ThisKey="AuditDepManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User AuditDepMan
		{
			get
			{
				return this._AuditDepMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._AuditDepMan.Entity;
				if (((previousValue != value) 
							|| (this._AuditDepMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AuditDepMan.Entity = null;
						previousValue.License_Electricity_Sys_User_AuditDepMan.Remove(this);
					}
					this._AuditDepMan.Entity = value;
					if ((value != null))
					{
						value.License_Electricity_Sys_User_AuditDepMan.Add(this);
						this._AuditDepManId = value.UserId;
					}
					else
					{
						this._AuditDepManId = default(string);
					}
					this.SendPropertyChanged("AuditDepMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_CompileMan", Storage="_CompileMan", ThisKey="CompileManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User CompileMan
		{
			get
			{
				return this._CompileMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._CompileMan.Entity;
				if (((previousValue != value) 
							|| (this._CompileMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompileMan.Entity = null;
						previousValue.License_Electricity_Sys_User_CompileMan.Remove(this);
					}
					this._CompileMan.Entity = value;
					if ((value != null))
					{
						value.License_Electricity_Sys_User_CompileMan.Add(this);
						this._CompileManId = value.UserId;
					}
					else
					{
						this._CompileManId = default(string);
					}
					this.SendPropertyChanged("CompileMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_ElectricUnitMan", Storage="_ElectricUnitMan", ThisKey="ElectricUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ElectricUnitMan
		{
			get
			{
				return this._ElectricUnitMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ElectricUnitMan.Entity;
				if (((previousValue != value) 
							|| (this._ElectricUnitMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ElectricUnitMan.Entity = null;
						previousValue.License_Electricity_Sys_User_ElectricUnitMan.Remove(this);
					}
					this._ElectricUnitMan.Entity = value;
					if ((value != null))
					{
						value.License_Electricity_Sys_User_ElectricUnitMan.Add(this);
						this._ElectricUnitManId = value.UserId;
					}
					else
					{
						this._ElectricUnitManId = default(string);
					}
					this.SendPropertyChanged("ElectricUnitMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_JobMan", Storage="_JobMan", ThisKey="JobManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User JobMan
		{
			get
			{
				return this._JobMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._JobMan.Entity;
				if (((previousValue != value) 
							|| (this._JobMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobMan.Entity = null;
						previousValue.License_Electricity_Sys_User_JobMan.Remove(this);
					}
					this._JobMan.Entity = value;
					if ((value != null))
					{
						value.License_Electricity_Sys_User_JobMan.Add(this);
						this._JobManId = value.UserId;
					}
					else
					{
						this._JobManId = default(string);
					}
					this.SendPropertyChanged("JobMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_MeasuresMan", Storage="_MeasuresMan", ThisKey="MeasuresManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User MeasuresMan
		{
			get
			{
				return this._MeasuresMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._MeasuresMan.Entity;
				if (((previousValue != value) 
							|| (this._MeasuresMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeasuresMan.Entity = null;
						previousValue.License_Electricity_Sys_User_MeasuresMan.Remove(this);
					}
					this._MeasuresMan.Entity = value;
					if ((value != null))
					{
						value.License_Electricity_Sys_User_MeasuresMan.Add(this);
						this._MeasuresManId = value.UserId;
					}
					else
					{
						this._MeasuresManId = default(string);
					}
					this.SendPropertyChanged("MeasuresMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_OperationUnitMan", Storage="_OperationUnitMan", ThisKey="OperationUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User OperationUnitMan
		{
			get
			{
				return this._OperationUnitMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._OperationUnitMan.Entity;
				if (((previousValue != value) 
							|| (this._OperationUnitMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OperationUnitMan.Entity = null;
						previousValue.License_Electricity_Sys_User_OperationUnitMan.Remove(this);
					}
					this._OperationUnitMan.Entity = value;
					if ((value != null))
					{
						value.License_Electricity_Sys_User_OperationUnitMan.Add(this);
						this._OperationUnitManId = value.UserId;
					}
					else
					{
						this._OperationUnitManId = default(string);
					}
					this.SendPropertyChanged("OperationUnitMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_SafeEduMan", Storage="_SafeEduMan", ThisKey="SafeEduManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User SafeEduMan
		{
			get
			{
				return this._SafeEduMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._SafeEduMan.Entity;
				if (((previousValue != value) 
							|| (this._SafeEduMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SafeEduMan.Entity = null;
						previousValue.License_Electricity_Sys_User_SafeEduMan.Remove(this);
					}
					this._SafeEduMan.Entity = value;
					if ((value != null))
					{
						value.License_Electricity_Sys_User_SafeEduMan.Add(this);
						this._SafeEduManId = value.UserId;
					}
					else
					{
						this._SafeEduManId = default(string);
					}
					this.SendPropertyChanged("SafeEduMan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.License_FireWork")]
	public partial class License_FireWork : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FireWorkId;
		
		private string _LicenseCode;
		
		private string _ApplyInstallationId;
		
		private string _ApplyUnitId;
		
		private string _UnitId;
		
		private string _DepartId;
		
		private string _ApplyManId;
		
		private System.Nullable<System.DateTime> _ApplyDate;
		
		private string _FireWorkLevel;
		
		private string _FireWorkInstallationId;
		
		private string _FireWorkPalce;
		
		private string _FireWorkMode;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _FireHeaderId;
		
		private System.Nullable<System.DateTime> _FireHeaderTime;
		
		private string _FireManName;
		
		private System.Nullable<System.DateTime> _AnalysisTime1;
		
		private string _AnalysisMan1;
		
		private string _OtherSpecial;
		
		private string _HAZID;
		
		private string _MeasuresManId;
		
		private System.Nullable<System.DateTime> _MeasuresManTime;
		
		private string _OtherMeasures;
		
		private string _CompileManId;
		
		private System.Nullable<System.DateTime> _CompileManTime;
		
		private string _ProduceUnitManId;
		
		private System.Nullable<System.DateTime> _ProduceUnitManTime;
		
		private string _FireWatchId;
		
		private System.Nullable<System.DateTime> _FireWatchTime;
		
		private string _FireFirstManId;
		
		private System.Nullable<System.DateTime> _FireFirstManTime;
		
		private string _SafeEduManId;
		
		private System.Nullable<System.DateTime> _SafeEduManTime;
		
		private string _ApplyUnitOpinion;
		
		private string _ApplyUnitManId;
		
		private System.Nullable<System.DateTime> _ApplyUnitTime;
		
		private string _SafeDepOpinion;
		
		private string _SafeDepManId;
		
		private System.Nullable<System.DateTime> _SafeDepTime;
		
		private string _FireApprovalOpinion;
		
		private string _FireApprovalManId;
		
		private System.Nullable<System.DateTime> _FireApprovalTime;
		
		private string _InspectTicketManId;
		
		private System.Nullable<System.DateTime> _InspectTicketTime;
		
		private string _AcceptanceManId;
		
		private System.Nullable<System.DateTime> _AcceptanceTime;
		
		private string _QRCodeUrl;
		
		private string _AttachUrl;
		
		private string _States;
		
		private System.Nullable<System.DateTime> _PauseTime;
		
		private string _FireWorkModeName;
		
		private string _HAZIDName;
		
		private string _PauseDescribe;
		
		private string _FireWatchName;
		
		private string _GeoCoordinate;
		
		private EntityRef<Base_Depart> _Base_Depart;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Installation> _FireWorkInstallation;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_Unit> _ApplyUnit;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _AcceptanceMan;
		
		private EntityRef<Sys_User> _AnalysisMan1Sys_User;
		
		private EntityRef<Sys_User> _ApplyUnitMan;
		
		private EntityRef<Sys_User> _FireApprovalMan;
		
		private EntityRef<Sys_User> _FireFirstMan;
		
		private EntityRef<Sys_User> _InspectTicketMan;
		
		private EntityRef<Sys_User> _MeasuresMan;
		
		private EntityRef<Sys_User> _ProduceUnitMan;
		
		private EntityRef<Sys_User> _SafeDepMan;
		
		private EntityRef<Sys_User> _SafeEduMan;
		
		private EntityRef<Sys_User> _ApplyMan;
		
		private EntityRef<Sys_User> _CompileMan;
		
		private EntitySet<License_FireWorkAnalysis> _License_FireWorkAnalysis;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFireWorkIdChanging(string value);
    partial void OnFireWorkIdChanged();
    partial void OnLicenseCodeChanging(string value);
    partial void OnLicenseCodeChanged();
    partial void OnApplyInstallationIdChanging(string value);
    partial void OnApplyInstallationIdChanged();
    partial void OnApplyUnitIdChanging(string value);
    partial void OnApplyUnitIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnDepartIdChanging(string value);
    partial void OnDepartIdChanged();
    partial void OnApplyManIdChanging(string value);
    partial void OnApplyManIdChanged();
    partial void OnApplyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApplyDateChanged();
    partial void OnFireWorkLevelChanging(string value);
    partial void OnFireWorkLevelChanged();
    partial void OnFireWorkInstallationIdChanging(string value);
    partial void OnFireWorkInstallationIdChanged();
    partial void OnFireWorkPalceChanging(string value);
    partial void OnFireWorkPalceChanged();
    partial void OnFireWorkModeChanging(string value);
    partial void OnFireWorkModeChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnFireHeaderIdChanging(string value);
    partial void OnFireHeaderIdChanged();
    partial void OnFireHeaderTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFireHeaderTimeChanged();
    partial void OnFireManNameChanging(string value);
    partial void OnFireManNameChanged();
    partial void OnAnalysisTime1Changing(System.Nullable<System.DateTime> value);
    partial void OnAnalysisTime1Changed();
    partial void OnAnalysisMan1Changing(string value);
    partial void OnAnalysisMan1Changed();
    partial void OnOtherSpecialChanging(string value);
    partial void OnOtherSpecialChanged();
    partial void OnHAZIDChanging(string value);
    partial void OnHAZIDChanged();
    partial void OnMeasuresManIdChanging(string value);
    partial void OnMeasuresManIdChanged();
    partial void OnMeasuresManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnMeasuresManTimeChanged();
    partial void OnOtherMeasuresChanging(string value);
    partial void OnOtherMeasuresChanged();
    partial void OnCompileManIdChanging(string value);
    partial void OnCompileManIdChanged();
    partial void OnCompileManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileManTimeChanged();
    partial void OnProduceUnitManIdChanging(string value);
    partial void OnProduceUnitManIdChanged();
    partial void OnProduceUnitManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProduceUnitManTimeChanged();
    partial void OnFireWatchIdChanging(string value);
    partial void OnFireWatchIdChanged();
    partial void OnFireWatchTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFireWatchTimeChanged();
    partial void OnFireFirstManIdChanging(string value);
    partial void OnFireFirstManIdChanged();
    partial void OnFireFirstManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFireFirstManTimeChanged();
    partial void OnSafeEduManIdChanging(string value);
    partial void OnSafeEduManIdChanged();
    partial void OnSafeEduManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSafeEduManTimeChanged();
    partial void OnApplyUnitOpinionChanging(string value);
    partial void OnApplyUnitOpinionChanged();
    partial void OnApplyUnitManIdChanging(string value);
    partial void OnApplyUnitManIdChanged();
    partial void OnApplyUnitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnApplyUnitTimeChanged();
    partial void OnSafeDepOpinionChanging(string value);
    partial void OnSafeDepOpinionChanged();
    partial void OnSafeDepManIdChanging(string value);
    partial void OnSafeDepManIdChanged();
    partial void OnSafeDepTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSafeDepTimeChanged();
    partial void OnFireApprovalOpinionChanging(string value);
    partial void OnFireApprovalOpinionChanged();
    partial void OnFireApprovalManIdChanging(string value);
    partial void OnFireApprovalManIdChanged();
    partial void OnFireApprovalTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFireApprovalTimeChanged();
    partial void OnInspectTicketManIdChanging(string value);
    partial void OnInspectTicketManIdChanged();
    partial void OnInspectTicketTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInspectTicketTimeChanged();
    partial void OnAcceptanceManIdChanging(string value);
    partial void OnAcceptanceManIdChanged();
    partial void OnAcceptanceTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptanceTimeChanged();
    partial void OnQRCodeUrlChanging(string value);
    partial void OnQRCodeUrlChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnPauseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPauseTimeChanged();
    partial void OnFireWorkModeNameChanging(string value);
    partial void OnFireWorkModeNameChanged();
    partial void OnHAZIDNameChanging(string value);
    partial void OnHAZIDNameChanged();
    partial void OnPauseDescribeChanging(string value);
    partial void OnPauseDescribeChanged();
    partial void OnFireWatchNameChanging(string value);
    partial void OnFireWatchNameChanged();
    partial void OnGeoCoordinateChanging(string value);
    partial void OnGeoCoordinateChanged();
    #endregion
		
		public License_FireWork()
		{
			this._Base_Depart = default(EntityRef<Base_Depart>);
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._FireWorkInstallation = default(EntityRef<Base_Installation>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._ApplyUnit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._AcceptanceMan = default(EntityRef<Sys_User>);
			this._AnalysisMan1Sys_User = default(EntityRef<Sys_User>);
			this._ApplyUnitMan = default(EntityRef<Sys_User>);
			this._FireApprovalMan = default(EntityRef<Sys_User>);
			this._FireFirstMan = default(EntityRef<Sys_User>);
			this._InspectTicketMan = default(EntityRef<Sys_User>);
			this._MeasuresMan = default(EntityRef<Sys_User>);
			this._ProduceUnitMan = default(EntityRef<Sys_User>);
			this._SafeDepMan = default(EntityRef<Sys_User>);
			this._SafeEduMan = default(EntityRef<Sys_User>);
			this._ApplyMan = default(EntityRef<Sys_User>);
			this._CompileMan = default(EntityRef<Sys_User>);
			this._License_FireWorkAnalysis = new EntitySet<License_FireWorkAnalysis>(new Action<License_FireWorkAnalysis>(this.attach_License_FireWorkAnalysis), new Action<License_FireWorkAnalysis>(this.detach_License_FireWorkAnalysis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FireWorkId
		{
			get
			{
				return this._FireWorkId;
			}
			set
			{
				if ((this._FireWorkId != value))
				{
					this.OnFireWorkIdChanging(value);
					this.SendPropertyChanging();
					this._FireWorkId = value;
					this.SendPropertyChanged("FireWorkId");
					this.OnFireWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(50)")]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this.OnLicenseCodeChanging(value);
					this.SendPropertyChanging();
					this._LicenseCode = value;
					this.SendPropertyChanged("LicenseCode");
					this.OnLicenseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyInstallationId", DbType="NVarChar(50)")]
		public string ApplyInstallationId
		{
			get
			{
				return this._ApplyInstallationId;
			}
			set
			{
				if ((this._ApplyInstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyInstallationId = value;
					this.SendPropertyChanged("ApplyInstallationId");
					this.OnApplyInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitId", DbType="NVarChar(50)")]
		public string ApplyUnitId
		{
			get
			{
				return this._ApplyUnitId;
			}
			set
			{
				if ((this._ApplyUnitId != value))
				{
					if (this._ApplyUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyUnitIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitId = value;
					this.SendPropertyChanged("ApplyUnitId");
					this.OnApplyUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartId", DbType="NVarChar(50)")]
		public string DepartId
		{
			get
			{
				return this._DepartId;
			}
			set
			{
				if ((this._DepartId != value))
				{
					if (this._Base_Depart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartIdChanging(value);
					this.SendPropertyChanging();
					this._DepartId = value;
					this.SendPropertyChanged("DepartId");
					this.OnDepartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyManId", DbType="NVarChar(50)")]
		public string ApplyManId
		{
			get
			{
				return this._ApplyManId;
			}
			set
			{
				if ((this._ApplyManId != value))
				{
					if (this._ApplyMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyManIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyManId = value;
					this.SendPropertyChanged("ApplyManId");
					this.OnApplyManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApplyDate
		{
			get
			{
				return this._ApplyDate;
			}
			set
			{
				if ((this._ApplyDate != value))
				{
					this.OnApplyDateChanging(value);
					this.SendPropertyChanging();
					this._ApplyDate = value;
					this.SendPropertyChanged("ApplyDate");
					this.OnApplyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkLevel", DbType="NVarChar(50)")]
		public string FireWorkLevel
		{
			get
			{
				return this._FireWorkLevel;
			}
			set
			{
				if ((this._FireWorkLevel != value))
				{
					this.OnFireWorkLevelChanging(value);
					this.SendPropertyChanging();
					this._FireWorkLevel = value;
					this.SendPropertyChanged("FireWorkLevel");
					this.OnFireWorkLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkInstallationId", DbType="NVarChar(50)")]
		public string FireWorkInstallationId
		{
			get
			{
				return this._FireWorkInstallationId;
			}
			set
			{
				if ((this._FireWorkInstallationId != value))
				{
					if (this._FireWorkInstallation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFireWorkInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._FireWorkInstallationId = value;
					this.SendPropertyChanged("FireWorkInstallationId");
					this.OnFireWorkInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkPalce", DbType="NVarChar(500)")]
		public string FireWorkPalce
		{
			get
			{
				return this._FireWorkPalce;
			}
			set
			{
				if ((this._FireWorkPalce != value))
				{
					this.OnFireWorkPalceChanging(value);
					this.SendPropertyChanging();
					this._FireWorkPalce = value;
					this.SendPropertyChanged("FireWorkPalce");
					this.OnFireWorkPalceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkMode", DbType="NVarChar(500)")]
		public string FireWorkMode
		{
			get
			{
				return this._FireWorkMode;
			}
			set
			{
				if ((this._FireWorkMode != value))
				{
					this.OnFireWorkModeChanging(value);
					this.SendPropertyChanging();
					this._FireWorkMode = value;
					this.SendPropertyChanged("FireWorkMode");
					this.OnFireWorkModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireHeaderId", DbType="NVarChar(50)")]
		public string FireHeaderId
		{
			get
			{
				return this._FireHeaderId;
			}
			set
			{
				if ((this._FireHeaderId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFireHeaderIdChanging(value);
					this.SendPropertyChanging();
					this._FireHeaderId = value;
					this.SendPropertyChanged("FireHeaderId");
					this.OnFireHeaderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireHeaderTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FireHeaderTime
		{
			get
			{
				return this._FireHeaderTime;
			}
			set
			{
				if ((this._FireHeaderTime != value))
				{
					this.OnFireHeaderTimeChanging(value);
					this.SendPropertyChanging();
					this._FireHeaderTime = value;
					this.SendPropertyChanged("FireHeaderTime");
					this.OnFireHeaderTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireManName", DbType="NVarChar(200)")]
		public string FireManName
		{
			get
			{
				return this._FireManName;
			}
			set
			{
				if ((this._FireManName != value))
				{
					this.OnFireManNameChanging(value);
					this.SendPropertyChanging();
					this._FireManName = value;
					this.SendPropertyChanged("FireManName");
					this.OnFireManNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalysisTime1", DbType="DateTime")]
		public System.Nullable<System.DateTime> AnalysisTime1
		{
			get
			{
				return this._AnalysisTime1;
			}
			set
			{
				if ((this._AnalysisTime1 != value))
				{
					this.OnAnalysisTime1Changing(value);
					this.SendPropertyChanging();
					this._AnalysisTime1 = value;
					this.SendPropertyChanged("AnalysisTime1");
					this.OnAnalysisTime1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalysisMan1", DbType="NVarChar(50)")]
		public string AnalysisMan1
		{
			get
			{
				return this._AnalysisMan1;
			}
			set
			{
				if ((this._AnalysisMan1 != value))
				{
					if (this._AnalysisMan1Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnalysisMan1Changing(value);
					this.SendPropertyChanging();
					this._AnalysisMan1 = value;
					this.SendPropertyChanged("AnalysisMan1");
					this.OnAnalysisMan1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherSpecial", DbType="NVarChar(100)")]
		public string OtherSpecial
		{
			get
			{
				return this._OtherSpecial;
			}
			set
			{
				if ((this._OtherSpecial != value))
				{
					this.OnOtherSpecialChanging(value);
					this.SendPropertyChanging();
					this._OtherSpecial = value;
					this.SendPropertyChanged("OtherSpecial");
					this.OnOtherSpecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZID", DbType="NVarChar(4000)")]
		public string HAZID
		{
			get
			{
				return this._HAZID;
			}
			set
			{
				if ((this._HAZID != value))
				{
					this.OnHAZIDChanging(value);
					this.SendPropertyChanging();
					this._HAZID = value;
					this.SendPropertyChanged("HAZID");
					this.OnHAZIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasuresManId", DbType="NVarChar(50)")]
		public string MeasuresManId
		{
			get
			{
				return this._MeasuresManId;
			}
			set
			{
				if ((this._MeasuresManId != value))
				{
					if (this._MeasuresMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeasuresManIdChanging(value);
					this.SendPropertyChanging();
					this._MeasuresManId = value;
					this.SendPropertyChanged("MeasuresManId");
					this.OnMeasuresManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasuresManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> MeasuresManTime
		{
			get
			{
				return this._MeasuresManTime;
			}
			set
			{
				if ((this._MeasuresManTime != value))
				{
					this.OnMeasuresManTimeChanging(value);
					this.SendPropertyChanging();
					this._MeasuresManTime = value;
					this.SendPropertyChanged("MeasuresManTime");
					this.OnMeasuresManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(500)")]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this.OnOtherMeasuresChanging(value);
					this.SendPropertyChanging();
					this._OtherMeasures = value;
					this.SendPropertyChanged("OtherMeasures");
					this.OnOtherMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManId", DbType="NVarChar(50)")]
		public string CompileManId
		{
			get
			{
				return this._CompileManId;
			}
			set
			{
				if ((this._CompileManId != value))
				{
					if (this._CompileMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManIdChanging(value);
					this.SendPropertyChanging();
					this._CompileManId = value;
					this.SendPropertyChanged("CompileManId");
					this.OnCompileManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileManTime
		{
			get
			{
				return this._CompileManTime;
			}
			set
			{
				if ((this._CompileManTime != value))
				{
					this.OnCompileManTimeChanging(value);
					this.SendPropertyChanging();
					this._CompileManTime = value;
					this.SendPropertyChanged("CompileManTime");
					this.OnCompileManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProduceUnitManId", DbType="NVarChar(50)")]
		public string ProduceUnitManId
		{
			get
			{
				return this._ProduceUnitManId;
			}
			set
			{
				if ((this._ProduceUnitManId != value))
				{
					if (this._ProduceUnitMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduceUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._ProduceUnitManId = value;
					this.SendPropertyChanged("ProduceUnitManId");
					this.OnProduceUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProduceUnitManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProduceUnitManTime
		{
			get
			{
				return this._ProduceUnitManTime;
			}
			set
			{
				if ((this._ProduceUnitManTime != value))
				{
					this.OnProduceUnitManTimeChanging(value);
					this.SendPropertyChanging();
					this._ProduceUnitManTime = value;
					this.SendPropertyChanged("ProduceUnitManTime");
					this.OnProduceUnitManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWatchId", DbType="NVarChar(500)")]
		public string FireWatchId
		{
			get
			{
				return this._FireWatchId;
			}
			set
			{
				if ((this._FireWatchId != value))
				{
					this.OnFireWatchIdChanging(value);
					this.SendPropertyChanging();
					this._FireWatchId = value;
					this.SendPropertyChanged("FireWatchId");
					this.OnFireWatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWatchTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FireWatchTime
		{
			get
			{
				return this._FireWatchTime;
			}
			set
			{
				if ((this._FireWatchTime != value))
				{
					this.OnFireWatchTimeChanging(value);
					this.SendPropertyChanging();
					this._FireWatchTime = value;
					this.SendPropertyChanged("FireWatchTime");
					this.OnFireWatchTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireFirstManId", DbType="NVarChar(50)")]
		public string FireFirstManId
		{
			get
			{
				return this._FireFirstManId;
			}
			set
			{
				if ((this._FireFirstManId != value))
				{
					if (this._FireFirstMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFireFirstManIdChanging(value);
					this.SendPropertyChanging();
					this._FireFirstManId = value;
					this.SendPropertyChanged("FireFirstManId");
					this.OnFireFirstManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireFirstManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FireFirstManTime
		{
			get
			{
				return this._FireFirstManTime;
			}
			set
			{
				if ((this._FireFirstManTime != value))
				{
					this.OnFireFirstManTimeChanging(value);
					this.SendPropertyChanging();
					this._FireFirstManTime = value;
					this.SendPropertyChanged("FireFirstManTime");
					this.OnFireFirstManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduManId", DbType="NVarChar(50)")]
		public string SafeEduManId
		{
			get
			{
				return this._SafeEduManId;
			}
			set
			{
				if ((this._SafeEduManId != value))
				{
					if (this._SafeEduMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSafeEduManIdChanging(value);
					this.SendPropertyChanging();
					this._SafeEduManId = value;
					this.SendPropertyChanged("SafeEduManId");
					this.OnSafeEduManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SafeEduManTime
		{
			get
			{
				return this._SafeEduManTime;
			}
			set
			{
				if ((this._SafeEduManTime != value))
				{
					this.OnSafeEduManTimeChanging(value);
					this.SendPropertyChanging();
					this._SafeEduManTime = value;
					this.SendPropertyChanged("SafeEduManTime");
					this.OnSafeEduManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitOpinion", DbType="NVarChar(500)")]
		public string ApplyUnitOpinion
		{
			get
			{
				return this._ApplyUnitOpinion;
			}
			set
			{
				if ((this._ApplyUnitOpinion != value))
				{
					this.OnApplyUnitOpinionChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitOpinion = value;
					this.SendPropertyChanged("ApplyUnitOpinion");
					this.OnApplyUnitOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitManId", DbType="NVarChar(50)")]
		public string ApplyUnitManId
		{
			get
			{
				return this._ApplyUnitManId;
			}
			set
			{
				if ((this._ApplyUnitManId != value))
				{
					if (this._ApplyUnitMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitManId = value;
					this.SendPropertyChanged("ApplyUnitManId");
					this.OnApplyUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApplyUnitTime
		{
			get
			{
				return this._ApplyUnitTime;
			}
			set
			{
				if ((this._ApplyUnitTime != value))
				{
					this.OnApplyUnitTimeChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitTime = value;
					this.SendPropertyChanged("ApplyUnitTime");
					this.OnApplyUnitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeDepOpinion", DbType="NVarChar(500)")]
		public string SafeDepOpinion
		{
			get
			{
				return this._SafeDepOpinion;
			}
			set
			{
				if ((this._SafeDepOpinion != value))
				{
					this.OnSafeDepOpinionChanging(value);
					this.SendPropertyChanging();
					this._SafeDepOpinion = value;
					this.SendPropertyChanged("SafeDepOpinion");
					this.OnSafeDepOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeDepManId", DbType="NVarChar(50)")]
		public string SafeDepManId
		{
			get
			{
				return this._SafeDepManId;
			}
			set
			{
				if ((this._SafeDepManId != value))
				{
					if (this._SafeDepMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSafeDepManIdChanging(value);
					this.SendPropertyChanging();
					this._SafeDepManId = value;
					this.SendPropertyChanged("SafeDepManId");
					this.OnSafeDepManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeDepTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SafeDepTime
		{
			get
			{
				return this._SafeDepTime;
			}
			set
			{
				if ((this._SafeDepTime != value))
				{
					this.OnSafeDepTimeChanging(value);
					this.SendPropertyChanging();
					this._SafeDepTime = value;
					this.SendPropertyChanged("SafeDepTime");
					this.OnSafeDepTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireApprovalOpinion", DbType="NVarChar(500)")]
		public string FireApprovalOpinion
		{
			get
			{
				return this._FireApprovalOpinion;
			}
			set
			{
				if ((this._FireApprovalOpinion != value))
				{
					this.OnFireApprovalOpinionChanging(value);
					this.SendPropertyChanging();
					this._FireApprovalOpinion = value;
					this.SendPropertyChanged("FireApprovalOpinion");
					this.OnFireApprovalOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireApprovalManId", DbType="NVarChar(50)")]
		public string FireApprovalManId
		{
			get
			{
				return this._FireApprovalManId;
			}
			set
			{
				if ((this._FireApprovalManId != value))
				{
					if (this._FireApprovalMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFireApprovalManIdChanging(value);
					this.SendPropertyChanging();
					this._FireApprovalManId = value;
					this.SendPropertyChanged("FireApprovalManId");
					this.OnFireApprovalManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireApprovalTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FireApprovalTime
		{
			get
			{
				return this._FireApprovalTime;
			}
			set
			{
				if ((this._FireApprovalTime != value))
				{
					this.OnFireApprovalTimeChanging(value);
					this.SendPropertyChanging();
					this._FireApprovalTime = value;
					this.SendPropertyChanged("FireApprovalTime");
					this.OnFireApprovalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectTicketManId", DbType="NVarChar(50)")]
		public string InspectTicketManId
		{
			get
			{
				return this._InspectTicketManId;
			}
			set
			{
				if ((this._InspectTicketManId != value))
				{
					if (this._InspectTicketMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInspectTicketManIdChanging(value);
					this.SendPropertyChanging();
					this._InspectTicketManId = value;
					this.SendPropertyChanged("InspectTicketManId");
					this.OnInspectTicketManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectTicketTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> InspectTicketTime
		{
			get
			{
				return this._InspectTicketTime;
			}
			set
			{
				if ((this._InspectTicketTime != value))
				{
					this.OnInspectTicketTimeChanging(value);
					this.SendPropertyChanging();
					this._InspectTicketTime = value;
					this.SendPropertyChanged("InspectTicketTime");
					this.OnInspectTicketTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceManId", DbType="NVarChar(50)")]
		public string AcceptanceManId
		{
			get
			{
				return this._AcceptanceManId;
			}
			set
			{
				if ((this._AcceptanceManId != value))
				{
					if (this._AcceptanceMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcceptanceManIdChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceManId = value;
					this.SendPropertyChanged("AcceptanceManId");
					this.OnAcceptanceManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptanceTime
		{
			get
			{
				return this._AcceptanceTime;
			}
			set
			{
				if ((this._AcceptanceTime != value))
				{
					this.OnAcceptanceTimeChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceTime = value;
					this.SendPropertyChanged("AcceptanceTime");
					this.OnAcceptanceTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this.OnQRCodeUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeUrl = value;
					this.SendPropertyChanged("QRCodeUrl");
					this.OnQRCodeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PauseTime
		{
			get
			{
				return this._PauseTime;
			}
			set
			{
				if ((this._PauseTime != value))
				{
					this.OnPauseTimeChanging(value);
					this.SendPropertyChanging();
					this._PauseTime = value;
					this.SendPropertyChanged("PauseTime");
					this.OnPauseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkModeName", DbType="NVarChar(500)")]
		public string FireWorkModeName
		{
			get
			{
				return this._FireWorkModeName;
			}
			set
			{
				if ((this._FireWorkModeName != value))
				{
					this.OnFireWorkModeNameChanging(value);
					this.SendPropertyChanging();
					this._FireWorkModeName = value;
					this.SendPropertyChanged("FireWorkModeName");
					this.OnFireWorkModeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZIDName", DbType="NVarChar(4000)")]
		public string HAZIDName
		{
			get
			{
				return this._HAZIDName;
			}
			set
			{
				if ((this._HAZIDName != value))
				{
					this.OnHAZIDNameChanging(value);
					this.SendPropertyChanging();
					this._HAZIDName = value;
					this.SendPropertyChanged("HAZIDName");
					this.OnHAZIDNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseDescribe", DbType="NVarChar(4000)")]
		public string PauseDescribe
		{
			get
			{
				return this._PauseDescribe;
			}
			set
			{
				if ((this._PauseDescribe != value))
				{
					this.OnPauseDescribeChanging(value);
					this.SendPropertyChanging();
					this._PauseDescribe = value;
					this.SendPropertyChanged("PauseDescribe");
					this.OnPauseDescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWatchName", DbType="NVarChar(500)")]
		public string FireWatchName
		{
			get
			{
				return this._FireWatchName;
			}
			set
			{
				if ((this._FireWatchName != value))
				{
					this.OnFireWatchNameChanging(value);
					this.SendPropertyChanging();
					this._FireWatchName = value;
					this.SendPropertyChanged("FireWatchName");
					this.OnFireWatchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoCoordinate", DbType="NVarChar(50)")]
		public string GeoCoordinate
		{
			get
			{
				return this._GeoCoordinate;
			}
			set
			{
				if ((this._GeoCoordinate != value))
				{
					this.OnGeoCoordinateChanging(value);
					this.SendPropertyChanging();
					this._GeoCoordinate = value;
					this.SendPropertyChanged("GeoCoordinate");
					this.OnGeoCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Base_Depart", Storage="_Base_Depart", ThisKey="DepartId", OtherKey="DepartId", IsForeignKey=true)]
		public Base_Depart Base_Depart
		{
			get
			{
				return this._Base_Depart.Entity;
			}
			set
			{
				Base_Depart previousValue = this._Base_Depart.Entity;
				if (((previousValue != value) 
							|| (this._Base_Depart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Depart.Entity = null;
						previousValue.License_FireWork.Remove(this);
					}
					this._Base_Depart.Entity = value;
					if ((value != null))
					{
						value.License_FireWork.Add(this);
						this._DepartId = value.DepartId;
					}
					else
					{
						this._DepartId = default(string);
					}
					this.SendPropertyChanged("Base_Depart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Base_Installation", Storage="_Base_Installation", ThisKey="ApplyInstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.License_FireWork.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.License_FireWork.Add(this);
						this._ApplyInstallationId = value.InstallationId;
					}
					else
					{
						this._ApplyInstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Base_Installation1", Storage="_FireWorkInstallation", ThisKey="FireWorkInstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation FireWorkInstallation
		{
			get
			{
				return this._FireWorkInstallation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._FireWorkInstallation.Entity;
				if (((previousValue != value) 
							|| (this._FireWorkInstallation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FireWorkInstallation.Entity = null;
						previousValue.License_FireWork_Base_Installation1.Remove(this);
					}
					this._FireWorkInstallation.Entity = value;
					if ((value != null))
					{
						value.License_FireWork_Base_Installation1.Add(this);
						this._FireWorkInstallationId = value.InstallationId;
					}
					else
					{
						this._FireWorkInstallationId = default(string);
					}
					this.SendPropertyChanged("FireWorkInstallation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.License_FireWork.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.License_FireWork.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Base_Unit1", Storage="_ApplyUnit", ThisKey="ApplyUnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit ApplyUnit
		{
			get
			{
				return this._ApplyUnit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._ApplyUnit.Entity;
				if (((previousValue != value) 
							|| (this._ApplyUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplyUnit.Entity = null;
						previousValue.License_FireWork_Base_Unit1.Remove(this);
					}
					this._ApplyUnit.Entity = value;
					if ((value != null))
					{
						value.License_FireWork_Base_Unit1.Add(this);
						this._ApplyUnitId = value.UnitId;
					}
					else
					{
						this._ApplyUnitId = default(string);
					}
					this.SendPropertyChanged("ApplyUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User", Storage="_Sys_User", ThisKey="FireHeaderId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.License_FireWork.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.License_FireWork.Add(this);
						this._FireHeaderId = value.UserId;
					}
					else
					{
						this._FireHeaderId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_AcceptanceMan", Storage="_AcceptanceMan", ThisKey="AcceptanceManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User AcceptanceMan
		{
			get
			{
				return this._AcceptanceMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._AcceptanceMan.Entity;
				if (((previousValue != value) 
							|| (this._AcceptanceMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcceptanceMan.Entity = null;
						previousValue.License_FireWork_Sys_User_AcceptanceMan.Remove(this);
					}
					this._AcceptanceMan.Entity = value;
					if ((value != null))
					{
						value.License_FireWork_Sys_User_AcceptanceMan.Add(this);
						this._AcceptanceManId = value.UserId;
					}
					else
					{
						this._AcceptanceManId = default(string);
					}
					this.SendPropertyChanged("AcceptanceMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_AnalysisMan1", Storage="_AnalysisMan1Sys_User", ThisKey="AnalysisMan1", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User AnalysisMan1Sys_User
		{
			get
			{
				return this._AnalysisMan1Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._AnalysisMan1Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._AnalysisMan1Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AnalysisMan1Sys_User.Entity = null;
						previousValue.License_FireWork_Sys_User_AnalysisMan1.Remove(this);
					}
					this._AnalysisMan1Sys_User.Entity = value;
					if ((value != null))
					{
						value.License_FireWork_Sys_User_AnalysisMan1.Add(this);
						this._AnalysisMan1 = value.UserId;
					}
					else
					{
						this._AnalysisMan1 = default(string);
					}
					this.SendPropertyChanged("AnalysisMan1Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_ApplyUnitMan", Storage="_ApplyUnitMan", ThisKey="ApplyUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ApplyUnitMan
		{
			get
			{
				return this._ApplyUnitMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ApplyUnitMan.Entity;
				if (((previousValue != value) 
							|| (this._ApplyUnitMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplyUnitMan.Entity = null;
						previousValue.License_FireWork_Sys_User_ApplyUnitMan.Remove(this);
					}
					this._ApplyUnitMan.Entity = value;
					if ((value != null))
					{
						value.License_FireWork_Sys_User_ApplyUnitMan.Add(this);
						this._ApplyUnitManId = value.UserId;
					}
					else
					{
						this._ApplyUnitManId = default(string);
					}
					this.SendPropertyChanged("ApplyUnitMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_FireApprovalMan", Storage="_FireApprovalMan", ThisKey="FireApprovalManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User FireApprovalMan
		{
			get
			{
				return this._FireApprovalMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._FireApprovalMan.Entity;
				if (((previousValue != value) 
							|| (this._FireApprovalMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FireApprovalMan.Entity = null;
						previousValue.License_FireWork_Sys_User_FireApprovalMan.Remove(this);
					}
					this._FireApprovalMan.Entity = value;
					if ((value != null))
					{
						value.License_FireWork_Sys_User_FireApprovalMan.Add(this);
						this._FireApprovalManId = value.UserId;
					}
					else
					{
						this._FireApprovalManId = default(string);
					}
					this.SendPropertyChanged("FireApprovalMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_FireFirstMan", Storage="_FireFirstMan", ThisKey="FireFirstManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User FireFirstMan
		{
			get
			{
				return this._FireFirstMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._FireFirstMan.Entity;
				if (((previousValue != value) 
							|| (this._FireFirstMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FireFirstMan.Entity = null;
						previousValue.License_FireWork_Sys_User_FireFirstMan.Remove(this);
					}
					this._FireFirstMan.Entity = value;
					if ((value != null))
					{
						value.License_FireWork_Sys_User_FireFirstMan.Add(this);
						this._FireFirstManId = value.UserId;
					}
					else
					{
						this._FireFirstManId = default(string);
					}
					this.SendPropertyChanged("FireFirstMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_InspectTicketMan", Storage="_InspectTicketMan", ThisKey="InspectTicketManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User InspectTicketMan
		{
			get
			{
				return this._InspectTicketMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._InspectTicketMan.Entity;
				if (((previousValue != value) 
							|| (this._InspectTicketMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InspectTicketMan.Entity = null;
						previousValue.License_FireWork_Sys_User_InspectTicketMan.Remove(this);
					}
					this._InspectTicketMan.Entity = value;
					if ((value != null))
					{
						value.License_FireWork_Sys_User_InspectTicketMan.Add(this);
						this._InspectTicketManId = value.UserId;
					}
					else
					{
						this._InspectTicketManId = default(string);
					}
					this.SendPropertyChanged("InspectTicketMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_MeasuresMan", Storage="_MeasuresMan", ThisKey="MeasuresManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User MeasuresMan
		{
			get
			{
				return this._MeasuresMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._MeasuresMan.Entity;
				if (((previousValue != value) 
							|| (this._MeasuresMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeasuresMan.Entity = null;
						previousValue.License_FireWork_Sys_User_MeasuresMan.Remove(this);
					}
					this._MeasuresMan.Entity = value;
					if ((value != null))
					{
						value.License_FireWork_Sys_User_MeasuresMan.Add(this);
						this._MeasuresManId = value.UserId;
					}
					else
					{
						this._MeasuresManId = default(string);
					}
					this.SendPropertyChanged("MeasuresMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_ProduceUnitMan", Storage="_ProduceUnitMan", ThisKey="ProduceUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ProduceUnitMan
		{
			get
			{
				return this._ProduceUnitMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ProduceUnitMan.Entity;
				if (((previousValue != value) 
							|| (this._ProduceUnitMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProduceUnitMan.Entity = null;
						previousValue.License_FireWork_Sys_User_ProduceUnitMan.Remove(this);
					}
					this._ProduceUnitMan.Entity = value;
					if ((value != null))
					{
						value.License_FireWork_Sys_User_ProduceUnitMan.Add(this);
						this._ProduceUnitManId = value.UserId;
					}
					else
					{
						this._ProduceUnitManId = default(string);
					}
					this.SendPropertyChanged("ProduceUnitMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_SafeDepMan", Storage="_SafeDepMan", ThisKey="SafeDepManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User SafeDepMan
		{
			get
			{
				return this._SafeDepMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._SafeDepMan.Entity;
				if (((previousValue != value) 
							|| (this._SafeDepMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SafeDepMan.Entity = null;
						previousValue.License_FireWork_Sys_User_SafeDepMan.Remove(this);
					}
					this._SafeDepMan.Entity = value;
					if ((value != null))
					{
						value.License_FireWork_Sys_User_SafeDepMan.Add(this);
						this._SafeDepManId = value.UserId;
					}
					else
					{
						this._SafeDepManId = default(string);
					}
					this.SendPropertyChanged("SafeDepMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_SafeEduMan", Storage="_SafeEduMan", ThisKey="SafeEduManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User SafeEduMan
		{
			get
			{
				return this._SafeEduMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._SafeEduMan.Entity;
				if (((previousValue != value) 
							|| (this._SafeEduMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SafeEduMan.Entity = null;
						previousValue.License_FireWork_Sys_User_SafeEduMan.Remove(this);
					}
					this._SafeEduMan.Entity = value;
					if ((value != null))
					{
						value.License_FireWork_Sys_User_SafeEduMan.Add(this);
						this._SafeEduManId = value.UserId;
					}
					else
					{
						this._SafeEduManId = default(string);
					}
					this.SendPropertyChanged("SafeEduMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User1", Storage="_ApplyMan", ThisKey="ApplyManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ApplyMan
		{
			get
			{
				return this._ApplyMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ApplyMan.Entity;
				if (((previousValue != value) 
							|| (this._ApplyMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplyMan.Entity = null;
						previousValue.License_FireWork_Sys_User1.Remove(this);
					}
					this._ApplyMan.Entity = value;
					if ((value != null))
					{
						value.License_FireWork_Sys_User1.Add(this);
						this._ApplyManId = value.UserId;
					}
					else
					{
						this._ApplyManId = default(string);
					}
					this.SendPropertyChanged("ApplyMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User2", Storage="_CompileMan", ThisKey="CompileManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User CompileMan
		{
			get
			{
				return this._CompileMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._CompileMan.Entity;
				if (((previousValue != value) 
							|| (this._CompileMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompileMan.Entity = null;
						previousValue.License_FireWork_Sys_User2.Remove(this);
					}
					this._CompileMan.Entity = value;
					if ((value != null))
					{
						value.License_FireWork_Sys_User2.Add(this);
						this._CompileManId = value.UserId;
					}
					else
					{
						this._CompileManId = default(string);
					}
					this.SendPropertyChanged("CompileMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWorkAnalysis_License_FireWork", Storage="_License_FireWorkAnalysis", ThisKey="FireWorkId", OtherKey="FireWorkId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWorkAnalysis> License_FireWorkAnalysis
		{
			get
			{
				return this._License_FireWorkAnalysis;
			}
			set
			{
				this._License_FireWorkAnalysis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_License_FireWorkAnalysis(License_FireWorkAnalysis entity)
		{
			this.SendPropertyChanging();
			entity.License_FireWork = this;
		}
		
		private void detach_License_FireWorkAnalysis(License_FireWorkAnalysis entity)
		{
			this.SendPropertyChanging();
			entity.License_FireWork = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.License_FireWorkAnalysis")]
	public partial class License_FireWorkAnalysis : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FireWorkAnalysisId;
		
		private string _FireWorkId;
		
		private System.Nullable<int> _SortIndex;
		
		private System.Nullable<System.DateTime> _AnalysisTime;
		
		private string _AnalysisPoint;
		
		private System.Nullable<decimal> _AnalysisData;
		
		private string _AnalysisMan;
		
		private System.Nullable<bool> _IsQualified;
		
		private string _AnalysisPointName;
		
		private EntityRef<License_FireWork> _License_FireWork;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFireWorkAnalysisIdChanging(string value);
    partial void OnFireWorkAnalysisIdChanged();
    partial void OnFireWorkIdChanging(string value);
    partial void OnFireWorkIdChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnAnalysisTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAnalysisTimeChanged();
    partial void OnAnalysisPointChanging(string value);
    partial void OnAnalysisPointChanged();
    partial void OnAnalysisDataChanging(System.Nullable<decimal> value);
    partial void OnAnalysisDataChanged();
    partial void OnAnalysisManChanging(string value);
    partial void OnAnalysisManChanged();
    partial void OnIsQualifiedChanging(System.Nullable<bool> value);
    partial void OnIsQualifiedChanged();
    partial void OnAnalysisPointNameChanging(string value);
    partial void OnAnalysisPointNameChanged();
    #endregion
		
		public License_FireWorkAnalysis()
		{
			this._License_FireWork = default(EntityRef<License_FireWork>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkAnalysisId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FireWorkAnalysisId
		{
			get
			{
				return this._FireWorkAnalysisId;
			}
			set
			{
				if ((this._FireWorkAnalysisId != value))
				{
					this.OnFireWorkAnalysisIdChanging(value);
					this.SendPropertyChanging();
					this._FireWorkAnalysisId = value;
					this.SendPropertyChanged("FireWorkAnalysisId");
					this.OnFireWorkAnalysisIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkId", DbType="NVarChar(50)")]
		public string FireWorkId
		{
			get
			{
				return this._FireWorkId;
			}
			set
			{
				if ((this._FireWorkId != value))
				{
					if (this._License_FireWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFireWorkIdChanging(value);
					this.SendPropertyChanging();
					this._FireWorkId = value;
					this.SendPropertyChanged("FireWorkId");
					this.OnFireWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalysisTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AnalysisTime
		{
			get
			{
				return this._AnalysisTime;
			}
			set
			{
				if ((this._AnalysisTime != value))
				{
					this.OnAnalysisTimeChanging(value);
					this.SendPropertyChanging();
					this._AnalysisTime = value;
					this.SendPropertyChanged("AnalysisTime");
					this.OnAnalysisTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalysisPoint", DbType="NVarChar(500)")]
		public string AnalysisPoint
		{
			get
			{
				return this._AnalysisPoint;
			}
			set
			{
				if ((this._AnalysisPoint != value))
				{
					this.OnAnalysisPointChanging(value);
					this.SendPropertyChanging();
					this._AnalysisPoint = value;
					this.SendPropertyChanged("AnalysisPoint");
					this.OnAnalysisPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalysisData", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AnalysisData
		{
			get
			{
				return this._AnalysisData;
			}
			set
			{
				if ((this._AnalysisData != value))
				{
					this.OnAnalysisDataChanging(value);
					this.SendPropertyChanging();
					this._AnalysisData = value;
					this.SendPropertyChanged("AnalysisData");
					this.OnAnalysisDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalysisMan", DbType="NVarChar(50)")]
		public string AnalysisMan
		{
			get
			{
				return this._AnalysisMan;
			}
			set
			{
				if ((this._AnalysisMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnalysisManChanging(value);
					this.SendPropertyChanging();
					this._AnalysisMan = value;
					this.SendPropertyChanged("AnalysisMan");
					this.OnAnalysisManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsQualified", DbType="Bit")]
		public System.Nullable<bool> IsQualified
		{
			get
			{
				return this._IsQualified;
			}
			set
			{
				if ((this._IsQualified != value))
				{
					this.OnIsQualifiedChanging(value);
					this.SendPropertyChanging();
					this._IsQualified = value;
					this.SendPropertyChanged("IsQualified");
					this.OnIsQualifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalysisPointName", DbType="NVarChar(500)")]
		public string AnalysisPointName
		{
			get
			{
				return this._AnalysisPointName;
			}
			set
			{
				if ((this._AnalysisPointName != value))
				{
					this.OnAnalysisPointNameChanging(value);
					this.SendPropertyChanging();
					this._AnalysisPointName = value;
					this.SendPropertyChanged("AnalysisPointName");
					this.OnAnalysisPointNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWorkAnalysis_License_FireWork", Storage="_License_FireWork", ThisKey="FireWorkId", OtherKey="FireWorkId", IsForeignKey=true)]
		public License_FireWork License_FireWork
		{
			get
			{
				return this._License_FireWork.Entity;
			}
			set
			{
				License_FireWork previousValue = this._License_FireWork.Entity;
				if (((previousValue != value) 
							|| (this._License_FireWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._License_FireWork.Entity = null;
						previousValue.License_FireWorkAnalysis.Remove(this);
					}
					this._License_FireWork.Entity = value;
					if ((value != null))
					{
						value.License_FireWorkAnalysis.Add(this);
						this._FireWorkId = value.FireWorkId;
					}
					else
					{
						this._FireWorkId = default(string);
					}
					this.SendPropertyChanged("License_FireWork");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWorkAnalysis_Sys_User", Storage="_Sys_User", ThisKey="AnalysisMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.License_FireWorkAnalysis.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.License_FireWorkAnalysis.Add(this);
						this._AnalysisMan = value.UserId;
					}
					else
					{
						this._AnalysisMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.License_HeightWork")]
	public partial class License_HeightWork : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HeightWorkId;
		
		private string _LicenseCode;
		
		private string _InstallationId;
		
		private string _UnitId;
		
		private string _ApplyUnit;
		
		private string _ApplyManId;
		
		private System.Nullable<System.DateTime> _JobStartTime;
		
		private System.Nullable<System.DateTime> _JobEndTime;
		
		private string _JobPalce;
		
		private string _JobContent;
		
		private string _WorkingHeight;
		
		private string _JobLevel;
		
		private string _JobInstallationId;
		
		private string _JobUnit;
		
		private string _Guardian;
		
		private string _JobMan;
		
		private string _OtherSpecial;
		
		private string _HAZID;
		
		private string _MeasuresManId;
		
		private System.Nullable<System.DateTime> _MeasuresManTime;
		
		private string _OtherMeasures;
		
		private string _CompileManId;
		
		private System.Nullable<System.DateTime> _CompileManTime;
		
		private string _SafeEduManId;
		
		private System.Nullable<System.DateTime> _SafeEduManTime;
		
		private string _ApplyUnitOpinion;
		
		private string _ApplyUnitManId;
		
		private System.Nullable<System.DateTime> _ApplyUnitTime;
		
		private string _OperationUnitOpinion;
		
		private string _OperationUnitManId;
		
		private System.Nullable<System.DateTime> _OperationUnitTime;
		
		private string _AuditDepOpinion;
		
		private string _AuditDepManId;
		
		private System.Nullable<System.DateTime> _AuditDepTime;
		
		private string _ApproveDepOpinion;
		
		private string _ApproveDepManId;
		
		private System.Nullable<System.DateTime> _ApproveDepTime;
		
		private string _AcceptanceOpinion;
		
		private string _AcceptanceManId;
		
		private System.Nullable<System.DateTime> _AcceptanceTime;
		
		private string _QRCodeUrl;
		
		private string _AttachUrl;
		
		private string _States;
		
		private System.Nullable<System.DateTime> _PauseTime;
		
		private string _PauseDescribe;
		
		private string _HAZIDName;
		
		private string _GeoCoordinate;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Installation> _Installation;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _ApplyMan;
		
		private EntityRef<Sys_User> _ApplyUnitMan;
		
		private EntityRef<Sys_User> _ApproveDepMan;
		
		private EntityRef<Sys_User> _AuditDepMan;
		
		private EntityRef<Sys_User> _CompileMan;
		
		private EntityRef<Sys_User> _MeasuresMan;
		
		private EntityRef<Sys_User> _OperationUnitMan;
		
		private EntityRef<Sys_User> _SafeEduMan;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHeightWorkIdChanging(string value);
    partial void OnHeightWorkIdChanged();
    partial void OnLicenseCodeChanging(string value);
    partial void OnLicenseCodeChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnApplyUnitChanging(string value);
    partial void OnApplyUnitChanged();
    partial void OnApplyManIdChanging(string value);
    partial void OnApplyManIdChanged();
    partial void OnJobStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobStartTimeChanged();
    partial void OnJobEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobEndTimeChanged();
    partial void OnJobPalceChanging(string value);
    partial void OnJobPalceChanged();
    partial void OnJobContentChanging(string value);
    partial void OnJobContentChanged();
    partial void OnWorkingHeightChanging(string value);
    partial void OnWorkingHeightChanged();
    partial void OnJobLevelChanging(string value);
    partial void OnJobLevelChanged();
    partial void OnJobInstallationIdChanging(string value);
    partial void OnJobInstallationIdChanged();
    partial void OnJobUnitChanging(string value);
    partial void OnJobUnitChanged();
    partial void OnGuardianChanging(string value);
    partial void OnGuardianChanged();
    partial void OnJobManChanging(string value);
    partial void OnJobManChanged();
    partial void OnOtherSpecialChanging(string value);
    partial void OnOtherSpecialChanged();
    partial void OnHAZIDChanging(string value);
    partial void OnHAZIDChanged();
    partial void OnMeasuresManIdChanging(string value);
    partial void OnMeasuresManIdChanged();
    partial void OnMeasuresManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnMeasuresManTimeChanged();
    partial void OnOtherMeasuresChanging(string value);
    partial void OnOtherMeasuresChanged();
    partial void OnCompileManIdChanging(string value);
    partial void OnCompileManIdChanged();
    partial void OnCompileManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileManTimeChanged();
    partial void OnSafeEduManIdChanging(string value);
    partial void OnSafeEduManIdChanged();
    partial void OnSafeEduManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSafeEduManTimeChanged();
    partial void OnApplyUnitOpinionChanging(string value);
    partial void OnApplyUnitOpinionChanged();
    partial void OnApplyUnitManIdChanging(string value);
    partial void OnApplyUnitManIdChanged();
    partial void OnApplyUnitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnApplyUnitTimeChanged();
    partial void OnOperationUnitOpinionChanging(string value);
    partial void OnOperationUnitOpinionChanged();
    partial void OnOperationUnitManIdChanging(string value);
    partial void OnOperationUnitManIdChanged();
    partial void OnOperationUnitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperationUnitTimeChanged();
    partial void OnAuditDepOpinionChanging(string value);
    partial void OnAuditDepOpinionChanged();
    partial void OnAuditDepManIdChanging(string value);
    partial void OnAuditDepManIdChanged();
    partial void OnAuditDepTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDepTimeChanged();
    partial void OnApproveDepOpinionChanging(string value);
    partial void OnApproveDepOpinionChanged();
    partial void OnApproveDepManIdChanging(string value);
    partial void OnApproveDepManIdChanged();
    partial void OnApproveDepTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnApproveDepTimeChanged();
    partial void OnAcceptanceOpinionChanging(string value);
    partial void OnAcceptanceOpinionChanged();
    partial void OnAcceptanceManIdChanging(string value);
    partial void OnAcceptanceManIdChanged();
    partial void OnAcceptanceTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptanceTimeChanged();
    partial void OnQRCodeUrlChanging(string value);
    partial void OnQRCodeUrlChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnPauseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPauseTimeChanged();
    partial void OnPauseDescribeChanging(string value);
    partial void OnPauseDescribeChanged();
    partial void OnHAZIDNameChanging(string value);
    partial void OnHAZIDNameChanged();
    partial void OnGeoCoordinateChanging(string value);
    partial void OnGeoCoordinateChanged();
    #endregion
		
		public License_HeightWork()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._Installation = default(EntityRef<Base_Installation>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._ApplyMan = default(EntityRef<Sys_User>);
			this._ApplyUnitMan = default(EntityRef<Sys_User>);
			this._ApproveDepMan = default(EntityRef<Sys_User>);
			this._AuditDepMan = default(EntityRef<Sys_User>);
			this._CompileMan = default(EntityRef<Sys_User>);
			this._MeasuresMan = default(EntityRef<Sys_User>);
			this._OperationUnitMan = default(EntityRef<Sys_User>);
			this._SafeEduMan = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeightWorkId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HeightWorkId
		{
			get
			{
				return this._HeightWorkId;
			}
			set
			{
				if ((this._HeightWorkId != value))
				{
					this.OnHeightWorkIdChanging(value);
					this.SendPropertyChanging();
					this._HeightWorkId = value;
					this.SendPropertyChanged("HeightWorkId");
					this.OnHeightWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(50)")]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this.OnLicenseCodeChanging(value);
					this.SendPropertyChanging();
					this._LicenseCode = value;
					this.SendPropertyChanged("LicenseCode");
					this.OnLicenseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnit", DbType="NVarChar(500)")]
		public string ApplyUnit
		{
			get
			{
				return this._ApplyUnit;
			}
			set
			{
				if ((this._ApplyUnit != value))
				{
					this.OnApplyUnitChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnit = value;
					this.SendPropertyChanged("ApplyUnit");
					this.OnApplyUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyManId", DbType="NVarChar(50)")]
		public string ApplyManId
		{
			get
			{
				return this._ApplyManId;
			}
			set
			{
				if ((this._ApplyManId != value))
				{
					if (this._ApplyMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyManIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyManId = value;
					this.SendPropertyChanged("ApplyManId");
					this.OnApplyManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobStartTime
		{
			get
			{
				return this._JobStartTime;
			}
			set
			{
				if ((this._JobStartTime != value))
				{
					this.OnJobStartTimeChanging(value);
					this.SendPropertyChanging();
					this._JobStartTime = value;
					this.SendPropertyChanged("JobStartTime");
					this.OnJobStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobEndTime
		{
			get
			{
				return this._JobEndTime;
			}
			set
			{
				if ((this._JobEndTime != value))
				{
					this.OnJobEndTimeChanging(value);
					this.SendPropertyChanging();
					this._JobEndTime = value;
					this.SendPropertyChanged("JobEndTime");
					this.OnJobEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPalce", DbType="NVarChar(200)")]
		public string JobPalce
		{
			get
			{
				return this._JobPalce;
			}
			set
			{
				if ((this._JobPalce != value))
				{
					this.OnJobPalceChanging(value);
					this.SendPropertyChanging();
					this._JobPalce = value;
					this.SendPropertyChanged("JobPalce");
					this.OnJobPalceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobContent", DbType="NVarChar(500)")]
		public string JobContent
		{
			get
			{
				return this._JobContent;
			}
			set
			{
				if ((this._JobContent != value))
				{
					this.OnJobContentChanging(value);
					this.SendPropertyChanging();
					this._JobContent = value;
					this.SendPropertyChanged("JobContent");
					this.OnJobContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingHeight", DbType="NVarChar(50)")]
		public string WorkingHeight
		{
			get
			{
				return this._WorkingHeight;
			}
			set
			{
				if ((this._WorkingHeight != value))
				{
					this.OnWorkingHeightChanging(value);
					this.SendPropertyChanging();
					this._WorkingHeight = value;
					this.SendPropertyChanged("WorkingHeight");
					this.OnWorkingHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobLevel", DbType="NVarChar(50)")]
		public string JobLevel
		{
			get
			{
				return this._JobLevel;
			}
			set
			{
				if ((this._JobLevel != value))
				{
					this.OnJobLevelChanging(value);
					this.SendPropertyChanging();
					this._JobLevel = value;
					this.SendPropertyChanged("JobLevel");
					this.OnJobLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobInstallationId", DbType="NVarChar(50)")]
		public string JobInstallationId
		{
			get
			{
				return this._JobInstallationId;
			}
			set
			{
				if ((this._JobInstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._JobInstallationId = value;
					this.SendPropertyChanged("JobInstallationId");
					this.OnJobInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnit", DbType="NVarChar(200)")]
		public string JobUnit
		{
			get
			{
				return this._JobUnit;
			}
			set
			{
				if ((this._JobUnit != value))
				{
					this.OnJobUnitChanging(value);
					this.SendPropertyChanging();
					this._JobUnit = value;
					this.SendPropertyChanged("JobUnit");
					this.OnJobUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guardian", DbType="NVarChar(50)")]
		public string Guardian
		{
			get
			{
				return this._Guardian;
			}
			set
			{
				if ((this._Guardian != value))
				{
					this.OnGuardianChanging(value);
					this.SendPropertyChanging();
					this._Guardian = value;
					this.SendPropertyChanged("Guardian");
					this.OnGuardianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobMan", DbType="NVarChar(500)")]
		public string JobMan
		{
			get
			{
				return this._JobMan;
			}
			set
			{
				if ((this._JobMan != value))
				{
					this.OnJobManChanging(value);
					this.SendPropertyChanging();
					this._JobMan = value;
					this.SendPropertyChanged("JobMan");
					this.OnJobManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherSpecial", DbType="NVarChar(100)")]
		public string OtherSpecial
		{
			get
			{
				return this._OtherSpecial;
			}
			set
			{
				if ((this._OtherSpecial != value))
				{
					this.OnOtherSpecialChanging(value);
					this.SendPropertyChanging();
					this._OtherSpecial = value;
					this.SendPropertyChanged("OtherSpecial");
					this.OnOtherSpecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZID", DbType="NVarChar(4000)")]
		public string HAZID
		{
			get
			{
				return this._HAZID;
			}
			set
			{
				if ((this._HAZID != value))
				{
					this.OnHAZIDChanging(value);
					this.SendPropertyChanging();
					this._HAZID = value;
					this.SendPropertyChanged("HAZID");
					this.OnHAZIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasuresManId", DbType="NVarChar(50)")]
		public string MeasuresManId
		{
			get
			{
				return this._MeasuresManId;
			}
			set
			{
				if ((this._MeasuresManId != value))
				{
					if (this._MeasuresMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeasuresManIdChanging(value);
					this.SendPropertyChanging();
					this._MeasuresManId = value;
					this.SendPropertyChanged("MeasuresManId");
					this.OnMeasuresManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasuresManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> MeasuresManTime
		{
			get
			{
				return this._MeasuresManTime;
			}
			set
			{
				if ((this._MeasuresManTime != value))
				{
					this.OnMeasuresManTimeChanging(value);
					this.SendPropertyChanging();
					this._MeasuresManTime = value;
					this.SendPropertyChanged("MeasuresManTime");
					this.OnMeasuresManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(500)")]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this.OnOtherMeasuresChanging(value);
					this.SendPropertyChanging();
					this._OtherMeasures = value;
					this.SendPropertyChanged("OtherMeasures");
					this.OnOtherMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManId", DbType="NVarChar(50)")]
		public string CompileManId
		{
			get
			{
				return this._CompileManId;
			}
			set
			{
				if ((this._CompileManId != value))
				{
					if (this._CompileMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManIdChanging(value);
					this.SendPropertyChanging();
					this._CompileManId = value;
					this.SendPropertyChanged("CompileManId");
					this.OnCompileManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileManTime
		{
			get
			{
				return this._CompileManTime;
			}
			set
			{
				if ((this._CompileManTime != value))
				{
					this.OnCompileManTimeChanging(value);
					this.SendPropertyChanging();
					this._CompileManTime = value;
					this.SendPropertyChanged("CompileManTime");
					this.OnCompileManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduManId", DbType="NVarChar(50)")]
		public string SafeEduManId
		{
			get
			{
				return this._SafeEduManId;
			}
			set
			{
				if ((this._SafeEduManId != value))
				{
					if (this._SafeEduMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSafeEduManIdChanging(value);
					this.SendPropertyChanging();
					this._SafeEduManId = value;
					this.SendPropertyChanged("SafeEduManId");
					this.OnSafeEduManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SafeEduManTime
		{
			get
			{
				return this._SafeEduManTime;
			}
			set
			{
				if ((this._SafeEduManTime != value))
				{
					this.OnSafeEduManTimeChanging(value);
					this.SendPropertyChanging();
					this._SafeEduManTime = value;
					this.SendPropertyChanged("SafeEduManTime");
					this.OnSafeEduManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitOpinion", DbType="NVarChar(500)")]
		public string ApplyUnitOpinion
		{
			get
			{
				return this._ApplyUnitOpinion;
			}
			set
			{
				if ((this._ApplyUnitOpinion != value))
				{
					this.OnApplyUnitOpinionChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitOpinion = value;
					this.SendPropertyChanged("ApplyUnitOpinion");
					this.OnApplyUnitOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitManId", DbType="NVarChar(50)")]
		public string ApplyUnitManId
		{
			get
			{
				return this._ApplyUnitManId;
			}
			set
			{
				if ((this._ApplyUnitManId != value))
				{
					if (this._ApplyUnitMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitManId = value;
					this.SendPropertyChanged("ApplyUnitManId");
					this.OnApplyUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApplyUnitTime
		{
			get
			{
				return this._ApplyUnitTime;
			}
			set
			{
				if ((this._ApplyUnitTime != value))
				{
					this.OnApplyUnitTimeChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitTime = value;
					this.SendPropertyChanged("ApplyUnitTime");
					this.OnApplyUnitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationUnitOpinion", DbType="NVarChar(500)")]
		public string OperationUnitOpinion
		{
			get
			{
				return this._OperationUnitOpinion;
			}
			set
			{
				if ((this._OperationUnitOpinion != value))
				{
					this.OnOperationUnitOpinionChanging(value);
					this.SendPropertyChanging();
					this._OperationUnitOpinion = value;
					this.SendPropertyChanged("OperationUnitOpinion");
					this.OnOperationUnitOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationUnitManId", DbType="NVarChar(50)")]
		public string OperationUnitManId
		{
			get
			{
				return this._OperationUnitManId;
			}
			set
			{
				if ((this._OperationUnitManId != value))
				{
					if (this._OperationUnitMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperationUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._OperationUnitManId = value;
					this.SendPropertyChanged("OperationUnitManId");
					this.OnOperationUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationUnitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperationUnitTime
		{
			get
			{
				return this._OperationUnitTime;
			}
			set
			{
				if ((this._OperationUnitTime != value))
				{
					this.OnOperationUnitTimeChanging(value);
					this.SendPropertyChanging();
					this._OperationUnitTime = value;
					this.SendPropertyChanged("OperationUnitTime");
					this.OnOperationUnitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDepOpinion", DbType="NVarChar(500)")]
		public string AuditDepOpinion
		{
			get
			{
				return this._AuditDepOpinion;
			}
			set
			{
				if ((this._AuditDepOpinion != value))
				{
					this.OnAuditDepOpinionChanging(value);
					this.SendPropertyChanging();
					this._AuditDepOpinion = value;
					this.SendPropertyChanged("AuditDepOpinion");
					this.OnAuditDepOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDepManId", DbType="NVarChar(50)")]
		public string AuditDepManId
		{
			get
			{
				return this._AuditDepManId;
			}
			set
			{
				if ((this._AuditDepManId != value))
				{
					if (this._AuditDepMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditDepManIdChanging(value);
					this.SendPropertyChanging();
					this._AuditDepManId = value;
					this.SendPropertyChanged("AuditDepManId");
					this.OnAuditDepManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDepTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDepTime
		{
			get
			{
				return this._AuditDepTime;
			}
			set
			{
				if ((this._AuditDepTime != value))
				{
					this.OnAuditDepTimeChanging(value);
					this.SendPropertyChanging();
					this._AuditDepTime = value;
					this.SendPropertyChanged("AuditDepTime");
					this.OnAuditDepTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveDepOpinion", DbType="NVarChar(500)")]
		public string ApproveDepOpinion
		{
			get
			{
				return this._ApproveDepOpinion;
			}
			set
			{
				if ((this._ApproveDepOpinion != value))
				{
					this.OnApproveDepOpinionChanging(value);
					this.SendPropertyChanging();
					this._ApproveDepOpinion = value;
					this.SendPropertyChanged("ApproveDepOpinion");
					this.OnApproveDepOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveDepManId", DbType="NVarChar(50)")]
		public string ApproveDepManId
		{
			get
			{
				return this._ApproveDepManId;
			}
			set
			{
				if ((this._ApproveDepManId != value))
				{
					if (this._ApproveDepMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApproveDepManIdChanging(value);
					this.SendPropertyChanging();
					this._ApproveDepManId = value;
					this.SendPropertyChanged("ApproveDepManId");
					this.OnApproveDepManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveDepTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApproveDepTime
		{
			get
			{
				return this._ApproveDepTime;
			}
			set
			{
				if ((this._ApproveDepTime != value))
				{
					this.OnApproveDepTimeChanging(value);
					this.SendPropertyChanging();
					this._ApproveDepTime = value;
					this.SendPropertyChanged("ApproveDepTime");
					this.OnApproveDepTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceOpinion", DbType="NVarChar(500)")]
		public string AcceptanceOpinion
		{
			get
			{
				return this._AcceptanceOpinion;
			}
			set
			{
				if ((this._AcceptanceOpinion != value))
				{
					this.OnAcceptanceOpinionChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceOpinion = value;
					this.SendPropertyChanged("AcceptanceOpinion");
					this.OnAcceptanceOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceManId", DbType="NVarChar(50)")]
		public string AcceptanceManId
		{
			get
			{
				return this._AcceptanceManId;
			}
			set
			{
				if ((this._AcceptanceManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcceptanceManIdChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceManId = value;
					this.SendPropertyChanged("AcceptanceManId");
					this.OnAcceptanceManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptanceTime
		{
			get
			{
				return this._AcceptanceTime;
			}
			set
			{
				if ((this._AcceptanceTime != value))
				{
					this.OnAcceptanceTimeChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceTime = value;
					this.SendPropertyChanged("AcceptanceTime");
					this.OnAcceptanceTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this.OnQRCodeUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeUrl = value;
					this.SendPropertyChanged("QRCodeUrl");
					this.OnQRCodeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PauseTime
		{
			get
			{
				return this._PauseTime;
			}
			set
			{
				if ((this._PauseTime != value))
				{
					this.OnPauseTimeChanging(value);
					this.SendPropertyChanging();
					this._PauseTime = value;
					this.SendPropertyChanged("PauseTime");
					this.OnPauseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseDescribe", DbType="NVarChar(4000)")]
		public string PauseDescribe
		{
			get
			{
				return this._PauseDescribe;
			}
			set
			{
				if ((this._PauseDescribe != value))
				{
					this.OnPauseDescribeChanging(value);
					this.SendPropertyChanging();
					this._PauseDescribe = value;
					this.SendPropertyChanged("PauseDescribe");
					this.OnPauseDescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZIDName", DbType="NVarChar(4000)")]
		public string HAZIDName
		{
			get
			{
				return this._HAZIDName;
			}
			set
			{
				if ((this._HAZIDName != value))
				{
					this.OnHAZIDNameChanging(value);
					this.SendPropertyChanging();
					this._HAZIDName = value;
					this.SendPropertyChanged("HAZIDName");
					this.OnHAZIDNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoCoordinate", DbType="NVarChar(50)")]
		public string GeoCoordinate
		{
			get
			{
				return this._GeoCoordinate;
			}
			set
			{
				if ((this._GeoCoordinate != value))
				{
					this.OnGeoCoordinateChanging(value);
					this.SendPropertyChanging();
					this._GeoCoordinate = value;
					this.SendPropertyChanged("GeoCoordinate");
					this.OnGeoCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Base_Installation", Storage="_Base_Installation", ThisKey="JobInstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.License_HeightWork.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.License_HeightWork.Add(this);
						this._JobInstallationId = value.InstallationId;
					}
					else
					{
						this._JobInstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Base_Installation1", Storage="_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Installation
		{
			get
			{
				return this._Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Installation.Entity;
				if (((previousValue != value) 
							|| (this._Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Installation.Entity = null;
						previousValue.License_HeightWork_Base_Installation1.Remove(this);
					}
					this._Installation.Entity = value;
					if ((value != null))
					{
						value.License_HeightWork_Base_Installation1.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.License_HeightWork.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.License_HeightWork.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_AcceptanceMan", Storage="_Sys_User", ThisKey="AcceptanceManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.License_HeightWork.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.License_HeightWork.Add(this);
						this._AcceptanceManId = value.UserId;
					}
					else
					{
						this._AcceptanceManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_ApplyMan", Storage="_ApplyMan", ThisKey="ApplyManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ApplyMan
		{
			get
			{
				return this._ApplyMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ApplyMan.Entity;
				if (((previousValue != value) 
							|| (this._ApplyMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplyMan.Entity = null;
						previousValue.License_HeightWork_Sys_User_ApplyMan.Remove(this);
					}
					this._ApplyMan.Entity = value;
					if ((value != null))
					{
						value.License_HeightWork_Sys_User_ApplyMan.Add(this);
						this._ApplyManId = value.UserId;
					}
					else
					{
						this._ApplyManId = default(string);
					}
					this.SendPropertyChanged("ApplyMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_ApplyUnitMan", Storage="_ApplyUnitMan", ThisKey="ApplyUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ApplyUnitMan
		{
			get
			{
				return this._ApplyUnitMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ApplyUnitMan.Entity;
				if (((previousValue != value) 
							|| (this._ApplyUnitMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplyUnitMan.Entity = null;
						previousValue.License_HeightWork_Sys_User_ApplyUnitMan.Remove(this);
					}
					this._ApplyUnitMan.Entity = value;
					if ((value != null))
					{
						value.License_HeightWork_Sys_User_ApplyUnitMan.Add(this);
						this._ApplyUnitManId = value.UserId;
					}
					else
					{
						this._ApplyUnitManId = default(string);
					}
					this.SendPropertyChanged("ApplyUnitMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_ApproveDepMan", Storage="_ApproveDepMan", ThisKey="ApproveDepManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ApproveDepMan
		{
			get
			{
				return this._ApproveDepMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ApproveDepMan.Entity;
				if (((previousValue != value) 
							|| (this._ApproveDepMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApproveDepMan.Entity = null;
						previousValue.License_HeightWork_Sys_User_ApproveDepMan.Remove(this);
					}
					this._ApproveDepMan.Entity = value;
					if ((value != null))
					{
						value.License_HeightWork_Sys_User_ApproveDepMan.Add(this);
						this._ApproveDepManId = value.UserId;
					}
					else
					{
						this._ApproveDepManId = default(string);
					}
					this.SendPropertyChanged("ApproveDepMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_AuditDepMan", Storage="_AuditDepMan", ThisKey="AuditDepManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User AuditDepMan
		{
			get
			{
				return this._AuditDepMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._AuditDepMan.Entity;
				if (((previousValue != value) 
							|| (this._AuditDepMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AuditDepMan.Entity = null;
						previousValue.License_HeightWork_Sys_User_AuditDepMan.Remove(this);
					}
					this._AuditDepMan.Entity = value;
					if ((value != null))
					{
						value.License_HeightWork_Sys_User_AuditDepMan.Add(this);
						this._AuditDepManId = value.UserId;
					}
					else
					{
						this._AuditDepManId = default(string);
					}
					this.SendPropertyChanged("AuditDepMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_CompileMan", Storage="_CompileMan", ThisKey="CompileManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User CompileMan
		{
			get
			{
				return this._CompileMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._CompileMan.Entity;
				if (((previousValue != value) 
							|| (this._CompileMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompileMan.Entity = null;
						previousValue.License_HeightWork_Sys_User_CompileMan.Remove(this);
					}
					this._CompileMan.Entity = value;
					if ((value != null))
					{
						value.License_HeightWork_Sys_User_CompileMan.Add(this);
						this._CompileManId = value.UserId;
					}
					else
					{
						this._CompileManId = default(string);
					}
					this.SendPropertyChanged("CompileMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_MeasuresMan", Storage="_MeasuresMan", ThisKey="MeasuresManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User MeasuresMan
		{
			get
			{
				return this._MeasuresMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._MeasuresMan.Entity;
				if (((previousValue != value) 
							|| (this._MeasuresMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeasuresMan.Entity = null;
						previousValue.License_HeightWork_Sys_User_MeasuresMan.Remove(this);
					}
					this._MeasuresMan.Entity = value;
					if ((value != null))
					{
						value.License_HeightWork_Sys_User_MeasuresMan.Add(this);
						this._MeasuresManId = value.UserId;
					}
					else
					{
						this._MeasuresManId = default(string);
					}
					this.SendPropertyChanged("MeasuresMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_OperationUnitMan", Storage="_OperationUnitMan", ThisKey="OperationUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User OperationUnitMan
		{
			get
			{
				return this._OperationUnitMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._OperationUnitMan.Entity;
				if (((previousValue != value) 
							|| (this._OperationUnitMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OperationUnitMan.Entity = null;
						previousValue.License_HeightWork_Sys_User_OperationUnitMan.Remove(this);
					}
					this._OperationUnitMan.Entity = value;
					if ((value != null))
					{
						value.License_HeightWork_Sys_User_OperationUnitMan.Add(this);
						this._OperationUnitManId = value.UserId;
					}
					else
					{
						this._OperationUnitManId = default(string);
					}
					this.SendPropertyChanged("OperationUnitMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_SafeEduMan", Storage="_SafeEduMan", ThisKey="SafeEduManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User SafeEduMan
		{
			get
			{
				return this._SafeEduMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._SafeEduMan.Entity;
				if (((previousValue != value) 
							|| (this._SafeEduMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SafeEduMan.Entity = null;
						previousValue.License_HeightWork_Sys_User_SafeEduMan.Remove(this);
					}
					this._SafeEduMan.Entity = value;
					if ((value != null))
					{
						value.License_HeightWork_Sys_User_SafeEduMan.Add(this);
						this._SafeEduManId = value.UserId;
					}
					else
					{
						this._SafeEduManId = default(string);
					}
					this.SendPropertyChanged("SafeEduMan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.License_Interlocking")]
	public partial class License_Interlocking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InterlockingId;
		
		private string _LicenseCode;
		
		private string _ApplyInstallationId;
		
		private string _ApplyUnitId;
		
		private string _ApplyManId;
		
		private System.Nullable<System.DateTime> _ApplyDate;
		
		private string _InterlockName;
		
		private string _InterlockLevel;
		
		private string _UnitHeadId;
		
		private System.Nullable<System.DateTime> _UnitHeadTime;
		
		private string _PerformUnitId;
		
		private string _ChangeOperator;
		
		private System.Nullable<System.DateTime> _ChangeTime;
		
		private string _Reason;
		
		private string _InstallationOpinion;
		
		private string _InstallationManId;
		
		private System.Nullable<System.DateTime> _InstallationTime;
		
		private string _EquipmentOpinion;
		
		private string _EquipmentManId;
		
		private System.Nullable<System.DateTime> _EquipmentTime;
		
		private string _ProductionOpinion;
		
		private string _ProductionManId;
		
		private System.Nullable<System.DateTime> _ProductionTime;
		
		private string _ChiefEngineerOpinion;
		
		private string _ChiefEngineerManId;
		
		private System.Nullable<System.DateTime> _ChiefEngineerTime;
		
		private string _QRCodeUrl;
		
		private string _AttachUrl;
		
		private string _States;
		
		private string _JobInstallationId;
		
		private System.Nullable<System.DateTime> _PauseTime;
		
		private string _PauseDescribe;
		
		private string _AffiliatedUnitId;
		
		private string _SafetyMeasures;
		
		private string _GeoCoordinate;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Installation> _JobInstallation;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_Unit> _PerformUnit;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _ChiefEngineerMan;
		
		private EntityRef<Sys_User> _EquipmentMan;
		
		private EntityRef<Sys_User> _InstallationMan;
		
		private EntityRef<Sys_User> _ProductionMan;
		
		private EntityRef<Sys_User> _UnitHead;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInterlockingIdChanging(string value);
    partial void OnInterlockingIdChanged();
    partial void OnLicenseCodeChanging(string value);
    partial void OnLicenseCodeChanged();
    partial void OnApplyInstallationIdChanging(string value);
    partial void OnApplyInstallationIdChanged();
    partial void OnApplyUnitIdChanging(string value);
    partial void OnApplyUnitIdChanged();
    partial void OnApplyManIdChanging(string value);
    partial void OnApplyManIdChanged();
    partial void OnApplyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApplyDateChanged();
    partial void OnInterlockNameChanging(string value);
    partial void OnInterlockNameChanged();
    partial void OnInterlockLevelChanging(string value);
    partial void OnInterlockLevelChanged();
    partial void OnUnitHeadIdChanging(string value);
    partial void OnUnitHeadIdChanged();
    partial void OnUnitHeadTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUnitHeadTimeChanged();
    partial void OnPerformUnitIdChanging(string value);
    partial void OnPerformUnitIdChanged();
    partial void OnChangeOperatorChanging(string value);
    partial void OnChangeOperatorChanged();
    partial void OnChangeTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeTimeChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnInstallationOpinionChanging(string value);
    partial void OnInstallationOpinionChanged();
    partial void OnInstallationManIdChanging(string value);
    partial void OnInstallationManIdChanged();
    partial void OnInstallationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallationTimeChanged();
    partial void OnEquipmentOpinionChanging(string value);
    partial void OnEquipmentOpinionChanged();
    partial void OnEquipmentManIdChanging(string value);
    partial void OnEquipmentManIdChanged();
    partial void OnEquipmentTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEquipmentTimeChanged();
    partial void OnProductionOpinionChanging(string value);
    partial void OnProductionOpinionChanged();
    partial void OnProductionManIdChanging(string value);
    partial void OnProductionManIdChanged();
    partial void OnProductionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProductionTimeChanged();
    partial void OnChiefEngineerOpinionChanging(string value);
    partial void OnChiefEngineerOpinionChanged();
    partial void OnChiefEngineerManIdChanging(string value);
    partial void OnChiefEngineerManIdChanged();
    partial void OnChiefEngineerTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnChiefEngineerTimeChanged();
    partial void OnQRCodeUrlChanging(string value);
    partial void OnQRCodeUrlChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnJobInstallationIdChanging(string value);
    partial void OnJobInstallationIdChanged();
    partial void OnPauseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPauseTimeChanged();
    partial void OnPauseDescribeChanging(string value);
    partial void OnPauseDescribeChanged();
    partial void OnAffiliatedUnitIdChanging(string value);
    partial void OnAffiliatedUnitIdChanged();
    partial void OnSafetyMeasuresChanging(string value);
    partial void OnSafetyMeasuresChanged();
    partial void OnGeoCoordinateChanging(string value);
    partial void OnGeoCoordinateChanged();
    #endregion
		
		public License_Interlocking()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._JobInstallation = default(EntityRef<Base_Installation>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._PerformUnit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._ChiefEngineerMan = default(EntityRef<Sys_User>);
			this._EquipmentMan = default(EntityRef<Sys_User>);
			this._InstallationMan = default(EntityRef<Sys_User>);
			this._ProductionMan = default(EntityRef<Sys_User>);
			this._UnitHead = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterlockingId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string InterlockingId
		{
			get
			{
				return this._InterlockingId;
			}
			set
			{
				if ((this._InterlockingId != value))
				{
					this.OnInterlockingIdChanging(value);
					this.SendPropertyChanging();
					this._InterlockingId = value;
					this.SendPropertyChanged("InterlockingId");
					this.OnInterlockingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(50)")]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this.OnLicenseCodeChanging(value);
					this.SendPropertyChanging();
					this._LicenseCode = value;
					this.SendPropertyChanged("LicenseCode");
					this.OnLicenseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyInstallationId", DbType="NVarChar(50)")]
		public string ApplyInstallationId
		{
			get
			{
				return this._ApplyInstallationId;
			}
			set
			{
				if ((this._ApplyInstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyInstallationId = value;
					this.SendPropertyChanged("ApplyInstallationId");
					this.OnApplyInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitId", DbType="NVarChar(50)")]
		public string ApplyUnitId
		{
			get
			{
				return this._ApplyUnitId;
			}
			set
			{
				if ((this._ApplyUnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyUnitIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitId = value;
					this.SendPropertyChanged("ApplyUnitId");
					this.OnApplyUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyManId", DbType="NVarChar(50)")]
		public string ApplyManId
		{
			get
			{
				return this._ApplyManId;
			}
			set
			{
				if ((this._ApplyManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyManIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyManId = value;
					this.SendPropertyChanged("ApplyManId");
					this.OnApplyManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApplyDate
		{
			get
			{
				return this._ApplyDate;
			}
			set
			{
				if ((this._ApplyDate != value))
				{
					this.OnApplyDateChanging(value);
					this.SendPropertyChanging();
					this._ApplyDate = value;
					this.SendPropertyChanged("ApplyDate");
					this.OnApplyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterlockName", DbType="NVarChar(50)")]
		public string InterlockName
		{
			get
			{
				return this._InterlockName;
			}
			set
			{
				if ((this._InterlockName != value))
				{
					this.OnInterlockNameChanging(value);
					this.SendPropertyChanging();
					this._InterlockName = value;
					this.SendPropertyChanged("InterlockName");
					this.OnInterlockNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterlockLevel", DbType="Char(1)")]
		public string InterlockLevel
		{
			get
			{
				return this._InterlockLevel;
			}
			set
			{
				if ((this._InterlockLevel != value))
				{
					this.OnInterlockLevelChanging(value);
					this.SendPropertyChanging();
					this._InterlockLevel = value;
					this.SendPropertyChanged("InterlockLevel");
					this.OnInterlockLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitHeadId", DbType="NVarChar(50)")]
		public string UnitHeadId
		{
			get
			{
				return this._UnitHeadId;
			}
			set
			{
				if ((this._UnitHeadId != value))
				{
					if (this._UnitHead.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitHeadIdChanging(value);
					this.SendPropertyChanging();
					this._UnitHeadId = value;
					this.SendPropertyChanged("UnitHeadId");
					this.OnUnitHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitHeadTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UnitHeadTime
		{
			get
			{
				return this._UnitHeadTime;
			}
			set
			{
				if ((this._UnitHeadTime != value))
				{
					this.OnUnitHeadTimeChanging(value);
					this.SendPropertyChanging();
					this._UnitHeadTime = value;
					this.SendPropertyChanged("UnitHeadTime");
					this.OnUnitHeadTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerformUnitId", DbType="NVarChar(50)")]
		public string PerformUnitId
		{
			get
			{
				return this._PerformUnitId;
			}
			set
			{
				if ((this._PerformUnitId != value))
				{
					if (this._PerformUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPerformUnitIdChanging(value);
					this.SendPropertyChanging();
					this._PerformUnitId = value;
					this.SendPropertyChanged("PerformUnitId");
					this.OnPerformUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeOperator", DbType="NVarChar(50)")]
		public string ChangeOperator
		{
			get
			{
				return this._ChangeOperator;
			}
			set
			{
				if ((this._ChangeOperator != value))
				{
					this.OnChangeOperatorChanging(value);
					this.SendPropertyChanging();
					this._ChangeOperator = value;
					this.SendPropertyChanged("ChangeOperator");
					this.OnChangeOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangeTime
		{
			get
			{
				return this._ChangeTime;
			}
			set
			{
				if ((this._ChangeTime != value))
				{
					this.OnChangeTimeChanging(value);
					this.SendPropertyChanging();
					this._ChangeTime = value;
					this.SendPropertyChanged("ChangeTime");
					this.OnChangeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(500)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationOpinion", DbType="NVarChar(500)")]
		public string InstallationOpinion
		{
			get
			{
				return this._InstallationOpinion;
			}
			set
			{
				if ((this._InstallationOpinion != value))
				{
					this.OnInstallationOpinionChanging(value);
					this.SendPropertyChanging();
					this._InstallationOpinion = value;
					this.SendPropertyChanged("InstallationOpinion");
					this.OnInstallationOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationManId", DbType="NVarChar(50)")]
		public string InstallationManId
		{
			get
			{
				return this._InstallationManId;
			}
			set
			{
				if ((this._InstallationManId != value))
				{
					if (this._InstallationMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationManIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationManId = value;
					this.SendPropertyChanged("InstallationManId");
					this.OnInstallationManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> InstallationTime
		{
			get
			{
				return this._InstallationTime;
			}
			set
			{
				if ((this._InstallationTime != value))
				{
					this.OnInstallationTimeChanging(value);
					this.SendPropertyChanging();
					this._InstallationTime = value;
					this.SendPropertyChanged("InstallationTime");
					this.OnInstallationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentOpinion", DbType="NVarChar(500)")]
		public string EquipmentOpinion
		{
			get
			{
				return this._EquipmentOpinion;
			}
			set
			{
				if ((this._EquipmentOpinion != value))
				{
					this.OnEquipmentOpinionChanging(value);
					this.SendPropertyChanging();
					this._EquipmentOpinion = value;
					this.SendPropertyChanged("EquipmentOpinion");
					this.OnEquipmentOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentManId", DbType="NVarChar(50)")]
		public string EquipmentManId
		{
			get
			{
				return this._EquipmentManId;
			}
			set
			{
				if ((this._EquipmentManId != value))
				{
					if (this._EquipmentMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEquipmentManIdChanging(value);
					this.SendPropertyChanging();
					this._EquipmentManId = value;
					this.SendPropertyChanged("EquipmentManId");
					this.OnEquipmentManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EquipmentTime
		{
			get
			{
				return this._EquipmentTime;
			}
			set
			{
				if ((this._EquipmentTime != value))
				{
					this.OnEquipmentTimeChanging(value);
					this.SendPropertyChanging();
					this._EquipmentTime = value;
					this.SendPropertyChanged("EquipmentTime");
					this.OnEquipmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductionOpinion", DbType="NVarChar(500)")]
		public string ProductionOpinion
		{
			get
			{
				return this._ProductionOpinion;
			}
			set
			{
				if ((this._ProductionOpinion != value))
				{
					this.OnProductionOpinionChanging(value);
					this.SendPropertyChanging();
					this._ProductionOpinion = value;
					this.SendPropertyChanged("ProductionOpinion");
					this.OnProductionOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductionManId", DbType="NVarChar(50)")]
		public string ProductionManId
		{
			get
			{
				return this._ProductionManId;
			}
			set
			{
				if ((this._ProductionManId != value))
				{
					if (this._ProductionMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductionManIdChanging(value);
					this.SendPropertyChanging();
					this._ProductionManId = value;
					this.SendPropertyChanged("ProductionManId");
					this.OnProductionManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProductionTime
		{
			get
			{
				return this._ProductionTime;
			}
			set
			{
				if ((this._ProductionTime != value))
				{
					this.OnProductionTimeChanging(value);
					this.SendPropertyChanging();
					this._ProductionTime = value;
					this.SendPropertyChanged("ProductionTime");
					this.OnProductionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefEngineerOpinion", DbType="NVarChar(500)")]
		public string ChiefEngineerOpinion
		{
			get
			{
				return this._ChiefEngineerOpinion;
			}
			set
			{
				if ((this._ChiefEngineerOpinion != value))
				{
					this.OnChiefEngineerOpinionChanging(value);
					this.SendPropertyChanging();
					this._ChiefEngineerOpinion = value;
					this.SendPropertyChanged("ChiefEngineerOpinion");
					this.OnChiefEngineerOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefEngineerManId", DbType="NVarChar(50)")]
		public string ChiefEngineerManId
		{
			get
			{
				return this._ChiefEngineerManId;
			}
			set
			{
				if ((this._ChiefEngineerManId != value))
				{
					if (this._ChiefEngineerMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChiefEngineerManIdChanging(value);
					this.SendPropertyChanging();
					this._ChiefEngineerManId = value;
					this.SendPropertyChanged("ChiefEngineerManId");
					this.OnChiefEngineerManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefEngineerTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChiefEngineerTime
		{
			get
			{
				return this._ChiefEngineerTime;
			}
			set
			{
				if ((this._ChiefEngineerTime != value))
				{
					this.OnChiefEngineerTimeChanging(value);
					this.SendPropertyChanging();
					this._ChiefEngineerTime = value;
					this.SendPropertyChanged("ChiefEngineerTime");
					this.OnChiefEngineerTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this.OnQRCodeUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeUrl = value;
					this.SendPropertyChanged("QRCodeUrl");
					this.OnQRCodeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobInstallationId", DbType="NVarChar(50)")]
		public string JobInstallationId
		{
			get
			{
				return this._JobInstallationId;
			}
			set
			{
				if ((this._JobInstallationId != value))
				{
					if (this._JobInstallation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._JobInstallationId = value;
					this.SendPropertyChanged("JobInstallationId");
					this.OnJobInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PauseTime
		{
			get
			{
				return this._PauseTime;
			}
			set
			{
				if ((this._PauseTime != value))
				{
					this.OnPauseTimeChanging(value);
					this.SendPropertyChanging();
					this._PauseTime = value;
					this.SendPropertyChanged("PauseTime");
					this.OnPauseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseDescribe", DbType="NVarChar(4000)")]
		public string PauseDescribe
		{
			get
			{
				return this._PauseDescribe;
			}
			set
			{
				if ((this._PauseDescribe != value))
				{
					this.OnPauseDescribeChanging(value);
					this.SendPropertyChanging();
					this._PauseDescribe = value;
					this.SendPropertyChanged("PauseDescribe");
					this.OnPauseDescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliatedUnitId", DbType="NVarChar(500)")]
		public string AffiliatedUnitId
		{
			get
			{
				return this._AffiliatedUnitId;
			}
			set
			{
				if ((this._AffiliatedUnitId != value))
				{
					this.OnAffiliatedUnitIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliatedUnitId = value;
					this.SendPropertyChanged("AffiliatedUnitId");
					this.OnAffiliatedUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures", DbType="NVarChar(500)")]
		public string SafetyMeasures
		{
			get
			{
				return this._SafetyMeasures;
			}
			set
			{
				if ((this._SafetyMeasures != value))
				{
					this.OnSafetyMeasuresChanging(value);
					this.SendPropertyChanging();
					this._SafetyMeasures = value;
					this.SendPropertyChanged("SafetyMeasures");
					this.OnSafetyMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoCoordinate", DbType="NVarChar(50)")]
		public string GeoCoordinate
		{
			get
			{
				return this._GeoCoordinate;
			}
			set
			{
				if ((this._GeoCoordinate != value))
				{
					this.OnGeoCoordinateChanging(value);
					this.SendPropertyChanging();
					this._GeoCoordinate = value;
					this.SendPropertyChanged("GeoCoordinate");
					this.OnGeoCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Base_Installation_ApplyInstallation", Storage="_Base_Installation", ThisKey="ApplyInstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.License_Interlocking.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.License_Interlocking.Add(this);
						this._ApplyInstallationId = value.InstallationId;
					}
					else
					{
						this._ApplyInstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Base_Installation1", Storage="_JobInstallation", ThisKey="JobInstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation JobInstallation
		{
			get
			{
				return this._JobInstallation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._JobInstallation.Entity;
				if (((previousValue != value) 
							|| (this._JobInstallation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobInstallation.Entity = null;
						previousValue.License_Interlocking_Base_Installation1.Remove(this);
					}
					this._JobInstallation.Entity = value;
					if ((value != null))
					{
						value.License_Interlocking_Base_Installation1.Add(this);
						this._JobInstallationId = value.InstallationId;
					}
					else
					{
						this._JobInstallationId = default(string);
					}
					this.SendPropertyChanged("JobInstallation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Base_Unit_ApplyUnit", Storage="_Base_Unit", ThisKey="ApplyUnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.License_Interlocking.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.License_Interlocking.Add(this);
						this._ApplyUnitId = value.UnitId;
					}
					else
					{
						this._ApplyUnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Base_Unit_PerformUnit", Storage="_PerformUnit", ThisKey="PerformUnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit PerformUnit
		{
			get
			{
				return this._PerformUnit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._PerformUnit.Entity;
				if (((previousValue != value) 
							|| (this._PerformUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PerformUnit.Entity = null;
						previousValue.License_Interlocking_Base_Unit_PerformUnit.Remove(this);
					}
					this._PerformUnit.Entity = value;
					if ((value != null))
					{
						value.License_Interlocking_Base_Unit_PerformUnit.Add(this);
						this._PerformUnitId = value.UnitId;
					}
					else
					{
						this._PerformUnitId = default(string);
					}
					this.SendPropertyChanged("PerformUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Sys_User_ApplyMan", Storage="_Sys_User", ThisKey="ApplyManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.License_Interlocking.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.License_Interlocking.Add(this);
						this._ApplyManId = value.UserId;
					}
					else
					{
						this._ApplyManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Sys_User_ChiefEngineerMan", Storage="_ChiefEngineerMan", ThisKey="ChiefEngineerManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ChiefEngineerMan
		{
			get
			{
				return this._ChiefEngineerMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ChiefEngineerMan.Entity;
				if (((previousValue != value) 
							|| (this._ChiefEngineerMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChiefEngineerMan.Entity = null;
						previousValue.License_Interlocking_Sys_User_ChiefEngineerMan.Remove(this);
					}
					this._ChiefEngineerMan.Entity = value;
					if ((value != null))
					{
						value.License_Interlocking_Sys_User_ChiefEngineerMan.Add(this);
						this._ChiefEngineerManId = value.UserId;
					}
					else
					{
						this._ChiefEngineerManId = default(string);
					}
					this.SendPropertyChanged("ChiefEngineerMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Sys_User_EquipmentMan", Storage="_EquipmentMan", ThisKey="EquipmentManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User EquipmentMan
		{
			get
			{
				return this._EquipmentMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._EquipmentMan.Entity;
				if (((previousValue != value) 
							|| (this._EquipmentMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EquipmentMan.Entity = null;
						previousValue.License_Interlocking_Sys_User_EquipmentMan.Remove(this);
					}
					this._EquipmentMan.Entity = value;
					if ((value != null))
					{
						value.License_Interlocking_Sys_User_EquipmentMan.Add(this);
						this._EquipmentManId = value.UserId;
					}
					else
					{
						this._EquipmentManId = default(string);
					}
					this.SendPropertyChanged("EquipmentMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Sys_User_InstallationMan", Storage="_InstallationMan", ThisKey="InstallationManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User InstallationMan
		{
			get
			{
				return this._InstallationMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._InstallationMan.Entity;
				if (((previousValue != value) 
							|| (this._InstallationMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstallationMan.Entity = null;
						previousValue.License_Interlocking_Sys_User_InstallationMan.Remove(this);
					}
					this._InstallationMan.Entity = value;
					if ((value != null))
					{
						value.License_Interlocking_Sys_User_InstallationMan.Add(this);
						this._InstallationManId = value.UserId;
					}
					else
					{
						this._InstallationManId = default(string);
					}
					this.SendPropertyChanged("InstallationMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Sys_User_ProductionMan", Storage="_ProductionMan", ThisKey="ProductionManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ProductionMan
		{
			get
			{
				return this._ProductionMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ProductionMan.Entity;
				if (((previousValue != value) 
							|| (this._ProductionMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductionMan.Entity = null;
						previousValue.License_Interlocking_Sys_User_ProductionMan.Remove(this);
					}
					this._ProductionMan.Entity = value;
					if ((value != null))
					{
						value.License_Interlocking_Sys_User_ProductionMan.Add(this);
						this._ProductionManId = value.UserId;
					}
					else
					{
						this._ProductionManId = default(string);
					}
					this.SendPropertyChanged("ProductionMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Sys_User_UnitHead", Storage="_UnitHead", ThisKey="UnitHeadId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User UnitHead
		{
			get
			{
				return this._UnitHead.Entity;
			}
			set
			{
				Sys_User previousValue = this._UnitHead.Entity;
				if (((previousValue != value) 
							|| (this._UnitHead.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitHead.Entity = null;
						previousValue.License_Interlocking_Sys_User_UnitHead.Remove(this);
					}
					this._UnitHead.Entity = value;
					if ((value != null))
					{
						value.License_Interlocking_Sys_User_UnitHead.Add(this);
						this._UnitHeadId = value.UserId;
					}
					else
					{
						this._UnitHeadId = default(string);
					}
					this.SendPropertyChanged("UnitHead");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.License_LicenseItem")]
	public partial class License_LicenseItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LicenseItemId;
		
		private string _DataId;
		
		private System.Nullable<int> _SortIndex;
		
		private string _SafetyMeasures;
		
		private System.Nullable<bool> _IsUsed;
		
		private string _LicenseType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLicenseItemIdChanging(string value);
    partial void OnLicenseItemIdChanged();
    partial void OnDataIdChanging(string value);
    partial void OnDataIdChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnSafetyMeasuresChanging(string value);
    partial void OnSafetyMeasuresChanged();
    partial void OnIsUsedChanging(System.Nullable<bool> value);
    partial void OnIsUsedChanged();
    partial void OnLicenseTypeChanging(string value);
    partial void OnLicenseTypeChanged();
    #endregion
		
		public License_LicenseItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LicenseItemId
		{
			get
			{
				return this._LicenseItemId;
			}
			set
			{
				if ((this._LicenseItemId != value))
				{
					this.OnLicenseItemIdChanging(value);
					this.SendPropertyChanging();
					this._LicenseItemId = value;
					this.SendPropertyChanged("LicenseItemId");
					this.OnLicenseItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataId", DbType="NVarChar(50)")]
		public string DataId
		{
			get
			{
				return this._DataId;
			}
			set
			{
				if ((this._DataId != value))
				{
					this.OnDataIdChanging(value);
					this.SendPropertyChanging();
					this._DataId = value;
					this.SendPropertyChanged("DataId");
					this.OnDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures", DbType="NVarChar(2000)")]
		public string SafetyMeasures
		{
			get
			{
				return this._SafetyMeasures;
			}
			set
			{
				if ((this._SafetyMeasures != value))
				{
					this.OnSafetyMeasuresChanging(value);
					this.SendPropertyChanging();
					this._SafetyMeasures = value;
					this.SendPropertyChanged("SafetyMeasures");
					this.OnSafetyMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseType", DbType="NVarChar(50)")]
		public string LicenseType
		{
			get
			{
				return this._LicenseType;
			}
			set
			{
				if ((this._LicenseType != value))
				{
					this.OnLicenseTypeChanging(value);
					this.SendPropertyChanging();
					this._LicenseType = value;
					this.SendPropertyChanged("LicenseType");
					this.OnLicenseTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.License_LiftingWork")]
	public partial class License_LiftingWork : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LiftingWorkId;
		
		private string _LicenseCode;
		
		private string _InstallationId;
		
		private string _ApplyManId;
		
		private string _JobPalce;
		
		private string _LiftingTools;
		
		private string _WorkerCertificate;
		
		private string _CommandCertificate;
		
		private string _Guardian;
		
		private System.Nullable<decimal> _LiftingQuality;
		
		private string _LiftingLevel;
		
		private System.Nullable<System.DateTime> _JobStartTime;
		
		private System.Nullable<System.DateTime> _JobEndTime;
		
		private string _LiftingContent;
		
		private string _HAZID;
		
		private string _MeasuresManId;
		
		private System.Nullable<System.DateTime> _MeasuresManTime;
		
		private string _OtherMeasures1;
		
		private string _CompileManId;
		
		private System.Nullable<System.DateTime> _CompileManTime;
		
		private string _SafeEduManId;
		
		private System.Nullable<System.DateTime> _SafeEduManTime;
		
		private string _ProduceDepManId;
		
		private System.Nullable<System.DateTime> _ProduceDepManTime;
		
		private string _ProduceUnitManId;
		
		private System.Nullable<System.DateTime> _ProduceUnitManTime;
		
		private string _JobDepManId;
		
		private System.Nullable<System.DateTime> _JobDepTime;
		
		private string _JobUnitManId;
		
		private System.Nullable<System.DateTime> _JobUnitTime;
		
		private string _ApprovalDepOpinion;
		
		private string _ApprovalDepManId;
		
		private System.Nullable<System.DateTime> _ApprovalDepTime;
		
		private string _QRCodeUrl;
		
		private string _AttachUrl;
		
		private string _States;
		
		private string _JobInstallationId;
		
		private string _JobUnitId;
		
		private string _ApplyUnitId;
		
		private System.Nullable<System.DateTime> _PauseTime;
		
		private string _PauseDescribe;
		
		private string _HAZIDName;
		
		private string _GeoCoordinate;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Installation> _JobInstallation;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _ApprovalDepMan;
		
		private EntityRef<Sys_User> _CompileMan;
		
		private EntityRef<Sys_User> _JobDepMan;
		
		private EntityRef<Sys_User> _JobUnitMan;
		
		private EntityRef<Sys_User> _MeasuresMan;
		
		private EntityRef<Sys_User> _ProduceDepMan;
		
		private EntityRef<Sys_User> _ProduceUnitMan;
		
		private EntityRef<Sys_User> _SafeEduMan;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLiftingWorkIdChanging(string value);
    partial void OnLiftingWorkIdChanged();
    partial void OnLicenseCodeChanging(string value);
    partial void OnLicenseCodeChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnApplyManIdChanging(string value);
    partial void OnApplyManIdChanged();
    partial void OnJobPalceChanging(string value);
    partial void OnJobPalceChanged();
    partial void OnLiftingToolsChanging(string value);
    partial void OnLiftingToolsChanged();
    partial void OnWorkerCertificateChanging(string value);
    partial void OnWorkerCertificateChanged();
    partial void OnCommandCertificateChanging(string value);
    partial void OnCommandCertificateChanged();
    partial void OnGuardianChanging(string value);
    partial void OnGuardianChanged();
    partial void OnLiftingQualityChanging(System.Nullable<decimal> value);
    partial void OnLiftingQualityChanged();
    partial void OnLiftingLevelChanging(string value);
    partial void OnLiftingLevelChanged();
    partial void OnJobStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobStartTimeChanged();
    partial void OnJobEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobEndTimeChanged();
    partial void OnLiftingContentChanging(string value);
    partial void OnLiftingContentChanged();
    partial void OnHAZIDChanging(string value);
    partial void OnHAZIDChanged();
    partial void OnMeasuresManIdChanging(string value);
    partial void OnMeasuresManIdChanged();
    partial void OnMeasuresManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnMeasuresManTimeChanged();
    partial void OnOtherMeasures1Changing(string value);
    partial void OnOtherMeasures1Changed();
    partial void OnCompileManIdChanging(string value);
    partial void OnCompileManIdChanged();
    partial void OnCompileManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileManTimeChanged();
    partial void OnSafeEduManIdChanging(string value);
    partial void OnSafeEduManIdChanged();
    partial void OnSafeEduManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSafeEduManTimeChanged();
    partial void OnProduceDepManIdChanging(string value);
    partial void OnProduceDepManIdChanged();
    partial void OnProduceDepManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProduceDepManTimeChanged();
    partial void OnProduceUnitManIdChanging(string value);
    partial void OnProduceUnitManIdChanged();
    partial void OnProduceUnitManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProduceUnitManTimeChanged();
    partial void OnJobDepManIdChanging(string value);
    partial void OnJobDepManIdChanged();
    partial void OnJobDepTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobDepTimeChanged();
    partial void OnJobUnitManIdChanging(string value);
    partial void OnJobUnitManIdChanged();
    partial void OnJobUnitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobUnitTimeChanged();
    partial void OnApprovalDepOpinionChanging(string value);
    partial void OnApprovalDepOpinionChanged();
    partial void OnApprovalDepManIdChanging(string value);
    partial void OnApprovalDepManIdChanged();
    partial void OnApprovalDepTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovalDepTimeChanged();
    partial void OnQRCodeUrlChanging(string value);
    partial void OnQRCodeUrlChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnJobInstallationIdChanging(string value);
    partial void OnJobInstallationIdChanged();
    partial void OnJobUnitIdChanging(string value);
    partial void OnJobUnitIdChanged();
    partial void OnApplyUnitIdChanging(string value);
    partial void OnApplyUnitIdChanged();
    partial void OnPauseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPauseTimeChanged();
    partial void OnPauseDescribeChanging(string value);
    partial void OnPauseDescribeChanged();
    partial void OnHAZIDNameChanging(string value);
    partial void OnHAZIDNameChanged();
    partial void OnGeoCoordinateChanging(string value);
    partial void OnGeoCoordinateChanged();
    #endregion
		
		public License_LiftingWork()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._JobInstallation = default(EntityRef<Base_Installation>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._ApprovalDepMan = default(EntityRef<Sys_User>);
			this._CompileMan = default(EntityRef<Sys_User>);
			this._JobDepMan = default(EntityRef<Sys_User>);
			this._JobUnitMan = default(EntityRef<Sys_User>);
			this._MeasuresMan = default(EntityRef<Sys_User>);
			this._ProduceDepMan = default(EntityRef<Sys_User>);
			this._ProduceUnitMan = default(EntityRef<Sys_User>);
			this._SafeEduMan = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftingWorkId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LiftingWorkId
		{
			get
			{
				return this._LiftingWorkId;
			}
			set
			{
				if ((this._LiftingWorkId != value))
				{
					this.OnLiftingWorkIdChanging(value);
					this.SendPropertyChanging();
					this._LiftingWorkId = value;
					this.SendPropertyChanged("LiftingWorkId");
					this.OnLiftingWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(50)")]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this.OnLicenseCodeChanging(value);
					this.SendPropertyChanging();
					this._LicenseCode = value;
					this.SendPropertyChanged("LicenseCode");
					this.OnLicenseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyManId", DbType="NVarChar(50)")]
		public string ApplyManId
		{
			get
			{
				return this._ApplyManId;
			}
			set
			{
				if ((this._ApplyManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyManIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyManId = value;
					this.SendPropertyChanged("ApplyManId");
					this.OnApplyManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPalce", DbType="NVarChar(200)")]
		public string JobPalce
		{
			get
			{
				return this._JobPalce;
			}
			set
			{
				if ((this._JobPalce != value))
				{
					this.OnJobPalceChanging(value);
					this.SendPropertyChanging();
					this._JobPalce = value;
					this.SendPropertyChanged("JobPalce");
					this.OnJobPalceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftingTools", DbType="NVarChar(100)")]
		public string LiftingTools
		{
			get
			{
				return this._LiftingTools;
			}
			set
			{
				if ((this._LiftingTools != value))
				{
					this.OnLiftingToolsChanging(value);
					this.SendPropertyChanging();
					this._LiftingTools = value;
					this.SendPropertyChanged("LiftingTools");
					this.OnLiftingToolsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkerCertificate", DbType="NVarChar(50)")]
		public string WorkerCertificate
		{
			get
			{
				return this._WorkerCertificate;
			}
			set
			{
				if ((this._WorkerCertificate != value))
				{
					this.OnWorkerCertificateChanging(value);
					this.SendPropertyChanging();
					this._WorkerCertificate = value;
					this.SendPropertyChanged("WorkerCertificate");
					this.OnWorkerCertificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandCertificate", DbType="NVarChar(50)")]
		public string CommandCertificate
		{
			get
			{
				return this._CommandCertificate;
			}
			set
			{
				if ((this._CommandCertificate != value))
				{
					this.OnCommandCertificateChanging(value);
					this.SendPropertyChanging();
					this._CommandCertificate = value;
					this.SendPropertyChanged("CommandCertificate");
					this.OnCommandCertificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guardian", DbType="NVarChar(50)")]
		public string Guardian
		{
			get
			{
				return this._Guardian;
			}
			set
			{
				if ((this._Guardian != value))
				{
					this.OnGuardianChanging(value);
					this.SendPropertyChanging();
					this._Guardian = value;
					this.SendPropertyChanged("Guardian");
					this.OnGuardianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftingQuality", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LiftingQuality
		{
			get
			{
				return this._LiftingQuality;
			}
			set
			{
				if ((this._LiftingQuality != value))
				{
					this.OnLiftingQualityChanging(value);
					this.SendPropertyChanging();
					this._LiftingQuality = value;
					this.SendPropertyChanged("LiftingQuality");
					this.OnLiftingQualityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftingLevel", DbType="NVarChar(50)")]
		public string LiftingLevel
		{
			get
			{
				return this._LiftingLevel;
			}
			set
			{
				if ((this._LiftingLevel != value))
				{
					this.OnLiftingLevelChanging(value);
					this.SendPropertyChanging();
					this._LiftingLevel = value;
					this.SendPropertyChanged("LiftingLevel");
					this.OnLiftingLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobStartTime
		{
			get
			{
				return this._JobStartTime;
			}
			set
			{
				if ((this._JobStartTime != value))
				{
					this.OnJobStartTimeChanging(value);
					this.SendPropertyChanging();
					this._JobStartTime = value;
					this.SendPropertyChanged("JobStartTime");
					this.OnJobStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobEndTime
		{
			get
			{
				return this._JobEndTime;
			}
			set
			{
				if ((this._JobEndTime != value))
				{
					this.OnJobEndTimeChanging(value);
					this.SendPropertyChanging();
					this._JobEndTime = value;
					this.SendPropertyChanged("JobEndTime");
					this.OnJobEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftingContent", DbType="NVarChar(500)")]
		public string LiftingContent
		{
			get
			{
				return this._LiftingContent;
			}
			set
			{
				if ((this._LiftingContent != value))
				{
					this.OnLiftingContentChanging(value);
					this.SendPropertyChanging();
					this._LiftingContent = value;
					this.SendPropertyChanged("LiftingContent");
					this.OnLiftingContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZID", DbType="NVarChar(4000)")]
		public string HAZID
		{
			get
			{
				return this._HAZID;
			}
			set
			{
				if ((this._HAZID != value))
				{
					this.OnHAZIDChanging(value);
					this.SendPropertyChanging();
					this._HAZID = value;
					this.SendPropertyChanged("HAZID");
					this.OnHAZIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasuresManId", DbType="NVarChar(50)")]
		public string MeasuresManId
		{
			get
			{
				return this._MeasuresManId;
			}
			set
			{
				if ((this._MeasuresManId != value))
				{
					if (this._MeasuresMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeasuresManIdChanging(value);
					this.SendPropertyChanging();
					this._MeasuresManId = value;
					this.SendPropertyChanged("MeasuresManId");
					this.OnMeasuresManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasuresManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> MeasuresManTime
		{
			get
			{
				return this._MeasuresManTime;
			}
			set
			{
				if ((this._MeasuresManTime != value))
				{
					this.OnMeasuresManTimeChanging(value);
					this.SendPropertyChanging();
					this._MeasuresManTime = value;
					this.SendPropertyChanged("MeasuresManTime");
					this.OnMeasuresManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures1", DbType="NVarChar(500)")]
		public string OtherMeasures1
		{
			get
			{
				return this._OtherMeasures1;
			}
			set
			{
				if ((this._OtherMeasures1 != value))
				{
					this.OnOtherMeasures1Changing(value);
					this.SendPropertyChanging();
					this._OtherMeasures1 = value;
					this.SendPropertyChanged("OtherMeasures1");
					this.OnOtherMeasures1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManId", DbType="NVarChar(50)")]
		public string CompileManId
		{
			get
			{
				return this._CompileManId;
			}
			set
			{
				if ((this._CompileManId != value))
				{
					if (this._CompileMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManIdChanging(value);
					this.SendPropertyChanging();
					this._CompileManId = value;
					this.SendPropertyChanged("CompileManId");
					this.OnCompileManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileManTime
		{
			get
			{
				return this._CompileManTime;
			}
			set
			{
				if ((this._CompileManTime != value))
				{
					this.OnCompileManTimeChanging(value);
					this.SendPropertyChanging();
					this._CompileManTime = value;
					this.SendPropertyChanged("CompileManTime");
					this.OnCompileManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduManId", DbType="NVarChar(50)")]
		public string SafeEduManId
		{
			get
			{
				return this._SafeEduManId;
			}
			set
			{
				if ((this._SafeEduManId != value))
				{
					if (this._SafeEduMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSafeEduManIdChanging(value);
					this.SendPropertyChanging();
					this._SafeEduManId = value;
					this.SendPropertyChanged("SafeEduManId");
					this.OnSafeEduManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SafeEduManTime
		{
			get
			{
				return this._SafeEduManTime;
			}
			set
			{
				if ((this._SafeEduManTime != value))
				{
					this.OnSafeEduManTimeChanging(value);
					this.SendPropertyChanging();
					this._SafeEduManTime = value;
					this.SendPropertyChanged("SafeEduManTime");
					this.OnSafeEduManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProduceDepManId", DbType="NVarChar(50)")]
		public string ProduceDepManId
		{
			get
			{
				return this._ProduceDepManId;
			}
			set
			{
				if ((this._ProduceDepManId != value))
				{
					if (this._ProduceDepMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduceDepManIdChanging(value);
					this.SendPropertyChanging();
					this._ProduceDepManId = value;
					this.SendPropertyChanged("ProduceDepManId");
					this.OnProduceDepManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProduceDepManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProduceDepManTime
		{
			get
			{
				return this._ProduceDepManTime;
			}
			set
			{
				if ((this._ProduceDepManTime != value))
				{
					this.OnProduceDepManTimeChanging(value);
					this.SendPropertyChanging();
					this._ProduceDepManTime = value;
					this.SendPropertyChanged("ProduceDepManTime");
					this.OnProduceDepManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProduceUnitManId", DbType="NVarChar(50)")]
		public string ProduceUnitManId
		{
			get
			{
				return this._ProduceUnitManId;
			}
			set
			{
				if ((this._ProduceUnitManId != value))
				{
					if (this._ProduceUnitMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduceUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._ProduceUnitManId = value;
					this.SendPropertyChanged("ProduceUnitManId");
					this.OnProduceUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProduceUnitManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProduceUnitManTime
		{
			get
			{
				return this._ProduceUnitManTime;
			}
			set
			{
				if ((this._ProduceUnitManTime != value))
				{
					this.OnProduceUnitManTimeChanging(value);
					this.SendPropertyChanging();
					this._ProduceUnitManTime = value;
					this.SendPropertyChanged("ProduceUnitManTime");
					this.OnProduceUnitManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDepManId", DbType="NVarChar(50)")]
		public string JobDepManId
		{
			get
			{
				return this._JobDepManId;
			}
			set
			{
				if ((this._JobDepManId != value))
				{
					if (this._JobDepMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobDepManIdChanging(value);
					this.SendPropertyChanging();
					this._JobDepManId = value;
					this.SendPropertyChanged("JobDepManId");
					this.OnJobDepManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDepTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobDepTime
		{
			get
			{
				return this._JobDepTime;
			}
			set
			{
				if ((this._JobDepTime != value))
				{
					this.OnJobDepTimeChanging(value);
					this.SendPropertyChanging();
					this._JobDepTime = value;
					this.SendPropertyChanged("JobDepTime");
					this.OnJobDepTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnitManId", DbType="NVarChar(50)")]
		public string JobUnitManId
		{
			get
			{
				return this._JobUnitManId;
			}
			set
			{
				if ((this._JobUnitManId != value))
				{
					if (this._JobUnitMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._JobUnitManId = value;
					this.SendPropertyChanged("JobUnitManId");
					this.OnJobUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobUnitTime
		{
			get
			{
				return this._JobUnitTime;
			}
			set
			{
				if ((this._JobUnitTime != value))
				{
					this.OnJobUnitTimeChanging(value);
					this.SendPropertyChanging();
					this._JobUnitTime = value;
					this.SendPropertyChanged("JobUnitTime");
					this.OnJobUnitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDepOpinion", DbType="NVarChar(500)")]
		public string ApprovalDepOpinion
		{
			get
			{
				return this._ApprovalDepOpinion;
			}
			set
			{
				if ((this._ApprovalDepOpinion != value))
				{
					this.OnApprovalDepOpinionChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDepOpinion = value;
					this.SendPropertyChanged("ApprovalDepOpinion");
					this.OnApprovalDepOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDepManId", DbType="NVarChar(50)")]
		public string ApprovalDepManId
		{
			get
			{
				return this._ApprovalDepManId;
			}
			set
			{
				if ((this._ApprovalDepManId != value))
				{
					if (this._ApprovalDepMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovalDepManIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDepManId = value;
					this.SendPropertyChanged("ApprovalDepManId");
					this.OnApprovalDepManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDepTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovalDepTime
		{
			get
			{
				return this._ApprovalDepTime;
			}
			set
			{
				if ((this._ApprovalDepTime != value))
				{
					this.OnApprovalDepTimeChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDepTime = value;
					this.SendPropertyChanged("ApprovalDepTime");
					this.OnApprovalDepTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this.OnQRCodeUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeUrl = value;
					this.SendPropertyChanged("QRCodeUrl");
					this.OnQRCodeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobInstallationId", DbType="NVarChar(50)")]
		public string JobInstallationId
		{
			get
			{
				return this._JobInstallationId;
			}
			set
			{
				if ((this._JobInstallationId != value))
				{
					if (this._JobInstallation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._JobInstallationId = value;
					this.SendPropertyChanged("JobInstallationId");
					this.OnJobInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnitId", DbType="NVarChar(50)")]
		public string JobUnitId
		{
			get
			{
				return this._JobUnitId;
			}
			set
			{
				if ((this._JobUnitId != value))
				{
					this.OnJobUnitIdChanging(value);
					this.SendPropertyChanging();
					this._JobUnitId = value;
					this.SendPropertyChanged("JobUnitId");
					this.OnJobUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitId", DbType="NVarChar(50)")]
		public string ApplyUnitId
		{
			get
			{
				return this._ApplyUnitId;
			}
			set
			{
				if ((this._ApplyUnitId != value))
				{
					this.OnApplyUnitIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitId = value;
					this.SendPropertyChanged("ApplyUnitId");
					this.OnApplyUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PauseTime
		{
			get
			{
				return this._PauseTime;
			}
			set
			{
				if ((this._PauseTime != value))
				{
					this.OnPauseTimeChanging(value);
					this.SendPropertyChanging();
					this._PauseTime = value;
					this.SendPropertyChanged("PauseTime");
					this.OnPauseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseDescribe", DbType="NVarChar(4000)")]
		public string PauseDescribe
		{
			get
			{
				return this._PauseDescribe;
			}
			set
			{
				if ((this._PauseDescribe != value))
				{
					this.OnPauseDescribeChanging(value);
					this.SendPropertyChanging();
					this._PauseDescribe = value;
					this.SendPropertyChanged("PauseDescribe");
					this.OnPauseDescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZIDName", DbType="NVarChar(4000)")]
		public string HAZIDName
		{
			get
			{
				return this._HAZIDName;
			}
			set
			{
				if ((this._HAZIDName != value))
				{
					this.OnHAZIDNameChanging(value);
					this.SendPropertyChanging();
					this._HAZIDName = value;
					this.SendPropertyChanged("HAZIDName");
					this.OnHAZIDNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoCoordinate", DbType="NVarChar(50)")]
		public string GeoCoordinate
		{
			get
			{
				return this._GeoCoordinate;
			}
			set
			{
				if ((this._GeoCoordinate != value))
				{
					this.OnGeoCoordinateChanging(value);
					this.SendPropertyChanging();
					this._GeoCoordinate = value;
					this.SendPropertyChanged("GeoCoordinate");
					this.OnGeoCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.License_LiftingWork.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.License_LiftingWork.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Base_Installation1", Storage="_JobInstallation", ThisKey="JobInstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation JobInstallation
		{
			get
			{
				return this._JobInstallation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._JobInstallation.Entity;
				if (((previousValue != value) 
							|| (this._JobInstallation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobInstallation.Entity = null;
						previousValue.License_LiftingWork_Base_Installation1.Remove(this);
					}
					this._JobInstallation.Entity = value;
					if ((value != null))
					{
						value.License_LiftingWork_Base_Installation1.Add(this);
						this._JobInstallationId = value.InstallationId;
					}
					else
					{
						this._JobInstallationId = default(string);
					}
					this.SendPropertyChanged("JobInstallation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_ApplyManId", Storage="_Sys_User", ThisKey="ApplyManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.License_LiftingWork.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.License_LiftingWork.Add(this);
						this._ApplyManId = value.UserId;
					}
					else
					{
						this._ApplyManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_ApprovalDepManId", Storage="_ApprovalDepMan", ThisKey="ApprovalDepManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ApprovalDepMan
		{
			get
			{
				return this._ApprovalDepMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ApprovalDepMan.Entity;
				if (((previousValue != value) 
							|| (this._ApprovalDepMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApprovalDepMan.Entity = null;
						previousValue.License_LiftingWork_Sys_User_ApprovalDepManId.Remove(this);
					}
					this._ApprovalDepMan.Entity = value;
					if ((value != null))
					{
						value.License_LiftingWork_Sys_User_ApprovalDepManId.Add(this);
						this._ApprovalDepManId = value.UserId;
					}
					else
					{
						this._ApprovalDepManId = default(string);
					}
					this.SendPropertyChanged("ApprovalDepMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_CompileManId", Storage="_CompileMan", ThisKey="CompileManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User CompileMan
		{
			get
			{
				return this._CompileMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._CompileMan.Entity;
				if (((previousValue != value) 
							|| (this._CompileMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompileMan.Entity = null;
						previousValue.License_LiftingWork_Sys_User_CompileManId.Remove(this);
					}
					this._CompileMan.Entity = value;
					if ((value != null))
					{
						value.License_LiftingWork_Sys_User_CompileManId.Add(this);
						this._CompileManId = value.UserId;
					}
					else
					{
						this._CompileManId = default(string);
					}
					this.SendPropertyChanged("CompileMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_JobDepManId", Storage="_JobDepMan", ThisKey="JobDepManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User JobDepMan
		{
			get
			{
				return this._JobDepMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._JobDepMan.Entity;
				if (((previousValue != value) 
							|| (this._JobDepMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobDepMan.Entity = null;
						previousValue.License_LiftingWork_Sys_User_JobDepManId.Remove(this);
					}
					this._JobDepMan.Entity = value;
					if ((value != null))
					{
						value.License_LiftingWork_Sys_User_JobDepManId.Add(this);
						this._JobDepManId = value.UserId;
					}
					else
					{
						this._JobDepManId = default(string);
					}
					this.SendPropertyChanged("JobDepMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_JobUnitManId", Storage="_JobUnitMan", ThisKey="JobUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User JobUnitMan
		{
			get
			{
				return this._JobUnitMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._JobUnitMan.Entity;
				if (((previousValue != value) 
							|| (this._JobUnitMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobUnitMan.Entity = null;
						previousValue.License_LiftingWork_Sys_User_JobUnitManId.Remove(this);
					}
					this._JobUnitMan.Entity = value;
					if ((value != null))
					{
						value.License_LiftingWork_Sys_User_JobUnitManId.Add(this);
						this._JobUnitManId = value.UserId;
					}
					else
					{
						this._JobUnitManId = default(string);
					}
					this.SendPropertyChanged("JobUnitMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_MeasuresManId", Storage="_MeasuresMan", ThisKey="MeasuresManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User MeasuresMan
		{
			get
			{
				return this._MeasuresMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._MeasuresMan.Entity;
				if (((previousValue != value) 
							|| (this._MeasuresMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeasuresMan.Entity = null;
						previousValue.License_LiftingWork_Sys_User_MeasuresManId.Remove(this);
					}
					this._MeasuresMan.Entity = value;
					if ((value != null))
					{
						value.License_LiftingWork_Sys_User_MeasuresManId.Add(this);
						this._MeasuresManId = value.UserId;
					}
					else
					{
						this._MeasuresManId = default(string);
					}
					this.SendPropertyChanged("MeasuresMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_ProduceDepManId", Storage="_ProduceDepMan", ThisKey="ProduceDepManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ProduceDepMan
		{
			get
			{
				return this._ProduceDepMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ProduceDepMan.Entity;
				if (((previousValue != value) 
							|| (this._ProduceDepMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProduceDepMan.Entity = null;
						previousValue.License_LiftingWork_Sys_User_ProduceDepManId.Remove(this);
					}
					this._ProduceDepMan.Entity = value;
					if ((value != null))
					{
						value.License_LiftingWork_Sys_User_ProduceDepManId.Add(this);
						this._ProduceDepManId = value.UserId;
					}
					else
					{
						this._ProduceDepManId = default(string);
					}
					this.SendPropertyChanged("ProduceDepMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_ProduceUnitManId", Storage="_ProduceUnitMan", ThisKey="ProduceUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ProduceUnitMan
		{
			get
			{
				return this._ProduceUnitMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ProduceUnitMan.Entity;
				if (((previousValue != value) 
							|| (this._ProduceUnitMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProduceUnitMan.Entity = null;
						previousValue.License_LiftingWork_Sys_User_ProduceUnitManId.Remove(this);
					}
					this._ProduceUnitMan.Entity = value;
					if ((value != null))
					{
						value.License_LiftingWork_Sys_User_ProduceUnitManId.Add(this);
						this._ProduceUnitManId = value.UserId;
					}
					else
					{
						this._ProduceUnitManId = default(string);
					}
					this.SendPropertyChanged("ProduceUnitMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_SafeEduManId", Storage="_SafeEduMan", ThisKey="SafeEduManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User SafeEduMan
		{
			get
			{
				return this._SafeEduMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._SafeEduMan.Entity;
				if (((previousValue != value) 
							|| (this._SafeEduMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SafeEduMan.Entity = null;
						previousValue.License_LiftingWork_Sys_User_SafeEduManId.Remove(this);
					}
					this._SafeEduMan.Entity = value;
					if ((value != null))
					{
						value.License_LiftingWork_Sys_User_SafeEduManId.Add(this);
						this._SafeEduManId = value.UserId;
					}
					else
					{
						this._SafeEduManId = default(string);
					}
					this.SendPropertyChanged("SafeEduMan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.License_LimitedSpace")]
	public partial class License_LimitedSpace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LimitedSpaceId;
		
		private string _LicenseCode;
		
		private string _InstallationId;
		
		private string _UnitId;
		
		private string _ApplyUnit;
		
		private string _ApplyManId;
		
		private string _LimitedSpaceUnitId;
		
		private string _LimitedSpaceName;
		
		private string _JobContent;
		
		private string _Medium;
		
		private System.Nullable<System.DateTime> _JobStartTime;
		
		private System.Nullable<System.DateTime> _JobEndTime;
		
		private string _Guardian;
		
		private string _JobManagerId;
		
		private System.Nullable<System.DateTime> _JobManagerTime;
		
		private string _JobMans;
		
		private string _OtherSpecial;
		
		private string _HAZID;
		
		private string _PoisonMedium;
		
		private string _CombustibleGas;
		
		private string _OxygenContent;
		
		private string _AnalysisManId;
		
		private System.Nullable<System.DateTime> _AnalysisTime;
		
		private string _MeasuresManId;
		
		private System.Nullable<System.DateTime> _MeasuresManTime;
		
		private string _OtherMeasures;
		
		private string _CompileManId;
		
		private System.Nullable<System.DateTime> _CompileManTime;
		
		private string _SafeEduManId;
		
		private System.Nullable<System.DateTime> _SafeEduManTime;
		
		private string _ApplyUnitOpinion;
		
		private string _ApplyUnitManId;
		
		private System.Nullable<System.DateTime> _ApplyUnitTime;
		
		private string _ApproveUnitOpinion;
		
		private string _ApproveUnitManId;
		
		private System.Nullable<System.DateTime> _ApproveUnitTime;
		
		private string _AcceptanceJobManId;
		
		private System.Nullable<System.DateTime> _AcceptanceJobTime;
		
		private string _AcceptanceOperationManId;
		
		private System.Nullable<System.DateTime> _AcceptanceOperationTime;
		
		private string _QRCodeUrl;
		
		private string _AttachUrl;
		
		private string _States;
		
		private string _JobInstallationId;
		
		private System.Nullable<System.DateTime> _PauseTime;
		
		private string _PauseDescribe;
		
		private string _JobUnitId;
		
		private string _HAZIDName;
		
		private string _GeoCoordinate;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Installation> _JobInstallation;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_Unit> _JobUnit;
		
		private EntityRef<Base_Unit> _LimitedSpaceUnit;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _AcceptanceOperationMan;
		
		private EntityRef<Sys_User> _ApplyUnitMan;
		
		private EntityRef<Sys_User> _ApproveUnitMan;
		
		private EntityRef<Sys_User> _CompileMan;
		
		private EntityRef<Sys_User> _JobManager;
		
		private EntityRef<Sys_User> _MeasuresMan;
		
		private EntityRef<Sys_User> _SafeEduMan;
		
		private EntityRef<Sys_User> _AnalysisMan;
		
		private EntityRef<Sys_User> _AcceptanceJobMan;
		
		private EntityRef<Sys_User> _License_LimitedSpace_Sys_User3;
		
		private EntitySet<License_LimitedSpaceAnalysis> _License_LimitedSpaceAnalysis;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLimitedSpaceIdChanging(string value);
    partial void OnLimitedSpaceIdChanged();
    partial void OnLicenseCodeChanging(string value);
    partial void OnLicenseCodeChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnApplyUnitChanging(string value);
    partial void OnApplyUnitChanged();
    partial void OnApplyManIdChanging(string value);
    partial void OnApplyManIdChanged();
    partial void OnLimitedSpaceUnitIdChanging(string value);
    partial void OnLimitedSpaceUnitIdChanged();
    partial void OnLimitedSpaceNameChanging(string value);
    partial void OnLimitedSpaceNameChanged();
    partial void OnJobContentChanging(string value);
    partial void OnJobContentChanged();
    partial void OnMediumChanging(string value);
    partial void OnMediumChanged();
    partial void OnJobStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobStartTimeChanged();
    partial void OnJobEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobEndTimeChanged();
    partial void OnGuardianChanging(string value);
    partial void OnGuardianChanged();
    partial void OnJobManagerIdChanging(string value);
    partial void OnJobManagerIdChanged();
    partial void OnJobManagerTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobManagerTimeChanged();
    partial void OnJobMansChanging(string value);
    partial void OnJobMansChanged();
    partial void OnOtherSpecialChanging(string value);
    partial void OnOtherSpecialChanged();
    partial void OnHAZIDChanging(string value);
    partial void OnHAZIDChanged();
    partial void OnPoisonMediumChanging(string value);
    partial void OnPoisonMediumChanged();
    partial void OnCombustibleGasChanging(string value);
    partial void OnCombustibleGasChanged();
    partial void OnOxygenContentChanging(string value);
    partial void OnOxygenContentChanged();
    partial void OnAnalysisManIdChanging(string value);
    partial void OnAnalysisManIdChanged();
    partial void OnAnalysisTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAnalysisTimeChanged();
    partial void OnMeasuresManIdChanging(string value);
    partial void OnMeasuresManIdChanged();
    partial void OnMeasuresManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnMeasuresManTimeChanged();
    partial void OnOtherMeasuresChanging(string value);
    partial void OnOtherMeasuresChanged();
    partial void OnCompileManIdChanging(string value);
    partial void OnCompileManIdChanged();
    partial void OnCompileManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileManTimeChanged();
    partial void OnSafeEduManIdChanging(string value);
    partial void OnSafeEduManIdChanged();
    partial void OnSafeEduManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSafeEduManTimeChanged();
    partial void OnApplyUnitOpinionChanging(string value);
    partial void OnApplyUnitOpinionChanged();
    partial void OnApplyUnitManIdChanging(string value);
    partial void OnApplyUnitManIdChanged();
    partial void OnApplyUnitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnApplyUnitTimeChanged();
    partial void OnApproveUnitOpinionChanging(string value);
    partial void OnApproveUnitOpinionChanged();
    partial void OnApproveUnitManIdChanging(string value);
    partial void OnApproveUnitManIdChanged();
    partial void OnApproveUnitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnApproveUnitTimeChanged();
    partial void OnAcceptanceJobManIdChanging(string value);
    partial void OnAcceptanceJobManIdChanged();
    partial void OnAcceptanceJobTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptanceJobTimeChanged();
    partial void OnAcceptanceOperationManIdChanging(string value);
    partial void OnAcceptanceOperationManIdChanged();
    partial void OnAcceptanceOperationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptanceOperationTimeChanged();
    partial void OnQRCodeUrlChanging(string value);
    partial void OnQRCodeUrlChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnJobInstallationIdChanging(string value);
    partial void OnJobInstallationIdChanged();
    partial void OnPauseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPauseTimeChanged();
    partial void OnPauseDescribeChanging(string value);
    partial void OnPauseDescribeChanged();
    partial void OnJobUnitIdChanging(string value);
    partial void OnJobUnitIdChanged();
    partial void OnHAZIDNameChanging(string value);
    partial void OnHAZIDNameChanged();
    partial void OnGeoCoordinateChanging(string value);
    partial void OnGeoCoordinateChanged();
    #endregion
		
		public License_LimitedSpace()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._JobInstallation = default(EntityRef<Base_Installation>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._JobUnit = default(EntityRef<Base_Unit>);
			this._LimitedSpaceUnit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._AcceptanceOperationMan = default(EntityRef<Sys_User>);
			this._ApplyUnitMan = default(EntityRef<Sys_User>);
			this._ApproveUnitMan = default(EntityRef<Sys_User>);
			this._CompileMan = default(EntityRef<Sys_User>);
			this._JobManager = default(EntityRef<Sys_User>);
			this._MeasuresMan = default(EntityRef<Sys_User>);
			this._SafeEduMan = default(EntityRef<Sys_User>);
			this._AnalysisMan = default(EntityRef<Sys_User>);
			this._AcceptanceJobMan = default(EntityRef<Sys_User>);
			this._License_LimitedSpace_Sys_User3 = default(EntityRef<Sys_User>);
			this._License_LimitedSpaceAnalysis = new EntitySet<License_LimitedSpaceAnalysis>(new Action<License_LimitedSpaceAnalysis>(this.attach_License_LimitedSpaceAnalysis), new Action<License_LimitedSpaceAnalysis>(this.detach_License_LimitedSpaceAnalysis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitedSpaceId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LimitedSpaceId
		{
			get
			{
				return this._LimitedSpaceId;
			}
			set
			{
				if ((this._LimitedSpaceId != value))
				{
					this.OnLimitedSpaceIdChanging(value);
					this.SendPropertyChanging();
					this._LimitedSpaceId = value;
					this.SendPropertyChanged("LimitedSpaceId");
					this.OnLimitedSpaceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(50)")]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this.OnLicenseCodeChanging(value);
					this.SendPropertyChanging();
					this._LicenseCode = value;
					this.SendPropertyChanged("LicenseCode");
					this.OnLicenseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnit", DbType="NVarChar(500)")]
		public string ApplyUnit
		{
			get
			{
				return this._ApplyUnit;
			}
			set
			{
				if ((this._ApplyUnit != value))
				{
					this.OnApplyUnitChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnit = value;
					this.SendPropertyChanged("ApplyUnit");
					this.OnApplyUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyManId", DbType="NVarChar(50)")]
		public string ApplyManId
		{
			get
			{
				return this._ApplyManId;
			}
			set
			{
				if ((this._ApplyManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyManIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyManId = value;
					this.SendPropertyChanged("ApplyManId");
					this.OnApplyManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitedSpaceUnitId", DbType="NVarChar(50)")]
		public string LimitedSpaceUnitId
		{
			get
			{
				return this._LimitedSpaceUnitId;
			}
			set
			{
				if ((this._LimitedSpaceUnitId != value))
				{
					if (this._LimitedSpaceUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLimitedSpaceUnitIdChanging(value);
					this.SendPropertyChanging();
					this._LimitedSpaceUnitId = value;
					this.SendPropertyChanged("LimitedSpaceUnitId");
					this.OnLimitedSpaceUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitedSpaceName", DbType="NVarChar(200)")]
		public string LimitedSpaceName
		{
			get
			{
				return this._LimitedSpaceName;
			}
			set
			{
				if ((this._LimitedSpaceName != value))
				{
					this.OnLimitedSpaceNameChanging(value);
					this.SendPropertyChanging();
					this._LimitedSpaceName = value;
					this.SendPropertyChanged("LimitedSpaceName");
					this.OnLimitedSpaceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobContent", DbType="NVarChar(500)")]
		public string JobContent
		{
			get
			{
				return this._JobContent;
			}
			set
			{
				if ((this._JobContent != value))
				{
					this.OnJobContentChanging(value);
					this.SendPropertyChanging();
					this._JobContent = value;
					this.SendPropertyChanged("JobContent");
					this.OnJobContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Medium", DbType="NVarChar(200)")]
		public string Medium
		{
			get
			{
				return this._Medium;
			}
			set
			{
				if ((this._Medium != value))
				{
					this.OnMediumChanging(value);
					this.SendPropertyChanging();
					this._Medium = value;
					this.SendPropertyChanged("Medium");
					this.OnMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobStartTime
		{
			get
			{
				return this._JobStartTime;
			}
			set
			{
				if ((this._JobStartTime != value))
				{
					this.OnJobStartTimeChanging(value);
					this.SendPropertyChanging();
					this._JobStartTime = value;
					this.SendPropertyChanged("JobStartTime");
					this.OnJobStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobEndTime
		{
			get
			{
				return this._JobEndTime;
			}
			set
			{
				if ((this._JobEndTime != value))
				{
					this.OnJobEndTimeChanging(value);
					this.SendPropertyChanging();
					this._JobEndTime = value;
					this.SendPropertyChanged("JobEndTime");
					this.OnJobEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guardian", DbType="NVarChar(50)")]
		public string Guardian
		{
			get
			{
				return this._Guardian;
			}
			set
			{
				if ((this._Guardian != value))
				{
					this.OnGuardianChanging(value);
					this.SendPropertyChanging();
					this._Guardian = value;
					this.SendPropertyChanged("Guardian");
					this.OnGuardianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobManagerId", DbType="NVarChar(50)")]
		public string JobManagerId
		{
			get
			{
				return this._JobManagerId;
			}
			set
			{
				if ((this._JobManagerId != value))
				{
					if (this._JobManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobManagerIdChanging(value);
					this.SendPropertyChanging();
					this._JobManagerId = value;
					this.SendPropertyChanged("JobManagerId");
					this.OnJobManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobManagerTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobManagerTime
		{
			get
			{
				return this._JobManagerTime;
			}
			set
			{
				if ((this._JobManagerTime != value))
				{
					this.OnJobManagerTimeChanging(value);
					this.SendPropertyChanging();
					this._JobManagerTime = value;
					this.SendPropertyChanged("JobManagerTime");
					this.OnJobManagerTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobMans", DbType="NVarChar(100)")]
		public string JobMans
		{
			get
			{
				return this._JobMans;
			}
			set
			{
				if ((this._JobMans != value))
				{
					this.OnJobMansChanging(value);
					this.SendPropertyChanging();
					this._JobMans = value;
					this.SendPropertyChanged("JobMans");
					this.OnJobMansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherSpecial", DbType="NVarChar(100)")]
		public string OtherSpecial
		{
			get
			{
				return this._OtherSpecial;
			}
			set
			{
				if ((this._OtherSpecial != value))
				{
					this.OnOtherSpecialChanging(value);
					this.SendPropertyChanging();
					this._OtherSpecial = value;
					this.SendPropertyChanged("OtherSpecial");
					this.OnOtherSpecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZID", DbType="NVarChar(4000)")]
		public string HAZID
		{
			get
			{
				return this._HAZID;
			}
			set
			{
				if ((this._HAZID != value))
				{
					this.OnHAZIDChanging(value);
					this.SendPropertyChanging();
					this._HAZID = value;
					this.SendPropertyChanged("HAZID");
					this.OnHAZIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoisonMedium", DbType="NVarChar(100)")]
		public string PoisonMedium
		{
			get
			{
				return this._PoisonMedium;
			}
			set
			{
				if ((this._PoisonMedium != value))
				{
					this.OnPoisonMediumChanging(value);
					this.SendPropertyChanging();
					this._PoisonMedium = value;
					this.SendPropertyChanged("PoisonMedium");
					this.OnPoisonMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CombustibleGas", DbType="NVarChar(100)")]
		public string CombustibleGas
		{
			get
			{
				return this._CombustibleGas;
			}
			set
			{
				if ((this._CombustibleGas != value))
				{
					this.OnCombustibleGasChanging(value);
					this.SendPropertyChanging();
					this._CombustibleGas = value;
					this.SendPropertyChanged("CombustibleGas");
					this.OnCombustibleGasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OxygenContent", DbType="NVarChar(100)")]
		public string OxygenContent
		{
			get
			{
				return this._OxygenContent;
			}
			set
			{
				if ((this._OxygenContent != value))
				{
					this.OnOxygenContentChanging(value);
					this.SendPropertyChanging();
					this._OxygenContent = value;
					this.SendPropertyChanged("OxygenContent");
					this.OnOxygenContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalysisManId", DbType="NVarChar(50)")]
		public string AnalysisManId
		{
			get
			{
				return this._AnalysisManId;
			}
			set
			{
				if ((this._AnalysisManId != value))
				{
					if (this._AnalysisMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnalysisManIdChanging(value);
					this.SendPropertyChanging();
					this._AnalysisManId = value;
					this.SendPropertyChanged("AnalysisManId");
					this.OnAnalysisManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalysisTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AnalysisTime
		{
			get
			{
				return this._AnalysisTime;
			}
			set
			{
				if ((this._AnalysisTime != value))
				{
					this.OnAnalysisTimeChanging(value);
					this.SendPropertyChanging();
					this._AnalysisTime = value;
					this.SendPropertyChanged("AnalysisTime");
					this.OnAnalysisTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasuresManId", DbType="NVarChar(50)")]
		public string MeasuresManId
		{
			get
			{
				return this._MeasuresManId;
			}
			set
			{
				if ((this._MeasuresManId != value))
				{
					if (this._MeasuresMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeasuresManIdChanging(value);
					this.SendPropertyChanging();
					this._MeasuresManId = value;
					this.SendPropertyChanged("MeasuresManId");
					this.OnMeasuresManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasuresManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> MeasuresManTime
		{
			get
			{
				return this._MeasuresManTime;
			}
			set
			{
				if ((this._MeasuresManTime != value))
				{
					this.OnMeasuresManTimeChanging(value);
					this.SendPropertyChanging();
					this._MeasuresManTime = value;
					this.SendPropertyChanged("MeasuresManTime");
					this.OnMeasuresManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(500)")]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this.OnOtherMeasuresChanging(value);
					this.SendPropertyChanging();
					this._OtherMeasures = value;
					this.SendPropertyChanged("OtherMeasures");
					this.OnOtherMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManId", DbType="NVarChar(50)")]
		public string CompileManId
		{
			get
			{
				return this._CompileManId;
			}
			set
			{
				if ((this._CompileManId != value))
				{
					if (this._CompileMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManIdChanging(value);
					this.SendPropertyChanging();
					this._CompileManId = value;
					this.SendPropertyChanged("CompileManId");
					this.OnCompileManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileManTime
		{
			get
			{
				return this._CompileManTime;
			}
			set
			{
				if ((this._CompileManTime != value))
				{
					this.OnCompileManTimeChanging(value);
					this.SendPropertyChanging();
					this._CompileManTime = value;
					this.SendPropertyChanged("CompileManTime");
					this.OnCompileManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduManId", DbType="NVarChar(50)")]
		public string SafeEduManId
		{
			get
			{
				return this._SafeEduManId;
			}
			set
			{
				if ((this._SafeEduManId != value))
				{
					if (this._SafeEduMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSafeEduManIdChanging(value);
					this.SendPropertyChanging();
					this._SafeEduManId = value;
					this.SendPropertyChanged("SafeEduManId");
					this.OnSafeEduManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SafeEduManTime
		{
			get
			{
				return this._SafeEduManTime;
			}
			set
			{
				if ((this._SafeEduManTime != value))
				{
					this.OnSafeEduManTimeChanging(value);
					this.SendPropertyChanging();
					this._SafeEduManTime = value;
					this.SendPropertyChanged("SafeEduManTime");
					this.OnSafeEduManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitOpinion", DbType="NVarChar(500)")]
		public string ApplyUnitOpinion
		{
			get
			{
				return this._ApplyUnitOpinion;
			}
			set
			{
				if ((this._ApplyUnitOpinion != value))
				{
					this.OnApplyUnitOpinionChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitOpinion = value;
					this.SendPropertyChanged("ApplyUnitOpinion");
					this.OnApplyUnitOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitManId", DbType="NVarChar(50)")]
		public string ApplyUnitManId
		{
			get
			{
				return this._ApplyUnitManId;
			}
			set
			{
				if ((this._ApplyUnitManId != value))
				{
					if (this._ApplyUnitMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitManId = value;
					this.SendPropertyChanged("ApplyUnitManId");
					this.OnApplyUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApplyUnitTime
		{
			get
			{
				return this._ApplyUnitTime;
			}
			set
			{
				if ((this._ApplyUnitTime != value))
				{
					this.OnApplyUnitTimeChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitTime = value;
					this.SendPropertyChanged("ApplyUnitTime");
					this.OnApplyUnitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveUnitOpinion", DbType="NVarChar(500)")]
		public string ApproveUnitOpinion
		{
			get
			{
				return this._ApproveUnitOpinion;
			}
			set
			{
				if ((this._ApproveUnitOpinion != value))
				{
					this.OnApproveUnitOpinionChanging(value);
					this.SendPropertyChanging();
					this._ApproveUnitOpinion = value;
					this.SendPropertyChanged("ApproveUnitOpinion");
					this.OnApproveUnitOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveUnitManId", DbType="NVarChar(50)")]
		public string ApproveUnitManId
		{
			get
			{
				return this._ApproveUnitManId;
			}
			set
			{
				if ((this._ApproveUnitManId != value))
				{
					if (this._ApproveUnitMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApproveUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._ApproveUnitManId = value;
					this.SendPropertyChanged("ApproveUnitManId");
					this.OnApproveUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveUnitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApproveUnitTime
		{
			get
			{
				return this._ApproveUnitTime;
			}
			set
			{
				if ((this._ApproveUnitTime != value))
				{
					this.OnApproveUnitTimeChanging(value);
					this.SendPropertyChanging();
					this._ApproveUnitTime = value;
					this.SendPropertyChanged("ApproveUnitTime");
					this.OnApproveUnitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceJobManId", DbType="NVarChar(50)")]
		public string AcceptanceJobManId
		{
			get
			{
				return this._AcceptanceJobManId;
			}
			set
			{
				if ((this._AcceptanceJobManId != value))
				{
					if (this._AcceptanceJobMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcceptanceJobManIdChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceJobManId = value;
					this.SendPropertyChanged("AcceptanceJobManId");
					this.OnAcceptanceJobManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceJobTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptanceJobTime
		{
			get
			{
				return this._AcceptanceJobTime;
			}
			set
			{
				if ((this._AcceptanceJobTime != value))
				{
					this.OnAcceptanceJobTimeChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceJobTime = value;
					this.SendPropertyChanged("AcceptanceJobTime");
					this.OnAcceptanceJobTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceOperationManId", DbType="NVarChar(50)")]
		public string AcceptanceOperationManId
		{
			get
			{
				return this._AcceptanceOperationManId;
			}
			set
			{
				if ((this._AcceptanceOperationManId != value))
				{
					if ((this._AcceptanceOperationMan.HasLoadedOrAssignedValue || this._License_LimitedSpace_Sys_User3.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcceptanceOperationManIdChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceOperationManId = value;
					this.SendPropertyChanged("AcceptanceOperationManId");
					this.OnAcceptanceOperationManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceOperationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptanceOperationTime
		{
			get
			{
				return this._AcceptanceOperationTime;
			}
			set
			{
				if ((this._AcceptanceOperationTime != value))
				{
					this.OnAcceptanceOperationTimeChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceOperationTime = value;
					this.SendPropertyChanged("AcceptanceOperationTime");
					this.OnAcceptanceOperationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this.OnQRCodeUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeUrl = value;
					this.SendPropertyChanged("QRCodeUrl");
					this.OnQRCodeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobInstallationId", DbType="NVarChar(50)")]
		public string JobInstallationId
		{
			get
			{
				return this._JobInstallationId;
			}
			set
			{
				if ((this._JobInstallationId != value))
				{
					if (this._JobInstallation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._JobInstallationId = value;
					this.SendPropertyChanged("JobInstallationId");
					this.OnJobInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PauseTime
		{
			get
			{
				return this._PauseTime;
			}
			set
			{
				if ((this._PauseTime != value))
				{
					this.OnPauseTimeChanging(value);
					this.SendPropertyChanging();
					this._PauseTime = value;
					this.SendPropertyChanged("PauseTime");
					this.OnPauseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseDescribe", DbType="NVarChar(4000)")]
		public string PauseDescribe
		{
			get
			{
				return this._PauseDescribe;
			}
			set
			{
				if ((this._PauseDescribe != value))
				{
					this.OnPauseDescribeChanging(value);
					this.SendPropertyChanging();
					this._PauseDescribe = value;
					this.SendPropertyChanged("PauseDescribe");
					this.OnPauseDescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnitId", DbType="NVarChar(50)")]
		public string JobUnitId
		{
			get
			{
				return this._JobUnitId;
			}
			set
			{
				if ((this._JobUnitId != value))
				{
					if (this._JobUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobUnitIdChanging(value);
					this.SendPropertyChanging();
					this._JobUnitId = value;
					this.SendPropertyChanged("JobUnitId");
					this.OnJobUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZIDName", DbType="NVarChar(4000)")]
		public string HAZIDName
		{
			get
			{
				return this._HAZIDName;
			}
			set
			{
				if ((this._HAZIDName != value))
				{
					this.OnHAZIDNameChanging(value);
					this.SendPropertyChanging();
					this._HAZIDName = value;
					this.SendPropertyChanged("HAZIDName");
					this.OnHAZIDNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoCoordinate", DbType="NVarChar(50)")]
		public string GeoCoordinate
		{
			get
			{
				return this._GeoCoordinate;
			}
			set
			{
				if ((this._GeoCoordinate != value))
				{
					this.OnGeoCoordinateChanging(value);
					this.SendPropertyChanging();
					this._GeoCoordinate = value;
					this.SendPropertyChanged("GeoCoordinate");
					this.OnGeoCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.License_LimitedSpace.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpace.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Base_Installation1", Storage="_JobInstallation", ThisKey="JobInstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation JobInstallation
		{
			get
			{
				return this._JobInstallation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._JobInstallation.Entity;
				if (((previousValue != value) 
							|| (this._JobInstallation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobInstallation.Entity = null;
						previousValue.License_LimitedSpace_Base_Installation1.Remove(this);
					}
					this._JobInstallation.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpace_Base_Installation1.Add(this);
						this._JobInstallationId = value.InstallationId;
					}
					else
					{
						this._JobInstallationId = default(string);
					}
					this.SendPropertyChanged("JobInstallation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.License_LimitedSpace.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpace.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Base_Unit_JobUnitId", Storage="_JobUnit", ThisKey="JobUnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit JobUnit
		{
			get
			{
				return this._JobUnit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._JobUnit.Entity;
				if (((previousValue != value) 
							|| (this._JobUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobUnit.Entity = null;
						previousValue.License_LimitedSpace_Base_Unit_JobUnitId.Remove(this);
					}
					this._JobUnit.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpace_Base_Unit_JobUnitId.Add(this);
						this._JobUnitId = value.UnitId;
					}
					else
					{
						this._JobUnitId = default(string);
					}
					this.SendPropertyChanged("JobUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Base_Unit1", Storage="_LimitedSpaceUnit", ThisKey="LimitedSpaceUnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit LimitedSpaceUnit
		{
			get
			{
				return this._LimitedSpaceUnit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._LimitedSpaceUnit.Entity;
				if (((previousValue != value) 
							|| (this._LimitedSpaceUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LimitedSpaceUnit.Entity = null;
						previousValue.License_LimitedSpace_Base_Unit1.Remove(this);
					}
					this._LimitedSpaceUnit.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpace_Base_Unit1.Add(this);
						this._LimitedSpaceUnitId = value.UnitId;
					}
					else
					{
						this._LimitedSpaceUnitId = default(string);
					}
					this.SendPropertyChanged("LimitedSpaceUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User", Storage="_Sys_User", ThisKey="ApplyManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.License_LimitedSpace.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpace.Add(this);
						this._ApplyManId = value.UserId;
					}
					else
					{
						this._ApplyManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User_AcceptanceMan", Storage="_AcceptanceOperationMan", ThisKey="AcceptanceOperationManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User AcceptanceOperationMan
		{
			get
			{
				return this._AcceptanceOperationMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._AcceptanceOperationMan.Entity;
				if (((previousValue != value) 
							|| (this._AcceptanceOperationMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcceptanceOperationMan.Entity = null;
						previousValue.License_LimitedSpace_Sys_User_AcceptanceMan.Remove(this);
					}
					this._AcceptanceOperationMan.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpace_Sys_User_AcceptanceMan.Add(this);
						this._AcceptanceOperationManId = value.UserId;
					}
					else
					{
						this._AcceptanceOperationManId = default(string);
					}
					this.SendPropertyChanged("AcceptanceOperationMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User_ApplyUnitMan", Storage="_ApplyUnitMan", ThisKey="ApplyUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ApplyUnitMan
		{
			get
			{
				return this._ApplyUnitMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ApplyUnitMan.Entity;
				if (((previousValue != value) 
							|| (this._ApplyUnitMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplyUnitMan.Entity = null;
						previousValue.License_LimitedSpace_Sys_User_ApplyUnitMan.Remove(this);
					}
					this._ApplyUnitMan.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpace_Sys_User_ApplyUnitMan.Add(this);
						this._ApplyUnitManId = value.UserId;
					}
					else
					{
						this._ApplyUnitManId = default(string);
					}
					this.SendPropertyChanged("ApplyUnitMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User_ApproveUnitMan", Storage="_ApproveUnitMan", ThisKey="ApproveUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ApproveUnitMan
		{
			get
			{
				return this._ApproveUnitMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ApproveUnitMan.Entity;
				if (((previousValue != value) 
							|| (this._ApproveUnitMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApproveUnitMan.Entity = null;
						previousValue.License_LimitedSpace_Sys_User_ApproveUnitMan.Remove(this);
					}
					this._ApproveUnitMan.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpace_Sys_User_ApproveUnitMan.Add(this);
						this._ApproveUnitManId = value.UserId;
					}
					else
					{
						this._ApproveUnitManId = default(string);
					}
					this.SendPropertyChanged("ApproveUnitMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User_CompileMan", Storage="_CompileMan", ThisKey="CompileManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User CompileMan
		{
			get
			{
				return this._CompileMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._CompileMan.Entity;
				if (((previousValue != value) 
							|| (this._CompileMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompileMan.Entity = null;
						previousValue.License_LimitedSpace_Sys_User_CompileMan.Remove(this);
					}
					this._CompileMan.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpace_Sys_User_CompileMan.Add(this);
						this._CompileManId = value.UserId;
					}
					else
					{
						this._CompileManId = default(string);
					}
					this.SendPropertyChanged("CompileMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User_JobManager", Storage="_JobManager", ThisKey="JobManagerId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User JobManager
		{
			get
			{
				return this._JobManager.Entity;
			}
			set
			{
				Sys_User previousValue = this._JobManager.Entity;
				if (((previousValue != value) 
							|| (this._JobManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobManager.Entity = null;
						previousValue.License_LimitedSpace_Sys_User_JobManager.Remove(this);
					}
					this._JobManager.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpace_Sys_User_JobManager.Add(this);
						this._JobManagerId = value.UserId;
					}
					else
					{
						this._JobManagerId = default(string);
					}
					this.SendPropertyChanged("JobManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User_MeasuresMan", Storage="_MeasuresMan", ThisKey="MeasuresManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User MeasuresMan
		{
			get
			{
				return this._MeasuresMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._MeasuresMan.Entity;
				if (((previousValue != value) 
							|| (this._MeasuresMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeasuresMan.Entity = null;
						previousValue.License_LimitedSpace_Sys_User_MeasuresMan.Remove(this);
					}
					this._MeasuresMan.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpace_Sys_User_MeasuresMan.Add(this);
						this._MeasuresManId = value.UserId;
					}
					else
					{
						this._MeasuresManId = default(string);
					}
					this.SendPropertyChanged("MeasuresMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User_SafeEduMan", Storage="_SafeEduMan", ThisKey="SafeEduManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User SafeEduMan
		{
			get
			{
				return this._SafeEduMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._SafeEduMan.Entity;
				if (((previousValue != value) 
							|| (this._SafeEduMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SafeEduMan.Entity = null;
						previousValue.License_LimitedSpace_Sys_User_SafeEduMan.Remove(this);
					}
					this._SafeEduMan.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpace_Sys_User_SafeEduMan.Add(this);
						this._SafeEduManId = value.UserId;
					}
					else
					{
						this._SafeEduManId = default(string);
					}
					this.SendPropertyChanged("SafeEduMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User1", Storage="_AnalysisMan", ThisKey="AnalysisManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User AnalysisMan
		{
			get
			{
				return this._AnalysisMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._AnalysisMan.Entity;
				if (((previousValue != value) 
							|| (this._AnalysisMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AnalysisMan.Entity = null;
						previousValue.License_LimitedSpace_Sys_User1.Remove(this);
					}
					this._AnalysisMan.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpace_Sys_User1.Add(this);
						this._AnalysisManId = value.UserId;
					}
					else
					{
						this._AnalysisManId = default(string);
					}
					this.SendPropertyChanged("AnalysisMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User2", Storage="_AcceptanceJobMan", ThisKey="AcceptanceJobManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User AcceptanceJobMan
		{
			get
			{
				return this._AcceptanceJobMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._AcceptanceJobMan.Entity;
				if (((previousValue != value) 
							|| (this._AcceptanceJobMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcceptanceJobMan.Entity = null;
						previousValue.License_LimitedSpace_Sys_User2.Remove(this);
					}
					this._AcceptanceJobMan.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpace_Sys_User2.Add(this);
						this._AcceptanceJobManId = value.UserId;
					}
					else
					{
						this._AcceptanceJobManId = default(string);
					}
					this.SendPropertyChanged("AcceptanceJobMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User3", Storage="_License_LimitedSpace_Sys_User3", ThisKey="AcceptanceOperationManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User License_LimitedSpace_Sys_User3
		{
			get
			{
				return this._License_LimitedSpace_Sys_User3.Entity;
			}
			set
			{
				Sys_User previousValue = this._License_LimitedSpace_Sys_User3.Entity;
				if (((previousValue != value) 
							|| (this._License_LimitedSpace_Sys_User3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._License_LimitedSpace_Sys_User3.Entity = null;
						previousValue.License_LimitedSpace_Sys_User3.Remove(this);
					}
					this._License_LimitedSpace_Sys_User3.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpace_Sys_User3.Add(this);
						this._AcceptanceOperationManId = value.UserId;
					}
					else
					{
						this._AcceptanceOperationManId = default(string);
					}
					this.SendPropertyChanged("License_LimitedSpace_Sys_User3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpaceAnalysis_License_LimitedSpace", Storage="_License_LimitedSpaceAnalysis", ThisKey="LimitedSpaceId", OtherKey="LimitedSpaceId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpaceAnalysis> License_LimitedSpaceAnalysis
		{
			get
			{
				return this._License_LimitedSpaceAnalysis;
			}
			set
			{
				this._License_LimitedSpaceAnalysis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_License_LimitedSpaceAnalysis(License_LimitedSpaceAnalysis entity)
		{
			this.SendPropertyChanging();
			entity.License_LimitedSpace = this;
		}
		
		private void detach_License_LimitedSpaceAnalysis(License_LimitedSpaceAnalysis entity)
		{
			this.SendPropertyChanging();
			entity.License_LimitedSpace = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.License_LimitedSpaceAnalysis")]
	public partial class License_LimitedSpaceAnalysis : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LimitedSpaceAnalysisId;
		
		private string _LimitedSpaceId;
		
		private System.Nullable<int> _SortIndex;
		
		private System.Nullable<System.DateTime> _AnalysisTime;
		
		private string _AnalysisParts;
		
		private string _AnalysisManId;
		
		private System.Nullable<decimal> _PoisonMediumData1;
		
		private System.Nullable<decimal> _PoisonMediumData2;
		
		private System.Nullable<decimal> _PoisonMediumData3;
		
		private System.Nullable<decimal> _PoisonMediumData4;
		
		private System.Nullable<decimal> _PoisonMediumData5;
		
		private System.Nullable<decimal> _PoisonMediumData6;
		
		private System.Nullable<decimal> _CombustibleGasData;
		
		private System.Nullable<decimal> _OxygenContentData1;
		
		private System.Nullable<decimal> _OxygenContentData2;
		
		private System.Nullable<bool> _IsQualified;
		
		private EntityRef<License_LimitedSpace> _License_LimitedSpace;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLimitedSpaceAnalysisIdChanging(string value);
    partial void OnLimitedSpaceAnalysisIdChanged();
    partial void OnLimitedSpaceIdChanging(string value);
    partial void OnLimitedSpaceIdChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnAnalysisTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAnalysisTimeChanged();
    partial void OnAnalysisPartsChanging(string value);
    partial void OnAnalysisPartsChanged();
    partial void OnAnalysisManIdChanging(string value);
    partial void OnAnalysisManIdChanged();
    partial void OnPoisonMediumData1Changing(System.Nullable<decimal> value);
    partial void OnPoisonMediumData1Changed();
    partial void OnPoisonMediumData2Changing(System.Nullable<decimal> value);
    partial void OnPoisonMediumData2Changed();
    partial void OnPoisonMediumData3Changing(System.Nullable<decimal> value);
    partial void OnPoisonMediumData3Changed();
    partial void OnPoisonMediumData4Changing(System.Nullable<decimal> value);
    partial void OnPoisonMediumData4Changed();
    partial void OnPoisonMediumData5Changing(System.Nullable<decimal> value);
    partial void OnPoisonMediumData5Changed();
    partial void OnPoisonMediumData6Changing(System.Nullable<decimal> value);
    partial void OnPoisonMediumData6Changed();
    partial void OnCombustibleGasDataChanging(System.Nullable<decimal> value);
    partial void OnCombustibleGasDataChanged();
    partial void OnOxygenContentData1Changing(System.Nullable<decimal> value);
    partial void OnOxygenContentData1Changed();
    partial void OnOxygenContentData2Changing(System.Nullable<decimal> value);
    partial void OnOxygenContentData2Changed();
    partial void OnIsQualifiedChanging(System.Nullable<bool> value);
    partial void OnIsQualifiedChanged();
    #endregion
		
		public License_LimitedSpaceAnalysis()
		{
			this._License_LimitedSpace = default(EntityRef<License_LimitedSpace>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitedSpaceAnalysisId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LimitedSpaceAnalysisId
		{
			get
			{
				return this._LimitedSpaceAnalysisId;
			}
			set
			{
				if ((this._LimitedSpaceAnalysisId != value))
				{
					this.OnLimitedSpaceAnalysisIdChanging(value);
					this.SendPropertyChanging();
					this._LimitedSpaceAnalysisId = value;
					this.SendPropertyChanged("LimitedSpaceAnalysisId");
					this.OnLimitedSpaceAnalysisIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitedSpaceId", DbType="NVarChar(50)")]
		public string LimitedSpaceId
		{
			get
			{
				return this._LimitedSpaceId;
			}
			set
			{
				if ((this._LimitedSpaceId != value))
				{
					if (this._License_LimitedSpace.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLimitedSpaceIdChanging(value);
					this.SendPropertyChanging();
					this._LimitedSpaceId = value;
					this.SendPropertyChanged("LimitedSpaceId");
					this.OnLimitedSpaceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalysisTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AnalysisTime
		{
			get
			{
				return this._AnalysisTime;
			}
			set
			{
				if ((this._AnalysisTime != value))
				{
					this.OnAnalysisTimeChanging(value);
					this.SendPropertyChanging();
					this._AnalysisTime = value;
					this.SendPropertyChanged("AnalysisTime");
					this.OnAnalysisTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalysisParts", DbType="NVarChar(100)")]
		public string AnalysisParts
		{
			get
			{
				return this._AnalysisParts;
			}
			set
			{
				if ((this._AnalysisParts != value))
				{
					this.OnAnalysisPartsChanging(value);
					this.SendPropertyChanging();
					this._AnalysisParts = value;
					this.SendPropertyChanged("AnalysisParts");
					this.OnAnalysisPartsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalysisManId", DbType="NVarChar(50)")]
		public string AnalysisManId
		{
			get
			{
				return this._AnalysisManId;
			}
			set
			{
				if ((this._AnalysisManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnalysisManIdChanging(value);
					this.SendPropertyChanging();
					this._AnalysisManId = value;
					this.SendPropertyChanged("AnalysisManId");
					this.OnAnalysisManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoisonMediumData1", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PoisonMediumData1
		{
			get
			{
				return this._PoisonMediumData1;
			}
			set
			{
				if ((this._PoisonMediumData1 != value))
				{
					this.OnPoisonMediumData1Changing(value);
					this.SendPropertyChanging();
					this._PoisonMediumData1 = value;
					this.SendPropertyChanged("PoisonMediumData1");
					this.OnPoisonMediumData1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoisonMediumData2", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PoisonMediumData2
		{
			get
			{
				return this._PoisonMediumData2;
			}
			set
			{
				if ((this._PoisonMediumData2 != value))
				{
					this.OnPoisonMediumData2Changing(value);
					this.SendPropertyChanging();
					this._PoisonMediumData2 = value;
					this.SendPropertyChanged("PoisonMediumData2");
					this.OnPoisonMediumData2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoisonMediumData3", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PoisonMediumData3
		{
			get
			{
				return this._PoisonMediumData3;
			}
			set
			{
				if ((this._PoisonMediumData3 != value))
				{
					this.OnPoisonMediumData3Changing(value);
					this.SendPropertyChanging();
					this._PoisonMediumData3 = value;
					this.SendPropertyChanged("PoisonMediumData3");
					this.OnPoisonMediumData3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoisonMediumData4", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PoisonMediumData4
		{
			get
			{
				return this._PoisonMediumData4;
			}
			set
			{
				if ((this._PoisonMediumData4 != value))
				{
					this.OnPoisonMediumData4Changing(value);
					this.SendPropertyChanging();
					this._PoisonMediumData4 = value;
					this.SendPropertyChanged("PoisonMediumData4");
					this.OnPoisonMediumData4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoisonMediumData5", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PoisonMediumData5
		{
			get
			{
				return this._PoisonMediumData5;
			}
			set
			{
				if ((this._PoisonMediumData5 != value))
				{
					this.OnPoisonMediumData5Changing(value);
					this.SendPropertyChanging();
					this._PoisonMediumData5 = value;
					this.SendPropertyChanged("PoisonMediumData5");
					this.OnPoisonMediumData5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoisonMediumData6", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PoisonMediumData6
		{
			get
			{
				return this._PoisonMediumData6;
			}
			set
			{
				if ((this._PoisonMediumData6 != value))
				{
					this.OnPoisonMediumData6Changing(value);
					this.SendPropertyChanging();
					this._PoisonMediumData6 = value;
					this.SendPropertyChanged("PoisonMediumData6");
					this.OnPoisonMediumData6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CombustibleGasData", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CombustibleGasData
		{
			get
			{
				return this._CombustibleGasData;
			}
			set
			{
				if ((this._CombustibleGasData != value))
				{
					this.OnCombustibleGasDataChanging(value);
					this.SendPropertyChanging();
					this._CombustibleGasData = value;
					this.SendPropertyChanged("CombustibleGasData");
					this.OnCombustibleGasDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OxygenContentData1", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OxygenContentData1
		{
			get
			{
				return this._OxygenContentData1;
			}
			set
			{
				if ((this._OxygenContentData1 != value))
				{
					this.OnOxygenContentData1Changing(value);
					this.SendPropertyChanging();
					this._OxygenContentData1 = value;
					this.SendPropertyChanged("OxygenContentData1");
					this.OnOxygenContentData1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OxygenContentData2", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OxygenContentData2
		{
			get
			{
				return this._OxygenContentData2;
			}
			set
			{
				if ((this._OxygenContentData2 != value))
				{
					this.OnOxygenContentData2Changing(value);
					this.SendPropertyChanging();
					this._OxygenContentData2 = value;
					this.SendPropertyChanged("OxygenContentData2");
					this.OnOxygenContentData2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsQualified", DbType="Bit")]
		public System.Nullable<bool> IsQualified
		{
			get
			{
				return this._IsQualified;
			}
			set
			{
				if ((this._IsQualified != value))
				{
					this.OnIsQualifiedChanging(value);
					this.SendPropertyChanging();
					this._IsQualified = value;
					this.SendPropertyChanged("IsQualified");
					this.OnIsQualifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpaceAnalysis_License_LimitedSpace", Storage="_License_LimitedSpace", ThisKey="LimitedSpaceId", OtherKey="LimitedSpaceId", IsForeignKey=true)]
		public License_LimitedSpace License_LimitedSpace
		{
			get
			{
				return this._License_LimitedSpace.Entity;
			}
			set
			{
				License_LimitedSpace previousValue = this._License_LimitedSpace.Entity;
				if (((previousValue != value) 
							|| (this._License_LimitedSpace.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._License_LimitedSpace.Entity = null;
						previousValue.License_LimitedSpaceAnalysis.Remove(this);
					}
					this._License_LimitedSpace.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpaceAnalysis.Add(this);
						this._LimitedSpaceId = value.LimitedSpaceId;
					}
					else
					{
						this._LimitedSpaceId = default(string);
					}
					this.SendPropertyChanged("License_LimitedSpace");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpaceAnalysis_Sys_User", Storage="_Sys_User", ThisKey="AnalysisManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.License_LimitedSpaceAnalysis.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.License_LimitedSpaceAnalysis.Add(this);
						this._AnalysisManId = value.UserId;
					}
					else
					{
						this._AnalysisManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.License_OpenCircuit")]
	public partial class License_OpenCircuit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OpenCircuitId;
		
		private string _LicenseCode;
		
		private string _InstallationId;
		
		private string _UnitId;
		
		private string _ApplyUnit;
		
		private string _ApplyManId;
		
		private string _JobUnitId;
		
		private string _JobManagerId;
		
		private System.Nullable<System.DateTime> _JobManagerTime;
		
		private string _RelatedUnitDep;
		
		private string _OpenCircuitCause;
		
		private System.Nullable<System.DateTime> _JobStartTime;
		
		private System.Nullable<System.DateTime> _JobEndTime;
		
		private string _PictureUrl;
		
		private string _ApplyMan1Id;
		
		private System.Nullable<System.DateTime> _ApplyManTime;
		
		private string _HAZID;
		
		private string _MeasuresManId;
		
		private System.Nullable<System.DateTime> _MeasuresManTime;
		
		private string _OtherMeasures;
		
		private string _CompileManId;
		
		private System.Nullable<System.DateTime> _CompileManTime;
		
		private string _SafeEduManId;
		
		private System.Nullable<System.DateTime> _SafeEduManTime;
		
		private string _ApplyUnitOpinion;
		
		private string _ApplyUnitManId;
		
		private System.Nullable<System.DateTime> _ApplyUnitTime;
		
		private string _JobUnitOpinion;
		
		private string _JobUnitManId;
		
		private System.Nullable<System.DateTime> _JobUnitTime;
		
		private string _CountersignOpinion;
		
		private string _CountersignManId;
		
		private System.Nullable<System.DateTime> _CountersignTime;
		
		private string _ApprovalDepOpinion;
		
		private string _ApprovalDepManId;
		
		private System.Nullable<System.DateTime> _ApprovalDepTime;
		
		private string _AcceptanceOpinion;
		
		private string _AcceptanceManId;
		
		private System.Nullable<System.DateTime> _AcceptanceTime;
		
		private string _QRCodeUrl;
		
		private string _AttachUrl;
		
		private string _States;
		
		private string _JobInstallationId;
		
		private string _JobContent;
		
		private System.Nullable<System.DateTime> _PauseTime;
		
		private string _PauseDescribe;
		
		private string _HAZIDName;
		
		private string _JobPLace;
		
		private string _GeoCoordinate;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Installation> _JobInstallation;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_Unit> _JobUnit;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _AcceptanceMan;
		
		private EntityRef<Sys_User> _ApplyMan1;
		
		private EntityRef<Sys_User> _ApplyUnitMan;
		
		private EntityRef<Sys_User> _ApprovalDepMan;
		
		private EntityRef<Sys_User> _JobUnitMan;
		
		private EntityRef<Sys_User> _CompileMan;
		
		private EntityRef<Sys_User> _JobManager;
		
		private EntityRef<Sys_User> _MeasuresMan;
		
		private EntityRef<Sys_User> _SafeEduMan;
		
		private EntityRef<Sys_User> _CountersignMan;
		
		private EntityRef<Sys_User> _License_OpenCircuit_Sys_User3;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOpenCircuitIdChanging(string value);
    partial void OnOpenCircuitIdChanged();
    partial void OnLicenseCodeChanging(string value);
    partial void OnLicenseCodeChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnApplyUnitChanging(string value);
    partial void OnApplyUnitChanged();
    partial void OnApplyManIdChanging(string value);
    partial void OnApplyManIdChanged();
    partial void OnJobUnitIdChanging(string value);
    partial void OnJobUnitIdChanged();
    partial void OnJobManagerIdChanging(string value);
    partial void OnJobManagerIdChanged();
    partial void OnJobManagerTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobManagerTimeChanged();
    partial void OnRelatedUnitDepChanging(string value);
    partial void OnRelatedUnitDepChanged();
    partial void OnOpenCircuitCauseChanging(string value);
    partial void OnOpenCircuitCauseChanged();
    partial void OnJobStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobStartTimeChanged();
    partial void OnJobEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobEndTimeChanged();
    partial void OnPictureUrlChanging(string value);
    partial void OnPictureUrlChanged();
    partial void OnApplyMan1IdChanging(string value);
    partial void OnApplyMan1IdChanged();
    partial void OnApplyManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnApplyManTimeChanged();
    partial void OnHAZIDChanging(string value);
    partial void OnHAZIDChanged();
    partial void OnMeasuresManIdChanging(string value);
    partial void OnMeasuresManIdChanged();
    partial void OnMeasuresManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnMeasuresManTimeChanged();
    partial void OnOtherMeasuresChanging(string value);
    partial void OnOtherMeasuresChanged();
    partial void OnCompileManIdChanging(string value);
    partial void OnCompileManIdChanged();
    partial void OnCompileManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileManTimeChanged();
    partial void OnSafeEduManIdChanging(string value);
    partial void OnSafeEduManIdChanged();
    partial void OnSafeEduManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSafeEduManTimeChanged();
    partial void OnApplyUnitOpinionChanging(string value);
    partial void OnApplyUnitOpinionChanged();
    partial void OnApplyUnitManIdChanging(string value);
    partial void OnApplyUnitManIdChanged();
    partial void OnApplyUnitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnApplyUnitTimeChanged();
    partial void OnJobUnitOpinionChanging(string value);
    partial void OnJobUnitOpinionChanged();
    partial void OnJobUnitManIdChanging(string value);
    partial void OnJobUnitManIdChanged();
    partial void OnJobUnitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnJobUnitTimeChanged();
    partial void OnCountersignOpinionChanging(string value);
    partial void OnCountersignOpinionChanged();
    partial void OnCountersignManIdChanging(string value);
    partial void OnCountersignManIdChanged();
    partial void OnCountersignTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCountersignTimeChanged();
    partial void OnApprovalDepOpinionChanging(string value);
    partial void OnApprovalDepOpinionChanged();
    partial void OnApprovalDepManIdChanging(string value);
    partial void OnApprovalDepManIdChanged();
    partial void OnApprovalDepTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovalDepTimeChanged();
    partial void OnAcceptanceOpinionChanging(string value);
    partial void OnAcceptanceOpinionChanged();
    partial void OnAcceptanceManIdChanging(string value);
    partial void OnAcceptanceManIdChanged();
    partial void OnAcceptanceTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptanceTimeChanged();
    partial void OnQRCodeUrlChanging(string value);
    partial void OnQRCodeUrlChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnJobInstallationIdChanging(string value);
    partial void OnJobInstallationIdChanged();
    partial void OnJobContentChanging(string value);
    partial void OnJobContentChanged();
    partial void OnPauseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPauseTimeChanged();
    partial void OnPauseDescribeChanging(string value);
    partial void OnPauseDescribeChanged();
    partial void OnHAZIDNameChanging(string value);
    partial void OnHAZIDNameChanged();
    partial void OnJobPLaceChanging(string value);
    partial void OnJobPLaceChanged();
    partial void OnGeoCoordinateChanging(string value);
    partial void OnGeoCoordinateChanged();
    #endregion
		
		public License_OpenCircuit()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._JobInstallation = default(EntityRef<Base_Installation>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._JobUnit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._AcceptanceMan = default(EntityRef<Sys_User>);
			this._ApplyMan1 = default(EntityRef<Sys_User>);
			this._ApplyUnitMan = default(EntityRef<Sys_User>);
			this._ApprovalDepMan = default(EntityRef<Sys_User>);
			this._JobUnitMan = default(EntityRef<Sys_User>);
			this._CompileMan = default(EntityRef<Sys_User>);
			this._JobManager = default(EntityRef<Sys_User>);
			this._MeasuresMan = default(EntityRef<Sys_User>);
			this._SafeEduMan = default(EntityRef<Sys_User>);
			this._CountersignMan = default(EntityRef<Sys_User>);
			this._License_OpenCircuit_Sys_User3 = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenCircuitId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OpenCircuitId
		{
			get
			{
				return this._OpenCircuitId;
			}
			set
			{
				if ((this._OpenCircuitId != value))
				{
					this.OnOpenCircuitIdChanging(value);
					this.SendPropertyChanging();
					this._OpenCircuitId = value;
					this.SendPropertyChanged("OpenCircuitId");
					this.OnOpenCircuitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(50)")]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this.OnLicenseCodeChanging(value);
					this.SendPropertyChanging();
					this._LicenseCode = value;
					this.SendPropertyChanged("LicenseCode");
					this.OnLicenseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnit", DbType="NVarChar(500)")]
		public string ApplyUnit
		{
			get
			{
				return this._ApplyUnit;
			}
			set
			{
				if ((this._ApplyUnit != value))
				{
					this.OnApplyUnitChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnit = value;
					this.SendPropertyChanged("ApplyUnit");
					this.OnApplyUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyManId", DbType="NVarChar(50)")]
		public string ApplyManId
		{
			get
			{
				return this._ApplyManId;
			}
			set
			{
				if ((this._ApplyManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyManIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyManId = value;
					this.SendPropertyChanged("ApplyManId");
					this.OnApplyManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnitId", DbType="NVarChar(50)")]
		public string JobUnitId
		{
			get
			{
				return this._JobUnitId;
			}
			set
			{
				if ((this._JobUnitId != value))
				{
					if (this._JobUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobUnitIdChanging(value);
					this.SendPropertyChanging();
					this._JobUnitId = value;
					this.SendPropertyChanged("JobUnitId");
					this.OnJobUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobManagerId", DbType="NVarChar(50)")]
		public string JobManagerId
		{
			get
			{
				return this._JobManagerId;
			}
			set
			{
				if ((this._JobManagerId != value))
				{
					if (this._JobManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobManagerIdChanging(value);
					this.SendPropertyChanging();
					this._JobManagerId = value;
					this.SendPropertyChanged("JobManagerId");
					this.OnJobManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobManagerTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobManagerTime
		{
			get
			{
				return this._JobManagerTime;
			}
			set
			{
				if ((this._JobManagerTime != value))
				{
					this.OnJobManagerTimeChanging(value);
					this.SendPropertyChanging();
					this._JobManagerTime = value;
					this.SendPropertyChanged("JobManagerTime");
					this.OnJobManagerTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedUnitDep", DbType="NVarChar(500)")]
		public string RelatedUnitDep
		{
			get
			{
				return this._RelatedUnitDep;
			}
			set
			{
				if ((this._RelatedUnitDep != value))
				{
					this.OnRelatedUnitDepChanging(value);
					this.SendPropertyChanging();
					this._RelatedUnitDep = value;
					this.SendPropertyChanged("RelatedUnitDep");
					this.OnRelatedUnitDepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenCircuitCause", DbType="NVarChar(500)")]
		public string OpenCircuitCause
		{
			get
			{
				return this._OpenCircuitCause;
			}
			set
			{
				if ((this._OpenCircuitCause != value))
				{
					this.OnOpenCircuitCauseChanging(value);
					this.SendPropertyChanging();
					this._OpenCircuitCause = value;
					this.SendPropertyChanged("OpenCircuitCause");
					this.OnOpenCircuitCauseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobStartTime
		{
			get
			{
				return this._JobStartTime;
			}
			set
			{
				if ((this._JobStartTime != value))
				{
					this.OnJobStartTimeChanging(value);
					this.SendPropertyChanging();
					this._JobStartTime = value;
					this.SendPropertyChanged("JobStartTime");
					this.OnJobStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobEndTime
		{
			get
			{
				return this._JobEndTime;
			}
			set
			{
				if ((this._JobEndTime != value))
				{
					this.OnJobEndTimeChanging(value);
					this.SendPropertyChanging();
					this._JobEndTime = value;
					this.SendPropertyChanged("JobEndTime");
					this.OnJobEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureUrl", DbType="NVarChar(2000)")]
		public string PictureUrl
		{
			get
			{
				return this._PictureUrl;
			}
			set
			{
				if ((this._PictureUrl != value))
				{
					this.OnPictureUrlChanging(value);
					this.SendPropertyChanging();
					this._PictureUrl = value;
					this.SendPropertyChanged("PictureUrl");
					this.OnPictureUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyMan1Id", DbType="NVarChar(50)")]
		public string ApplyMan1Id
		{
			get
			{
				return this._ApplyMan1Id;
			}
			set
			{
				if ((this._ApplyMan1Id != value))
				{
					if (this._ApplyMan1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyMan1IdChanging(value);
					this.SendPropertyChanging();
					this._ApplyMan1Id = value;
					this.SendPropertyChanged("ApplyMan1Id");
					this.OnApplyMan1IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApplyManTime
		{
			get
			{
				return this._ApplyManTime;
			}
			set
			{
				if ((this._ApplyManTime != value))
				{
					this.OnApplyManTimeChanging(value);
					this.SendPropertyChanging();
					this._ApplyManTime = value;
					this.SendPropertyChanged("ApplyManTime");
					this.OnApplyManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZID", DbType="NVarChar(4000)")]
		public string HAZID
		{
			get
			{
				return this._HAZID;
			}
			set
			{
				if ((this._HAZID != value))
				{
					this.OnHAZIDChanging(value);
					this.SendPropertyChanging();
					this._HAZID = value;
					this.SendPropertyChanged("HAZID");
					this.OnHAZIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasuresManId", DbType="NVarChar(50)")]
		public string MeasuresManId
		{
			get
			{
				return this._MeasuresManId;
			}
			set
			{
				if ((this._MeasuresManId != value))
				{
					if (this._MeasuresMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeasuresManIdChanging(value);
					this.SendPropertyChanging();
					this._MeasuresManId = value;
					this.SendPropertyChanged("MeasuresManId");
					this.OnMeasuresManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasuresManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> MeasuresManTime
		{
			get
			{
				return this._MeasuresManTime;
			}
			set
			{
				if ((this._MeasuresManTime != value))
				{
					this.OnMeasuresManTimeChanging(value);
					this.SendPropertyChanging();
					this._MeasuresManTime = value;
					this.SendPropertyChanged("MeasuresManTime");
					this.OnMeasuresManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(500)")]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this.OnOtherMeasuresChanging(value);
					this.SendPropertyChanging();
					this._OtherMeasures = value;
					this.SendPropertyChanged("OtherMeasures");
					this.OnOtherMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManId", DbType="NVarChar(50)")]
		public string CompileManId
		{
			get
			{
				return this._CompileManId;
			}
			set
			{
				if ((this._CompileManId != value))
				{
					if (this._CompileMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManIdChanging(value);
					this.SendPropertyChanging();
					this._CompileManId = value;
					this.SendPropertyChanged("CompileManId");
					this.OnCompileManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileManTime
		{
			get
			{
				return this._CompileManTime;
			}
			set
			{
				if ((this._CompileManTime != value))
				{
					this.OnCompileManTimeChanging(value);
					this.SendPropertyChanging();
					this._CompileManTime = value;
					this.SendPropertyChanged("CompileManTime");
					this.OnCompileManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduManId", DbType="NVarChar(50)")]
		public string SafeEduManId
		{
			get
			{
				return this._SafeEduManId;
			}
			set
			{
				if ((this._SafeEduManId != value))
				{
					if (this._SafeEduMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSafeEduManIdChanging(value);
					this.SendPropertyChanging();
					this._SafeEduManId = value;
					this.SendPropertyChanged("SafeEduManId");
					this.OnSafeEduManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeEduManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SafeEduManTime
		{
			get
			{
				return this._SafeEduManTime;
			}
			set
			{
				if ((this._SafeEduManTime != value))
				{
					this.OnSafeEduManTimeChanging(value);
					this.SendPropertyChanging();
					this._SafeEduManTime = value;
					this.SendPropertyChanged("SafeEduManTime");
					this.OnSafeEduManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitOpinion", DbType="NVarChar(500)")]
		public string ApplyUnitOpinion
		{
			get
			{
				return this._ApplyUnitOpinion;
			}
			set
			{
				if ((this._ApplyUnitOpinion != value))
				{
					this.OnApplyUnitOpinionChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitOpinion = value;
					this.SendPropertyChanged("ApplyUnitOpinion");
					this.OnApplyUnitOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitManId", DbType="NVarChar(50)")]
		public string ApplyUnitManId
		{
			get
			{
				return this._ApplyUnitManId;
			}
			set
			{
				if ((this._ApplyUnitManId != value))
				{
					if (this._ApplyUnitMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitManId = value;
					this.SendPropertyChanged("ApplyUnitManId");
					this.OnApplyUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApplyUnitTime
		{
			get
			{
				return this._ApplyUnitTime;
			}
			set
			{
				if ((this._ApplyUnitTime != value))
				{
					this.OnApplyUnitTimeChanging(value);
					this.SendPropertyChanging();
					this._ApplyUnitTime = value;
					this.SendPropertyChanged("ApplyUnitTime");
					this.OnApplyUnitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnitOpinion", DbType="NVarChar(500)")]
		public string JobUnitOpinion
		{
			get
			{
				return this._JobUnitOpinion;
			}
			set
			{
				if ((this._JobUnitOpinion != value))
				{
					this.OnJobUnitOpinionChanging(value);
					this.SendPropertyChanging();
					this._JobUnitOpinion = value;
					this.SendPropertyChanged("JobUnitOpinion");
					this.OnJobUnitOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnitManId", DbType="NVarChar(50)")]
		public string JobUnitManId
		{
			get
			{
				return this._JobUnitManId;
			}
			set
			{
				if ((this._JobUnitManId != value))
				{
					if (this._JobUnitMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobUnitManIdChanging(value);
					this.SendPropertyChanging();
					this._JobUnitManId = value;
					this.SendPropertyChanged("JobUnitManId");
					this.OnJobUnitManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobUnitTime
		{
			get
			{
				return this._JobUnitTime;
			}
			set
			{
				if ((this._JobUnitTime != value))
				{
					this.OnJobUnitTimeChanging(value);
					this.SendPropertyChanging();
					this._JobUnitTime = value;
					this.SendPropertyChanged("JobUnitTime");
					this.OnJobUnitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountersignOpinion", DbType="NVarChar(500)")]
		public string CountersignOpinion
		{
			get
			{
				return this._CountersignOpinion;
			}
			set
			{
				if ((this._CountersignOpinion != value))
				{
					this.OnCountersignOpinionChanging(value);
					this.SendPropertyChanging();
					this._CountersignOpinion = value;
					this.SendPropertyChanged("CountersignOpinion");
					this.OnCountersignOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountersignManId", DbType="NVarChar(50)")]
		public string CountersignManId
		{
			get
			{
				return this._CountersignManId;
			}
			set
			{
				if ((this._CountersignManId != value))
				{
					if (this._CountersignMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountersignManIdChanging(value);
					this.SendPropertyChanging();
					this._CountersignManId = value;
					this.SendPropertyChanged("CountersignManId");
					this.OnCountersignManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountersignTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CountersignTime
		{
			get
			{
				return this._CountersignTime;
			}
			set
			{
				if ((this._CountersignTime != value))
				{
					this.OnCountersignTimeChanging(value);
					this.SendPropertyChanging();
					this._CountersignTime = value;
					this.SendPropertyChanged("CountersignTime");
					this.OnCountersignTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDepOpinion", DbType="NVarChar(500)")]
		public string ApprovalDepOpinion
		{
			get
			{
				return this._ApprovalDepOpinion;
			}
			set
			{
				if ((this._ApprovalDepOpinion != value))
				{
					this.OnApprovalDepOpinionChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDepOpinion = value;
					this.SendPropertyChanged("ApprovalDepOpinion");
					this.OnApprovalDepOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDepManId", DbType="NVarChar(50)")]
		public string ApprovalDepManId
		{
			get
			{
				return this._ApprovalDepManId;
			}
			set
			{
				if ((this._ApprovalDepManId != value))
				{
					if (this._ApprovalDepMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovalDepManIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDepManId = value;
					this.SendPropertyChanged("ApprovalDepManId");
					this.OnApprovalDepManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDepTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovalDepTime
		{
			get
			{
				return this._ApprovalDepTime;
			}
			set
			{
				if ((this._ApprovalDepTime != value))
				{
					this.OnApprovalDepTimeChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDepTime = value;
					this.SendPropertyChanged("ApprovalDepTime");
					this.OnApprovalDepTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceOpinion", DbType="NVarChar(500)")]
		public string AcceptanceOpinion
		{
			get
			{
				return this._AcceptanceOpinion;
			}
			set
			{
				if ((this._AcceptanceOpinion != value))
				{
					this.OnAcceptanceOpinionChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceOpinion = value;
					this.SendPropertyChanged("AcceptanceOpinion");
					this.OnAcceptanceOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceManId", DbType="NVarChar(50)")]
		public string AcceptanceManId
		{
			get
			{
				return this._AcceptanceManId;
			}
			set
			{
				if ((this._AcceptanceManId != value))
				{
					if ((this._AcceptanceMan.HasLoadedOrAssignedValue || this._License_OpenCircuit_Sys_User3.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcceptanceManIdChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceManId = value;
					this.SendPropertyChanged("AcceptanceManId");
					this.OnAcceptanceManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptanceTime
		{
			get
			{
				return this._AcceptanceTime;
			}
			set
			{
				if ((this._AcceptanceTime != value))
				{
					this.OnAcceptanceTimeChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceTime = value;
					this.SendPropertyChanged("AcceptanceTime");
					this.OnAcceptanceTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this.OnQRCodeUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeUrl = value;
					this.SendPropertyChanged("QRCodeUrl");
					this.OnQRCodeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobInstallationId", DbType="NVarChar(50)")]
		public string JobInstallationId
		{
			get
			{
				return this._JobInstallationId;
			}
			set
			{
				if ((this._JobInstallationId != value))
				{
					if (this._JobInstallation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._JobInstallationId = value;
					this.SendPropertyChanged("JobInstallationId");
					this.OnJobInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobContent", DbType="NVarChar(500)")]
		public string JobContent
		{
			get
			{
				return this._JobContent;
			}
			set
			{
				if ((this._JobContent != value))
				{
					this.OnJobContentChanging(value);
					this.SendPropertyChanging();
					this._JobContent = value;
					this.SendPropertyChanged("JobContent");
					this.OnJobContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PauseTime
		{
			get
			{
				return this._PauseTime;
			}
			set
			{
				if ((this._PauseTime != value))
				{
					this.OnPauseTimeChanging(value);
					this.SendPropertyChanging();
					this._PauseTime = value;
					this.SendPropertyChanged("PauseTime");
					this.OnPauseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseDescribe", DbType="NVarChar(4000)")]
		public string PauseDescribe
		{
			get
			{
				return this._PauseDescribe;
			}
			set
			{
				if ((this._PauseDescribe != value))
				{
					this.OnPauseDescribeChanging(value);
					this.SendPropertyChanging();
					this._PauseDescribe = value;
					this.SendPropertyChanged("PauseDescribe");
					this.OnPauseDescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZIDName", DbType="NVarChar(4000)")]
		public string HAZIDName
		{
			get
			{
				return this._HAZIDName;
			}
			set
			{
				if ((this._HAZIDName != value))
				{
					this.OnHAZIDNameChanging(value);
					this.SendPropertyChanging();
					this._HAZIDName = value;
					this.SendPropertyChanged("HAZIDName");
					this.OnHAZIDNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPLace", DbType="NVarChar(500)")]
		public string JobPLace
		{
			get
			{
				return this._JobPLace;
			}
			set
			{
				if ((this._JobPLace != value))
				{
					this.OnJobPLaceChanging(value);
					this.SendPropertyChanging();
					this._JobPLace = value;
					this.SendPropertyChanged("JobPLace");
					this.OnJobPLaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoCoordinate", DbType="NVarChar(50)")]
		public string GeoCoordinate
		{
			get
			{
				return this._GeoCoordinate;
			}
			set
			{
				if ((this._GeoCoordinate != value))
				{
					this.OnGeoCoordinateChanging(value);
					this.SendPropertyChanging();
					this._GeoCoordinate = value;
					this.SendPropertyChanged("GeoCoordinate");
					this.OnGeoCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.License_OpenCircuit.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.License_OpenCircuit.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Base_Installation1", Storage="_JobInstallation", ThisKey="JobInstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation JobInstallation
		{
			get
			{
				return this._JobInstallation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._JobInstallation.Entity;
				if (((previousValue != value) 
							|| (this._JobInstallation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobInstallation.Entity = null;
						previousValue.License_OpenCircuit_Base_Installation1.Remove(this);
					}
					this._JobInstallation.Entity = value;
					if ((value != null))
					{
						value.License_OpenCircuit_Base_Installation1.Add(this);
						this._JobInstallationId = value.InstallationId;
					}
					else
					{
						this._JobInstallationId = default(string);
					}
					this.SendPropertyChanged("JobInstallation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.License_OpenCircuit.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.License_OpenCircuit.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Base_Unit1", Storage="_JobUnit", ThisKey="JobUnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit JobUnit
		{
			get
			{
				return this._JobUnit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._JobUnit.Entity;
				if (((previousValue != value) 
							|| (this._JobUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobUnit.Entity = null;
						previousValue.License_OpenCircuit_Base_Unit1.Remove(this);
					}
					this._JobUnit.Entity = value;
					if ((value != null))
					{
						value.License_OpenCircuit_Base_Unit1.Add(this);
						this._JobUnitId = value.UnitId;
					}
					else
					{
						this._JobUnitId = default(string);
					}
					this.SendPropertyChanged("JobUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User", Storage="_Sys_User", ThisKey="ApplyManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.License_OpenCircuit.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.License_OpenCircuit.Add(this);
						this._ApplyManId = value.UserId;
					}
					else
					{
						this._ApplyManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_AcceptanceMan", Storage="_AcceptanceMan", ThisKey="AcceptanceManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User AcceptanceMan
		{
			get
			{
				return this._AcceptanceMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._AcceptanceMan.Entity;
				if (((previousValue != value) 
							|| (this._AcceptanceMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcceptanceMan.Entity = null;
						previousValue.License_OpenCircuit_Sys_User_AcceptanceMan.Remove(this);
					}
					this._AcceptanceMan.Entity = value;
					if ((value != null))
					{
						value.License_OpenCircuit_Sys_User_AcceptanceMan.Add(this);
						this._AcceptanceManId = value.UserId;
					}
					else
					{
						this._AcceptanceManId = default(string);
					}
					this.SendPropertyChanged("AcceptanceMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_ApplyMan1", Storage="_ApplyMan1", ThisKey="ApplyMan1Id", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ApplyMan1
		{
			get
			{
				return this._ApplyMan1.Entity;
			}
			set
			{
				Sys_User previousValue = this._ApplyMan1.Entity;
				if (((previousValue != value) 
							|| (this._ApplyMan1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplyMan1.Entity = null;
						previousValue.License_OpenCircuit_Sys_User_ApplyMan1.Remove(this);
					}
					this._ApplyMan1.Entity = value;
					if ((value != null))
					{
						value.License_OpenCircuit_Sys_User_ApplyMan1.Add(this);
						this._ApplyMan1Id = value.UserId;
					}
					else
					{
						this._ApplyMan1Id = default(string);
					}
					this.SendPropertyChanged("ApplyMan1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_ApplyUnitMan", Storage="_ApplyUnitMan", ThisKey="ApplyUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ApplyUnitMan
		{
			get
			{
				return this._ApplyUnitMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ApplyUnitMan.Entity;
				if (((previousValue != value) 
							|| (this._ApplyUnitMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplyUnitMan.Entity = null;
						previousValue.License_OpenCircuit_Sys_User_ApplyUnitMan.Remove(this);
					}
					this._ApplyUnitMan.Entity = value;
					if ((value != null))
					{
						value.License_OpenCircuit_Sys_User_ApplyUnitMan.Add(this);
						this._ApplyUnitManId = value.UserId;
					}
					else
					{
						this._ApplyUnitManId = default(string);
					}
					this.SendPropertyChanged("ApplyUnitMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_ApprovalDepMan", Storage="_ApprovalDepMan", ThisKey="ApprovalDepManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ApprovalDepMan
		{
			get
			{
				return this._ApprovalDepMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ApprovalDepMan.Entity;
				if (((previousValue != value) 
							|| (this._ApprovalDepMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApprovalDepMan.Entity = null;
						previousValue.License_OpenCircuit_Sys_User_ApprovalDepMan.Remove(this);
					}
					this._ApprovalDepMan.Entity = value;
					if ((value != null))
					{
						value.License_OpenCircuit_Sys_User_ApprovalDepMan.Add(this);
						this._ApprovalDepManId = value.UserId;
					}
					else
					{
						this._ApprovalDepManId = default(string);
					}
					this.SendPropertyChanged("ApprovalDepMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_ApproveUnitMan", Storage="_JobUnitMan", ThisKey="JobUnitManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User JobUnitMan
		{
			get
			{
				return this._JobUnitMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._JobUnitMan.Entity;
				if (((previousValue != value) 
							|| (this._JobUnitMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobUnitMan.Entity = null;
						previousValue.License_OpenCircuit_Sys_User_ApproveUnitMan.Remove(this);
					}
					this._JobUnitMan.Entity = value;
					if ((value != null))
					{
						value.License_OpenCircuit_Sys_User_ApproveUnitMan.Add(this);
						this._JobUnitManId = value.UserId;
					}
					else
					{
						this._JobUnitManId = default(string);
					}
					this.SendPropertyChanged("JobUnitMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_CompileMan", Storage="_CompileMan", ThisKey="CompileManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User CompileMan
		{
			get
			{
				return this._CompileMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._CompileMan.Entity;
				if (((previousValue != value) 
							|| (this._CompileMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompileMan.Entity = null;
						previousValue.License_OpenCircuit_Sys_User_CompileMan.Remove(this);
					}
					this._CompileMan.Entity = value;
					if ((value != null))
					{
						value.License_OpenCircuit_Sys_User_CompileMan.Add(this);
						this._CompileManId = value.UserId;
					}
					else
					{
						this._CompileManId = default(string);
					}
					this.SendPropertyChanged("CompileMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_JobManager", Storage="_JobManager", ThisKey="JobManagerId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User JobManager
		{
			get
			{
				return this._JobManager.Entity;
			}
			set
			{
				Sys_User previousValue = this._JobManager.Entity;
				if (((previousValue != value) 
							|| (this._JobManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobManager.Entity = null;
						previousValue.License_OpenCircuit_Sys_User_JobManager.Remove(this);
					}
					this._JobManager.Entity = value;
					if ((value != null))
					{
						value.License_OpenCircuit_Sys_User_JobManager.Add(this);
						this._JobManagerId = value.UserId;
					}
					else
					{
						this._JobManagerId = default(string);
					}
					this.SendPropertyChanged("JobManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_MeasuresMan", Storage="_MeasuresMan", ThisKey="MeasuresManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User MeasuresMan
		{
			get
			{
				return this._MeasuresMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._MeasuresMan.Entity;
				if (((previousValue != value) 
							|| (this._MeasuresMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeasuresMan.Entity = null;
						previousValue.License_OpenCircuit_Sys_User_MeasuresMan.Remove(this);
					}
					this._MeasuresMan.Entity = value;
					if ((value != null))
					{
						value.License_OpenCircuit_Sys_User_MeasuresMan.Add(this);
						this._MeasuresManId = value.UserId;
					}
					else
					{
						this._MeasuresManId = default(string);
					}
					this.SendPropertyChanged("MeasuresMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_SafeEduMan", Storage="_SafeEduMan", ThisKey="SafeEduManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User SafeEduMan
		{
			get
			{
				return this._SafeEduMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._SafeEduMan.Entity;
				if (((previousValue != value) 
							|| (this._SafeEduMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SafeEduMan.Entity = null;
						previousValue.License_OpenCircuit_Sys_User_SafeEduMan.Remove(this);
					}
					this._SafeEduMan.Entity = value;
					if ((value != null))
					{
						value.License_OpenCircuit_Sys_User_SafeEduMan.Add(this);
						this._SafeEduManId = value.UserId;
					}
					else
					{
						this._SafeEduManId = default(string);
					}
					this.SendPropertyChanged("SafeEduMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User2", Storage="_CountersignMan", ThisKey="CountersignManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User CountersignMan
		{
			get
			{
				return this._CountersignMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._CountersignMan.Entity;
				if (((previousValue != value) 
							|| (this._CountersignMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CountersignMan.Entity = null;
						previousValue.License_OpenCircuit_Sys_User2.Remove(this);
					}
					this._CountersignMan.Entity = value;
					if ((value != null))
					{
						value.License_OpenCircuit_Sys_User2.Add(this);
						this._CountersignManId = value.UserId;
					}
					else
					{
						this._CountersignManId = default(string);
					}
					this.SendPropertyChanged("CountersignMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User3", Storage="_License_OpenCircuit_Sys_User3", ThisKey="AcceptanceManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User License_OpenCircuit_Sys_User3
		{
			get
			{
				return this._License_OpenCircuit_Sys_User3.Entity;
			}
			set
			{
				Sys_User previousValue = this._License_OpenCircuit_Sys_User3.Entity;
				if (((previousValue != value) 
							|| (this._License_OpenCircuit_Sys_User3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._License_OpenCircuit_Sys_User3.Entity = null;
						previousValue.License_OpenCircuit_Sys_User3.Remove(this);
					}
					this._License_OpenCircuit_Sys_User3.Entity = value;
					if ((value != null))
					{
						value.License_OpenCircuit_Sys_User3.Add(this);
						this._AcceptanceManId = value.UserId;
					}
					else
					{
						this._AcceptanceManId = default(string);
					}
					this.SendPropertyChanged("License_OpenCircuit_Sys_User3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.License_Overhaul")]
	public partial class License_Overhaul : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OverhaulId;
		
		private string _LicenseCode;
		
		private System.Nullable<System.DateTime> _SendTicketTime;
		
		private string _RiskGrade;
		
		private string _InstallationId;
		
		private string _DevicePositionNum;
		
		private string _DeviceName;
		
		private string _UnitId;
		
		private string _TeamGroupId;
		
		private string _OverhaulCategory;
		
		private System.Nullable<bool> _IsMonthlyPlan;
		
		private string _EstimateTime1;
		
		private string _EstimateTime2;
		
		private string _EstimateTime3;
		
		private string _EstimateTime4;
		
		private string _ActualTime1;
		
		private string _ActualTime2;
		
		private string _ActualTime3;
		
		private string _ActualTime4;
		
		private string _OverhaulContent;
		
		private string _CompileManId;
		
		private System.Nullable<System.DateTime> _CompileTime;
		
		private string _AuditorId;
		
		private System.Nullable<System.DateTime> _AuditorTime;
		
		private string _ProcessManId;
		
		private System.Nullable<System.DateTime> _ProcessManTime;
		
		private string _Remarks;
		
		private System.Nullable<System.DateTime> _QualifiedTime;
		
		private string _ProcessMonitorId;
		
		private System.Nullable<System.DateTime> _ProcessMonitorTime;
		
		private string _HAZID;
		
		private string _TrainEdu;
		
		private string _OverhaulHeadId;
		
		private System.Nullable<System.DateTime> _OverhaulHeadTime;
		
		private string _OverhaulManIds;
		
		private System.Nullable<System.DateTime> _OverhaulManTime;
		
		private string _CheckOverhaulHeadId;
		
		private System.Nullable<System.DateTime> _CheckOverhaulHeadTime;
		
		private string _CheckProcessMonitorId;
		
		private System.Nullable<System.DateTime> _CheckProcessMonitorTime;
		
		private string _AttachUrl;
		
		private string _States;
		
		private System.Nullable<System.DateTime> _PauseTime;
		
		private string _PauseDescribe;
		
		private string _HAZIDName;
		
		private string _OverhaulUnit;
		
		private string _JobActivityId;
		
		private string _OverhaulType;
		
		private string _GeoCoordinate;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_JobActivity> _Base_JobActivity;
		
		private EntityRef<Base_TeamGroup> _Base_TeamGroup;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _CheckOverhaulHead;
		
		private EntityRef<Sys_User> _CheckProcessMonitor;
		
		private EntityRef<Sys_User> _CompileMan;
		
		private EntityRef<Sys_User> _OverhaulHead;
		
		private EntityRef<Sys_User> _ProcessMan;
		
		private EntityRef<Sys_User> _ProcessMonitor;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOverhaulIdChanging(string value);
    partial void OnOverhaulIdChanged();
    partial void OnLicenseCodeChanging(string value);
    partial void OnLicenseCodeChanged();
    partial void OnSendTicketTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSendTicketTimeChanged();
    partial void OnRiskGradeChanging(string value);
    partial void OnRiskGradeChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnDevicePositionNumChanging(string value);
    partial void OnDevicePositionNumChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnTeamGroupIdChanging(string value);
    partial void OnTeamGroupIdChanged();
    partial void OnOverhaulCategoryChanging(string value);
    partial void OnOverhaulCategoryChanged();
    partial void OnIsMonthlyPlanChanging(System.Nullable<bool> value);
    partial void OnIsMonthlyPlanChanged();
    partial void OnEstimateTime1Changing(string value);
    partial void OnEstimateTime1Changed();
    partial void OnEstimateTime2Changing(string value);
    partial void OnEstimateTime2Changed();
    partial void OnEstimateTime3Changing(string value);
    partial void OnEstimateTime3Changed();
    partial void OnEstimateTime4Changing(string value);
    partial void OnEstimateTime4Changed();
    partial void OnActualTime1Changing(string value);
    partial void OnActualTime1Changed();
    partial void OnActualTime2Changing(string value);
    partial void OnActualTime2Changed();
    partial void OnActualTime3Changing(string value);
    partial void OnActualTime3Changed();
    partial void OnActualTime4Changing(string value);
    partial void OnActualTime4Changed();
    partial void OnOverhaulContentChanging(string value);
    partial void OnOverhaulContentChanged();
    partial void OnCompileManIdChanging(string value);
    partial void OnCompileManIdChanged();
    partial void OnCompileTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileTimeChanged();
    partial void OnAuditorIdChanging(string value);
    partial void OnAuditorIdChanged();
    partial void OnAuditorTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditorTimeChanged();
    partial void OnProcessManIdChanging(string value);
    partial void OnProcessManIdChanged();
    partial void OnProcessManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessManTimeChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnQualifiedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnQualifiedTimeChanged();
    partial void OnProcessMonitorIdChanging(string value);
    partial void OnProcessMonitorIdChanged();
    partial void OnProcessMonitorTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessMonitorTimeChanged();
    partial void OnHAZIDChanging(string value);
    partial void OnHAZIDChanged();
    partial void OnTrainEduChanging(string value);
    partial void OnTrainEduChanged();
    partial void OnOverhaulHeadIdChanging(string value);
    partial void OnOverhaulHeadIdChanged();
    partial void OnOverhaulHeadTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOverhaulHeadTimeChanged();
    partial void OnOverhaulManIdsChanging(string value);
    partial void OnOverhaulManIdsChanged();
    partial void OnOverhaulManTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOverhaulManTimeChanged();
    partial void OnCheckOverhaulHeadIdChanging(string value);
    partial void OnCheckOverhaulHeadIdChanged();
    partial void OnCheckOverhaulHeadTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckOverhaulHeadTimeChanged();
    partial void OnCheckProcessMonitorIdChanging(string value);
    partial void OnCheckProcessMonitorIdChanged();
    partial void OnCheckProcessMonitorTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckProcessMonitorTimeChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnPauseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPauseTimeChanged();
    partial void OnPauseDescribeChanging(string value);
    partial void OnPauseDescribeChanged();
    partial void OnHAZIDNameChanging(string value);
    partial void OnHAZIDNameChanged();
    partial void OnOverhaulUnitChanging(string value);
    partial void OnOverhaulUnitChanged();
    partial void OnJobActivityIdChanging(string value);
    partial void OnJobActivityIdChanged();
    partial void OnOverhaulTypeChanging(string value);
    partial void OnOverhaulTypeChanged();
    partial void OnGeoCoordinateChanging(string value);
    partial void OnGeoCoordinateChanged();
    #endregion
		
		public License_Overhaul()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._Base_JobActivity = default(EntityRef<Base_JobActivity>);
			this._Base_TeamGroup = default(EntityRef<Base_TeamGroup>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._CheckOverhaulHead = default(EntityRef<Sys_User>);
			this._CheckProcessMonitor = default(EntityRef<Sys_User>);
			this._CompileMan = default(EntityRef<Sys_User>);
			this._OverhaulHead = default(EntityRef<Sys_User>);
			this._ProcessMan = default(EntityRef<Sys_User>);
			this._ProcessMonitor = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverhaulId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OverhaulId
		{
			get
			{
				return this._OverhaulId;
			}
			set
			{
				if ((this._OverhaulId != value))
				{
					this.OnOverhaulIdChanging(value);
					this.SendPropertyChanging();
					this._OverhaulId = value;
					this.SendPropertyChanged("OverhaulId");
					this.OnOverhaulIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(50)")]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this.OnLicenseCodeChanging(value);
					this.SendPropertyChanging();
					this._LicenseCode = value;
					this.SendPropertyChanged("LicenseCode");
					this.OnLicenseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendTicketTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendTicketTime
		{
			get
			{
				return this._SendTicketTime;
			}
			set
			{
				if ((this._SendTicketTime != value))
				{
					this.OnSendTicketTimeChanging(value);
					this.SendPropertyChanging();
					this._SendTicketTime = value;
					this.SendPropertyChanged("SendTicketTime");
					this.OnSendTicketTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskGrade", DbType="NVarChar(10)")]
		public string RiskGrade
		{
			get
			{
				return this._RiskGrade;
			}
			set
			{
				if ((this._RiskGrade != value))
				{
					this.OnRiskGradeChanging(value);
					this.SendPropertyChanging();
					this._RiskGrade = value;
					this.SendPropertyChanged("RiskGrade");
					this.OnRiskGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DevicePositionNum", DbType="NVarChar(50)")]
		public string DevicePositionNum
		{
			get
			{
				return this._DevicePositionNum;
			}
			set
			{
				if ((this._DevicePositionNum != value))
				{
					this.OnDevicePositionNumChanging(value);
					this.SendPropertyChanging();
					this._DevicePositionNum = value;
					this.SendPropertyChanged("DevicePositionNum");
					this.OnDevicePositionNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="NVarChar(100)")]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupId", DbType="NVarChar(50)")]
		public string TeamGroupId
		{
			get
			{
				return this._TeamGroupId;
			}
			set
			{
				if ((this._TeamGroupId != value))
				{
					if (this._Base_TeamGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamGroupIdChanging(value);
					this.SendPropertyChanging();
					this._TeamGroupId = value;
					this.SendPropertyChanged("TeamGroupId");
					this.OnTeamGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverhaulCategory", DbType="NVarChar(50)")]
		public string OverhaulCategory
		{
			get
			{
				return this._OverhaulCategory;
			}
			set
			{
				if ((this._OverhaulCategory != value))
				{
					this.OnOverhaulCategoryChanging(value);
					this.SendPropertyChanging();
					this._OverhaulCategory = value;
					this.SendPropertyChanged("OverhaulCategory");
					this.OnOverhaulCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMonthlyPlan", DbType="Bit")]
		public System.Nullable<bool> IsMonthlyPlan
		{
			get
			{
				return this._IsMonthlyPlan;
			}
			set
			{
				if ((this._IsMonthlyPlan != value))
				{
					this.OnIsMonthlyPlanChanging(value);
					this.SendPropertyChanging();
					this._IsMonthlyPlan = value;
					this.SendPropertyChanged("IsMonthlyPlan");
					this.OnIsMonthlyPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimateTime1", DbType="NVarChar(50)")]
		public string EstimateTime1
		{
			get
			{
				return this._EstimateTime1;
			}
			set
			{
				if ((this._EstimateTime1 != value))
				{
					this.OnEstimateTime1Changing(value);
					this.SendPropertyChanging();
					this._EstimateTime1 = value;
					this.SendPropertyChanged("EstimateTime1");
					this.OnEstimateTime1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimateTime2", DbType="NVarChar(50)")]
		public string EstimateTime2
		{
			get
			{
				return this._EstimateTime2;
			}
			set
			{
				if ((this._EstimateTime2 != value))
				{
					this.OnEstimateTime2Changing(value);
					this.SendPropertyChanging();
					this._EstimateTime2 = value;
					this.SendPropertyChanged("EstimateTime2");
					this.OnEstimateTime2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimateTime3", DbType="NVarChar(50)")]
		public string EstimateTime3
		{
			get
			{
				return this._EstimateTime3;
			}
			set
			{
				if ((this._EstimateTime3 != value))
				{
					this.OnEstimateTime3Changing(value);
					this.SendPropertyChanging();
					this._EstimateTime3 = value;
					this.SendPropertyChanged("EstimateTime3");
					this.OnEstimateTime3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimateTime4", DbType="NVarChar(50)")]
		public string EstimateTime4
		{
			get
			{
				return this._EstimateTime4;
			}
			set
			{
				if ((this._EstimateTime4 != value))
				{
					this.OnEstimateTime4Changing(value);
					this.SendPropertyChanging();
					this._EstimateTime4 = value;
					this.SendPropertyChanged("EstimateTime4");
					this.OnEstimateTime4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualTime1", DbType="NVarChar(50)")]
		public string ActualTime1
		{
			get
			{
				return this._ActualTime1;
			}
			set
			{
				if ((this._ActualTime1 != value))
				{
					this.OnActualTime1Changing(value);
					this.SendPropertyChanging();
					this._ActualTime1 = value;
					this.SendPropertyChanged("ActualTime1");
					this.OnActualTime1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualTime2", DbType="NVarChar(50)")]
		public string ActualTime2
		{
			get
			{
				return this._ActualTime2;
			}
			set
			{
				if ((this._ActualTime2 != value))
				{
					this.OnActualTime2Changing(value);
					this.SendPropertyChanging();
					this._ActualTime2 = value;
					this.SendPropertyChanged("ActualTime2");
					this.OnActualTime2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualTime3", DbType="NVarChar(50)")]
		public string ActualTime3
		{
			get
			{
				return this._ActualTime3;
			}
			set
			{
				if ((this._ActualTime3 != value))
				{
					this.OnActualTime3Changing(value);
					this.SendPropertyChanging();
					this._ActualTime3 = value;
					this.SendPropertyChanged("ActualTime3");
					this.OnActualTime3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualTime4", DbType="NVarChar(50)")]
		public string ActualTime4
		{
			get
			{
				return this._ActualTime4;
			}
			set
			{
				if ((this._ActualTime4 != value))
				{
					this.OnActualTime4Changing(value);
					this.SendPropertyChanging();
					this._ActualTime4 = value;
					this.SendPropertyChanged("ActualTime4");
					this.OnActualTime4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverhaulContent", DbType="NVarChar(500)")]
		public string OverhaulContent
		{
			get
			{
				return this._OverhaulContent;
			}
			set
			{
				if ((this._OverhaulContent != value))
				{
					this.OnOverhaulContentChanging(value);
					this.SendPropertyChanging();
					this._OverhaulContent = value;
					this.SendPropertyChanged("OverhaulContent");
					this.OnOverhaulContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManId", DbType="NVarChar(50)")]
		public string CompileManId
		{
			get
			{
				return this._CompileManId;
			}
			set
			{
				if ((this._CompileManId != value))
				{
					if (this._CompileMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManIdChanging(value);
					this.SendPropertyChanging();
					this._CompileManId = value;
					this.SendPropertyChanged("CompileManId");
					this.OnCompileManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileTime
		{
			get
			{
				return this._CompileTime;
			}
			set
			{
				if ((this._CompileTime != value))
				{
					this.OnCompileTimeChanging(value);
					this.SendPropertyChanging();
					this._CompileTime = value;
					this.SendPropertyChanged("CompileTime");
					this.OnCompileTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorId", DbType="NVarChar(50)")]
		public string AuditorId
		{
			get
			{
				return this._AuditorId;
			}
			set
			{
				if ((this._AuditorId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditorIdChanging(value);
					this.SendPropertyChanging();
					this._AuditorId = value;
					this.SendPropertyChanged("AuditorId");
					this.OnAuditorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditorTime
		{
			get
			{
				return this._AuditorTime;
			}
			set
			{
				if ((this._AuditorTime != value))
				{
					this.OnAuditorTimeChanging(value);
					this.SendPropertyChanging();
					this._AuditorTime = value;
					this.SendPropertyChanged("AuditorTime");
					this.OnAuditorTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessManId", DbType="NVarChar(50)")]
		public string ProcessManId
		{
			get
			{
				return this._ProcessManId;
			}
			set
			{
				if ((this._ProcessManId != value))
				{
					if (this._ProcessMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcessManIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessManId = value;
					this.SendPropertyChanged("ProcessManId");
					this.OnProcessManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessManTime
		{
			get
			{
				return this._ProcessManTime;
			}
			set
			{
				if ((this._ProcessManTime != value))
				{
					this.OnProcessManTimeChanging(value);
					this.SendPropertyChanging();
					this._ProcessManTime = value;
					this.SendPropertyChanged("ProcessManTime");
					this.OnProcessManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(500)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualifiedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> QualifiedTime
		{
			get
			{
				return this._QualifiedTime;
			}
			set
			{
				if ((this._QualifiedTime != value))
				{
					this.OnQualifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._QualifiedTime = value;
					this.SendPropertyChanged("QualifiedTime");
					this.OnQualifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessMonitorId", DbType="NVarChar(50)")]
		public string ProcessMonitorId
		{
			get
			{
				return this._ProcessMonitorId;
			}
			set
			{
				if ((this._ProcessMonitorId != value))
				{
					if (this._ProcessMonitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcessMonitorIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessMonitorId = value;
					this.SendPropertyChanged("ProcessMonitorId");
					this.OnProcessMonitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessMonitorTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessMonitorTime
		{
			get
			{
				return this._ProcessMonitorTime;
			}
			set
			{
				if ((this._ProcessMonitorTime != value))
				{
					this.OnProcessMonitorTimeChanging(value);
					this.SendPropertyChanging();
					this._ProcessMonitorTime = value;
					this.SendPropertyChanged("ProcessMonitorTime");
					this.OnProcessMonitorTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZID", DbType="NVarChar(4000)")]
		public string HAZID
		{
			get
			{
				return this._HAZID;
			}
			set
			{
				if ((this._HAZID != value))
				{
					this.OnHAZIDChanging(value);
					this.SendPropertyChanging();
					this._HAZID = value;
					this.SendPropertyChanged("HAZID");
					this.OnHAZIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainEdu", DbType="NVarChar(500)")]
		public string TrainEdu
		{
			get
			{
				return this._TrainEdu;
			}
			set
			{
				if ((this._TrainEdu != value))
				{
					this.OnTrainEduChanging(value);
					this.SendPropertyChanging();
					this._TrainEdu = value;
					this.SendPropertyChanged("TrainEdu");
					this.OnTrainEduChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverhaulHeadId", DbType="NVarChar(50)")]
		public string OverhaulHeadId
		{
			get
			{
				return this._OverhaulHeadId;
			}
			set
			{
				if ((this._OverhaulHeadId != value))
				{
					if (this._OverhaulHead.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOverhaulHeadIdChanging(value);
					this.SendPropertyChanging();
					this._OverhaulHeadId = value;
					this.SendPropertyChanged("OverhaulHeadId");
					this.OnOverhaulHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverhaulHeadTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OverhaulHeadTime
		{
			get
			{
				return this._OverhaulHeadTime;
			}
			set
			{
				if ((this._OverhaulHeadTime != value))
				{
					this.OnOverhaulHeadTimeChanging(value);
					this.SendPropertyChanging();
					this._OverhaulHeadTime = value;
					this.SendPropertyChanged("OverhaulHeadTime");
					this.OnOverhaulHeadTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverhaulManIds", DbType="NVarChar(500)")]
		public string OverhaulManIds
		{
			get
			{
				return this._OverhaulManIds;
			}
			set
			{
				if ((this._OverhaulManIds != value))
				{
					this.OnOverhaulManIdsChanging(value);
					this.SendPropertyChanging();
					this._OverhaulManIds = value;
					this.SendPropertyChanged("OverhaulManIds");
					this.OnOverhaulManIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverhaulManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OverhaulManTime
		{
			get
			{
				return this._OverhaulManTime;
			}
			set
			{
				if ((this._OverhaulManTime != value))
				{
					this.OnOverhaulManTimeChanging(value);
					this.SendPropertyChanging();
					this._OverhaulManTime = value;
					this.SendPropertyChanged("OverhaulManTime");
					this.OnOverhaulManTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOverhaulHeadId", DbType="NVarChar(50)")]
		public string CheckOverhaulHeadId
		{
			get
			{
				return this._CheckOverhaulHeadId;
			}
			set
			{
				if ((this._CheckOverhaulHeadId != value))
				{
					if (this._CheckOverhaulHead.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckOverhaulHeadIdChanging(value);
					this.SendPropertyChanging();
					this._CheckOverhaulHeadId = value;
					this.SendPropertyChanged("CheckOverhaulHeadId");
					this.OnCheckOverhaulHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOverhaulHeadTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckOverhaulHeadTime
		{
			get
			{
				return this._CheckOverhaulHeadTime;
			}
			set
			{
				if ((this._CheckOverhaulHeadTime != value))
				{
					this.OnCheckOverhaulHeadTimeChanging(value);
					this.SendPropertyChanging();
					this._CheckOverhaulHeadTime = value;
					this.SendPropertyChanged("CheckOverhaulHeadTime");
					this.OnCheckOverhaulHeadTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckProcessMonitorId", DbType="NVarChar(50)")]
		public string CheckProcessMonitorId
		{
			get
			{
				return this._CheckProcessMonitorId;
			}
			set
			{
				if ((this._CheckProcessMonitorId != value))
				{
					if (this._CheckProcessMonitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckProcessMonitorIdChanging(value);
					this.SendPropertyChanging();
					this._CheckProcessMonitorId = value;
					this.SendPropertyChanged("CheckProcessMonitorId");
					this.OnCheckProcessMonitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckProcessMonitorTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckProcessMonitorTime
		{
			get
			{
				return this._CheckProcessMonitorTime;
			}
			set
			{
				if ((this._CheckProcessMonitorTime != value))
				{
					this.OnCheckProcessMonitorTimeChanging(value);
					this.SendPropertyChanging();
					this._CheckProcessMonitorTime = value;
					this.SendPropertyChanged("CheckProcessMonitorTime");
					this.OnCheckProcessMonitorTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PauseTime
		{
			get
			{
				return this._PauseTime;
			}
			set
			{
				if ((this._PauseTime != value))
				{
					this.OnPauseTimeChanging(value);
					this.SendPropertyChanging();
					this._PauseTime = value;
					this.SendPropertyChanged("PauseTime");
					this.OnPauseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseDescribe", DbType="NVarChar(4000)")]
		public string PauseDescribe
		{
			get
			{
				return this._PauseDescribe;
			}
			set
			{
				if ((this._PauseDescribe != value))
				{
					this.OnPauseDescribeChanging(value);
					this.SendPropertyChanging();
					this._PauseDescribe = value;
					this.SendPropertyChanged("PauseDescribe");
					this.OnPauseDescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZIDName", DbType="NVarChar(4000)")]
		public string HAZIDName
		{
			get
			{
				return this._HAZIDName;
			}
			set
			{
				if ((this._HAZIDName != value))
				{
					this.OnHAZIDNameChanging(value);
					this.SendPropertyChanging();
					this._HAZIDName = value;
					this.SendPropertyChanged("HAZIDName");
					this.OnHAZIDNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverhaulUnit", DbType="NVarChar(500)")]
		public string OverhaulUnit
		{
			get
			{
				return this._OverhaulUnit;
			}
			set
			{
				if ((this._OverhaulUnit != value))
				{
					this.OnOverhaulUnitChanging(value);
					this.SendPropertyChanging();
					this._OverhaulUnit = value;
					this.SendPropertyChanged("OverhaulUnit");
					this.OnOverhaulUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobActivityId", DbType="NVarChar(50)")]
		public string JobActivityId
		{
			get
			{
				return this._JobActivityId;
			}
			set
			{
				if ((this._JobActivityId != value))
				{
					if (this._Base_JobActivity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobActivityIdChanging(value);
					this.SendPropertyChanging();
					this._JobActivityId = value;
					this.SendPropertyChanged("JobActivityId");
					this.OnJobActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverhaulType", DbType="VarChar(1)")]
		public string OverhaulType
		{
			get
			{
				return this._OverhaulType;
			}
			set
			{
				if ((this._OverhaulType != value))
				{
					this.OnOverhaulTypeChanging(value);
					this.SendPropertyChanging();
					this._OverhaulType = value;
					this.SendPropertyChanged("OverhaulType");
					this.OnOverhaulTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoCoordinate", DbType="NVarChar(50)")]
		public string GeoCoordinate
		{
			get
			{
				return this._GeoCoordinate;
			}
			set
			{
				if ((this._GeoCoordinate != value))
				{
					this.OnGeoCoordinateChanging(value);
					this.SendPropertyChanging();
					this._GeoCoordinate = value;
					this.SendPropertyChanged("GeoCoordinate");
					this.OnGeoCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.License_Overhaul.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.License_Overhaul.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Base_JobActivity", Storage="_Base_JobActivity", ThisKey="JobActivityId", OtherKey="JobActivityId", IsForeignKey=true)]
		public Base_JobActivity Base_JobActivity
		{
			get
			{
				return this._Base_JobActivity.Entity;
			}
			set
			{
				Base_JobActivity previousValue = this._Base_JobActivity.Entity;
				if (((previousValue != value) 
							|| (this._Base_JobActivity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_JobActivity.Entity = null;
						previousValue.License_Overhaul.Remove(this);
					}
					this._Base_JobActivity.Entity = value;
					if ((value != null))
					{
						value.License_Overhaul.Add(this);
						this._JobActivityId = value.JobActivityId;
					}
					else
					{
						this._JobActivityId = default(string);
					}
					this.SendPropertyChanged("Base_JobActivity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Base_TeamGroup_TeamGroup", Storage="_Base_TeamGroup", ThisKey="TeamGroupId", OtherKey="TeamGroupId", IsForeignKey=true)]
		public Base_TeamGroup Base_TeamGroup
		{
			get
			{
				return this._Base_TeamGroup.Entity;
			}
			set
			{
				Base_TeamGroup previousValue = this._Base_TeamGroup.Entity;
				if (((previousValue != value) 
							|| (this._Base_TeamGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_TeamGroup.Entity = null;
						previousValue.License_Overhaul.Remove(this);
					}
					this._Base_TeamGroup.Entity = value;
					if ((value != null))
					{
						value.License_Overhaul.Add(this);
						this._TeamGroupId = value.TeamGroupId;
					}
					else
					{
						this._TeamGroupId = default(string);
					}
					this.SendPropertyChanged("Base_TeamGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.License_Overhaul.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.License_Overhaul.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Sys_User_Auditor", Storage="_Sys_User", ThisKey="AuditorId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.License_Overhaul.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.License_Overhaul.Add(this);
						this._AuditorId = value.UserId;
					}
					else
					{
						this._AuditorId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Sys_User_CheckOverhaulHead", Storage="_CheckOverhaulHead", ThisKey="CheckOverhaulHeadId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User CheckOverhaulHead
		{
			get
			{
				return this._CheckOverhaulHead.Entity;
			}
			set
			{
				Sys_User previousValue = this._CheckOverhaulHead.Entity;
				if (((previousValue != value) 
							|| (this._CheckOverhaulHead.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CheckOverhaulHead.Entity = null;
						previousValue.License_Overhaul_Sys_User_CheckOverhaulHead.Remove(this);
					}
					this._CheckOverhaulHead.Entity = value;
					if ((value != null))
					{
						value.License_Overhaul_Sys_User_CheckOverhaulHead.Add(this);
						this._CheckOverhaulHeadId = value.UserId;
					}
					else
					{
						this._CheckOverhaulHeadId = default(string);
					}
					this.SendPropertyChanged("CheckOverhaulHead");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Sys_User_CheckProcessMonitor", Storage="_CheckProcessMonitor", ThisKey="CheckProcessMonitorId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User CheckProcessMonitor
		{
			get
			{
				return this._CheckProcessMonitor.Entity;
			}
			set
			{
				Sys_User previousValue = this._CheckProcessMonitor.Entity;
				if (((previousValue != value) 
							|| (this._CheckProcessMonitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CheckProcessMonitor.Entity = null;
						previousValue.License_Overhaul_Sys_User_CheckProcessMonitor.Remove(this);
					}
					this._CheckProcessMonitor.Entity = value;
					if ((value != null))
					{
						value.License_Overhaul_Sys_User_CheckProcessMonitor.Add(this);
						this._CheckProcessMonitorId = value.UserId;
					}
					else
					{
						this._CheckProcessMonitorId = default(string);
					}
					this.SendPropertyChanged("CheckProcessMonitor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Sys_User_CompileMan", Storage="_CompileMan", ThisKey="CompileManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User CompileMan
		{
			get
			{
				return this._CompileMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._CompileMan.Entity;
				if (((previousValue != value) 
							|| (this._CompileMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompileMan.Entity = null;
						previousValue.License_Overhaul_Sys_User_CompileMan.Remove(this);
					}
					this._CompileMan.Entity = value;
					if ((value != null))
					{
						value.License_Overhaul_Sys_User_CompileMan.Add(this);
						this._CompileManId = value.UserId;
					}
					else
					{
						this._CompileManId = default(string);
					}
					this.SendPropertyChanged("CompileMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Sys_User_OverhaulHead", Storage="_OverhaulHead", ThisKey="OverhaulHeadId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User OverhaulHead
		{
			get
			{
				return this._OverhaulHead.Entity;
			}
			set
			{
				Sys_User previousValue = this._OverhaulHead.Entity;
				if (((previousValue != value) 
							|| (this._OverhaulHead.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OverhaulHead.Entity = null;
						previousValue.License_Overhaul_Sys_User_OverhaulHead.Remove(this);
					}
					this._OverhaulHead.Entity = value;
					if ((value != null))
					{
						value.License_Overhaul_Sys_User_OverhaulHead.Add(this);
						this._OverhaulHeadId = value.UserId;
					}
					else
					{
						this._OverhaulHeadId = default(string);
					}
					this.SendPropertyChanged("OverhaulHead");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Sys_User_ProcessMan", Storage="_ProcessMan", ThisKey="ProcessManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ProcessMan
		{
			get
			{
				return this._ProcessMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ProcessMan.Entity;
				if (((previousValue != value) 
							|| (this._ProcessMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProcessMan.Entity = null;
						previousValue.License_Overhaul_Sys_User_ProcessMan.Remove(this);
					}
					this._ProcessMan.Entity = value;
					if ((value != null))
					{
						value.License_Overhaul_Sys_User_ProcessMan.Add(this);
						this._ProcessManId = value.UserId;
					}
					else
					{
						this._ProcessManId = default(string);
					}
					this.SendPropertyChanged("ProcessMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Sys_User_ProcessMonitor", Storage="_ProcessMonitor", ThisKey="ProcessMonitorId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ProcessMonitor
		{
			get
			{
				return this._ProcessMonitor.Entity;
			}
			set
			{
				Sys_User previousValue = this._ProcessMonitor.Entity;
				if (((previousValue != value) 
							|| (this._ProcessMonitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProcessMonitor.Entity = null;
						previousValue.License_Overhaul_Sys_User_ProcessMonitor.Remove(this);
					}
					this._ProcessMonitor.Entity = value;
					if ((value != null))
					{
						value.License_Overhaul_Sys_User_ProcessMonitor.Add(this);
						this._ProcessMonitorId = value.UserId;
					}
					else
					{
						this._ProcessMonitorId = default(string);
					}
					this.SendPropertyChanged("ProcessMonitor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lock_SmartLock")]
	public partial class Lock_SmartLock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SmartLockId;
		
		private string _Code;
		
		private string _QRCodeUrl;
		
		private string _Place;
		
		private string _DeviceName;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private string _States;
		
		private EntitySet<Lock_SmartLockItem> _Lock_SmartLockItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSmartLockIdChanging(string value);
    partial void OnSmartLockIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnQRCodeUrlChanging(string value);
    partial void OnQRCodeUrlChanged();
    partial void OnPlaceChanging(string value);
    partial void OnPlaceChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public Lock_SmartLock()
		{
			this._Lock_SmartLockItem = new EntitySet<Lock_SmartLockItem>(new Action<Lock_SmartLockItem>(this.attach_Lock_SmartLockItem), new Action<Lock_SmartLockItem>(this.detach_Lock_SmartLockItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmartLockId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SmartLockId
		{
			get
			{
				return this._SmartLockId;
			}
			set
			{
				if ((this._SmartLockId != value))
				{
					this.OnSmartLockIdChanging(value);
					this.SendPropertyChanging();
					this._SmartLockId = value;
					this.SendPropertyChanged("SmartLockId");
					this.OnSmartLockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this.OnQRCodeUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeUrl = value;
					this.SendPropertyChanged("QRCodeUrl");
					this.OnQRCodeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place", DbType="NVarChar(500)")]
		public string Place
		{
			get
			{
				return this._Place;
			}
			set
			{
				if ((this._Place != value))
				{
					this.OnPlaceChanging(value);
					this.SendPropertyChanging();
					this._Place = value;
					this.SendPropertyChanged("Place");
					this.OnPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="NVarChar(500)")]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Lock_SmartLockItem_Lock_SmartLock", Storage="_Lock_SmartLockItem", ThisKey="SmartLockId", OtherKey="SmartLockId", DeleteRule="NO ACTION")]
		public EntitySet<Lock_SmartLockItem> Lock_SmartLockItem
		{
			get
			{
				return this._Lock_SmartLockItem;
			}
			set
			{
				this._Lock_SmartLockItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lock_SmartLockItem(Lock_SmartLockItem entity)
		{
			this.SendPropertyChanging();
			entity.Lock_SmartLock = this;
		}
		
		private void detach_Lock_SmartLockItem(Lock_SmartLockItem entity)
		{
			this.SendPropertyChanging();
			entity.Lock_SmartLock = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lock_SmartLockItem")]
	public partial class Lock_SmartLockItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SmartLockItemId;
		
		private string _SmartLockId;
		
		private string _Place;
		
		private string _DeviceName;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private string _ApplicantManId;
		
		private System.Nullable<System.DateTime> _ApplicantTime;
		
		private string _AuditManId;
		
		private System.Nullable<System.DateTime> _AuditTime;
		
		private string _States;
		
		private EntityRef<Lock_SmartLock> _Lock_SmartLock;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _AuditMan;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSmartLockItemIdChanging(string value);
    partial void OnSmartLockItemIdChanged();
    partial void OnSmartLockIdChanging(string value);
    partial void OnSmartLockIdChanged();
    partial void OnPlaceChanging(string value);
    partial void OnPlaceChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnApplicantManIdChanging(string value);
    partial void OnApplicantManIdChanged();
    partial void OnApplicantTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnApplicantTimeChanged();
    partial void OnAuditManIdChanging(string value);
    partial void OnAuditManIdChanged();
    partial void OnAuditTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditTimeChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public Lock_SmartLockItem()
		{
			this._Lock_SmartLock = default(EntityRef<Lock_SmartLock>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._AuditMan = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmartLockItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SmartLockItemId
		{
			get
			{
				return this._SmartLockItemId;
			}
			set
			{
				if ((this._SmartLockItemId != value))
				{
					this.OnSmartLockItemIdChanging(value);
					this.SendPropertyChanging();
					this._SmartLockItemId = value;
					this.SendPropertyChanged("SmartLockItemId");
					this.OnSmartLockItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmartLockId", DbType="NVarChar(50)")]
		public string SmartLockId
		{
			get
			{
				return this._SmartLockId;
			}
			set
			{
				if ((this._SmartLockId != value))
				{
					if (this._Lock_SmartLock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSmartLockIdChanging(value);
					this.SendPropertyChanging();
					this._SmartLockId = value;
					this.SendPropertyChanged("SmartLockId");
					this.OnSmartLockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place", DbType="NVarChar(500)")]
		public string Place
		{
			get
			{
				return this._Place;
			}
			set
			{
				if ((this._Place != value))
				{
					this.OnPlaceChanging(value);
					this.SendPropertyChanging();
					this._Place = value;
					this.SendPropertyChanged("Place");
					this.OnPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="NVarChar(500)")]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantManId", DbType="NVarChar(50)")]
		public string ApplicantManId
		{
			get
			{
				return this._ApplicantManId;
			}
			set
			{
				if ((this._ApplicantManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantManIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicantManId = value;
					this.SendPropertyChanged("ApplicantManId");
					this.OnApplicantManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApplicantTime
		{
			get
			{
				return this._ApplicantTime;
			}
			set
			{
				if ((this._ApplicantTime != value))
				{
					this.OnApplicantTimeChanging(value);
					this.SendPropertyChanging();
					this._ApplicantTime = value;
					this.SendPropertyChanged("ApplicantTime");
					this.OnApplicantTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditManId", DbType="NVarChar(50)")]
		public string AuditManId
		{
			get
			{
				return this._AuditManId;
			}
			set
			{
				if ((this._AuditManId != value))
				{
					if (this._AuditMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditManIdChanging(value);
					this.SendPropertyChanging();
					this._AuditManId = value;
					this.SendPropertyChanged("AuditManId");
					this.OnAuditManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditTime
		{
			get
			{
				return this._AuditTime;
			}
			set
			{
				if ((this._AuditTime != value))
				{
					this.OnAuditTimeChanging(value);
					this.SendPropertyChanging();
					this._AuditTime = value;
					this.SendPropertyChanged("AuditTime");
					this.OnAuditTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Lock_SmartLockItem_Lock_SmartLock", Storage="_Lock_SmartLock", ThisKey="SmartLockId", OtherKey="SmartLockId", IsForeignKey=true)]
		public Lock_SmartLock Lock_SmartLock
		{
			get
			{
				return this._Lock_SmartLock.Entity;
			}
			set
			{
				Lock_SmartLock previousValue = this._Lock_SmartLock.Entity;
				if (((previousValue != value) 
							|| (this._Lock_SmartLock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lock_SmartLock.Entity = null;
						previousValue.Lock_SmartLockItem.Remove(this);
					}
					this._Lock_SmartLock.Entity = value;
					if ((value != null))
					{
						value.Lock_SmartLockItem.Add(this);
						this._SmartLockId = value.SmartLockId;
					}
					else
					{
						this._SmartLockId = default(string);
					}
					this.SendPropertyChanged("Lock_SmartLock");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Lock_SmartLockItem_Sys_User", Storage="_Sys_User", ThisKey="ApplicantManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Lock_SmartLockItem.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Lock_SmartLockItem.Add(this);
						this._ApplicantManId = value.UserId;
					}
					else
					{
						this._ApplicantManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Lock_SmartLockItem_Sys_User2", Storage="_AuditMan", ThisKey="AuditManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User AuditMan
		{
			get
			{
				return this._AuditMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._AuditMan.Entity;
				if (((previousValue != value) 
							|| (this._AuditMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AuditMan.Entity = null;
						previousValue.Lock_SmartLockItem_Sys_User2.Remove(this);
					}
					this._AuditMan.Entity = value;
					if ((value != null))
					{
						value.Lock_SmartLockItem_Sys_User2.Add(this);
						this._AuditManId = value.UserId;
					}
					else
					{
						this._AuditManId = default(string);
					}
					this.SendPropertyChanged("AuditMan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personal_PersonalFolder")]
	public partial class Personal_PersonalFolder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PersonalFolderId;
		
		private string _Code;
		
		private string _Title;
		
		private string _SupPersonalFolderId;
		
		private string _CompileMan;
		
		private System.Nullable<bool> _IsEndLever;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntitySet<Personal_PersonalFolderItem> _Personal_PersonalFolderItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonalFolderIdChanging(string value);
    partial void OnPersonalFolderIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSupPersonalFolderIdChanging(string value);
    partial void OnSupPersonalFolderIdChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnIsEndLeverChanging(System.Nullable<bool> value);
    partial void OnIsEndLeverChanged();
    #endregion
		
		public Personal_PersonalFolder()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Personal_PersonalFolderItem = new EntitySet<Personal_PersonalFolderItem>(new Action<Personal_PersonalFolderItem>(this.attach_Personal_PersonalFolderItem), new Action<Personal_PersonalFolderItem>(this.detach_Personal_PersonalFolderItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalFolderId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PersonalFolderId
		{
			get
			{
				return this._PersonalFolderId;
			}
			set
			{
				if ((this._PersonalFolderId != value))
				{
					this.OnPersonalFolderIdChanging(value);
					this.SendPropertyChanging();
					this._PersonalFolderId = value;
					this.SendPropertyChanged("PersonalFolderId");
					this.OnPersonalFolderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupPersonalFolderId", DbType="NVarChar(50)")]
		public string SupPersonalFolderId
		{
			get
			{
				return this._SupPersonalFolderId;
			}
			set
			{
				if ((this._SupPersonalFolderId != value))
				{
					this.OnSupPersonalFolderIdChanging(value);
					this.SendPropertyChanging();
					this._SupPersonalFolderId = value;
					this.SendPropertyChanged("SupPersonalFolderId");
					this.OnSupPersonalFolderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEndLever", DbType="Bit")]
		public System.Nullable<bool> IsEndLever
		{
			get
			{
				return this._IsEndLever;
			}
			set
			{
				if ((this._IsEndLever != value))
				{
					this.OnIsEndLeverChanging(value);
					this.SendPropertyChanging();
					this._IsEndLever = value;
					this.SendPropertyChanged("IsEndLever");
					this.OnIsEndLeverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Personal_PersonalFolder_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Personal_PersonalFolder.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Personal_PersonalFolder.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Personal_PersonalFolderItem_Personal_PersonalFolder", Storage="_Personal_PersonalFolderItem", ThisKey="PersonalFolderId", OtherKey="PersonalFolderId", DeleteRule="NO ACTION")]
		public EntitySet<Personal_PersonalFolderItem> Personal_PersonalFolderItem
		{
			get
			{
				return this._Personal_PersonalFolderItem;
			}
			set
			{
				this._Personal_PersonalFolderItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Personal_PersonalFolderItem(Personal_PersonalFolderItem entity)
		{
			this.SendPropertyChanging();
			entity.Personal_PersonalFolder = this;
		}
		
		private void detach_Personal_PersonalFolderItem(Personal_PersonalFolderItem entity)
		{
			this.SendPropertyChanging();
			entity.Personal_PersonalFolder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personal_PersonalFolderItem")]
	public partial class Personal_PersonalFolderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PersonalFolderItemId;
		
		private string _PersonalFolderId;
		
		private string _Code;
		
		private string _Title;
		
		private string _FileContent;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AttachUrl;
		
		private EntityRef<Personal_PersonalFolder> _Personal_PersonalFolder;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonalFolderItemIdChanging(string value);
    partial void OnPersonalFolderItemIdChanged();
    partial void OnPersonalFolderIdChanging(string value);
    partial void OnPersonalFolderIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFileContentChanging(string value);
    partial void OnFileContentChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    #endregion
		
		public Personal_PersonalFolderItem()
		{
			this._Personal_PersonalFolder = default(EntityRef<Personal_PersonalFolder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalFolderItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PersonalFolderItemId
		{
			get
			{
				return this._PersonalFolderItemId;
			}
			set
			{
				if ((this._PersonalFolderItemId != value))
				{
					this.OnPersonalFolderItemIdChanging(value);
					this.SendPropertyChanging();
					this._PersonalFolderItemId = value;
					this.SendPropertyChanged("PersonalFolderItemId");
					this.OnPersonalFolderItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalFolderId", DbType="NVarChar(50)")]
		public string PersonalFolderId
		{
			get
			{
				return this._PersonalFolderId;
			}
			set
			{
				if ((this._PersonalFolderId != value))
				{
					if (this._Personal_PersonalFolder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonalFolderIdChanging(value);
					this.SendPropertyChanging();
					this._PersonalFolderId = value;
					this.SendPropertyChanged("PersonalFolderId");
					this.OnPersonalFolderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContent", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string FileContent
		{
			get
			{
				return this._FileContent;
			}
			set
			{
				if ((this._FileContent != value))
				{
					this.OnFileContentChanging(value);
					this.SendPropertyChanging();
					this._FileContent = value;
					this.SendPropertyChanged("FileContent");
					this.OnFileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Personal_PersonalFolderItem_Personal_PersonalFolder", Storage="_Personal_PersonalFolder", ThisKey="PersonalFolderId", OtherKey="PersonalFolderId", IsForeignKey=true)]
		public Personal_PersonalFolder Personal_PersonalFolder
		{
			get
			{
				return this._Personal_PersonalFolder.Entity;
			}
			set
			{
				Personal_PersonalFolder previousValue = this._Personal_PersonalFolder.Entity;
				if (((previousValue != value) 
							|| (this._Personal_PersonalFolder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personal_PersonalFolder.Entity = null;
						previousValue.Personal_PersonalFolderItem.Remove(this);
					}
					this._Personal_PersonalFolder.Entity = value;
					if ((value != null))
					{
						value.Personal_PersonalFolderItem.Add(this);
						this._PersonalFolderId = value.PersonalFolderId;
					}
					else
					{
						this._PersonalFolderId = default(string);
					}
					this.SendPropertyChanged("Personal_PersonalFolder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QualityAudit_EquipmentQuality")]
	public partial class QualityAudit_EquipmentQuality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EquipmentQualityId;
		
		private string _InstallationId;
		
		private string _UnitId;
		
		private string _EuipmentId;
		
		private string _EquipmentQualityCode;
		
		private string _EquipmentQualityName;
		
		private string _SizeModel;
		
		private string _FactoryCode;
		
		private string _CertificateCode;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private System.Nullable<System.DateTime> _LimitDate;
		
		private System.Nullable<System.DateTime> _InDate;
		
		private System.Nullable<System.DateTime> _OutDate;
		
		private string _ApprovalPerson;
		
		private string _CarNum;
		
		private string _Remark;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private EntityRef<Base_Euipment> _Base_Euipment;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEquipmentQualityIdChanging(string value);
    partial void OnEquipmentQualityIdChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnEuipmentIdChanging(string value);
    partial void OnEuipmentIdChanged();
    partial void OnEquipmentQualityCodeChanging(string value);
    partial void OnEquipmentQualityCodeChanged();
    partial void OnEquipmentQualityNameChanging(string value);
    partial void OnEquipmentQualityNameChanged();
    partial void OnSizeModelChanging(string value);
    partial void OnSizeModelChanged();
    partial void OnFactoryCodeChanging(string value);
    partial void OnFactoryCodeChanged();
    partial void OnCertificateCodeChanging(string value);
    partial void OnCertificateCodeChanged();
    partial void OnCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDateChanged();
    partial void OnLimitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLimitDateChanged();
    partial void OnInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInDateChanged();
    partial void OnOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOutDateChanged();
    partial void OnApprovalPersonChanging(string value);
    partial void OnApprovalPersonChanged();
    partial void OnCarNumChanging(string value);
    partial void OnCarNumChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    #endregion
		
		public QualityAudit_EquipmentQuality()
		{
			this._Base_Euipment = default(EntityRef<Base_Euipment>);
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentQualityId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EquipmentQualityId
		{
			get
			{
				return this._EquipmentQualityId;
			}
			set
			{
				if ((this._EquipmentQualityId != value))
				{
					this.OnEquipmentQualityIdChanging(value);
					this.SendPropertyChanging();
					this._EquipmentQualityId = value;
					this.SendPropertyChanged("EquipmentQualityId");
					this.OnEquipmentQualityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EuipmentId", DbType="NVarChar(50)")]
		public string EuipmentId
		{
			get
			{
				return this._EuipmentId;
			}
			set
			{
				if ((this._EuipmentId != value))
				{
					if (this._Base_Euipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEuipmentIdChanging(value);
					this.SendPropertyChanging();
					this._EuipmentId = value;
					this.SendPropertyChanged("EuipmentId");
					this.OnEuipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentQualityCode", DbType="NVarChar(50)")]
		public string EquipmentQualityCode
		{
			get
			{
				return this._EquipmentQualityCode;
			}
			set
			{
				if ((this._EquipmentQualityCode != value))
				{
					this.OnEquipmentQualityCodeChanging(value);
					this.SendPropertyChanging();
					this._EquipmentQualityCode = value;
					this.SendPropertyChanged("EquipmentQualityCode");
					this.OnEquipmentQualityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentQualityName", DbType="NVarChar(50)")]
		public string EquipmentQualityName
		{
			get
			{
				return this._EquipmentQualityName;
			}
			set
			{
				if ((this._EquipmentQualityName != value))
				{
					this.OnEquipmentQualityNameChanging(value);
					this.SendPropertyChanging();
					this._EquipmentQualityName = value;
					this.SendPropertyChanged("EquipmentQualityName");
					this.OnEquipmentQualityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeModel", DbType="NVarChar(50)")]
		public string SizeModel
		{
			get
			{
				return this._SizeModel;
			}
			set
			{
				if ((this._SizeModel != value))
				{
					this.OnSizeModelChanging(value);
					this.SendPropertyChanging();
					this._SizeModel = value;
					this.SendPropertyChanged("SizeModel");
					this.OnSizeModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactoryCode", DbType="NVarChar(50)")]
		public string FactoryCode
		{
			get
			{
				return this._FactoryCode;
			}
			set
			{
				if ((this._FactoryCode != value))
				{
					this.OnFactoryCodeChanging(value);
					this.SendPropertyChanging();
					this._FactoryCode = value;
					this.SendPropertyChanged("FactoryCode");
					this.OnFactoryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateCode", DbType="NVarChar(50)")]
		public string CertificateCode
		{
			get
			{
				return this._CertificateCode;
			}
			set
			{
				if ((this._CertificateCode != value))
				{
					this.OnCertificateCodeChanging(value);
					this.SendPropertyChanging();
					this._CertificateCode = value;
					this.SendPropertyChanged("CertificateCode");
					this.OnCertificateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitDate
		{
			get
			{
				return this._LimitDate;
			}
			set
			{
				if ((this._LimitDate != value))
				{
					this.OnLimitDateChanging(value);
					this.SendPropertyChanging();
					this._LimitDate = value;
					this.SendPropertyChanged("LimitDate");
					this.OnLimitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InDate
		{
			get
			{
				return this._InDate;
			}
			set
			{
				if ((this._InDate != value))
				{
					this.OnInDateChanging(value);
					this.SendPropertyChanging();
					this._InDate = value;
					this.SendPropertyChanged("InDate");
					this.OnInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OutDate
		{
			get
			{
				return this._OutDate;
			}
			set
			{
				if ((this._OutDate != value))
				{
					this.OnOutDateChanging(value);
					this.SendPropertyChanging();
					this._OutDate = value;
					this.SendPropertyChanged("OutDate");
					this.OnOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalPerson", DbType="NVarChar(20)")]
		public string ApprovalPerson
		{
			get
			{
				return this._ApprovalPerson;
			}
			set
			{
				if ((this._ApprovalPerson != value))
				{
					this.OnApprovalPersonChanging(value);
					this.SendPropertyChanging();
					this._ApprovalPerson = value;
					this.SendPropertyChanged("ApprovalPerson");
					this.OnApprovalPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarNum", DbType="NVarChar(50)")]
		public string CarNum
		{
			get
			{
				return this._CarNum;
			}
			set
			{
				if ((this._CarNum != value))
				{
					this.OnCarNumChanging(value);
					this.SendPropertyChanging();
					this._CarNum = value;
					this.SendPropertyChanged("CarNum");
					this.OnCarNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentQuality_Base_Euipment", Storage="_Base_Euipment", ThisKey="EuipmentId", OtherKey="EuipmentId", IsForeignKey=true)]
		public Base_Euipment Base_Euipment
		{
			get
			{
				return this._Base_Euipment.Entity;
			}
			set
			{
				Base_Euipment previousValue = this._Base_Euipment.Entity;
				if (((previousValue != value) 
							|| (this._Base_Euipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Euipment.Entity = null;
						previousValue.QualityAudit_EquipmentQuality.Remove(this);
					}
					this._Base_Euipment.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_EquipmentQuality.Add(this);
						this._EuipmentId = value.EuipmentId;
					}
					else
					{
						this._EuipmentId = default(string);
					}
					this.SendPropertyChanged("Base_Euipment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentQuality_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.QualityAudit_EquipmentQuality.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_EquipmentQuality.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentQuality_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.QualityAudit_EquipmentQuality.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_EquipmentQuality.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentQuality_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.QualityAudit_EquipmentQuality.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_EquipmentQuality.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QualityAudit_PersonQuality")]
	public partial class QualityAudit_PersonQuality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PersonQualityId;
		
		private string _PersonId;
		
		private string _CertificateId;
		
		private string _CertificateNo;
		
		private string _SendUnit;
		
		private System.Nullable<System.DateTime> _SendDate;
		
		private System.Nullable<System.DateTime> _LimitDate;
		
		private System.Nullable<System.DateTime> _LateCheckDate;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _Remark;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _URL;
		
		private string _ProspectiveIds;
		
		private string _ProspectiveNames;
		
		private EntityRef<Base_Certificate> _Base_Certificate;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _Person;
		
		private EntitySet<QualityAudit_PersonQualityItem> _QualityAudit_PersonQualityItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonQualityIdChanging(string value);
    partial void OnPersonQualityIdChanged();
    partial void OnPersonIdChanging(string value);
    partial void OnPersonIdChanged();
    partial void OnCertificateIdChanging(string value);
    partial void OnCertificateIdChanged();
    partial void OnCertificateNoChanging(string value);
    partial void OnCertificateNoChanged();
    partial void OnSendUnitChanging(string value);
    partial void OnSendUnitChanged();
    partial void OnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendDateChanged();
    partial void OnLimitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLimitDateChanged();
    partial void OnLateCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLateCheckDateChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnProspectiveIdsChanging(string value);
    partial void OnProspectiveIdsChanged();
    partial void OnProspectiveNamesChanging(string value);
    partial void OnProspectiveNamesChanged();
    #endregion
		
		public QualityAudit_PersonQuality()
		{
			this._Base_Certificate = default(EntityRef<Base_Certificate>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Person = default(EntityRef<Sys_User>);
			this._QualityAudit_PersonQualityItem = new EntitySet<QualityAudit_PersonQualityItem>(new Action<QualityAudit_PersonQualityItem>(this.attach_QualityAudit_PersonQualityItem), new Action<QualityAudit_PersonQualityItem>(this.detach_QualityAudit_PersonQualityItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonQualityId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PersonQualityId
		{
			get
			{
				return this._PersonQualityId;
			}
			set
			{
				if ((this._PersonQualityId != value))
				{
					this.OnPersonQualityIdChanging(value);
					this.SendPropertyChanging();
					this._PersonQualityId = value;
					this.SendPropertyChanged("PersonQualityId");
					this.OnPersonQualityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateId", DbType="NVarChar(50)")]
		public string CertificateId
		{
			get
			{
				return this._CertificateId;
			}
			set
			{
				if ((this._CertificateId != value))
				{
					if (this._Base_Certificate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._CertificateId = value;
					this.SendPropertyChanged("CertificateId");
					this.OnCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNo", DbType="NVarChar(50)")]
		public string CertificateNo
		{
			get
			{
				return this._CertificateNo;
			}
			set
			{
				if ((this._CertificateNo != value))
				{
					this.OnCertificateNoChanging(value);
					this.SendPropertyChanging();
					this._CertificateNo = value;
					this.SendPropertyChanged("CertificateNo");
					this.OnCertificateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendUnit", DbType="NVarChar(50)")]
		public string SendUnit
		{
			get
			{
				return this._SendUnit;
			}
			set
			{
				if ((this._SendUnit != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSendUnitChanging(value);
					this.SendPropertyChanging();
					this._SendUnit = value;
					this.SendPropertyChanged("SendUnit");
					this.OnSendUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendDate
		{
			get
			{
				return this._SendDate;
			}
			set
			{
				if ((this._SendDate != value))
				{
					this.OnSendDateChanging(value);
					this.SendPropertyChanging();
					this._SendDate = value;
					this.SendPropertyChanged("SendDate");
					this.OnSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitDate
		{
			get
			{
				return this._LimitDate;
			}
			set
			{
				if ((this._LimitDate != value))
				{
					this.OnLimitDateChanging(value);
					this.SendPropertyChanging();
					this._LimitDate = value;
					this.SendPropertyChanged("LimitDate");
					this.OnLimitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LateCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LateCheckDate
		{
			get
			{
				return this._LateCheckDate;
			}
			set
			{
				if ((this._LateCheckDate != value))
				{
					this.OnLateCheckDateChanging(value);
					this.SendPropertyChanging();
					this._LateCheckDate = value;
					this.SendPropertyChanged("LateCheckDate");
					this.OnLateCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(2000)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProspectiveIds", DbType="NVarChar(4000)")]
		public string ProspectiveIds
		{
			get
			{
				return this._ProspectiveIds;
			}
			set
			{
				if ((this._ProspectiveIds != value))
				{
					this.OnProspectiveIdsChanging(value);
					this.SendPropertyChanging();
					this._ProspectiveIds = value;
					this.SendPropertyChanged("ProspectiveIds");
					this.OnProspectiveIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProspectiveNames", DbType="NVarChar(4000)")]
		public string ProspectiveNames
		{
			get
			{
				return this._ProspectiveNames;
			}
			set
			{
				if ((this._ProspectiveNames != value))
				{
					this.OnProspectiveNamesChanging(value);
					this.SendPropertyChanging();
					this._ProspectiveNames = value;
					this.SendPropertyChanged("ProspectiveNames");
					this.OnProspectiveNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Base_Certificate", Storage="_Base_Certificate", ThisKey="CertificateId", OtherKey="CertificateId", IsForeignKey=true)]
		public Base_Certificate Base_Certificate
		{
			get
			{
				return this._Base_Certificate.Entity;
			}
			set
			{
				Base_Certificate previousValue = this._Base_Certificate.Entity;
				if (((previousValue != value) 
							|| (this._Base_Certificate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Certificate.Entity = null;
						previousValue.QualityAudit_PersonQuality.Remove(this);
					}
					this._Base_Certificate.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_PersonQuality.Add(this);
						this._CertificateId = value.CertificateId;
					}
					else
					{
						this._CertificateId = default(string);
					}
					this.SendPropertyChanged("Base_Certificate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Base_Unit", Storage="_Base_Unit", ThisKey="SendUnit", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.QualityAudit_PersonQuality.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_PersonQuality.Add(this);
						this._SendUnit = value.UnitId;
					}
					else
					{
						this._SendUnit = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.QualityAudit_PersonQuality.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_PersonQuality.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Sys_User1", Storage="_Person", ThisKey="PersonId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Sys_User previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.QualityAudit_PersonQuality_Sys_User1.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_PersonQuality_Sys_User1.Add(this);
						this._PersonId = value.UserId;
					}
					else
					{
						this._PersonId = default(string);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQualityItem_QualityAudit_PersonQuality", Storage="_QualityAudit_PersonQualityItem", ThisKey="PersonQualityId", OtherKey="PersonQualityId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_PersonQualityItem> QualityAudit_PersonQualityItem
		{
			get
			{
				return this._QualityAudit_PersonQualityItem;
			}
			set
			{
				this._QualityAudit_PersonQualityItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QualityAudit_PersonQualityItem(QualityAudit_PersonQualityItem entity)
		{
			this.SendPropertyChanging();
			entity.QualityAudit_PersonQuality = this;
		}
		
		private void detach_QualityAudit_PersonQualityItem(QualityAudit_PersonQualityItem entity)
		{
			this.SendPropertyChanging();
			entity.QualityAudit_PersonQuality = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QualityAudit_PersonQualityItem")]
	public partial class QualityAudit_PersonQualityItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PersonQualityItemId;
		
		private string _PersonQualityId;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private EntityRef<QualityAudit_PersonQuality> _QualityAudit_PersonQuality;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonQualityItemIdChanging(string value);
    partial void OnPersonQualityItemIdChanged();
    partial void OnPersonQualityIdChanging(string value);
    partial void OnPersonQualityIdChanged();
    partial void OnCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDateChanged();
    #endregion
		
		public QualityAudit_PersonQualityItem()
		{
			this._QualityAudit_PersonQuality = default(EntityRef<QualityAudit_PersonQuality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonQualityItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PersonQualityItemId
		{
			get
			{
				return this._PersonQualityItemId;
			}
			set
			{
				if ((this._PersonQualityItemId != value))
				{
					this.OnPersonQualityItemIdChanging(value);
					this.SendPropertyChanging();
					this._PersonQualityItemId = value;
					this.SendPropertyChanged("PersonQualityItemId");
					this.OnPersonQualityItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonQualityId", DbType="NVarChar(50)")]
		public string PersonQualityId
		{
			get
			{
				return this._PersonQualityId;
			}
			set
			{
				if ((this._PersonQualityId != value))
				{
					if (this._QualityAudit_PersonQuality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonQualityIdChanging(value);
					this.SendPropertyChanging();
					this._PersonQualityId = value;
					this.SendPropertyChanged("PersonQualityId");
					this.OnPersonQualityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQualityItem_QualityAudit_PersonQuality", Storage="_QualityAudit_PersonQuality", ThisKey="PersonQualityId", OtherKey="PersonQualityId", IsForeignKey=true)]
		public QualityAudit_PersonQuality QualityAudit_PersonQuality
		{
			get
			{
				return this._QualityAudit_PersonQuality.Entity;
			}
			set
			{
				QualityAudit_PersonQuality previousValue = this._QualityAudit_PersonQuality.Entity;
				if (((previousValue != value) 
							|| (this._QualityAudit_PersonQuality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QualityAudit_PersonQuality.Entity = null;
						previousValue.QualityAudit_PersonQualityItem.Remove(this);
					}
					this._QualityAudit_PersonQuality.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_PersonQualityItem.Add(this);
						this._PersonQualityId = value.PersonQualityId;
					}
					else
					{
						this._PersonQualityId = default(string);
					}
					this.SendPropertyChanged("QualityAudit_PersonQuality");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QualityAudit_SubUnitQuality")]
	public partial class QualityAudit_SubUnitQuality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SubUnitQualityId;
		
		private string _UnitId;
		
		private string _SubUnitQualityCode;
		
		private string _SubUnitQualityName;
		
		private string _BusinessLicense;
		
		private System.Nullable<System.DateTime> _BL_EnableDate;
		
		private string _BL_ScanUrl;
		
		private string _OrganCode;
		
		private System.Nullable<System.DateTime> _O_EnableDate;
		
		private string _O_ScanUrl;
		
		private string _Certificate;
		
		private System.Nullable<System.DateTime> _C_EnableDate;
		
		private string _C_ScanUrl;
		
		private string _QualityLicense;
		
		private System.Nullable<System.DateTime> _QL_EnableDate;
		
		private string _QL_ScanUrl;
		
		private string _HSELicense;
		
		private System.Nullable<System.DateTime> _H_EnableDate;
		
		private string _H_ScanUrl;
		
		private string _SecurityLicense;
		
		private System.Nullable<System.DateTime> _SL_EnableDate;
		
		private string _SL_ScanUrl;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubUnitQualityIdChanging(string value);
    partial void OnSubUnitQualityIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnSubUnitQualityCodeChanging(string value);
    partial void OnSubUnitQualityCodeChanged();
    partial void OnSubUnitQualityNameChanging(string value);
    partial void OnSubUnitQualityNameChanged();
    partial void OnBusinessLicenseChanging(string value);
    partial void OnBusinessLicenseChanged();
    partial void OnBL_EnableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBL_EnableDateChanged();
    partial void OnBL_ScanUrlChanging(string value);
    partial void OnBL_ScanUrlChanged();
    partial void OnOrganCodeChanging(string value);
    partial void OnOrganCodeChanged();
    partial void OnO_EnableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnO_EnableDateChanged();
    partial void OnO_ScanUrlChanging(string value);
    partial void OnO_ScanUrlChanged();
    partial void OnCertificateChanging(string value);
    partial void OnCertificateChanged();
    partial void OnC_EnableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_EnableDateChanged();
    partial void OnC_ScanUrlChanging(string value);
    partial void OnC_ScanUrlChanged();
    partial void OnQualityLicenseChanging(string value);
    partial void OnQualityLicenseChanged();
    partial void OnQL_EnableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQL_EnableDateChanged();
    partial void OnQL_ScanUrlChanging(string value);
    partial void OnQL_ScanUrlChanged();
    partial void OnHSELicenseChanging(string value);
    partial void OnHSELicenseChanged();
    partial void OnH_EnableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnH_EnableDateChanged();
    partial void OnH_ScanUrlChanging(string value);
    partial void OnH_ScanUrlChanged();
    partial void OnSecurityLicenseChanging(string value);
    partial void OnSecurityLicenseChanged();
    partial void OnSL_EnableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSL_EnableDateChanged();
    partial void OnSL_ScanUrlChanging(string value);
    partial void OnSL_ScanUrlChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    #endregion
		
		public QualityAudit_SubUnitQuality()
		{
			this._Base_Unit = default(EntityRef<Base_Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubUnitQualityId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SubUnitQualityId
		{
			get
			{
				return this._SubUnitQualityId;
			}
			set
			{
				if ((this._SubUnitQualityId != value))
				{
					this.OnSubUnitQualityIdChanging(value);
					this.SendPropertyChanging();
					this._SubUnitQualityId = value;
					this.SendPropertyChanged("SubUnitQualityId");
					this.OnSubUnitQualityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubUnitQualityCode", DbType="NVarChar(50)")]
		public string SubUnitQualityCode
		{
			get
			{
				return this._SubUnitQualityCode;
			}
			set
			{
				if ((this._SubUnitQualityCode != value))
				{
					this.OnSubUnitQualityCodeChanging(value);
					this.SendPropertyChanging();
					this._SubUnitQualityCode = value;
					this.SendPropertyChanged("SubUnitQualityCode");
					this.OnSubUnitQualityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubUnitQualityName", DbType="NVarChar(100)")]
		public string SubUnitQualityName
		{
			get
			{
				return this._SubUnitQualityName;
			}
			set
			{
				if ((this._SubUnitQualityName != value))
				{
					this.OnSubUnitQualityNameChanging(value);
					this.SendPropertyChanging();
					this._SubUnitQualityName = value;
					this.SendPropertyChanged("SubUnitQualityName");
					this.OnSubUnitQualityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessLicense", DbType="NVarChar(50)")]
		public string BusinessLicense
		{
			get
			{
				return this._BusinessLicense;
			}
			set
			{
				if ((this._BusinessLicense != value))
				{
					this.OnBusinessLicenseChanging(value);
					this.SendPropertyChanging();
					this._BusinessLicense = value;
					this.SendPropertyChanged("BusinessLicense");
					this.OnBusinessLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BL_EnableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BL_EnableDate
		{
			get
			{
				return this._BL_EnableDate;
			}
			set
			{
				if ((this._BL_EnableDate != value))
				{
					this.OnBL_EnableDateChanging(value);
					this.SendPropertyChanging();
					this._BL_EnableDate = value;
					this.SendPropertyChanged("BL_EnableDate");
					this.OnBL_EnableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BL_ScanUrl", DbType="NVarChar(500)")]
		public string BL_ScanUrl
		{
			get
			{
				return this._BL_ScanUrl;
			}
			set
			{
				if ((this._BL_ScanUrl != value))
				{
					this.OnBL_ScanUrlChanging(value);
					this.SendPropertyChanging();
					this._BL_ScanUrl = value;
					this.SendPropertyChanged("BL_ScanUrl");
					this.OnBL_ScanUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganCode", DbType="NVarChar(50)")]
		public string OrganCode
		{
			get
			{
				return this._OrganCode;
			}
			set
			{
				if ((this._OrganCode != value))
				{
					this.OnOrganCodeChanging(value);
					this.SendPropertyChanging();
					this._OrganCode = value;
					this.SendPropertyChanged("OrganCode");
					this.OnOrganCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_O_EnableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> O_EnableDate
		{
			get
			{
				return this._O_EnableDate;
			}
			set
			{
				if ((this._O_EnableDate != value))
				{
					this.OnO_EnableDateChanging(value);
					this.SendPropertyChanging();
					this._O_EnableDate = value;
					this.SendPropertyChanged("O_EnableDate");
					this.OnO_EnableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_O_ScanUrl", DbType="NVarChar(500)")]
		public string O_ScanUrl
		{
			get
			{
				return this._O_ScanUrl;
			}
			set
			{
				if ((this._O_ScanUrl != value))
				{
					this.OnO_ScanUrlChanging(value);
					this.SendPropertyChanging();
					this._O_ScanUrl = value;
					this.SendPropertyChanged("O_ScanUrl");
					this.OnO_ScanUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certificate", DbType="NVarChar(50)")]
		public string Certificate
		{
			get
			{
				return this._Certificate;
			}
			set
			{
				if ((this._Certificate != value))
				{
					this.OnCertificateChanging(value);
					this.SendPropertyChanging();
					this._Certificate = value;
					this.SendPropertyChanged("Certificate");
					this.OnCertificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_EnableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_EnableDate
		{
			get
			{
				return this._C_EnableDate;
			}
			set
			{
				if ((this._C_EnableDate != value))
				{
					this.OnC_EnableDateChanging(value);
					this.SendPropertyChanging();
					this._C_EnableDate = value;
					this.SendPropertyChanged("C_EnableDate");
					this.OnC_EnableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_ScanUrl", DbType="NVarChar(500)")]
		public string C_ScanUrl
		{
			get
			{
				return this._C_ScanUrl;
			}
			set
			{
				if ((this._C_ScanUrl != value))
				{
					this.OnC_ScanUrlChanging(value);
					this.SendPropertyChanging();
					this._C_ScanUrl = value;
					this.SendPropertyChanged("C_ScanUrl");
					this.OnC_ScanUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualityLicense", DbType="NVarChar(50)")]
		public string QualityLicense
		{
			get
			{
				return this._QualityLicense;
			}
			set
			{
				if ((this._QualityLicense != value))
				{
					this.OnQualityLicenseChanging(value);
					this.SendPropertyChanging();
					this._QualityLicense = value;
					this.SendPropertyChanged("QualityLicense");
					this.OnQualityLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QL_EnableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QL_EnableDate
		{
			get
			{
				return this._QL_EnableDate;
			}
			set
			{
				if ((this._QL_EnableDate != value))
				{
					this.OnQL_EnableDateChanging(value);
					this.SendPropertyChanging();
					this._QL_EnableDate = value;
					this.SendPropertyChanged("QL_EnableDate");
					this.OnQL_EnableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QL_ScanUrl", DbType="NVarChar(500)")]
		public string QL_ScanUrl
		{
			get
			{
				return this._QL_ScanUrl;
			}
			set
			{
				if ((this._QL_ScanUrl != value))
				{
					this.OnQL_ScanUrlChanging(value);
					this.SendPropertyChanging();
					this._QL_ScanUrl = value;
					this.SendPropertyChanged("QL_ScanUrl");
					this.OnQL_ScanUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSELicense", DbType="NVarChar(50)")]
		public string HSELicense
		{
			get
			{
				return this._HSELicense;
			}
			set
			{
				if ((this._HSELicense != value))
				{
					this.OnHSELicenseChanging(value);
					this.SendPropertyChanging();
					this._HSELicense = value;
					this.SendPropertyChanged("HSELicense");
					this.OnHSELicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_EnableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> H_EnableDate
		{
			get
			{
				return this._H_EnableDate;
			}
			set
			{
				if ((this._H_EnableDate != value))
				{
					this.OnH_EnableDateChanging(value);
					this.SendPropertyChanging();
					this._H_EnableDate = value;
					this.SendPropertyChanged("H_EnableDate");
					this.OnH_EnableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_ScanUrl", DbType="NVarChar(500)")]
		public string H_ScanUrl
		{
			get
			{
				return this._H_ScanUrl;
			}
			set
			{
				if ((this._H_ScanUrl != value))
				{
					this.OnH_ScanUrlChanging(value);
					this.SendPropertyChanging();
					this._H_ScanUrl = value;
					this.SendPropertyChanged("H_ScanUrl");
					this.OnH_ScanUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityLicense", DbType="NVarChar(50)")]
		public string SecurityLicense
		{
			get
			{
				return this._SecurityLicense;
			}
			set
			{
				if ((this._SecurityLicense != value))
				{
					this.OnSecurityLicenseChanging(value);
					this.SendPropertyChanging();
					this._SecurityLicense = value;
					this.SendPropertyChanged("SecurityLicense");
					this.OnSecurityLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_EnableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SL_EnableDate
		{
			get
			{
				return this._SL_EnableDate;
			}
			set
			{
				if ((this._SL_EnableDate != value))
				{
					this.OnSL_EnableDateChanging(value);
					this.SendPropertyChanging();
					this._SL_EnableDate = value;
					this.SendPropertyChanged("SL_EnableDate");
					this.OnSL_EnableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_ScanUrl", DbType="NVarChar(500)")]
		public string SL_ScanUrl
		{
			get
			{
				return this._SL_ScanUrl;
			}
			set
			{
				if ((this._SL_ScanUrl != value))
				{
					this.OnSL_ScanUrlChanging(value);
					this.SendPropertyChanging();
					this._SL_ScanUrl = value;
					this.SendPropertyChanged("SL_ScanUrl");
					this.OnSL_ScanUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SubUnitQuality_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.QualityAudit_SubUnitQuality.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_SubUnitQuality.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportServer")]
	public partial class ReportServer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ReportId;
		
		private string _TabContent;
		
		private string _ReportName;
		
		private string _InitTabContent;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIdChanging(string value);
    partial void OnReportIdChanged();
    partial void OnTabContentChanging(string value);
    partial void OnTabContentChanged();
    partial void OnReportNameChanging(string value);
    partial void OnReportNameChanged();
    partial void OnInitTabContentChanging(string value);
    partial void OnInitTabContentChanged();
    #endregion
		
		public ReportServer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TabContent
		{
			get
			{
				return this._TabContent;
			}
			set
			{
				if ((this._TabContent != value))
				{
					this.OnTabContentChanging(value);
					this.SendPropertyChanging();
					this._TabContent = value;
					this.SendPropertyChanged("TabContent");
					this.OnTabContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportName", DbType="NVarChar(100)")]
		public string ReportName
		{
			get
			{
				return this._ReportName;
			}
			set
			{
				if ((this._ReportName != value))
				{
					this.OnReportNameChanging(value);
					this.SendPropertyChanging();
					this._ReportName = value;
					this.SendPropertyChanged("ReportName");
					this.OnReportNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitTabContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string InitTabContent
		{
			get
			{
				return this._InitTabContent;
			}
			set
			{
				if ((this._InitTabContent != value))
				{
					this.OnInitTabContentChanging(value);
					this.SendPropertyChanging();
					this._InitTabContent = value;
					this.SendPropertyChanged("InitTabContent");
					this.OnInitTabContentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resource_News")]
	public partial class Resource_News : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NewsId;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _ReleaseTime;
		
		private string _Original;
		
		private string _Url;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIdChanging(string value);
    partial void OnNewsIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnReleaseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReleaseTimeChanged();
    partial void OnOriginalChanging(string value);
    partial void OnOriginalChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Resource_News()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NewsId
		{
			get
			{
				return this._NewsId;
			}
			set
			{
				if ((this._NewsId != value))
				{
					this.OnNewsIdChanging(value);
					this.SendPropertyChanging();
					this._NewsId = value;
					this.SendPropertyChanged("NewsId");
					this.OnNewsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReleaseTime
		{
			get
			{
				return this._ReleaseTime;
			}
			set
			{
				if ((this._ReleaseTime != value))
				{
					this.OnReleaseTimeChanging(value);
					this.SendPropertyChanging();
					this._ReleaseTime = value;
					this.SendPropertyChanged("ReleaseTime");
					this.OnReleaseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Original", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Original
		{
			get
			{
				return this._Original;
			}
			set
			{
				if ((this._Original != value))
				{
					this.OnOriginalChanging(value);
					this.SendPropertyChanging();
					this._Original = value;
					this.SendPropertyChanged("Original");
					this.OnOriginalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(2000)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(800)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resource_Notices")]
	public partial class Resource_Notices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NoticesId;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _ReleaseTime;
		
		private string _Original;
		
		private string _Url;
		
		private string _Summary;
		
		private string _ReleaseUnit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoticesIdChanging(string value);
    partial void OnNoticesIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnReleaseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReleaseTimeChanged();
    partial void OnOriginalChanging(string value);
    partial void OnOriginalChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnReleaseUnitChanging(string value);
    partial void OnReleaseUnitChanged();
    #endregion
		
		public Resource_Notices()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticesId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NoticesId
		{
			get
			{
				return this._NoticesId;
			}
			set
			{
				if ((this._NoticesId != value))
				{
					this.OnNoticesIdChanging(value);
					this.SendPropertyChanging();
					this._NoticesId = value;
					this.SendPropertyChanged("NoticesId");
					this.OnNoticesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReleaseTime
		{
			get
			{
				return this._ReleaseTime;
			}
			set
			{
				if ((this._ReleaseTime != value))
				{
					this.OnReleaseTimeChanging(value);
					this.SendPropertyChanging();
					this._ReleaseTime = value;
					this.SendPropertyChanged("ReleaseTime");
					this.OnReleaseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Original", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Original
		{
			get
			{
				return this._Original;
			}
			set
			{
				if ((this._Original != value))
				{
					this.OnOriginalChanging(value);
					this.SendPropertyChanging();
					this._Original = value;
					this.SendPropertyChanged("Original");
					this.OnOriginalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(2000)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(800)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseUnit", DbType="NVarChar(500)")]
		public string ReleaseUnit
		{
			get
			{
				return this._ReleaseUnit;
			}
			set
			{
				if ((this._ReleaseUnit != value))
				{
					this.OnReleaseUnitChanging(value);
					this.SendPropertyChanging();
					this._ReleaseUnit = value;
					this.SendPropertyChanged("ReleaseUnit");
					this.OnReleaseUnitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resource_SignManage")]
	public partial class Resource_SignManage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SignManageId;
		
		private string _SignName;
		
		private string _SignCode;
		
		private string _SignLen;
		
		private string _SignWide;
		
		private string _SignHigh;
		
		private string _SignThick;
		
		private string _Material;
		
		private string _SignArea;
		
		private string _SignType;
		
		private string _SignImage;
		
		private string _SignUrl;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSignManageIdChanging(string value);
    partial void OnSignManageIdChanged();
    partial void OnSignNameChanging(string value);
    partial void OnSignNameChanged();
    partial void OnSignCodeChanging(string value);
    partial void OnSignCodeChanged();
    partial void OnSignLenChanging(string value);
    partial void OnSignLenChanged();
    partial void OnSignWideChanging(string value);
    partial void OnSignWideChanged();
    partial void OnSignHighChanging(string value);
    partial void OnSignHighChanged();
    partial void OnSignThickChanging(string value);
    partial void OnSignThickChanged();
    partial void OnMaterialChanging(string value);
    partial void OnMaterialChanged();
    partial void OnSignAreaChanging(string value);
    partial void OnSignAreaChanged();
    partial void OnSignTypeChanging(string value);
    partial void OnSignTypeChanged();
    partial void OnSignImageChanging(string value);
    partial void OnSignImageChanged();
    partial void OnSignUrlChanging(string value);
    partial void OnSignUrlChanged();
    #endregion
		
		public Resource_SignManage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignManageId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SignManageId
		{
			get
			{
				return this._SignManageId;
			}
			set
			{
				if ((this._SignManageId != value))
				{
					this.OnSignManageIdChanging(value);
					this.SendPropertyChanging();
					this._SignManageId = value;
					this.SendPropertyChanged("SignManageId");
					this.OnSignManageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignName", DbType="NVarChar(50)")]
		public string SignName
		{
			get
			{
				return this._SignName;
			}
			set
			{
				if ((this._SignName != value))
				{
					this.OnSignNameChanging(value);
					this.SendPropertyChanging();
					this._SignName = value;
					this.SendPropertyChanged("SignName");
					this.OnSignNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignCode", DbType="NVarChar(50)")]
		public string SignCode
		{
			get
			{
				return this._SignCode;
			}
			set
			{
				if ((this._SignCode != value))
				{
					this.OnSignCodeChanging(value);
					this.SendPropertyChanging();
					this._SignCode = value;
					this.SendPropertyChanged("SignCode");
					this.OnSignCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignLen", DbType="NVarChar(50)")]
		public string SignLen
		{
			get
			{
				return this._SignLen;
			}
			set
			{
				if ((this._SignLen != value))
				{
					this.OnSignLenChanging(value);
					this.SendPropertyChanging();
					this._SignLen = value;
					this.SendPropertyChanged("SignLen");
					this.OnSignLenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignWide", DbType="NVarChar(50)")]
		public string SignWide
		{
			get
			{
				return this._SignWide;
			}
			set
			{
				if ((this._SignWide != value))
				{
					this.OnSignWideChanging(value);
					this.SendPropertyChanging();
					this._SignWide = value;
					this.SendPropertyChanged("SignWide");
					this.OnSignWideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignHigh", DbType="NVarChar(50)")]
		public string SignHigh
		{
			get
			{
				return this._SignHigh;
			}
			set
			{
				if ((this._SignHigh != value))
				{
					this.OnSignHighChanging(value);
					this.SendPropertyChanging();
					this._SignHigh = value;
					this.SendPropertyChanged("SignHigh");
					this.OnSignHighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignThick", DbType="NVarChar(50)")]
		public string SignThick
		{
			get
			{
				return this._SignThick;
			}
			set
			{
				if ((this._SignThick != value))
				{
					this.OnSignThickChanging(value);
					this.SendPropertyChanging();
					this._SignThick = value;
					this.SendPropertyChanged("SignThick");
					this.OnSignThickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material", DbType="NVarChar(50)")]
		public string Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				if ((this._Material != value))
				{
					this.OnMaterialChanging(value);
					this.SendPropertyChanging();
					this._Material = value;
					this.SendPropertyChanged("Material");
					this.OnMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignArea", DbType="NVarChar(200)")]
		public string SignArea
		{
			get
			{
				return this._SignArea;
			}
			set
			{
				if ((this._SignArea != value))
				{
					this.OnSignAreaChanging(value);
					this.SendPropertyChanging();
					this._SignArea = value;
					this.SendPropertyChanged("SignArea");
					this.OnSignAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignType", DbType="Char(1)")]
		public string SignType
		{
			get
			{
				return this._SignType;
			}
			set
			{
				if ((this._SignType != value))
				{
					this.OnSignTypeChanging(value);
					this.SendPropertyChanging();
					this._SignType = value;
					this.SendPropertyChanged("SignType");
					this.OnSignTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignImage", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SignImage
		{
			get
			{
				return this._SignImage;
			}
			set
			{
				if ((this._SignImage != value))
				{
					this.OnSignImageChanging(value);
					this.SendPropertyChanging();
					this._SignImage = value;
					this.SendPropertyChanged("SignImage");
					this.OnSignImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignUrl", DbType="NVarChar(400)")]
		public string SignUrl
		{
			get
			{
				return this._SignUrl;
			}
			set
			{
				if ((this._SignUrl != value))
				{
					this.OnSignUrlChanging(value);
					this.SendPropertyChanging();
					this._SignUrl = value;
					this.SendPropertyChanged("SignUrl");
					this.OnSignUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Standard_HSSEStandard")]
	public partial class Standard_HSSEStandard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HSSEStandardId;
		
		private string _ManagedItemId;
		
		private string _HSSEStandardName;
		
		private string _HSSEStandardCode;
		
		private string _FileContent;
		
		private EntityRef<Standard_ManagedItem> _Standard_ManagedItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHSSEStandardIdChanging(string value);
    partial void OnHSSEStandardIdChanged();
    partial void OnManagedItemIdChanging(string value);
    partial void OnManagedItemIdChanged();
    partial void OnHSSEStandardNameChanging(string value);
    partial void OnHSSEStandardNameChanged();
    partial void OnHSSEStandardCodeChanging(string value);
    partial void OnHSSEStandardCodeChanged();
    partial void OnFileContentChanging(string value);
    partial void OnFileContentChanged();
    #endregion
		
		public Standard_HSSEStandard()
		{
			this._Standard_ManagedItem = default(EntityRef<Standard_ManagedItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSSEStandardId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HSSEStandardId
		{
			get
			{
				return this._HSSEStandardId;
			}
			set
			{
				if ((this._HSSEStandardId != value))
				{
					this.OnHSSEStandardIdChanging(value);
					this.SendPropertyChanging();
					this._HSSEStandardId = value;
					this.SendPropertyChanged("HSSEStandardId");
					this.OnHSSEStandardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedItemId", DbType="NVarChar(50)")]
		public string ManagedItemId
		{
			get
			{
				return this._ManagedItemId;
			}
			set
			{
				if ((this._ManagedItemId != value))
				{
					if (this._Standard_ManagedItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagedItemIdChanging(value);
					this.SendPropertyChanging();
					this._ManagedItemId = value;
					this.SendPropertyChanged("ManagedItemId");
					this.OnManagedItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSSEStandardName", DbType="NVarChar(800)")]
		public string HSSEStandardName
		{
			get
			{
				return this._HSSEStandardName;
			}
			set
			{
				if ((this._HSSEStandardName != value))
				{
					this.OnHSSEStandardNameChanging(value);
					this.SendPropertyChanging();
					this._HSSEStandardName = value;
					this.SendPropertyChanged("HSSEStandardName");
					this.OnHSSEStandardNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSSEStandardCode", DbType="NVarChar(50)")]
		public string HSSEStandardCode
		{
			get
			{
				return this._HSSEStandardCode;
			}
			set
			{
				if ((this._HSSEStandardCode != value))
				{
					this.OnHSSEStandardCodeChanging(value);
					this.SendPropertyChanging();
					this._HSSEStandardCode = value;
					this.SendPropertyChanged("HSSEStandardCode");
					this.OnHSSEStandardCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContent", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string FileContent
		{
			get
			{
				return this._FileContent;
			}
			set
			{
				if ((this._FileContent != value))
				{
					this.OnFileContentChanging(value);
					this.SendPropertyChanging();
					this._FileContent = value;
					this.SendPropertyChanged("FileContent");
					this.OnFileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Standard_HSSEStandard_Standard_ManagedItem", Storage="_Standard_ManagedItem", ThisKey="ManagedItemId", OtherKey="ManagedItemId", IsForeignKey=true)]
		public Standard_ManagedItem Standard_ManagedItem
		{
			get
			{
				return this._Standard_ManagedItem.Entity;
			}
			set
			{
				Standard_ManagedItem previousValue = this._Standard_ManagedItem.Entity;
				if (((previousValue != value) 
							|| (this._Standard_ManagedItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Standard_ManagedItem.Entity = null;
						previousValue.Standard_HSSEStandard.Remove(this);
					}
					this._Standard_ManagedItem.Entity = value;
					if ((value != null))
					{
						value.Standard_HSSEStandard.Add(this);
						this._ManagedItemId = value.ManagedItemId;
					}
					else
					{
						this._ManagedItemId = default(string);
					}
					this.SendPropertyChanged("Standard_ManagedItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Standard_ManagedItem")]
	public partial class Standard_ManagedItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ManagedItemId;
		
		private string _ManagedObjectId;
		
		private string _ManagedItemName;
		
		private string _ManagedItemCode;
		
		private string _Remark;
		
		private EntitySet<Standard_HSSEStandard> _Standard_HSSEStandard;
		
		private EntityRef<Standard_ManagedObject> _Standard_ManagedObject;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnManagedItemIdChanging(string value);
    partial void OnManagedItemIdChanged();
    partial void OnManagedObjectIdChanging(string value);
    partial void OnManagedObjectIdChanged();
    partial void OnManagedItemNameChanging(string value);
    partial void OnManagedItemNameChanged();
    partial void OnManagedItemCodeChanging(string value);
    partial void OnManagedItemCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Standard_ManagedItem()
		{
			this._Standard_HSSEStandard = new EntitySet<Standard_HSSEStandard>(new Action<Standard_HSSEStandard>(this.attach_Standard_HSSEStandard), new Action<Standard_HSSEStandard>(this.detach_Standard_HSSEStandard));
			this._Standard_ManagedObject = default(EntityRef<Standard_ManagedObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ManagedItemId
		{
			get
			{
				return this._ManagedItemId;
			}
			set
			{
				if ((this._ManagedItemId != value))
				{
					this.OnManagedItemIdChanging(value);
					this.SendPropertyChanging();
					this._ManagedItemId = value;
					this.SendPropertyChanged("ManagedItemId");
					this.OnManagedItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedObjectId", DbType="NVarChar(50)")]
		public string ManagedObjectId
		{
			get
			{
				return this._ManagedObjectId;
			}
			set
			{
				if ((this._ManagedObjectId != value))
				{
					if (this._Standard_ManagedObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagedObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ManagedObjectId = value;
					this.SendPropertyChanged("ManagedObjectId");
					this.OnManagedObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedItemName", DbType="NVarChar(100)")]
		public string ManagedItemName
		{
			get
			{
				return this._ManagedItemName;
			}
			set
			{
				if ((this._ManagedItemName != value))
				{
					this.OnManagedItemNameChanging(value);
					this.SendPropertyChanging();
					this._ManagedItemName = value;
					this.SendPropertyChanged("ManagedItemName");
					this.OnManagedItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedItemCode", DbType="NVarChar(50)")]
		public string ManagedItemCode
		{
			get
			{
				return this._ManagedItemCode;
			}
			set
			{
				if ((this._ManagedItemCode != value))
				{
					this.OnManagedItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ManagedItemCode = value;
					this.SendPropertyChanged("ManagedItemCode");
					this.OnManagedItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Standard_HSSEStandard_Standard_ManagedItem", Storage="_Standard_HSSEStandard", ThisKey="ManagedItemId", OtherKey="ManagedItemId", DeleteRule="NO ACTION")]
		public EntitySet<Standard_HSSEStandard> Standard_HSSEStandard
		{
			get
			{
				return this._Standard_HSSEStandard;
			}
			set
			{
				this._Standard_HSSEStandard.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Standard_ManagedItem_Standard_ManagedObject", Storage="_Standard_ManagedObject", ThisKey="ManagedObjectId", OtherKey="ManagedObjectId", IsForeignKey=true)]
		public Standard_ManagedObject Standard_ManagedObject
		{
			get
			{
				return this._Standard_ManagedObject.Entity;
			}
			set
			{
				Standard_ManagedObject previousValue = this._Standard_ManagedObject.Entity;
				if (((previousValue != value) 
							|| (this._Standard_ManagedObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Standard_ManagedObject.Entity = null;
						previousValue.Standard_ManagedItem.Remove(this);
					}
					this._Standard_ManagedObject.Entity = value;
					if ((value != null))
					{
						value.Standard_ManagedItem.Add(this);
						this._ManagedObjectId = value.ManagedObjectId;
					}
					else
					{
						this._ManagedObjectId = default(string);
					}
					this.SendPropertyChanged("Standard_ManagedObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Standard_HSSEStandard(Standard_HSSEStandard entity)
		{
			this.SendPropertyChanging();
			entity.Standard_ManagedItem = this;
		}
		
		private void detach_Standard_HSSEStandard(Standard_HSSEStandard entity)
		{
			this.SendPropertyChanging();
			entity.Standard_ManagedItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Standard_ManagedObject")]
	public partial class Standard_ManagedObject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ManagedObjectId;
		
		private string _StandardId;
		
		private string _ManagedObjectName;
		
		private string _ManagedObjectCode;
		
		private string _Remark;
		
		private EntitySet<Standard_ManagedItem> _Standard_ManagedItem;
		
		private EntityRef<Base_Standard> _Base_Standard;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnManagedObjectIdChanging(string value);
    partial void OnManagedObjectIdChanged();
    partial void OnStandardIdChanging(string value);
    partial void OnStandardIdChanged();
    partial void OnManagedObjectNameChanging(string value);
    partial void OnManagedObjectNameChanged();
    partial void OnManagedObjectCodeChanging(string value);
    partial void OnManagedObjectCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Standard_ManagedObject()
		{
			this._Standard_ManagedItem = new EntitySet<Standard_ManagedItem>(new Action<Standard_ManagedItem>(this.attach_Standard_ManagedItem), new Action<Standard_ManagedItem>(this.detach_Standard_ManagedItem));
			this._Base_Standard = default(EntityRef<Base_Standard>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedObjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ManagedObjectId
		{
			get
			{
				return this._ManagedObjectId;
			}
			set
			{
				if ((this._ManagedObjectId != value))
				{
					this.OnManagedObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ManagedObjectId = value;
					this.SendPropertyChanged("ManagedObjectId");
					this.OnManagedObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardId", DbType="NVarChar(50)")]
		public string StandardId
		{
			get
			{
				return this._StandardId;
			}
			set
			{
				if ((this._StandardId != value))
				{
					if (this._Base_Standard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStandardIdChanging(value);
					this.SendPropertyChanging();
					this._StandardId = value;
					this.SendPropertyChanged("StandardId");
					this.OnStandardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedObjectName", DbType="NVarChar(100)")]
		public string ManagedObjectName
		{
			get
			{
				return this._ManagedObjectName;
			}
			set
			{
				if ((this._ManagedObjectName != value))
				{
					this.OnManagedObjectNameChanging(value);
					this.SendPropertyChanging();
					this._ManagedObjectName = value;
					this.SendPropertyChanged("ManagedObjectName");
					this.OnManagedObjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedObjectCode", DbType="NVarChar(50)")]
		public string ManagedObjectCode
		{
			get
			{
				return this._ManagedObjectCode;
			}
			set
			{
				if ((this._ManagedObjectCode != value))
				{
					this.OnManagedObjectCodeChanging(value);
					this.SendPropertyChanging();
					this._ManagedObjectCode = value;
					this.SendPropertyChanged("ManagedObjectCode");
					this.OnManagedObjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Standard_ManagedItem_Standard_ManagedObject", Storage="_Standard_ManagedItem", ThisKey="ManagedObjectId", OtherKey="ManagedObjectId", DeleteRule="NO ACTION")]
		public EntitySet<Standard_ManagedItem> Standard_ManagedItem
		{
			get
			{
				return this._Standard_ManagedItem;
			}
			set
			{
				this._Standard_ManagedItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Standard_ManagedObject_Base_Standard", Storage="_Base_Standard", ThisKey="StandardId", OtherKey="StandardId", IsForeignKey=true)]
		public Base_Standard Base_Standard
		{
			get
			{
				return this._Base_Standard.Entity;
			}
			set
			{
				Base_Standard previousValue = this._Base_Standard.Entity;
				if (((previousValue != value) 
							|| (this._Base_Standard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Standard.Entity = null;
						previousValue.Standard_ManagedObject.Remove(this);
					}
					this._Base_Standard.Entity = value;
					if ((value != null))
					{
						value.Standard_ManagedObject.Add(this);
						this._StandardId = value.StandardId;
					}
					else
					{
						this._StandardId = default(string);
					}
					this.SendPropertyChanged("Base_Standard");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Standard_ManagedItem(Standard_ManagedItem entity)
		{
			this.SendPropertyChanging();
			entity.Standard_ManagedObject = this;
		}
		
		private void detach_Standard_ManagedItem(Standard_ManagedItem entity)
		{
			this.SendPropertyChanging();
			entity.Standard_ManagedObject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_ButtonPower")]
	public partial class Sys_ButtonPower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ButtonPowerID;
		
		private string _RoleId;
		
		private string _MenuId;
		
		private string _ButtonToMenuId;
		
		private EntityRef<Sys_ButtonToMenu> _Sys_ButtonToMenu;
		
		private EntityRef<Sys_Menu> _Sys_Menu;
		
		private EntityRef<Sys_Role> _Sys_Role;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnButtonPowerIDChanging(string value);
    partial void OnButtonPowerIDChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnButtonToMenuIdChanging(string value);
    partial void OnButtonToMenuIdChanged();
    #endregion
		
		public Sys_ButtonPower()
		{
			this._Sys_ButtonToMenu = default(EntityRef<Sys_ButtonToMenu>);
			this._Sys_Menu = default(EntityRef<Sys_Menu>);
			this._Sys_Role = default(EntityRef<Sys_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonPowerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ButtonPowerID
		{
			get
			{
				return this._ButtonPowerID;
			}
			set
			{
				if ((this._ButtonPowerID != value))
				{
					this.OnButtonPowerIDChanging(value);
					this.SendPropertyChanging();
					this._ButtonPowerID = value;
					this.SendPropertyChanged("ButtonPowerID");
					this.OnButtonPowerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50)")]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Sys_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Sys_Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonToMenuId", DbType="NVarChar(50)")]
		public string ButtonToMenuId
		{
			get
			{
				return this._ButtonToMenuId;
			}
			set
			{
				if ((this._ButtonToMenuId != value))
				{
					if (this._Sys_ButtonToMenu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnButtonToMenuIdChanging(value);
					this.SendPropertyChanging();
					this._ButtonToMenuId = value;
					this.SendPropertyChanged("ButtonToMenuId");
					this.OnButtonToMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_ButtonPower_Sys_ButtonToMenu", Storage="_Sys_ButtonToMenu", ThisKey="ButtonToMenuId", OtherKey="ButtonToMenuId", IsForeignKey=true)]
		public Sys_ButtonToMenu Sys_ButtonToMenu
		{
			get
			{
				return this._Sys_ButtonToMenu.Entity;
			}
			set
			{
				Sys_ButtonToMenu previousValue = this._Sys_ButtonToMenu.Entity;
				if (((previousValue != value) 
							|| (this._Sys_ButtonToMenu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_ButtonToMenu.Entity = null;
						previousValue.Sys_ButtonPower.Remove(this);
					}
					this._Sys_ButtonToMenu.Entity = value;
					if ((value != null))
					{
						value.Sys_ButtonPower.Add(this);
						this._ButtonToMenuId = value.ButtonToMenuId;
					}
					else
					{
						this._ButtonToMenuId = default(string);
					}
					this.SendPropertyChanged("Sys_ButtonToMenu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_ButtonPower_Sys_Menu", Storage="_Sys_Menu", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true)]
		public Sys_Menu Sys_Menu
		{
			get
			{
				return this._Sys_Menu.Entity;
			}
			set
			{
				Sys_Menu previousValue = this._Sys_Menu.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Menu.Entity = null;
						previousValue.Sys_ButtonPower.Remove(this);
					}
					this._Sys_Menu.Entity = value;
					if ((value != null))
					{
						value.Sys_ButtonPower.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(string);
					}
					this.SendPropertyChanged("Sys_Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_ButtonPower_Sys_Role", Storage="_Sys_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Sys_Role Sys_Role
		{
			get
			{
				return this._Sys_Role.Entity;
			}
			set
			{
				Sys_Role previousValue = this._Sys_Role.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Role.Entity = null;
						previousValue.Sys_ButtonPower.Remove(this);
					}
					this._Sys_Role.Entity = value;
					if ((value != null))
					{
						value.Sys_ButtonPower.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("Sys_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_ButtonToMenu")]
	public partial class Sys_ButtonToMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ButtonToMenuId;
		
		private string _MenuId;
		
		private string _ButtonName;
		
		private System.Nullable<int> _SortIndex;
		
		private EntitySet<Sys_ButtonPower> _Sys_ButtonPower;
		
		private EntityRef<Sys_Menu> _Sys_Menu;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnButtonToMenuIdChanging(string value);
    partial void OnButtonToMenuIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnButtonNameChanging(string value);
    partial void OnButtonNameChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    #endregion
		
		public Sys_ButtonToMenu()
		{
			this._Sys_ButtonPower = new EntitySet<Sys_ButtonPower>(new Action<Sys_ButtonPower>(this.attach_Sys_ButtonPower), new Action<Sys_ButtonPower>(this.detach_Sys_ButtonPower));
			this._Sys_Menu = default(EntityRef<Sys_Menu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonToMenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ButtonToMenuId
		{
			get
			{
				return this._ButtonToMenuId;
			}
			set
			{
				if ((this._ButtonToMenuId != value))
				{
					this.OnButtonToMenuIdChanging(value);
					this.SendPropertyChanging();
					this._ButtonToMenuId = value;
					this.SendPropertyChanged("ButtonToMenuId");
					this.OnButtonToMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Sys_Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ButtonName
		{
			get
			{
				return this._ButtonName;
			}
			set
			{
				if ((this._ButtonName != value))
				{
					this.OnButtonNameChanging(value);
					this.SendPropertyChanging();
					this._ButtonName = value;
					this.SendPropertyChanged("ButtonName");
					this.OnButtonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_ButtonPower_Sys_ButtonToMenu", Storage="_Sys_ButtonPower", ThisKey="ButtonToMenuId", OtherKey="ButtonToMenuId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_ButtonPower> Sys_ButtonPower
		{
			get
			{
				return this._Sys_ButtonPower;
			}
			set
			{
				this._Sys_ButtonPower.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_ButtonToMenu_Sys_Menu", Storage="_Sys_Menu", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true)]
		public Sys_Menu Sys_Menu
		{
			get
			{
				return this._Sys_Menu.Entity;
			}
			set
			{
				Sys_Menu previousValue = this._Sys_Menu.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Menu.Entity = null;
						previousValue.Sys_ButtonToMenu.Remove(this);
					}
					this._Sys_Menu.Entity = value;
					if ((value != null))
					{
						value.Sys_ButtonToMenu.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(string);
					}
					this.SendPropertyChanged("Sys_Menu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sys_ButtonPower(Sys_ButtonPower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_ButtonToMenu = this;
		}
		
		private void detach_Sys_ButtonPower(Sys_ButtonPower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_ButtonToMenu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Const")]
	public partial class Sys_Const : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ConstValue;
		
		private string _ConstText;
		
		private System.Nullable<int> _SortIndex;
		
		private string _GroupId;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnConstValueChanging(string value);
    partial void OnConstValueChanged();
    partial void OnConstTextChanging(string value);
    partial void OnConstTextChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnGroupIdChanging(string value);
    partial void OnGroupIdChanged();
    #endregion
		
		public Sys_Const()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstValue", DbType="NVarChar(50)")]
		public string ConstValue
		{
			get
			{
				return this._ConstValue;
			}
			set
			{
				if ((this._ConstValue != value))
				{
					this.OnConstValueChanging(value);
					this.SendPropertyChanging();
					this._ConstValue = value;
					this.SendPropertyChanged("ConstValue");
					this.OnConstValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstText", DbType="NVarChar(100)")]
		public string ConstText
		{
			get
			{
				return this._ConstText;
			}
			set
			{
				if ((this._ConstText != value))
				{
					this.OnConstTextChanging(value);
					this.SendPropertyChanging();
					this._ConstText = value;
					this.SendPropertyChanged("ConstText");
					this.OnConstTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="NVarChar(50)")]
		public string GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Entrust")]
	public partial class Sys_Entrust : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EntrustId;
		
		private string _EntrustManId;
		
		private string _RecipientManId;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _RecipientMan;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntrustIdChanging(string value);
    partial void OnEntrustIdChanged();
    partial void OnEntrustManIdChanging(string value);
    partial void OnEntrustManIdChanged();
    partial void OnRecipientManIdChanging(string value);
    partial void OnRecipientManIdChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    #endregion
		
		public Sys_Entrust()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			this._RecipientMan = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrustId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EntrustId
		{
			get
			{
				return this._EntrustId;
			}
			set
			{
				if ((this._EntrustId != value))
				{
					this.OnEntrustIdChanging(value);
					this.SendPropertyChanging();
					this._EntrustId = value;
					this.SendPropertyChanged("EntrustId");
					this.OnEntrustIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrustManId", DbType="NVarChar(50)")]
		public string EntrustManId
		{
			get
			{
				return this._EntrustManId;
			}
			set
			{
				if ((this._EntrustManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntrustManIdChanging(value);
					this.SendPropertyChanging();
					this._EntrustManId = value;
					this.SendPropertyChanged("EntrustManId");
					this.OnEntrustManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientManId", DbType="NVarChar(50)")]
		public string RecipientManId
		{
			get
			{
				return this._RecipientManId;
			}
			set
			{
				if ((this._RecipientManId != value))
				{
					if (this._RecipientMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecipientManIdChanging(value);
					this.SendPropertyChanging();
					this._RecipientManId = value;
					this.SendPropertyChanged("RecipientManId");
					this.OnRecipientManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Entrust_Sys_User_EntrustMan", Storage="_Sys_User", ThisKey="EntrustManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Sys_Entrust.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Sys_Entrust.Add(this);
						this._EntrustManId = value.UserId;
					}
					else
					{
						this._EntrustManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Entrust_Sys_User_RecipientMan", Storage="_RecipientMan", ThisKey="RecipientManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User RecipientMan
		{
			get
			{
				return this._RecipientMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._RecipientMan.Entity;
				if (((previousValue != value) 
							|| (this._RecipientMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RecipientMan.Entity = null;
						previousValue.Sys_Entrust_Sys_User_RecipientMan.Remove(this);
					}
					this._RecipientMan.Entity = value;
					if ((value != null))
					{
						value.Sys_Entrust_Sys_User_RecipientMan.Add(this);
						this._RecipientManId = value.UserId;
					}
					else
					{
						this._RecipientManId = default(string);
					}
					this.SendPropertyChanged("RecipientMan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_ErrLogInfo")]
	public partial class Sys_ErrLogInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ErrLogId;
		
		private string _ErrType;
		
		private string _ErrMessage;
		
		private string _ErrStackTrace;
		
		private System.Nullable<System.DateTime> _ErrTime;
		
		private string _ErrUrl;
		
		private string _ErrIP;
		
		private string _UserName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrLogIdChanging(string value);
    partial void OnErrLogIdChanged();
    partial void OnErrTypeChanging(string value);
    partial void OnErrTypeChanged();
    partial void OnErrMessageChanging(string value);
    partial void OnErrMessageChanged();
    partial void OnErrStackTraceChanging(string value);
    partial void OnErrStackTraceChanged();
    partial void OnErrTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnErrTimeChanged();
    partial void OnErrUrlChanging(string value);
    partial void OnErrUrlChanged();
    partial void OnErrIPChanging(string value);
    partial void OnErrIPChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public Sys_ErrLogInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrLogId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ErrLogId
		{
			get
			{
				return this._ErrLogId;
			}
			set
			{
				if ((this._ErrLogId != value))
				{
					this.OnErrLogIdChanging(value);
					this.SendPropertyChanging();
					this._ErrLogId = value;
					this.SendPropertyChanged("ErrLogId");
					this.OnErrLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrType", DbType="NVarChar(500)")]
		public string ErrType
		{
			get
			{
				return this._ErrType;
			}
			set
			{
				if ((this._ErrType != value))
				{
					this.OnErrTypeChanging(value);
					this.SendPropertyChanging();
					this._ErrType = value;
					this.SendPropertyChanged("ErrType");
					this.OnErrTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrMessage", DbType="NVarChar(2000)")]
		public string ErrMessage
		{
			get
			{
				return this._ErrMessage;
			}
			set
			{
				if ((this._ErrMessage != value))
				{
					this.OnErrMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrMessage = value;
					this.SendPropertyChanged("ErrMessage");
					this.OnErrMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrStackTrace", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ErrStackTrace
		{
			get
			{
				return this._ErrStackTrace;
			}
			set
			{
				if ((this._ErrStackTrace != value))
				{
					this.OnErrStackTraceChanging(value);
					this.SendPropertyChanging();
					this._ErrStackTrace = value;
					this.SendPropertyChanged("ErrStackTrace");
					this.OnErrStackTraceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ErrTime
		{
			get
			{
				return this._ErrTime;
			}
			set
			{
				if ((this._ErrTime != value))
				{
					this.OnErrTimeChanging(value);
					this.SendPropertyChanging();
					this._ErrTime = value;
					this.SendPropertyChanged("ErrTime");
					this.OnErrTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrUrl", DbType="NVarChar(800)")]
		public string ErrUrl
		{
			get
			{
				return this._ErrUrl;
			}
			set
			{
				if ((this._ErrUrl != value))
				{
					this.OnErrUrlChanging(value);
					this.SendPropertyChanging();
					this._ErrUrl = value;
					this.SendPropertyChanged("ErrUrl");
					this.OnErrUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrIP", DbType="NVarChar(50)")]
		public string ErrIP
		{
			get
			{
				return this._ErrIP;
			}
			set
			{
				if ((this._ErrIP != value))
				{
					this.OnErrIPChanging(value);
					this.SendPropertyChanging();
					this._ErrIP = value;
					this.SendPropertyChanged("ErrIP");
					this.OnErrIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_FlowOperate")]
	public partial class Sys_FlowOperate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FlowOperateId;
		
		private string _MenuId;
		
		private string _DataId;
		
		private System.Nullable<int> _SortIndex;
		
		private string _AuditFlowName;
		
		private string _OperaterId;
		
		private System.Nullable<System.DateTime> _OperaterTime;
		
		private string _Opinion;
		
		private System.Nullable<bool> _IsClosed;
		
		private string _State;
		
		private string _Url;
		
		private EntityRef<Sys_Menu> _Sys_Menu;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFlowOperateIdChanging(string value);
    partial void OnFlowOperateIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnDataIdChanging(string value);
    partial void OnDataIdChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnAuditFlowNameChanging(string value);
    partial void OnAuditFlowNameChanged();
    partial void OnOperaterIdChanging(string value);
    partial void OnOperaterIdChanged();
    partial void OnOperaterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperaterTimeChanged();
    partial void OnOpinionChanging(string value);
    partial void OnOpinionChanged();
    partial void OnIsClosedChanging(System.Nullable<bool> value);
    partial void OnIsClosedChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public Sys_FlowOperate()
		{
			this._Sys_Menu = default(EntityRef<Sys_Menu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowOperateId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FlowOperateId
		{
			get
			{
				return this._FlowOperateId;
			}
			set
			{
				if ((this._FlowOperateId != value))
				{
					this.OnFlowOperateIdChanging(value);
					this.SendPropertyChanging();
					this._FlowOperateId = value;
					this.SendPropertyChanged("FlowOperateId");
					this.OnFlowOperateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Sys_Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataId", DbType="NVarChar(50)")]
		public string DataId
		{
			get
			{
				return this._DataId;
			}
			set
			{
				if ((this._DataId != value))
				{
					this.OnDataIdChanging(value);
					this.SendPropertyChanging();
					this._DataId = value;
					this.SendPropertyChanged("DataId");
					this.OnDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditFlowName", DbType="NVarChar(50)")]
		public string AuditFlowName
		{
			get
			{
				return this._AuditFlowName;
			}
			set
			{
				if ((this._AuditFlowName != value))
				{
					this.OnAuditFlowNameChanging(value);
					this.SendPropertyChanging();
					this._AuditFlowName = value;
					this.SendPropertyChanged("AuditFlowName");
					this.OnAuditFlowNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperaterId", DbType="NVarChar(500)")]
		public string OperaterId
		{
			get
			{
				return this._OperaterId;
			}
			set
			{
				if ((this._OperaterId != value))
				{
					this.OnOperaterIdChanging(value);
					this.SendPropertyChanging();
					this._OperaterId = value;
					this.SendPropertyChanged("OperaterId");
					this.OnOperaterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperaterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperaterTime
		{
			get
			{
				return this._OperaterTime;
			}
			set
			{
				if ((this._OperaterTime != value))
				{
					this.OnOperaterTimeChanging(value);
					this.SendPropertyChanging();
					this._OperaterTime = value;
					this.SendPropertyChanged("OperaterTime");
					this.OnOperaterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opinion", DbType="NVarChar(1000)")]
		public string Opinion
		{
			get
			{
				return this._Opinion;
			}
			set
			{
				if ((this._Opinion != value))
				{
					this.OnOpinionChanging(value);
					this.SendPropertyChanging();
					this._Opinion = value;
					this.SendPropertyChanged("Opinion");
					this.OnOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit")]
		public System.Nullable<bool> IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this.OnIsClosedChanging(value);
					this.SendPropertyChanging();
					this._IsClosed = value;
					this.SendPropertyChanged("IsClosed");
					this.OnIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(500)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_FlowOperate_Sys_Menu", Storage="_Sys_Menu", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true)]
		public Sys_Menu Sys_Menu
		{
			get
			{
				return this._Sys_Menu.Entity;
			}
			set
			{
				Sys_Menu previousValue = this._Sys_Menu.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Menu.Entity = null;
						previousValue.Sys_FlowOperate.Remove(this);
					}
					this._Sys_Menu.Entity = value;
					if ((value != null))
					{
						value.Sys_FlowOperate.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(string);
					}
					this.SendPropertyChanged("Sys_Menu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Log")]
	public partial class Sys_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LogId;
		
		private string _UserId;
		
		private System.Nullable<System.DateTime> _OperationTime;
		
		private string _Ip;
		
		private string _HostName;
		
		private string _OperationLog;
		
		private System.Nullable<int> _LogSource;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIdChanging(string value);
    partial void OnLogIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnOperationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperationTimeChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnHostNameChanging(string value);
    partial void OnHostNameChanged();
    partial void OnOperationLogChanging(string value);
    partial void OnOperationLogChanged();
    partial void OnLogSourceChanging(System.Nullable<int> value);
    partial void OnLogSourceChanged();
    #endregion
		
		public Sys_Log()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					this.OnLogIdChanging(value);
					this.SendPropertyChanging();
					this._LogId = value;
					this.SendPropertyChanged("LogId");
					this.OnLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperationTime
		{
			get
			{
				return this._OperationTime;
			}
			set
			{
				if ((this._OperationTime != value))
				{
					this.OnOperationTimeChanging(value);
					this.SendPropertyChanging();
					this._OperationTime = value;
					this.SendPropertyChanged("OperationTime");
					this.OnOperationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(200)")]
		public string Ip
		{
			get
			{
				return this._Ip;
			}
			set
			{
				if ((this._Ip != value))
				{
					this.OnIpChanging(value);
					this.SendPropertyChanging();
					this._Ip = value;
					this.SendPropertyChanged("Ip");
					this.OnIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostName", DbType="NVarChar(500)")]
		public string HostName
		{
			get
			{
				return this._HostName;
			}
			set
			{
				if ((this._HostName != value))
				{
					this.OnHostNameChanging(value);
					this.SendPropertyChanging();
					this._HostName = value;
					this.SendPropertyChanged("HostName");
					this.OnHostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationLog", DbType="NVarChar(4000)")]
		public string OperationLog
		{
			get
			{
				return this._OperationLog;
			}
			set
			{
				if ((this._OperationLog != value))
				{
					this.OnOperationLogChanging(value);
					this.SendPropertyChanging();
					this._OperationLog = value;
					this.SendPropertyChanged("OperationLog");
					this.OnOperationLogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogSource", DbType="Int")]
		public System.Nullable<int> LogSource
		{
			get
			{
				return this._LogSource;
			}
			set
			{
				if ((this._LogSource != value))
				{
					this.OnLogSourceChanging(value);
					this.SendPropertyChanging();
					this._LogSource = value;
					this.SendPropertyChanged("LogSource");
					this.OnLogSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Log_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Sys_Log.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Sys_Log.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Menu")]
	public partial class Sys_Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MenuId;
		
		private string _MenuName;
		
		private string _Icon;
		
		private string _Url;
		
		private System.Nullable<int> _SortIndex;
		
		private string _SuperMenu;
		
		private string _MenuType;
		
		private System.Nullable<bool> _IsEnd;
		
		private System.Nullable<bool> _IsUsed;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private EntitySet<Appraisal_AppraisalScore> _Appraisal_AppraisalScore;
		
		private EntitySet<InformationProject_FileCabinetA> _InformationProject_FileCabinetA;
		
		private EntitySet<Sys_ButtonPower> _Sys_ButtonPower;
		
		private EntitySet<Sys_ButtonToMenu> _Sys_ButtonToMenu;
		
		private EntitySet<Sys_FlowOperate> _Sys_FlowOperate;
		
		private EntitySet<Sys_MenuAppraisal> _Sys_MenuAppraisal;
		
		private EntitySet<Sys_MenuFlowOperate> _Sys_MenuFlowOperate;
		
		private EntitySet<Sys_PushRecord> _Sys_PushRecord;
		
		private EntitySet<Sys_RolePower> _Sys_RolePower;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnSuperMenuChanging(string value);
    partial void OnSuperMenuChanged();
    partial void OnMenuTypeChanging(string value);
    partial void OnMenuTypeChanged();
    partial void OnIsEndChanging(System.Nullable<bool> value);
    partial void OnIsEndChanged();
    partial void OnIsUsedChanging(System.Nullable<bool> value);
    partial void OnIsUsedChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    #endregion
		
		public Sys_Menu()
		{
			this._Appraisal_AppraisalScore = new EntitySet<Appraisal_AppraisalScore>(new Action<Appraisal_AppraisalScore>(this.attach_Appraisal_AppraisalScore), new Action<Appraisal_AppraisalScore>(this.detach_Appraisal_AppraisalScore));
			this._InformationProject_FileCabinetA = new EntitySet<InformationProject_FileCabinetA>(new Action<InformationProject_FileCabinetA>(this.attach_InformationProject_FileCabinetA), new Action<InformationProject_FileCabinetA>(this.detach_InformationProject_FileCabinetA));
			this._Sys_ButtonPower = new EntitySet<Sys_ButtonPower>(new Action<Sys_ButtonPower>(this.attach_Sys_ButtonPower), new Action<Sys_ButtonPower>(this.detach_Sys_ButtonPower));
			this._Sys_ButtonToMenu = new EntitySet<Sys_ButtonToMenu>(new Action<Sys_ButtonToMenu>(this.attach_Sys_ButtonToMenu), new Action<Sys_ButtonToMenu>(this.detach_Sys_ButtonToMenu));
			this._Sys_FlowOperate = new EntitySet<Sys_FlowOperate>(new Action<Sys_FlowOperate>(this.attach_Sys_FlowOperate), new Action<Sys_FlowOperate>(this.detach_Sys_FlowOperate));
			this._Sys_MenuAppraisal = new EntitySet<Sys_MenuAppraisal>(new Action<Sys_MenuAppraisal>(this.attach_Sys_MenuAppraisal), new Action<Sys_MenuAppraisal>(this.detach_Sys_MenuAppraisal));
			this._Sys_MenuFlowOperate = new EntitySet<Sys_MenuFlowOperate>(new Action<Sys_MenuFlowOperate>(this.attach_Sys_MenuFlowOperate), new Action<Sys_MenuFlowOperate>(this.detach_Sys_MenuFlowOperate));
			this._Sys_PushRecord = new EntitySet<Sys_PushRecord>(new Action<Sys_PushRecord>(this.attach_Sys_PushRecord), new Action<Sys_PushRecord>(this.detach_Sys_PushRecord));
			this._Sys_RolePower = new EntitySet<Sys_RolePower>(new Action<Sys_RolePower>(this.attach_Sys_RolePower), new Action<Sys_RolePower>(this.detach_Sys_RolePower));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="NVarChar(50)")]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(50)")]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(200)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperMenu", DbType="NVarChar(50)")]
		public string SuperMenu
		{
			get
			{
				return this._SuperMenu;
			}
			set
			{
				if ((this._SuperMenu != value))
				{
					this.OnSuperMenuChanging(value);
					this.SendPropertyChanging();
					this._SuperMenu = value;
					this.SendPropertyChanged("SuperMenu");
					this.OnSuperMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuType", DbType="NVarChar(50)")]
		public string MenuType
		{
			get
			{
				return this._MenuType;
			}
			set
			{
				if ((this._MenuType != value))
				{
					this.OnMenuTypeChanging(value);
					this.SendPropertyChanging();
					this._MenuType = value;
					this.SendPropertyChanged("MenuType");
					this.OnMenuTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnd", DbType="Bit")]
		public System.Nullable<bool> IsEnd
		{
			get
			{
				return this._IsEnd;
			}
			set
			{
				if ((this._IsEnd != value))
				{
					this.OnIsEndChanging(value);
					this.SendPropertyChanging();
					this._IsEnd = value;
					this.SendPropertyChanged("IsEnd");
					this.OnIsEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Appraisal_AppraisalScore_Sys_Menu", Storage="_Appraisal_AppraisalScore", ThisKey="MenuId", OtherKey="MenuId", DeleteRule="NO ACTION")]
		public EntitySet<Appraisal_AppraisalScore> Appraisal_AppraisalScore
		{
			get
			{
				return this._Appraisal_AppraisalScore;
			}
			set
			{
				this._Appraisal_AppraisalScore.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_InformationProject_FileCabinetA_Sys_Menu", Storage="_InformationProject_FileCabinetA", ThisKey="MenuId", OtherKey="MenuId", DeleteRule="NO ACTION")]
		public EntitySet<InformationProject_FileCabinetA> InformationProject_FileCabinetA
		{
			get
			{
				return this._InformationProject_FileCabinetA;
			}
			set
			{
				this._InformationProject_FileCabinetA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_ButtonPower_Sys_Menu", Storage="_Sys_ButtonPower", ThisKey="MenuId", OtherKey="MenuId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_ButtonPower> Sys_ButtonPower
		{
			get
			{
				return this._Sys_ButtonPower;
			}
			set
			{
				this._Sys_ButtonPower.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_ButtonToMenu_Sys_Menu", Storage="_Sys_ButtonToMenu", ThisKey="MenuId", OtherKey="MenuId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_ButtonToMenu> Sys_ButtonToMenu
		{
			get
			{
				return this._Sys_ButtonToMenu;
			}
			set
			{
				this._Sys_ButtonToMenu.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_FlowOperate_Sys_Menu", Storage="_Sys_FlowOperate", ThisKey="MenuId", OtherKey="MenuId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_FlowOperate> Sys_FlowOperate
		{
			get
			{
				return this._Sys_FlowOperate;
			}
			set
			{
				this._Sys_FlowOperate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_MenuAppraisal_Sys_Menu", Storage="_Sys_MenuAppraisal", ThisKey="MenuId", OtherKey="MenuId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_MenuAppraisal> Sys_MenuAppraisal
		{
			get
			{
				return this._Sys_MenuAppraisal;
			}
			set
			{
				this._Sys_MenuAppraisal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_MenuFlowOperate_Sys_Menu", Storage="_Sys_MenuFlowOperate", ThisKey="MenuId", OtherKey="MenuId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_MenuFlowOperate> Sys_MenuFlowOperate
		{
			get
			{
				return this._Sys_MenuFlowOperate;
			}
			set
			{
				this._Sys_MenuFlowOperate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_PushRecord_Sys_Menu", Storage="_Sys_PushRecord", ThisKey="MenuId", OtherKey="MenuId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_PushRecord> Sys_PushRecord
		{
			get
			{
				return this._Sys_PushRecord;
			}
			set
			{
				this._Sys_PushRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_RolePower_Sys_Menu", Storage="_Sys_RolePower", ThisKey="MenuId", OtherKey="MenuId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_RolePower> Sys_RolePower
		{
			get
			{
				return this._Sys_RolePower;
			}
			set
			{
				this._Sys_RolePower.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Appraisal_AppraisalScore(Appraisal_AppraisalScore entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = this;
		}
		
		private void detach_Appraisal_AppraisalScore(Appraisal_AppraisalScore entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = null;
		}
		
		private void attach_InformationProject_FileCabinetA(InformationProject_FileCabinetA entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = this;
		}
		
		private void detach_InformationProject_FileCabinetA(InformationProject_FileCabinetA entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = null;
		}
		
		private void attach_Sys_ButtonPower(Sys_ButtonPower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = this;
		}
		
		private void detach_Sys_ButtonPower(Sys_ButtonPower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = null;
		}
		
		private void attach_Sys_ButtonToMenu(Sys_ButtonToMenu entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = this;
		}
		
		private void detach_Sys_ButtonToMenu(Sys_ButtonToMenu entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = null;
		}
		
		private void attach_Sys_FlowOperate(Sys_FlowOperate entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = this;
		}
		
		private void detach_Sys_FlowOperate(Sys_FlowOperate entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = null;
		}
		
		private void attach_Sys_MenuAppraisal(Sys_MenuAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = this;
		}
		
		private void detach_Sys_MenuAppraisal(Sys_MenuAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = null;
		}
		
		private void attach_Sys_MenuFlowOperate(Sys_MenuFlowOperate entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = this;
		}
		
		private void detach_Sys_MenuFlowOperate(Sys_MenuFlowOperate entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = null;
		}
		
		private void attach_Sys_PushRecord(Sys_PushRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = this;
		}
		
		private void detach_Sys_PushRecord(Sys_PushRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = null;
		}
		
		private void attach_Sys_RolePower(Sys_RolePower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = this;
		}
		
		private void detach_Sys_RolePower(Sys_RolePower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_MenuAppraisal")]
	public partial class Sys_MenuAppraisal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AppraisalId;
		
		private string _MenuId;
		
		private System.Nullable<int> _MenuOperation;
		
		private System.Nullable<decimal> _Score;
		
		private string _MenuOperationName;
		
		private System.Nullable<int> _OutTime;
		
		private string _APPUrl;
		
		private EntityRef<Sys_Menu> _Sys_Menu;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppraisalIdChanging(string value);
    partial void OnAppraisalIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnMenuOperationChanging(System.Nullable<int> value);
    partial void OnMenuOperationChanged();
    partial void OnScoreChanging(System.Nullable<decimal> value);
    partial void OnScoreChanged();
    partial void OnMenuOperationNameChanging(string value);
    partial void OnMenuOperationNameChanged();
    partial void OnOutTimeChanging(System.Nullable<int> value);
    partial void OnOutTimeChanged();
    partial void OnAPPUrlChanging(string value);
    partial void OnAPPUrlChanged();
    #endregion
		
		public Sys_MenuAppraisal()
		{
			this._Sys_Menu = default(EntityRef<Sys_Menu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppraisalId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AppraisalId
		{
			get
			{
				return this._AppraisalId;
			}
			set
			{
				if ((this._AppraisalId != value))
				{
					this.OnAppraisalIdChanging(value);
					this.SendPropertyChanging();
					this._AppraisalId = value;
					this.SendPropertyChanged("AppraisalId");
					this.OnAppraisalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Sys_Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuOperation", DbType="Int")]
		public System.Nullable<int> MenuOperation
		{
			get
			{
				return this._MenuOperation;
			}
			set
			{
				if ((this._MenuOperation != value))
				{
					this.OnMenuOperationChanging(value);
					this.SendPropertyChanging();
					this._MenuOperation = value;
					this.SendPropertyChanged("MenuOperation");
					this.OnMenuOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuOperationName", DbType="NVarChar(50)")]
		public string MenuOperationName
		{
			get
			{
				return this._MenuOperationName;
			}
			set
			{
				if ((this._MenuOperationName != value))
				{
					this.OnMenuOperationNameChanging(value);
					this.SendPropertyChanging();
					this._MenuOperationName = value;
					this.SendPropertyChanged("MenuOperationName");
					this.OnMenuOperationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutTime", DbType="Int")]
		public System.Nullable<int> OutTime
		{
			get
			{
				return this._OutTime;
			}
			set
			{
				if ((this._OutTime != value))
				{
					this.OnOutTimeChanging(value);
					this.SendPropertyChanging();
					this._OutTime = value;
					this.SendPropertyChanged("OutTime");
					this.OnOutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APPUrl", DbType="NVarChar(500)")]
		public string APPUrl
		{
			get
			{
				return this._APPUrl;
			}
			set
			{
				if ((this._APPUrl != value))
				{
					this.OnAPPUrlChanging(value);
					this.SendPropertyChanging();
					this._APPUrl = value;
					this.SendPropertyChanged("APPUrl");
					this.OnAPPUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_MenuAppraisal_Sys_Menu", Storage="_Sys_Menu", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true)]
		public Sys_Menu Sys_Menu
		{
			get
			{
				return this._Sys_Menu.Entity;
			}
			set
			{
				Sys_Menu previousValue = this._Sys_Menu.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Menu.Entity = null;
						previousValue.Sys_MenuAppraisal.Remove(this);
					}
					this._Sys_Menu.Entity = value;
					if ((value != null))
					{
						value.Sys_MenuAppraisal.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(string);
					}
					this.SendPropertyChanged("Sys_Menu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_MenuFlowOperate")]
	public partial class Sys_MenuFlowOperate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FlowOperateId;
		
		private string _MenuId;
		
		private int _FlowStep;
		
		private string _AuditFlowName;
		
		private string _WorkPostIds;
		
		private System.Nullable<bool> _IsNeed;
		
		private string _UserIds;
		
		private System.Nullable<bool> _IsFlowEnd;
		
		private int _PushGroup;
		
		private string _MatchesValue;
		
		private string _DepartIds;
		
		private string _InstallationIds;
		
		private EntityRef<Sys_Menu> _Sys_Menu;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFlowOperateIdChanging(string value);
    partial void OnFlowOperateIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnFlowStepChanging(int value);
    partial void OnFlowStepChanged();
    partial void OnAuditFlowNameChanging(string value);
    partial void OnAuditFlowNameChanged();
    partial void OnWorkPostIdsChanging(string value);
    partial void OnWorkPostIdsChanged();
    partial void OnIsNeedChanging(System.Nullable<bool> value);
    partial void OnIsNeedChanged();
    partial void OnUserIdsChanging(string value);
    partial void OnUserIdsChanged();
    partial void OnIsFlowEndChanging(System.Nullable<bool> value);
    partial void OnIsFlowEndChanged();
    partial void OnPushGroupChanging(int value);
    partial void OnPushGroupChanged();
    partial void OnMatchesValueChanging(string value);
    partial void OnMatchesValueChanged();
    partial void OnDepartIdsChanging(string value);
    partial void OnDepartIdsChanged();
    partial void OnInstallationIdsChanging(string value);
    partial void OnInstallationIdsChanged();
    #endregion
		
		public Sys_MenuFlowOperate()
		{
			this._Sys_Menu = default(EntityRef<Sys_Menu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowOperateId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FlowOperateId
		{
			get
			{
				return this._FlowOperateId;
			}
			set
			{
				if ((this._FlowOperateId != value))
				{
					this.OnFlowOperateIdChanging(value);
					this.SendPropertyChanging();
					this._FlowOperateId = value;
					this.SendPropertyChanged("FlowOperateId");
					this.OnFlowOperateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Sys_Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowStep", DbType="Int NOT NULL")]
		public int FlowStep
		{
			get
			{
				return this._FlowStep;
			}
			set
			{
				if ((this._FlowStep != value))
				{
					this.OnFlowStepChanging(value);
					this.SendPropertyChanging();
					this._FlowStep = value;
					this.SendPropertyChanged("FlowStep");
					this.OnFlowStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditFlowName", DbType="NVarChar(50)")]
		public string AuditFlowName
		{
			get
			{
				return this._AuditFlowName;
			}
			set
			{
				if ((this._AuditFlowName != value))
				{
					this.OnAuditFlowNameChanging(value);
					this.SendPropertyChanging();
					this._AuditFlowName = value;
					this.SendPropertyChanged("AuditFlowName");
					this.OnAuditFlowNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostIds", DbType="NVarChar(4000)")]
		public string WorkPostIds
		{
			get
			{
				return this._WorkPostIds;
			}
			set
			{
				if ((this._WorkPostIds != value))
				{
					this.OnWorkPostIdsChanging(value);
					this.SendPropertyChanging();
					this._WorkPostIds = value;
					this.SendPropertyChanged("WorkPostIds");
					this.OnWorkPostIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNeed", DbType="Bit")]
		public System.Nullable<bool> IsNeed
		{
			get
			{
				return this._IsNeed;
			}
			set
			{
				if ((this._IsNeed != value))
				{
					this.OnIsNeedChanging(value);
					this.SendPropertyChanging();
					this._IsNeed = value;
					this.SendPropertyChanged("IsNeed");
					this.OnIsNeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIds", DbType="NVarChar(500)")]
		public string UserIds
		{
			get
			{
				return this._UserIds;
			}
			set
			{
				if ((this._UserIds != value))
				{
					this.OnUserIdsChanging(value);
					this.SendPropertyChanging();
					this._UserIds = value;
					this.SendPropertyChanged("UserIds");
					this.OnUserIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFlowEnd", DbType="Bit")]
		public System.Nullable<bool> IsFlowEnd
		{
			get
			{
				return this._IsFlowEnd;
			}
			set
			{
				if ((this._IsFlowEnd != value))
				{
					this.OnIsFlowEndChanging(value);
					this.SendPropertyChanging();
					this._IsFlowEnd = value;
					this.SendPropertyChanged("IsFlowEnd");
					this.OnIsFlowEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushGroup", DbType="Int NOT NULL")]
		public int PushGroup
		{
			get
			{
				return this._PushGroup;
			}
			set
			{
				if ((this._PushGroup != value))
				{
					this.OnPushGroupChanging(value);
					this.SendPropertyChanging();
					this._PushGroup = value;
					this.SendPropertyChanged("PushGroup");
					this.OnPushGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchesValue", DbType="VarChar(2)")]
		public string MatchesValue
		{
			get
			{
				return this._MatchesValue;
			}
			set
			{
				if ((this._MatchesValue != value))
				{
					this.OnMatchesValueChanging(value);
					this.SendPropertyChanging();
					this._MatchesValue = value;
					this.SendPropertyChanged("MatchesValue");
					this.OnMatchesValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartIds", DbType="NVarChar(4000)")]
		public string DepartIds
		{
			get
			{
				return this._DepartIds;
			}
			set
			{
				if ((this._DepartIds != value))
				{
					this.OnDepartIdsChanging(value);
					this.SendPropertyChanging();
					this._DepartIds = value;
					this.SendPropertyChanged("DepartIds");
					this.OnDepartIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationIds", DbType="NVarChar(4000)")]
		public string InstallationIds
		{
			get
			{
				return this._InstallationIds;
			}
			set
			{
				if ((this._InstallationIds != value))
				{
					this.OnInstallationIdsChanging(value);
					this.SendPropertyChanging();
					this._InstallationIds = value;
					this.SendPropertyChanged("InstallationIds");
					this.OnInstallationIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_MenuFlowOperate_Sys_Menu", Storage="_Sys_Menu", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true)]
		public Sys_Menu Sys_Menu
		{
			get
			{
				return this._Sys_Menu.Entity;
			}
			set
			{
				Sys_Menu previousValue = this._Sys_Menu.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Menu.Entity = null;
						previousValue.Sys_MenuFlowOperate.Remove(this);
					}
					this._Sys_Menu.Entity = value;
					if ((value != null))
					{
						value.Sys_MenuFlowOperate.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(string);
					}
					this.SendPropertyChanged("Sys_Menu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_PushRecord")]
	public partial class Sys_PushRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PushRecordId;
		
		private string _MenuId;
		
		private string _DataId;
		
		private int _FlowStep;
		
		private string _AuditFlowName;
		
		private string _PushManId;
		
		private System.Nullable<System.DateTime> _PushDateTime;
		
		private string _ReceiveManId;
		
		private string _PushContent;
		
		private System.Nullable<bool> _IsResponse;
		
		private System.Nullable<bool> _IsNeed;
		
		private System.Nullable<bool> _IsAgree;
		
		private string _Opinion;
		
		private System.Nullable<System.DateTime> _SigningTime;
		
		private System.Nullable<System.DateTime> _ResponseTime;
		
		private System.Nullable<int> _PushGroup;
		
		private string _RecipientManId;
		
		private System.Nullable<System.DateTime> _RecipientTime;
		
		private bool _IsClosed;
		
		private string _ElectronicSignatureUrl;
		
		private EntityRef<Sys_Menu> _Sys_Menu;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _ReceiveMan;
		
		private EntityRef<Sys_User> _RecipientMan;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPushRecordIdChanging(string value);
    partial void OnPushRecordIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnDataIdChanging(string value);
    partial void OnDataIdChanged();
    partial void OnFlowStepChanging(int value);
    partial void OnFlowStepChanged();
    partial void OnAuditFlowNameChanging(string value);
    partial void OnAuditFlowNameChanged();
    partial void OnPushManIdChanging(string value);
    partial void OnPushManIdChanged();
    partial void OnPushDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPushDateTimeChanged();
    partial void OnReceiveManIdChanging(string value);
    partial void OnReceiveManIdChanged();
    partial void OnPushContentChanging(string value);
    partial void OnPushContentChanged();
    partial void OnIsResponseChanging(System.Nullable<bool> value);
    partial void OnIsResponseChanged();
    partial void OnIsNeedChanging(System.Nullable<bool> value);
    partial void OnIsNeedChanged();
    partial void OnIsAgreeChanging(System.Nullable<bool> value);
    partial void OnIsAgreeChanged();
    partial void OnOpinionChanging(string value);
    partial void OnOpinionChanged();
    partial void OnSigningTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSigningTimeChanged();
    partial void OnResponseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnResponseTimeChanged();
    partial void OnPushGroupChanging(System.Nullable<int> value);
    partial void OnPushGroupChanged();
    partial void OnRecipientManIdChanging(string value);
    partial void OnRecipientManIdChanged();
    partial void OnRecipientTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRecipientTimeChanged();
    partial void OnIsClosedChanging(bool value);
    partial void OnIsClosedChanged();
    partial void OnElectronicSignatureUrlChanging(string value);
    partial void OnElectronicSignatureUrlChanged();
    #endregion
		
		public Sys_PushRecord()
		{
			this._Sys_Menu = default(EntityRef<Sys_Menu>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._ReceiveMan = default(EntityRef<Sys_User>);
			this._RecipientMan = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushRecordId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PushRecordId
		{
			get
			{
				return this._PushRecordId;
			}
			set
			{
				if ((this._PushRecordId != value))
				{
					this.OnPushRecordIdChanging(value);
					this.SendPropertyChanging();
					this._PushRecordId = value;
					this.SendPropertyChanged("PushRecordId");
					this.OnPushRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Sys_Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DataId
		{
			get
			{
				return this._DataId;
			}
			set
			{
				if ((this._DataId != value))
				{
					this.OnDataIdChanging(value);
					this.SendPropertyChanging();
					this._DataId = value;
					this.SendPropertyChanged("DataId");
					this.OnDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowStep", DbType="Int NOT NULL")]
		public int FlowStep
		{
			get
			{
				return this._FlowStep;
			}
			set
			{
				if ((this._FlowStep != value))
				{
					this.OnFlowStepChanging(value);
					this.SendPropertyChanging();
					this._FlowStep = value;
					this.SendPropertyChanged("FlowStep");
					this.OnFlowStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditFlowName", DbType="NVarChar(50)")]
		public string AuditFlowName
		{
			get
			{
				return this._AuditFlowName;
			}
			set
			{
				if ((this._AuditFlowName != value))
				{
					this.OnAuditFlowNameChanging(value);
					this.SendPropertyChanging();
					this._AuditFlowName = value;
					this.SendPropertyChanged("AuditFlowName");
					this.OnAuditFlowNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushManId", DbType="NVarChar(50)")]
		public string PushManId
		{
			get
			{
				return this._PushManId;
			}
			set
			{
				if ((this._PushManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPushManIdChanging(value);
					this.SendPropertyChanging();
					this._PushManId = value;
					this.SendPropertyChanged("PushManId");
					this.OnPushManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PushDateTime
		{
			get
			{
				return this._PushDateTime;
			}
			set
			{
				if ((this._PushDateTime != value))
				{
					this.OnPushDateTimeChanging(value);
					this.SendPropertyChanging();
					this._PushDateTime = value;
					this.SendPropertyChanged("PushDateTime");
					this.OnPushDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveManId", DbType="NVarChar(50)")]
		public string ReceiveManId
		{
			get
			{
				return this._ReceiveManId;
			}
			set
			{
				if ((this._ReceiveManId != value))
				{
					if (this._ReceiveMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceiveManIdChanging(value);
					this.SendPropertyChanging();
					this._ReceiveManId = value;
					this.SendPropertyChanged("ReceiveManId");
					this.OnReceiveManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushContent", DbType="NVarChar(500)")]
		public string PushContent
		{
			get
			{
				return this._PushContent;
			}
			set
			{
				if ((this._PushContent != value))
				{
					this.OnPushContentChanging(value);
					this.SendPropertyChanging();
					this._PushContent = value;
					this.SendPropertyChanged("PushContent");
					this.OnPushContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsResponse", DbType="Bit")]
		public System.Nullable<bool> IsResponse
		{
			get
			{
				return this._IsResponse;
			}
			set
			{
				if ((this._IsResponse != value))
				{
					this.OnIsResponseChanging(value);
					this.SendPropertyChanging();
					this._IsResponse = value;
					this.SendPropertyChanged("IsResponse");
					this.OnIsResponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNeed", DbType="Bit")]
		public System.Nullable<bool> IsNeed
		{
			get
			{
				return this._IsNeed;
			}
			set
			{
				if ((this._IsNeed != value))
				{
					this.OnIsNeedChanging(value);
					this.SendPropertyChanging();
					this._IsNeed = value;
					this.SendPropertyChanged("IsNeed");
					this.OnIsNeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAgree", DbType="Bit")]
		public System.Nullable<bool> IsAgree
		{
			get
			{
				return this._IsAgree;
			}
			set
			{
				if ((this._IsAgree != value))
				{
					this.OnIsAgreeChanging(value);
					this.SendPropertyChanging();
					this._IsAgree = value;
					this.SendPropertyChanged("IsAgree");
					this.OnIsAgreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opinion", DbType="NVarChar(500)")]
		public string Opinion
		{
			get
			{
				return this._Opinion;
			}
			set
			{
				if ((this._Opinion != value))
				{
					this.OnOpinionChanging(value);
					this.SendPropertyChanging();
					this._Opinion = value;
					this.SendPropertyChanged("Opinion");
					this.OnOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SigningTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SigningTime
		{
			get
			{
				return this._SigningTime;
			}
			set
			{
				if ((this._SigningTime != value))
				{
					this.OnSigningTimeChanging(value);
					this.SendPropertyChanging();
					this._SigningTime = value;
					this.SendPropertyChanged("SigningTime");
					this.OnSigningTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResponseTime
		{
			get
			{
				return this._ResponseTime;
			}
			set
			{
				if ((this._ResponseTime != value))
				{
					this.OnResponseTimeChanging(value);
					this.SendPropertyChanging();
					this._ResponseTime = value;
					this.SendPropertyChanged("ResponseTime");
					this.OnResponseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushGroup", DbType="Int")]
		public System.Nullable<int> PushGroup
		{
			get
			{
				return this._PushGroup;
			}
			set
			{
				if ((this._PushGroup != value))
				{
					this.OnPushGroupChanging(value);
					this.SendPropertyChanging();
					this._PushGroup = value;
					this.SendPropertyChanged("PushGroup");
					this.OnPushGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientManId", DbType="NVarChar(50)")]
		public string RecipientManId
		{
			get
			{
				return this._RecipientManId;
			}
			set
			{
				if ((this._RecipientManId != value))
				{
					if (this._RecipientMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecipientManIdChanging(value);
					this.SendPropertyChanging();
					this._RecipientManId = value;
					this.SendPropertyChanged("RecipientManId");
					this.OnRecipientManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecipientTime
		{
			get
			{
				return this._RecipientTime;
			}
			set
			{
				if ((this._RecipientTime != value))
				{
					this.OnRecipientTimeChanging(value);
					this.SendPropertyChanging();
					this._RecipientTime = value;
					this.SendPropertyChanged("RecipientTime");
					this.OnRecipientTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit NOT NULL")]
		public bool IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this.OnIsClosedChanging(value);
					this.SendPropertyChanging();
					this._IsClosed = value;
					this.SendPropertyChanged("IsClosed");
					this.OnIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectronicSignatureUrl", DbType="NVarChar(256)")]
		public string ElectronicSignatureUrl
		{
			get
			{
				return this._ElectronicSignatureUrl;
			}
			set
			{
				if ((this._ElectronicSignatureUrl != value))
				{
					this.OnElectronicSignatureUrlChanging(value);
					this.SendPropertyChanging();
					this._ElectronicSignatureUrl = value;
					this.SendPropertyChanged("ElectronicSignatureUrl");
					this.OnElectronicSignatureUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_PushRecord_Sys_Menu", Storage="_Sys_Menu", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true)]
		public Sys_Menu Sys_Menu
		{
			get
			{
				return this._Sys_Menu.Entity;
			}
			set
			{
				Sys_Menu previousValue = this._Sys_Menu.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Menu.Entity = null;
						previousValue.Sys_PushRecord.Remove(this);
					}
					this._Sys_Menu.Entity = value;
					if ((value != null))
					{
						value.Sys_PushRecord.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(string);
					}
					this.SendPropertyChanged("Sys_Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_PushRecord_Sys_User", Storage="_Sys_User", ThisKey="PushManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Sys_PushRecord.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Sys_PushRecord.Add(this);
						this._PushManId = value.UserId;
					}
					else
					{
						this._PushManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_PushRecord_Sys_User1", Storage="_ReceiveMan", ThisKey="ReceiveManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ReceiveMan
		{
			get
			{
				return this._ReceiveMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._ReceiveMan.Entity;
				if (((previousValue != value) 
							|| (this._ReceiveMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReceiveMan.Entity = null;
						previousValue.Sys_PushRecord_Sys_User1.Remove(this);
					}
					this._ReceiveMan.Entity = value;
					if ((value != null))
					{
						value.Sys_PushRecord_Sys_User1.Add(this);
						this._ReceiveManId = value.UserId;
					}
					else
					{
						this._ReceiveManId = default(string);
					}
					this.SendPropertyChanged("ReceiveMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_PushRecord_Sys_User2", Storage="_RecipientMan", ThisKey="RecipientManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User RecipientMan
		{
			get
			{
				return this._RecipientMan.Entity;
			}
			set
			{
				Sys_User previousValue = this._RecipientMan.Entity;
				if (((previousValue != value) 
							|| (this._RecipientMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RecipientMan.Entity = null;
						previousValue.Sys_PushRecord_Sys_User2.Remove(this);
					}
					this._RecipientMan.Entity = value;
					if ((value != null))
					{
						value.Sys_PushRecord_Sys_User2.Add(this);
						this._RecipientManId = value.UserId;
					}
					else
					{
						this._RecipientManId = default(string);
					}
					this.SendPropertyChanged("RecipientMan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Role")]
	public partial class Sys_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleId;
		
		private string _SupRoleId;
		
		private string _RoleName;
		
		private string _RoleCode;
		
		private string _Def;
		
		private System.Nullable<bool> _IsAuditFlow;
		
		private System.Nullable<bool> _IsSystemBuilt;
		
		private string _AuthorizedRoleIds;
		
		private string _AuthorizedRoleNames;
		
		private EntitySet<Sys_ButtonPower> _Sys_ButtonPower;
		
		private EntitySet<Sys_RolePower> _Sys_RolePower;
		
		private EntitySet<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnSupRoleIdChanging(string value);
    partial void OnSupRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnRoleCodeChanging(string value);
    partial void OnRoleCodeChanged();
    partial void OnDefChanging(string value);
    partial void OnDefChanged();
    partial void OnIsAuditFlowChanging(System.Nullable<bool> value);
    partial void OnIsAuditFlowChanged();
    partial void OnIsSystemBuiltChanging(System.Nullable<bool> value);
    partial void OnIsSystemBuiltChanged();
    partial void OnAuthorizedRoleIdsChanging(string value);
    partial void OnAuthorizedRoleIdsChanged();
    partial void OnAuthorizedRoleNamesChanging(string value);
    partial void OnAuthorizedRoleNamesChanged();
    #endregion
		
		public Sys_Role()
		{
			this._Sys_ButtonPower = new EntitySet<Sys_ButtonPower>(new Action<Sys_ButtonPower>(this.attach_Sys_ButtonPower), new Action<Sys_ButtonPower>(this.detach_Sys_ButtonPower));
			this._Sys_RolePower = new EntitySet<Sys_RolePower>(new Action<Sys_RolePower>(this.attach_Sys_RolePower), new Action<Sys_RolePower>(this.detach_Sys_RolePower));
			this._Sys_User = new EntitySet<Sys_User>(new Action<Sys_User>(this.attach_Sys_User), new Action<Sys_User>(this.detach_Sys_User));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupRoleId", DbType="NVarChar(50)")]
		public string SupRoleId
		{
			get
			{
				return this._SupRoleId;
			}
			set
			{
				if ((this._SupRoleId != value))
				{
					this.OnSupRoleIdChanging(value);
					this.SendPropertyChanging();
					this._SupRoleId = value;
					this.SendPropertyChanged("SupRoleId");
					this.OnSupRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleCode", DbType="NVarChar(50)")]
		public string RoleCode
		{
			get
			{
				return this._RoleCode;
			}
			set
			{
				if ((this._RoleCode != value))
				{
					this.OnRoleCodeChanging(value);
					this.SendPropertyChanging();
					this._RoleCode = value;
					this.SendPropertyChanged("RoleCode");
					this.OnRoleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Def", DbType="NVarChar(100)")]
		public string Def
		{
			get
			{
				return this._Def;
			}
			set
			{
				if ((this._Def != value))
				{
					this.OnDefChanging(value);
					this.SendPropertyChanging();
					this._Def = value;
					this.SendPropertyChanged("Def");
					this.OnDefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAuditFlow", DbType="Bit")]
		public System.Nullable<bool> IsAuditFlow
		{
			get
			{
				return this._IsAuditFlow;
			}
			set
			{
				if ((this._IsAuditFlow != value))
				{
					this.OnIsAuditFlowChanging(value);
					this.SendPropertyChanging();
					this._IsAuditFlow = value;
					this.SendPropertyChanged("IsAuditFlow");
					this.OnIsAuditFlowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystemBuilt", DbType="Bit")]
		public System.Nullable<bool> IsSystemBuilt
		{
			get
			{
				return this._IsSystemBuilt;
			}
			set
			{
				if ((this._IsSystemBuilt != value))
				{
					this.OnIsSystemBuiltChanging(value);
					this.SendPropertyChanging();
					this._IsSystemBuilt = value;
					this.SendPropertyChanged("IsSystemBuilt");
					this.OnIsSystemBuiltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedRoleIds", DbType="NVarChar(4000)")]
		public string AuthorizedRoleIds
		{
			get
			{
				return this._AuthorizedRoleIds;
			}
			set
			{
				if ((this._AuthorizedRoleIds != value))
				{
					this.OnAuthorizedRoleIdsChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedRoleIds = value;
					this.SendPropertyChanged("AuthorizedRoleIds");
					this.OnAuthorizedRoleIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedRoleNames", DbType="NVarChar(4000)")]
		public string AuthorizedRoleNames
		{
			get
			{
				return this._AuthorizedRoleNames;
			}
			set
			{
				if ((this._AuthorizedRoleNames != value))
				{
					this.OnAuthorizedRoleNamesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedRoleNames = value;
					this.SendPropertyChanged("AuthorizedRoleNames");
					this.OnAuthorizedRoleNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_ButtonPower_Sys_Role", Storage="_Sys_ButtonPower", ThisKey="RoleId", OtherKey="RoleId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_ButtonPower> Sys_ButtonPower
		{
			get
			{
				return this._Sys_ButtonPower;
			}
			set
			{
				this._Sys_ButtonPower.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_RolePower_Sys_Role", Storage="_Sys_RolePower", ThisKey="RoleId", OtherKey="RoleId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_RolePower> Sys_RolePower
		{
			get
			{
				return this._Sys_RolePower;
			}
			set
			{
				this._Sys_RolePower.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Sys_Role", Storage="_Sys_User", ThisKey="RoleId", OtherKey="RoleId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_User> Sys_User
		{
			get
			{
				return this._Sys_User;
			}
			set
			{
				this._Sys_User.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sys_ButtonPower(Sys_ButtonPower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = this;
		}
		
		private void detach_Sys_ButtonPower(Sys_ButtonPower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = null;
		}
		
		private void attach_Sys_RolePower(Sys_RolePower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = this;
		}
		
		private void detach_Sys_RolePower(Sys_RolePower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = null;
		}
		
		private void attach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = this;
		}
		
		private void detach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_RolePower")]
	public partial class Sys_RolePower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RolePowerId;
		
		private string _RoleId;
		
		private string _MenuId;
		
		private EntityRef<Sys_Menu> _Sys_Menu;
		
		private EntityRef<Sys_Role> _Sys_Role;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRolePowerIdChanging(string value);
    partial void OnRolePowerIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    #endregion
		
		public Sys_RolePower()
		{
			this._Sys_Menu = default(EntityRef<Sys_Menu>);
			this._Sys_Role = default(EntityRef<Sys_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RolePowerId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RolePowerId
		{
			get
			{
				return this._RolePowerId;
			}
			set
			{
				if ((this._RolePowerId != value))
				{
					this.OnRolePowerIdChanging(value);
					this.SendPropertyChanging();
					this._RolePowerId = value;
					this.SendPropertyChanged("RolePowerId");
					this.OnRolePowerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Sys_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Sys_Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_RolePower_Sys_Menu", Storage="_Sys_Menu", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true)]
		public Sys_Menu Sys_Menu
		{
			get
			{
				return this._Sys_Menu.Entity;
			}
			set
			{
				Sys_Menu previousValue = this._Sys_Menu.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Menu.Entity = null;
						previousValue.Sys_RolePower.Remove(this);
					}
					this._Sys_Menu.Entity = value;
					if ((value != null))
					{
						value.Sys_RolePower.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(string);
					}
					this.SendPropertyChanged("Sys_Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_RolePower_Sys_Role", Storage="_Sys_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Sys_Role Sys_Role
		{
			get
			{
				return this._Sys_Role.Entity;
			}
			set
			{
				Sys_Role previousValue = this._Sys_Role.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Role.Entity = null;
						previousValue.Sys_RolePower.Remove(this);
					}
					this._Sys_Role.Entity = value;
					if ((value != null))
					{
						value.Sys_RolePower.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("Sys_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Set")]
	public partial class Sys_Set : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SetId;
		
		private string _SetName;
		
		private System.Nullable<bool> _IsAuto;
		
		private string _SetValue;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSetIdChanging(int value);
    partial void OnSetIdChanged();
    partial void OnSetNameChanging(string value);
    partial void OnSetNameChanged();
    partial void OnIsAutoChanging(System.Nullable<bool> value);
    partial void OnIsAutoChanged();
    partial void OnSetValueChanging(string value);
    partial void OnSetValueChanged();
    #endregion
		
		public Sys_Set()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SetId
		{
			get
			{
				return this._SetId;
			}
			set
			{
				if ((this._SetId != value))
				{
					this.OnSetIdChanging(value);
					this.SendPropertyChanging();
					this._SetId = value;
					this.SendPropertyChanged("SetId");
					this.OnSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetName", DbType="NVarChar(500)")]
		public string SetName
		{
			get
			{
				return this._SetName;
			}
			set
			{
				if ((this._SetName != value))
				{
					this.OnSetNameChanging(value);
					this.SendPropertyChanging();
					this._SetName = value;
					this.SendPropertyChanged("SetName");
					this.OnSetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAuto", DbType="Bit")]
		public System.Nullable<bool> IsAuto
		{
			get
			{
				return this._IsAuto;
			}
			set
			{
				if ((this._IsAuto != value))
				{
					this.OnIsAutoChanging(value);
					this.SendPropertyChanging();
					this._IsAuto = value;
					this.SendPropertyChanged("IsAuto");
					this.OnIsAutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetValue", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SetValue
		{
			get
			{
				return this._SetValue;
			}
			set
			{
				if ((this._SetValue != value))
				{
					this.OnSetValueChanging(value);
					this.SendPropertyChanging();
					this._SetValue = value;
					this.SendPropertyChanged("SetValue");
					this.OnSetValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_User")]
	public partial class Sys_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _InstallationId;
		
		private string _UnitId;
		
		private string _DepartId;
		
		private string _Account;
		
		private string _UserCode;
		
		private string _Password;
		
		private string _UserName;
		
		private string _RoleId;
		
		private string _WorkPostId;
		
		private System.Nullable<bool> _IsPost;
		
		private string _Sex;
		
		private System.Nullable<System.DateTime> _BirthDay;
		
		private string _Marriage;
		
		private string _Nation;
		
		private string _IdentityCard;
		
		private string _Email;
		
		private string _Telephone;
		
		private string _Education;
		
		private string _Hometown;
		
		private string _PositionId;
		
		private string _PhotoUrl;
		
		private string _Performance;
		
		private System.Nullable<int> _PageSize;
		
		private string _DeviceId;
		
		private string _Focus;
		
		private string _QRCodeUrl;
		
		private string _InstallationName;
		
		private string _WorkPostName;
		
		private string _SortIndex;
		
		private System.Nullable<bool> _IsEmergency;
		
		private System.Nullable<System.DateTime> _EntryTime;
		
		private System.Nullable<bool> _IsTemp;
		
		private EntitySet<Appraisal_AppraisalScore> _Appraisal_AppraisalScore;
		
		private EntitySet<Appraisal_PersonAppraisal> _Appraisal_PersonAppraisal;
		
		private EntitySet<Appraisal_PersonAppraisal> _User;
		
		private EntitySet<Appraisal_PersonAppraisal> _Appraisal_PersonAppraisal_Sys_User2;
		
		private EntitySet<Base_TeamGroupUser> _Base_TeamGroupUser;
		
		private EntitySet<Hazard_HiddenHazard> _Hazard_HiddenHazard;
		
		private EntitySet<Hazard_HiddenHazard> _Hazard_HiddenHazard_Sys_User_AcceptanceMan;
		
		private EntitySet<Hazard_HiddenHazard> _Hazard_HiddenHazard_Sys_User_AuditMan;
		
		private EntitySet<Hazard_HiddenHazard> _Hazard_HiddenHazard_Sys_User_FindMan;
		
		private EntitySet<Hazard_HiddenHazard> _Hazard_HiddenHazard_Sys_User_QHSEAuditMan;
		
		private EntitySet<Hazard_HiddenHazardDelay> _Hazard_HiddenHazardDelay;
		
		private EntitySet<Hazard_HiddenHazardDelay> _Hazard_HiddenHazardDelay_Sys_User_InstallAuditMan;
		
		private EntitySet<Hazard_HiddenHazardDelay> _Hazard_HiddenHazardDelay_Sys_User_LeaderMan;
		
		private EntitySet<Hazard_HiddenHazardDelay> _Hazard_HiddenHazardDelay_Sys_User1;
		
		private EntitySet<Hazard_JHAItemRecord> _Hazard_JHAItemRecord;
		
		private EntitySet<Hazard_LECItemRecord> _Hazard_LECItemRecord;
		
		private EntitySet<Hazard_PatrolPlan> _Hazard_PatrolPlan;
		
		private EntitySet<Hazard_RiskList> _Hazard_RiskList;
		
		private EntitySet<Hazard_RiskListItem> _Hazard_RiskListItem;
		
		private EntitySet<Hazard_RoutingInspection> _Hazard_RoutingInspection;
		
		private EntitySet<Hazard_SCLItemRecord> _Hazard_SCLItemRecord;
		
		private EntitySet<InformationProject_FileCabinetAItem> _InformationProject_FileCabinetAItem;
		
		private EntitySet<License_BlindPlate> _License_BlindPlate;
		
		private EntitySet<License_BlindPlate> _License_BlindPlate_Sys_User_AccProduceUnitMan;
		
		private EntitySet<License_BlindPlate> _License_BlindPlate_Sys_User_ApplyMan;
		
		private EntitySet<License_BlindPlate> _License_BlindPlate_Sys_User_CompileMan;
		
		private EntitySet<License_BlindPlate> _License_BlindPlate_Sys_User_CompileMan2;
		
		private EntitySet<License_BlindPlate> _License_BlindPlate_Sys_User_MeasuresMan;
		
		private EntitySet<License_BlindPlate> _License_BlindPlate_Sys_User_OperationUnitMan;
		
		private EntitySet<License_BlindPlate> _License_BlindPlate_Sys_User_OperatorHead;
		
		private EntitySet<License_BlindPlate> _License_BlindPlate_Sys_User_ProduceUnitMan;
		
		private EntitySet<License_BlindPlate> _License_BlindPlate_Sys_User_ProductionDepMan;
		
		private EntitySet<License_BlindPlate> _License_BlindPlate_Sys_User_SafeEduMan;
		
		private EntitySet<License_BlindPlate> _License_BlindPlate_Sys_User_SafeEduMan2;
		
		private EntitySet<License_BlindPlate> _License_BlindPlate_Sys_User_UnitHead;
		
		private EntitySet<License_BreakGround> _License_BreakGround;
		
		private EntitySet<License_BreakGround> _License_BreakGround_Sys_User_ApplyMan;
		
		private EntitySet<License_BreakGround> _License_BreakGround_Sys_User_ApplyMan1;
		
		private EntitySet<License_BreakGround> _License_BreakGround_Sys_User_ApplyUnitMan;
		
		private EntitySet<License_BreakGround> _License_BreakGround_Sys_User_ApprovalDepMan;
		
		private EntitySet<License_BreakGround> _License_BreakGround_Sys_User_CompileMan;
		
		private EntitySet<License_BreakGround> _License_BreakGround_Sys_User_CountersignMan;
		
		private EntitySet<License_BreakGround> _License_BreakGround_Sys_User_JobUnitMan;
		
		private EntitySet<License_BreakGround> _License_BreakGround_Sys_User_MeasuresMan;
		
		private EntitySet<License_BreakGround> _License_BreakGround_Sys_User_SafeEduMan;
		
		private EntitySet<License_Electricity> _License_Electricity;
		
		private EntitySet<License_Electricity> _License_Electricity_Sys_User_ApplicantMan;
		
		private EntitySet<License_Electricity> _License_Electricity_Sys_User_AuditDepMan;
		
		private EntitySet<License_Electricity> _License_Electricity_Sys_User_CompileMan;
		
		private EntitySet<License_Electricity> _License_Electricity_Sys_User_ElectricUnitMan;
		
		private EntitySet<License_Electricity> _License_Electricity_Sys_User_JobMan;
		
		private EntitySet<License_Electricity> _License_Electricity_Sys_User_MeasuresMan;
		
		private EntitySet<License_Electricity> _License_Electricity_Sys_User_OperationUnitMan;
		
		private EntitySet<License_Electricity> _License_Electricity_Sys_User_SafeEduMan;
		
		private EntitySet<License_FireWork> _License_FireWork;
		
		private EntitySet<License_FireWork> _License_FireWork_Sys_User_AcceptanceMan;
		
		private EntitySet<License_FireWork> _License_FireWork_Sys_User_AnalysisMan1;
		
		private EntitySet<License_FireWork> _License_FireWork_Sys_User_ApplyUnitMan;
		
		private EntitySet<License_FireWork> _License_FireWork_Sys_User_FireApprovalMan;
		
		private EntitySet<License_FireWork> _License_FireWork_Sys_User_FireFirstMan;
		
		private EntitySet<License_FireWork> _License_FireWork_Sys_User_InspectTicketMan;
		
		private EntitySet<License_FireWork> _License_FireWork_Sys_User_MeasuresMan;
		
		private EntitySet<License_FireWork> _License_FireWork_Sys_User_ProduceUnitMan;
		
		private EntitySet<License_FireWork> _License_FireWork_Sys_User_SafeDepMan;
		
		private EntitySet<License_FireWork> _License_FireWork_Sys_User_SafeEduMan;
		
		private EntitySet<License_FireWork> _License_FireWork_Sys_User1;
		
		private EntitySet<License_FireWork> _License_FireWork_Sys_User2;
		
		private EntitySet<License_FireWorkAnalysis> _License_FireWorkAnalysis;
		
		private EntitySet<License_HeightWork> _License_HeightWork;
		
		private EntitySet<License_HeightWork> _License_HeightWork_Sys_User_ApplyMan;
		
		private EntitySet<License_HeightWork> _License_HeightWork_Sys_User_ApplyUnitMan;
		
		private EntitySet<License_HeightWork> _License_HeightWork_Sys_User_ApproveDepMan;
		
		private EntitySet<License_HeightWork> _License_HeightWork_Sys_User_AuditDepMan;
		
		private EntitySet<License_HeightWork> _License_HeightWork_Sys_User_CompileMan;
		
		private EntitySet<License_HeightWork> _License_HeightWork_Sys_User_MeasuresMan;
		
		private EntitySet<License_HeightWork> _License_HeightWork_Sys_User_OperationUnitMan;
		
		private EntitySet<License_HeightWork> _License_HeightWork_Sys_User_SafeEduMan;
		
		private EntitySet<License_Interlocking> _License_Interlocking;
		
		private EntitySet<License_Interlocking> _License_Interlocking_Sys_User_ChiefEngineerMan;
		
		private EntitySet<License_Interlocking> _License_Interlocking_Sys_User_EquipmentMan;
		
		private EntitySet<License_Interlocking> _License_Interlocking_Sys_User_InstallationMan;
		
		private EntitySet<License_Interlocking> _License_Interlocking_Sys_User_ProductionMan;
		
		private EntitySet<License_Interlocking> _License_Interlocking_Sys_User_UnitHead;
		
		private EntitySet<License_LiftingWork> _License_LiftingWork;
		
		private EntitySet<License_LiftingWork> _License_LiftingWork_Sys_User_ApprovalDepManId;
		
		private EntitySet<License_LiftingWork> _License_LiftingWork_Sys_User_CompileManId;
		
		private EntitySet<License_LiftingWork> _License_LiftingWork_Sys_User_JobDepManId;
		
		private EntitySet<License_LiftingWork> _License_LiftingWork_Sys_User_JobUnitManId;
		
		private EntitySet<License_LiftingWork> _License_LiftingWork_Sys_User_MeasuresManId;
		
		private EntitySet<License_LiftingWork> _License_LiftingWork_Sys_User_ProduceDepManId;
		
		private EntitySet<License_LiftingWork> _License_LiftingWork_Sys_User_ProduceUnitManId;
		
		private EntitySet<License_LiftingWork> _License_LiftingWork_Sys_User_SafeEduManId;
		
		private EntitySet<License_LimitedSpace> _License_LimitedSpace;
		
		private EntitySet<License_LimitedSpace> _License_LimitedSpace_Sys_User_AcceptanceMan;
		
		private EntitySet<License_LimitedSpace> _License_LimitedSpace_Sys_User_ApplyUnitMan;
		
		private EntitySet<License_LimitedSpace> _License_LimitedSpace_Sys_User_ApproveUnitMan;
		
		private EntitySet<License_LimitedSpace> _License_LimitedSpace_Sys_User_CompileMan;
		
		private EntitySet<License_LimitedSpace> _License_LimitedSpace_Sys_User_JobManager;
		
		private EntitySet<License_LimitedSpace> _License_LimitedSpace_Sys_User_MeasuresMan;
		
		private EntitySet<License_LimitedSpace> _License_LimitedSpace_Sys_User_SafeEduMan;
		
		private EntitySet<License_LimitedSpace> _License_LimitedSpace_Sys_User1;
		
		private EntitySet<License_LimitedSpace> _License_LimitedSpace_Sys_User2;
		
		private EntitySet<License_LimitedSpace> _License_LimitedSpace_Sys_User3;
		
		private EntitySet<License_LimitedSpaceAnalysis> _License_LimitedSpaceAnalysis;
		
		private EntitySet<License_OpenCircuit> _License_OpenCircuit;
		
		private EntitySet<License_OpenCircuit> _License_OpenCircuit_Sys_User_AcceptanceMan;
		
		private EntitySet<License_OpenCircuit> _License_OpenCircuit_Sys_User_ApplyMan1;
		
		private EntitySet<License_OpenCircuit> _License_OpenCircuit_Sys_User_ApplyUnitMan;
		
		private EntitySet<License_OpenCircuit> _License_OpenCircuit_Sys_User_ApprovalDepMan;
		
		private EntitySet<License_OpenCircuit> _License_OpenCircuit_Sys_User_ApproveUnitMan;
		
		private EntitySet<License_OpenCircuit> _License_OpenCircuit_Sys_User_CompileMan;
		
		private EntitySet<License_OpenCircuit> _License_OpenCircuit_Sys_User_JobManager;
		
		private EntitySet<License_OpenCircuit> _License_OpenCircuit_Sys_User_MeasuresMan;
		
		private EntitySet<License_OpenCircuit> _License_OpenCircuit_Sys_User_SafeEduMan;
		
		private EntitySet<License_OpenCircuit> _License_OpenCircuit_Sys_User2;
		
		private EntitySet<License_OpenCircuit> _License_OpenCircuit_Sys_User3;
		
		private EntitySet<License_Overhaul> _License_Overhaul;
		
		private EntitySet<License_Overhaul> _License_Overhaul_Sys_User_CheckOverhaulHead;
		
		private EntitySet<License_Overhaul> _License_Overhaul_Sys_User_CheckProcessMonitor;
		
		private EntitySet<License_Overhaul> _License_Overhaul_Sys_User_CompileMan;
		
		private EntitySet<License_Overhaul> _License_Overhaul_Sys_User_OverhaulHead;
		
		private EntitySet<License_Overhaul> _License_Overhaul_Sys_User_ProcessMan;
		
		private EntitySet<License_Overhaul> _License_Overhaul_Sys_User_ProcessMonitor;
		
		private EntitySet<Lock_SmartLockItem> _Lock_SmartLockItem;
		
		private EntitySet<Lock_SmartLockItem> _Lock_SmartLockItem_Sys_User2;
		
		private EntitySet<Personal_PersonalFolder> _Personal_PersonalFolder;
		
		private EntitySet<QualityAudit_EquipmentQuality> _QualityAudit_EquipmentQuality;
		
		private EntitySet<QualityAudit_PersonQuality> _QualityAudit_PersonQuality;
		
		private EntitySet<QualityAudit_PersonQuality> _QualityAudit_PersonQuality_Sys_User1;
		
		private EntitySet<Sys_Entrust> _Sys_Entrust;
		
		private EntitySet<Sys_Entrust> _Sys_Entrust_Sys_User_RecipientMan;
		
		private EntitySet<Sys_Log> _Sys_Log;
		
		private EntitySet<Sys_PushRecord> _Sys_PushRecord;
		
		private EntitySet<Sys_PushRecord> _Sys_PushRecord_Sys_User1;
		
		private EntitySet<Sys_PushRecord> _Sys_PushRecord_Sys_User2;
		
		private EntityRef<Base_Depart> _Base_Depart;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_Role> _Sys_Role;
		
		private EntitySet<Sys_UserDealInstallation> _Sys_UserDealInstallation;
		
		private EntitySet<Sys_UserDuty> _Sys_UserDuty;
		
		private EntitySet<Sys_UserEntryRecord> _Sys_UserEntryRecord;
		
		private EntitySet<Sys_UserSchedule> _Sys_UserSchedule;
		
		private EntitySet<Training_ModelTestRecord> _Training_ModelTestRecord;
		
		private EntitySet<Training_Plan> _Training_Plan;
		
		private EntitySet<Training_Task> _Training_Task;
		
		private EntitySet<Training_TestPlan> _Training_TestPlan;
		
		private EntitySet<Training_TestPlanTime> _Training_TestPlanTime;
		
		private EntitySet<Training_TestRecord> _Training_TestRecord;
		
		private EntitySet<Training_TrainRecordDetail> _Training_TrainRecordDetail;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnDepartIdChanging(string value);
    partial void OnDepartIdChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnUserCodeChanging(string value);
    partial void OnUserCodeChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnWorkPostIdChanging(string value);
    partial void OnWorkPostIdChanged();
    partial void OnIsPostChanging(System.Nullable<bool> value);
    partial void OnIsPostChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnBirthDayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDayChanged();
    partial void OnMarriageChanging(string value);
    partial void OnMarriageChanged();
    partial void OnNationChanging(string value);
    partial void OnNationChanged();
    partial void OnIdentityCardChanging(string value);
    partial void OnIdentityCardChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEducationChanging(string value);
    partial void OnEducationChanged();
    partial void OnHometownChanging(string value);
    partial void OnHometownChanged();
    partial void OnPositionIdChanging(string value);
    partial void OnPositionIdChanged();
    partial void OnPhotoUrlChanging(string value);
    partial void OnPhotoUrlChanged();
    partial void OnPerformanceChanging(string value);
    partial void OnPerformanceChanged();
    partial void OnPageSizeChanging(System.Nullable<int> value);
    partial void OnPageSizeChanged();
    partial void OnDeviceIdChanging(string value);
    partial void OnDeviceIdChanged();
    partial void OnFocusChanging(string value);
    partial void OnFocusChanged();
    partial void OnQRCodeUrlChanging(string value);
    partial void OnQRCodeUrlChanged();
    partial void OnInstallationNameChanging(string value);
    partial void OnInstallationNameChanged();
    partial void OnWorkPostNameChanging(string value);
    partial void OnWorkPostNameChanged();
    partial void OnSortIndexChanging(string value);
    partial void OnSortIndexChanged();
    partial void OnIsEmergencyChanging(System.Nullable<bool> value);
    partial void OnIsEmergencyChanged();
    partial void OnEntryTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEntryTimeChanged();
    partial void OnIsTempChanging(System.Nullable<bool> value);
    partial void OnIsTempChanged();
    #endregion
		
		public Sys_User()
		{
			this._Appraisal_AppraisalScore = new EntitySet<Appraisal_AppraisalScore>(new Action<Appraisal_AppraisalScore>(this.attach_Appraisal_AppraisalScore), new Action<Appraisal_AppraisalScore>(this.detach_Appraisal_AppraisalScore));
			this._Appraisal_PersonAppraisal = new EntitySet<Appraisal_PersonAppraisal>(new Action<Appraisal_PersonAppraisal>(this.attach_Appraisal_PersonAppraisal), new Action<Appraisal_PersonAppraisal>(this.detach_Appraisal_PersonAppraisal));
			this._User = new EntitySet<Appraisal_PersonAppraisal>(new Action<Appraisal_PersonAppraisal>(this.attach_User), new Action<Appraisal_PersonAppraisal>(this.detach_User));
			this._Appraisal_PersonAppraisal_Sys_User2 = new EntitySet<Appraisal_PersonAppraisal>(new Action<Appraisal_PersonAppraisal>(this.attach_Appraisal_PersonAppraisal_Sys_User2), new Action<Appraisal_PersonAppraisal>(this.detach_Appraisal_PersonAppraisal_Sys_User2));
			this._Base_TeamGroupUser = new EntitySet<Base_TeamGroupUser>(new Action<Base_TeamGroupUser>(this.attach_Base_TeamGroupUser), new Action<Base_TeamGroupUser>(this.detach_Base_TeamGroupUser));
			this._Hazard_HiddenHazard = new EntitySet<Hazard_HiddenHazard>(new Action<Hazard_HiddenHazard>(this.attach_Hazard_HiddenHazard), new Action<Hazard_HiddenHazard>(this.detach_Hazard_HiddenHazard));
			this._Hazard_HiddenHazard_Sys_User_AcceptanceMan = new EntitySet<Hazard_HiddenHazard>(new Action<Hazard_HiddenHazard>(this.attach_Hazard_HiddenHazard_Sys_User_AcceptanceMan), new Action<Hazard_HiddenHazard>(this.detach_Hazard_HiddenHazard_Sys_User_AcceptanceMan));
			this._Hazard_HiddenHazard_Sys_User_AuditMan = new EntitySet<Hazard_HiddenHazard>(new Action<Hazard_HiddenHazard>(this.attach_Hazard_HiddenHazard_Sys_User_AuditMan), new Action<Hazard_HiddenHazard>(this.detach_Hazard_HiddenHazard_Sys_User_AuditMan));
			this._Hazard_HiddenHazard_Sys_User_FindMan = new EntitySet<Hazard_HiddenHazard>(new Action<Hazard_HiddenHazard>(this.attach_Hazard_HiddenHazard_Sys_User_FindMan), new Action<Hazard_HiddenHazard>(this.detach_Hazard_HiddenHazard_Sys_User_FindMan));
			this._Hazard_HiddenHazard_Sys_User_QHSEAuditMan = new EntitySet<Hazard_HiddenHazard>(new Action<Hazard_HiddenHazard>(this.attach_Hazard_HiddenHazard_Sys_User_QHSEAuditMan), new Action<Hazard_HiddenHazard>(this.detach_Hazard_HiddenHazard_Sys_User_QHSEAuditMan));
			this._Hazard_HiddenHazardDelay = new EntitySet<Hazard_HiddenHazardDelay>(new Action<Hazard_HiddenHazardDelay>(this.attach_Hazard_HiddenHazardDelay), new Action<Hazard_HiddenHazardDelay>(this.detach_Hazard_HiddenHazardDelay));
			this._Hazard_HiddenHazardDelay_Sys_User_InstallAuditMan = new EntitySet<Hazard_HiddenHazardDelay>(new Action<Hazard_HiddenHazardDelay>(this.attach_Hazard_HiddenHazardDelay_Sys_User_InstallAuditMan), new Action<Hazard_HiddenHazardDelay>(this.detach_Hazard_HiddenHazardDelay_Sys_User_InstallAuditMan));
			this._Hazard_HiddenHazardDelay_Sys_User_LeaderMan = new EntitySet<Hazard_HiddenHazardDelay>(new Action<Hazard_HiddenHazardDelay>(this.attach_Hazard_HiddenHazardDelay_Sys_User_LeaderMan), new Action<Hazard_HiddenHazardDelay>(this.detach_Hazard_HiddenHazardDelay_Sys_User_LeaderMan));
			this._Hazard_HiddenHazardDelay_Sys_User1 = new EntitySet<Hazard_HiddenHazardDelay>(new Action<Hazard_HiddenHazardDelay>(this.attach_Hazard_HiddenHazardDelay_Sys_User1), new Action<Hazard_HiddenHazardDelay>(this.detach_Hazard_HiddenHazardDelay_Sys_User1));
			this._Hazard_JHAItemRecord = new EntitySet<Hazard_JHAItemRecord>(new Action<Hazard_JHAItemRecord>(this.attach_Hazard_JHAItemRecord), new Action<Hazard_JHAItemRecord>(this.detach_Hazard_JHAItemRecord));
			this._Hazard_LECItemRecord = new EntitySet<Hazard_LECItemRecord>(new Action<Hazard_LECItemRecord>(this.attach_Hazard_LECItemRecord), new Action<Hazard_LECItemRecord>(this.detach_Hazard_LECItemRecord));
			this._Hazard_PatrolPlan = new EntitySet<Hazard_PatrolPlan>(new Action<Hazard_PatrolPlan>(this.attach_Hazard_PatrolPlan), new Action<Hazard_PatrolPlan>(this.detach_Hazard_PatrolPlan));
			this._Hazard_RiskList = new EntitySet<Hazard_RiskList>(new Action<Hazard_RiskList>(this.attach_Hazard_RiskList), new Action<Hazard_RiskList>(this.detach_Hazard_RiskList));
			this._Hazard_RiskListItem = new EntitySet<Hazard_RiskListItem>(new Action<Hazard_RiskListItem>(this.attach_Hazard_RiskListItem), new Action<Hazard_RiskListItem>(this.detach_Hazard_RiskListItem));
			this._Hazard_RoutingInspection = new EntitySet<Hazard_RoutingInspection>(new Action<Hazard_RoutingInspection>(this.attach_Hazard_RoutingInspection), new Action<Hazard_RoutingInspection>(this.detach_Hazard_RoutingInspection));
			this._Hazard_SCLItemRecord = new EntitySet<Hazard_SCLItemRecord>(new Action<Hazard_SCLItemRecord>(this.attach_Hazard_SCLItemRecord), new Action<Hazard_SCLItemRecord>(this.detach_Hazard_SCLItemRecord));
			this._InformationProject_FileCabinetAItem = new EntitySet<InformationProject_FileCabinetAItem>(new Action<InformationProject_FileCabinetAItem>(this.attach_InformationProject_FileCabinetAItem), new Action<InformationProject_FileCabinetAItem>(this.detach_InformationProject_FileCabinetAItem));
			this._License_BlindPlate = new EntitySet<License_BlindPlate>(new Action<License_BlindPlate>(this.attach_License_BlindPlate), new Action<License_BlindPlate>(this.detach_License_BlindPlate));
			this._License_BlindPlate_Sys_User_AccProduceUnitMan = new EntitySet<License_BlindPlate>(new Action<License_BlindPlate>(this.attach_License_BlindPlate_Sys_User_AccProduceUnitMan), new Action<License_BlindPlate>(this.detach_License_BlindPlate_Sys_User_AccProduceUnitMan));
			this._License_BlindPlate_Sys_User_ApplyMan = new EntitySet<License_BlindPlate>(new Action<License_BlindPlate>(this.attach_License_BlindPlate_Sys_User_ApplyMan), new Action<License_BlindPlate>(this.detach_License_BlindPlate_Sys_User_ApplyMan));
			this._License_BlindPlate_Sys_User_CompileMan = new EntitySet<License_BlindPlate>(new Action<License_BlindPlate>(this.attach_License_BlindPlate_Sys_User_CompileMan), new Action<License_BlindPlate>(this.detach_License_BlindPlate_Sys_User_CompileMan));
			this._License_BlindPlate_Sys_User_CompileMan2 = new EntitySet<License_BlindPlate>(new Action<License_BlindPlate>(this.attach_License_BlindPlate_Sys_User_CompileMan2), new Action<License_BlindPlate>(this.detach_License_BlindPlate_Sys_User_CompileMan2));
			this._License_BlindPlate_Sys_User_MeasuresMan = new EntitySet<License_BlindPlate>(new Action<License_BlindPlate>(this.attach_License_BlindPlate_Sys_User_MeasuresMan), new Action<License_BlindPlate>(this.detach_License_BlindPlate_Sys_User_MeasuresMan));
			this._License_BlindPlate_Sys_User_OperationUnitMan = new EntitySet<License_BlindPlate>(new Action<License_BlindPlate>(this.attach_License_BlindPlate_Sys_User_OperationUnitMan), new Action<License_BlindPlate>(this.detach_License_BlindPlate_Sys_User_OperationUnitMan));
			this._License_BlindPlate_Sys_User_OperatorHead = new EntitySet<License_BlindPlate>(new Action<License_BlindPlate>(this.attach_License_BlindPlate_Sys_User_OperatorHead), new Action<License_BlindPlate>(this.detach_License_BlindPlate_Sys_User_OperatorHead));
			this._License_BlindPlate_Sys_User_ProduceUnitMan = new EntitySet<License_BlindPlate>(new Action<License_BlindPlate>(this.attach_License_BlindPlate_Sys_User_ProduceUnitMan), new Action<License_BlindPlate>(this.detach_License_BlindPlate_Sys_User_ProduceUnitMan));
			this._License_BlindPlate_Sys_User_ProductionDepMan = new EntitySet<License_BlindPlate>(new Action<License_BlindPlate>(this.attach_License_BlindPlate_Sys_User_ProductionDepMan), new Action<License_BlindPlate>(this.detach_License_BlindPlate_Sys_User_ProductionDepMan));
			this._License_BlindPlate_Sys_User_SafeEduMan = new EntitySet<License_BlindPlate>(new Action<License_BlindPlate>(this.attach_License_BlindPlate_Sys_User_SafeEduMan), new Action<License_BlindPlate>(this.detach_License_BlindPlate_Sys_User_SafeEduMan));
			this._License_BlindPlate_Sys_User_SafeEduMan2 = new EntitySet<License_BlindPlate>(new Action<License_BlindPlate>(this.attach_License_BlindPlate_Sys_User_SafeEduMan2), new Action<License_BlindPlate>(this.detach_License_BlindPlate_Sys_User_SafeEduMan2));
			this._License_BlindPlate_Sys_User_UnitHead = new EntitySet<License_BlindPlate>(new Action<License_BlindPlate>(this.attach_License_BlindPlate_Sys_User_UnitHead), new Action<License_BlindPlate>(this.detach_License_BlindPlate_Sys_User_UnitHead));
			this._License_BreakGround = new EntitySet<License_BreakGround>(new Action<License_BreakGround>(this.attach_License_BreakGround), new Action<License_BreakGround>(this.detach_License_BreakGround));
			this._License_BreakGround_Sys_User_ApplyMan = new EntitySet<License_BreakGround>(new Action<License_BreakGround>(this.attach_License_BreakGround_Sys_User_ApplyMan), new Action<License_BreakGround>(this.detach_License_BreakGround_Sys_User_ApplyMan));
			this._License_BreakGround_Sys_User_ApplyMan1 = new EntitySet<License_BreakGround>(new Action<License_BreakGround>(this.attach_License_BreakGround_Sys_User_ApplyMan1), new Action<License_BreakGround>(this.detach_License_BreakGround_Sys_User_ApplyMan1));
			this._License_BreakGround_Sys_User_ApplyUnitMan = new EntitySet<License_BreakGround>(new Action<License_BreakGround>(this.attach_License_BreakGround_Sys_User_ApplyUnitMan), new Action<License_BreakGround>(this.detach_License_BreakGround_Sys_User_ApplyUnitMan));
			this._License_BreakGround_Sys_User_ApprovalDepMan = new EntitySet<License_BreakGround>(new Action<License_BreakGround>(this.attach_License_BreakGround_Sys_User_ApprovalDepMan), new Action<License_BreakGround>(this.detach_License_BreakGround_Sys_User_ApprovalDepMan));
			this._License_BreakGround_Sys_User_CompileMan = new EntitySet<License_BreakGround>(new Action<License_BreakGround>(this.attach_License_BreakGround_Sys_User_CompileMan), new Action<License_BreakGround>(this.detach_License_BreakGround_Sys_User_CompileMan));
			this._License_BreakGround_Sys_User_CountersignMan = new EntitySet<License_BreakGround>(new Action<License_BreakGround>(this.attach_License_BreakGround_Sys_User_CountersignMan), new Action<License_BreakGround>(this.detach_License_BreakGround_Sys_User_CountersignMan));
			this._License_BreakGround_Sys_User_JobUnitMan = new EntitySet<License_BreakGround>(new Action<License_BreakGround>(this.attach_License_BreakGround_Sys_User_JobUnitMan), new Action<License_BreakGround>(this.detach_License_BreakGround_Sys_User_JobUnitMan));
			this._License_BreakGround_Sys_User_MeasuresMan = new EntitySet<License_BreakGround>(new Action<License_BreakGround>(this.attach_License_BreakGround_Sys_User_MeasuresMan), new Action<License_BreakGround>(this.detach_License_BreakGround_Sys_User_MeasuresMan));
			this._License_BreakGround_Sys_User_SafeEduMan = new EntitySet<License_BreakGround>(new Action<License_BreakGround>(this.attach_License_BreakGround_Sys_User_SafeEduMan), new Action<License_BreakGround>(this.detach_License_BreakGround_Sys_User_SafeEduMan));
			this._License_Electricity = new EntitySet<License_Electricity>(new Action<License_Electricity>(this.attach_License_Electricity), new Action<License_Electricity>(this.detach_License_Electricity));
			this._License_Electricity_Sys_User_ApplicantMan = new EntitySet<License_Electricity>(new Action<License_Electricity>(this.attach_License_Electricity_Sys_User_ApplicantMan), new Action<License_Electricity>(this.detach_License_Electricity_Sys_User_ApplicantMan));
			this._License_Electricity_Sys_User_AuditDepMan = new EntitySet<License_Electricity>(new Action<License_Electricity>(this.attach_License_Electricity_Sys_User_AuditDepMan), new Action<License_Electricity>(this.detach_License_Electricity_Sys_User_AuditDepMan));
			this._License_Electricity_Sys_User_CompileMan = new EntitySet<License_Electricity>(new Action<License_Electricity>(this.attach_License_Electricity_Sys_User_CompileMan), new Action<License_Electricity>(this.detach_License_Electricity_Sys_User_CompileMan));
			this._License_Electricity_Sys_User_ElectricUnitMan = new EntitySet<License_Electricity>(new Action<License_Electricity>(this.attach_License_Electricity_Sys_User_ElectricUnitMan), new Action<License_Electricity>(this.detach_License_Electricity_Sys_User_ElectricUnitMan));
			this._License_Electricity_Sys_User_JobMan = new EntitySet<License_Electricity>(new Action<License_Electricity>(this.attach_License_Electricity_Sys_User_JobMan), new Action<License_Electricity>(this.detach_License_Electricity_Sys_User_JobMan));
			this._License_Electricity_Sys_User_MeasuresMan = new EntitySet<License_Electricity>(new Action<License_Electricity>(this.attach_License_Electricity_Sys_User_MeasuresMan), new Action<License_Electricity>(this.detach_License_Electricity_Sys_User_MeasuresMan));
			this._License_Electricity_Sys_User_OperationUnitMan = new EntitySet<License_Electricity>(new Action<License_Electricity>(this.attach_License_Electricity_Sys_User_OperationUnitMan), new Action<License_Electricity>(this.detach_License_Electricity_Sys_User_OperationUnitMan));
			this._License_Electricity_Sys_User_SafeEduMan = new EntitySet<License_Electricity>(new Action<License_Electricity>(this.attach_License_Electricity_Sys_User_SafeEduMan), new Action<License_Electricity>(this.detach_License_Electricity_Sys_User_SafeEduMan));
			this._License_FireWork = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork), new Action<License_FireWork>(this.detach_License_FireWork));
			this._License_FireWork_Sys_User_AcceptanceMan = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork_Sys_User_AcceptanceMan), new Action<License_FireWork>(this.detach_License_FireWork_Sys_User_AcceptanceMan));
			this._License_FireWork_Sys_User_AnalysisMan1 = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork_Sys_User_AnalysisMan1), new Action<License_FireWork>(this.detach_License_FireWork_Sys_User_AnalysisMan1));
			this._License_FireWork_Sys_User_ApplyUnitMan = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork_Sys_User_ApplyUnitMan), new Action<License_FireWork>(this.detach_License_FireWork_Sys_User_ApplyUnitMan));
			this._License_FireWork_Sys_User_FireApprovalMan = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork_Sys_User_FireApprovalMan), new Action<License_FireWork>(this.detach_License_FireWork_Sys_User_FireApprovalMan));
			this._License_FireWork_Sys_User_FireFirstMan = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork_Sys_User_FireFirstMan), new Action<License_FireWork>(this.detach_License_FireWork_Sys_User_FireFirstMan));
			this._License_FireWork_Sys_User_InspectTicketMan = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork_Sys_User_InspectTicketMan), new Action<License_FireWork>(this.detach_License_FireWork_Sys_User_InspectTicketMan));
			this._License_FireWork_Sys_User_MeasuresMan = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork_Sys_User_MeasuresMan), new Action<License_FireWork>(this.detach_License_FireWork_Sys_User_MeasuresMan));
			this._License_FireWork_Sys_User_ProduceUnitMan = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork_Sys_User_ProduceUnitMan), new Action<License_FireWork>(this.detach_License_FireWork_Sys_User_ProduceUnitMan));
			this._License_FireWork_Sys_User_SafeDepMan = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork_Sys_User_SafeDepMan), new Action<License_FireWork>(this.detach_License_FireWork_Sys_User_SafeDepMan));
			this._License_FireWork_Sys_User_SafeEduMan = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork_Sys_User_SafeEduMan), new Action<License_FireWork>(this.detach_License_FireWork_Sys_User_SafeEduMan));
			this._License_FireWork_Sys_User1 = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork_Sys_User1), new Action<License_FireWork>(this.detach_License_FireWork_Sys_User1));
			this._License_FireWork_Sys_User2 = new EntitySet<License_FireWork>(new Action<License_FireWork>(this.attach_License_FireWork_Sys_User2), new Action<License_FireWork>(this.detach_License_FireWork_Sys_User2));
			this._License_FireWorkAnalysis = new EntitySet<License_FireWorkAnalysis>(new Action<License_FireWorkAnalysis>(this.attach_License_FireWorkAnalysis), new Action<License_FireWorkAnalysis>(this.detach_License_FireWorkAnalysis));
			this._License_HeightWork = new EntitySet<License_HeightWork>(new Action<License_HeightWork>(this.attach_License_HeightWork), new Action<License_HeightWork>(this.detach_License_HeightWork));
			this._License_HeightWork_Sys_User_ApplyMan = new EntitySet<License_HeightWork>(new Action<License_HeightWork>(this.attach_License_HeightWork_Sys_User_ApplyMan), new Action<License_HeightWork>(this.detach_License_HeightWork_Sys_User_ApplyMan));
			this._License_HeightWork_Sys_User_ApplyUnitMan = new EntitySet<License_HeightWork>(new Action<License_HeightWork>(this.attach_License_HeightWork_Sys_User_ApplyUnitMan), new Action<License_HeightWork>(this.detach_License_HeightWork_Sys_User_ApplyUnitMan));
			this._License_HeightWork_Sys_User_ApproveDepMan = new EntitySet<License_HeightWork>(new Action<License_HeightWork>(this.attach_License_HeightWork_Sys_User_ApproveDepMan), new Action<License_HeightWork>(this.detach_License_HeightWork_Sys_User_ApproveDepMan));
			this._License_HeightWork_Sys_User_AuditDepMan = new EntitySet<License_HeightWork>(new Action<License_HeightWork>(this.attach_License_HeightWork_Sys_User_AuditDepMan), new Action<License_HeightWork>(this.detach_License_HeightWork_Sys_User_AuditDepMan));
			this._License_HeightWork_Sys_User_CompileMan = new EntitySet<License_HeightWork>(new Action<License_HeightWork>(this.attach_License_HeightWork_Sys_User_CompileMan), new Action<License_HeightWork>(this.detach_License_HeightWork_Sys_User_CompileMan));
			this._License_HeightWork_Sys_User_MeasuresMan = new EntitySet<License_HeightWork>(new Action<License_HeightWork>(this.attach_License_HeightWork_Sys_User_MeasuresMan), new Action<License_HeightWork>(this.detach_License_HeightWork_Sys_User_MeasuresMan));
			this._License_HeightWork_Sys_User_OperationUnitMan = new EntitySet<License_HeightWork>(new Action<License_HeightWork>(this.attach_License_HeightWork_Sys_User_OperationUnitMan), new Action<License_HeightWork>(this.detach_License_HeightWork_Sys_User_OperationUnitMan));
			this._License_HeightWork_Sys_User_SafeEduMan = new EntitySet<License_HeightWork>(new Action<License_HeightWork>(this.attach_License_HeightWork_Sys_User_SafeEduMan), new Action<License_HeightWork>(this.detach_License_HeightWork_Sys_User_SafeEduMan));
			this._License_Interlocking = new EntitySet<License_Interlocking>(new Action<License_Interlocking>(this.attach_License_Interlocking), new Action<License_Interlocking>(this.detach_License_Interlocking));
			this._License_Interlocking_Sys_User_ChiefEngineerMan = new EntitySet<License_Interlocking>(new Action<License_Interlocking>(this.attach_License_Interlocking_Sys_User_ChiefEngineerMan), new Action<License_Interlocking>(this.detach_License_Interlocking_Sys_User_ChiefEngineerMan));
			this._License_Interlocking_Sys_User_EquipmentMan = new EntitySet<License_Interlocking>(new Action<License_Interlocking>(this.attach_License_Interlocking_Sys_User_EquipmentMan), new Action<License_Interlocking>(this.detach_License_Interlocking_Sys_User_EquipmentMan));
			this._License_Interlocking_Sys_User_InstallationMan = new EntitySet<License_Interlocking>(new Action<License_Interlocking>(this.attach_License_Interlocking_Sys_User_InstallationMan), new Action<License_Interlocking>(this.detach_License_Interlocking_Sys_User_InstallationMan));
			this._License_Interlocking_Sys_User_ProductionMan = new EntitySet<License_Interlocking>(new Action<License_Interlocking>(this.attach_License_Interlocking_Sys_User_ProductionMan), new Action<License_Interlocking>(this.detach_License_Interlocking_Sys_User_ProductionMan));
			this._License_Interlocking_Sys_User_UnitHead = new EntitySet<License_Interlocking>(new Action<License_Interlocking>(this.attach_License_Interlocking_Sys_User_UnitHead), new Action<License_Interlocking>(this.detach_License_Interlocking_Sys_User_UnitHead));
			this._License_LiftingWork = new EntitySet<License_LiftingWork>(new Action<License_LiftingWork>(this.attach_License_LiftingWork), new Action<License_LiftingWork>(this.detach_License_LiftingWork));
			this._License_LiftingWork_Sys_User_ApprovalDepManId = new EntitySet<License_LiftingWork>(new Action<License_LiftingWork>(this.attach_License_LiftingWork_Sys_User_ApprovalDepManId), new Action<License_LiftingWork>(this.detach_License_LiftingWork_Sys_User_ApprovalDepManId));
			this._License_LiftingWork_Sys_User_CompileManId = new EntitySet<License_LiftingWork>(new Action<License_LiftingWork>(this.attach_License_LiftingWork_Sys_User_CompileManId), new Action<License_LiftingWork>(this.detach_License_LiftingWork_Sys_User_CompileManId));
			this._License_LiftingWork_Sys_User_JobDepManId = new EntitySet<License_LiftingWork>(new Action<License_LiftingWork>(this.attach_License_LiftingWork_Sys_User_JobDepManId), new Action<License_LiftingWork>(this.detach_License_LiftingWork_Sys_User_JobDepManId));
			this._License_LiftingWork_Sys_User_JobUnitManId = new EntitySet<License_LiftingWork>(new Action<License_LiftingWork>(this.attach_License_LiftingWork_Sys_User_JobUnitManId), new Action<License_LiftingWork>(this.detach_License_LiftingWork_Sys_User_JobUnitManId));
			this._License_LiftingWork_Sys_User_MeasuresManId = new EntitySet<License_LiftingWork>(new Action<License_LiftingWork>(this.attach_License_LiftingWork_Sys_User_MeasuresManId), new Action<License_LiftingWork>(this.detach_License_LiftingWork_Sys_User_MeasuresManId));
			this._License_LiftingWork_Sys_User_ProduceDepManId = new EntitySet<License_LiftingWork>(new Action<License_LiftingWork>(this.attach_License_LiftingWork_Sys_User_ProduceDepManId), new Action<License_LiftingWork>(this.detach_License_LiftingWork_Sys_User_ProduceDepManId));
			this._License_LiftingWork_Sys_User_ProduceUnitManId = new EntitySet<License_LiftingWork>(new Action<License_LiftingWork>(this.attach_License_LiftingWork_Sys_User_ProduceUnitManId), new Action<License_LiftingWork>(this.detach_License_LiftingWork_Sys_User_ProduceUnitManId));
			this._License_LiftingWork_Sys_User_SafeEduManId = new EntitySet<License_LiftingWork>(new Action<License_LiftingWork>(this.attach_License_LiftingWork_Sys_User_SafeEduManId), new Action<License_LiftingWork>(this.detach_License_LiftingWork_Sys_User_SafeEduManId));
			this._License_LimitedSpace = new EntitySet<License_LimitedSpace>(new Action<License_LimitedSpace>(this.attach_License_LimitedSpace), new Action<License_LimitedSpace>(this.detach_License_LimitedSpace));
			this._License_LimitedSpace_Sys_User_AcceptanceMan = new EntitySet<License_LimitedSpace>(new Action<License_LimitedSpace>(this.attach_License_LimitedSpace_Sys_User_AcceptanceMan), new Action<License_LimitedSpace>(this.detach_License_LimitedSpace_Sys_User_AcceptanceMan));
			this._License_LimitedSpace_Sys_User_ApplyUnitMan = new EntitySet<License_LimitedSpace>(new Action<License_LimitedSpace>(this.attach_License_LimitedSpace_Sys_User_ApplyUnitMan), new Action<License_LimitedSpace>(this.detach_License_LimitedSpace_Sys_User_ApplyUnitMan));
			this._License_LimitedSpace_Sys_User_ApproveUnitMan = new EntitySet<License_LimitedSpace>(new Action<License_LimitedSpace>(this.attach_License_LimitedSpace_Sys_User_ApproveUnitMan), new Action<License_LimitedSpace>(this.detach_License_LimitedSpace_Sys_User_ApproveUnitMan));
			this._License_LimitedSpace_Sys_User_CompileMan = new EntitySet<License_LimitedSpace>(new Action<License_LimitedSpace>(this.attach_License_LimitedSpace_Sys_User_CompileMan), new Action<License_LimitedSpace>(this.detach_License_LimitedSpace_Sys_User_CompileMan));
			this._License_LimitedSpace_Sys_User_JobManager = new EntitySet<License_LimitedSpace>(new Action<License_LimitedSpace>(this.attach_License_LimitedSpace_Sys_User_JobManager), new Action<License_LimitedSpace>(this.detach_License_LimitedSpace_Sys_User_JobManager));
			this._License_LimitedSpace_Sys_User_MeasuresMan = new EntitySet<License_LimitedSpace>(new Action<License_LimitedSpace>(this.attach_License_LimitedSpace_Sys_User_MeasuresMan), new Action<License_LimitedSpace>(this.detach_License_LimitedSpace_Sys_User_MeasuresMan));
			this._License_LimitedSpace_Sys_User_SafeEduMan = new EntitySet<License_LimitedSpace>(new Action<License_LimitedSpace>(this.attach_License_LimitedSpace_Sys_User_SafeEduMan), new Action<License_LimitedSpace>(this.detach_License_LimitedSpace_Sys_User_SafeEduMan));
			this._License_LimitedSpace_Sys_User1 = new EntitySet<License_LimitedSpace>(new Action<License_LimitedSpace>(this.attach_License_LimitedSpace_Sys_User1), new Action<License_LimitedSpace>(this.detach_License_LimitedSpace_Sys_User1));
			this._License_LimitedSpace_Sys_User2 = new EntitySet<License_LimitedSpace>(new Action<License_LimitedSpace>(this.attach_License_LimitedSpace_Sys_User2), new Action<License_LimitedSpace>(this.detach_License_LimitedSpace_Sys_User2));
			this._License_LimitedSpace_Sys_User3 = new EntitySet<License_LimitedSpace>(new Action<License_LimitedSpace>(this.attach_License_LimitedSpace_Sys_User3), new Action<License_LimitedSpace>(this.detach_License_LimitedSpace_Sys_User3));
			this._License_LimitedSpaceAnalysis = new EntitySet<License_LimitedSpaceAnalysis>(new Action<License_LimitedSpaceAnalysis>(this.attach_License_LimitedSpaceAnalysis), new Action<License_LimitedSpaceAnalysis>(this.detach_License_LimitedSpaceAnalysis));
			this._License_OpenCircuit = new EntitySet<License_OpenCircuit>(new Action<License_OpenCircuit>(this.attach_License_OpenCircuit), new Action<License_OpenCircuit>(this.detach_License_OpenCircuit));
			this._License_OpenCircuit_Sys_User_AcceptanceMan = new EntitySet<License_OpenCircuit>(new Action<License_OpenCircuit>(this.attach_License_OpenCircuit_Sys_User_AcceptanceMan), new Action<License_OpenCircuit>(this.detach_License_OpenCircuit_Sys_User_AcceptanceMan));
			this._License_OpenCircuit_Sys_User_ApplyMan1 = new EntitySet<License_OpenCircuit>(new Action<License_OpenCircuit>(this.attach_License_OpenCircuit_Sys_User_ApplyMan1), new Action<License_OpenCircuit>(this.detach_License_OpenCircuit_Sys_User_ApplyMan1));
			this._License_OpenCircuit_Sys_User_ApplyUnitMan = new EntitySet<License_OpenCircuit>(new Action<License_OpenCircuit>(this.attach_License_OpenCircuit_Sys_User_ApplyUnitMan), new Action<License_OpenCircuit>(this.detach_License_OpenCircuit_Sys_User_ApplyUnitMan));
			this._License_OpenCircuit_Sys_User_ApprovalDepMan = new EntitySet<License_OpenCircuit>(new Action<License_OpenCircuit>(this.attach_License_OpenCircuit_Sys_User_ApprovalDepMan), new Action<License_OpenCircuit>(this.detach_License_OpenCircuit_Sys_User_ApprovalDepMan));
			this._License_OpenCircuit_Sys_User_ApproveUnitMan = new EntitySet<License_OpenCircuit>(new Action<License_OpenCircuit>(this.attach_License_OpenCircuit_Sys_User_ApproveUnitMan), new Action<License_OpenCircuit>(this.detach_License_OpenCircuit_Sys_User_ApproveUnitMan));
			this._License_OpenCircuit_Sys_User_CompileMan = new EntitySet<License_OpenCircuit>(new Action<License_OpenCircuit>(this.attach_License_OpenCircuit_Sys_User_CompileMan), new Action<License_OpenCircuit>(this.detach_License_OpenCircuit_Sys_User_CompileMan));
			this._License_OpenCircuit_Sys_User_JobManager = new EntitySet<License_OpenCircuit>(new Action<License_OpenCircuit>(this.attach_License_OpenCircuit_Sys_User_JobManager), new Action<License_OpenCircuit>(this.detach_License_OpenCircuit_Sys_User_JobManager));
			this._License_OpenCircuit_Sys_User_MeasuresMan = new EntitySet<License_OpenCircuit>(new Action<License_OpenCircuit>(this.attach_License_OpenCircuit_Sys_User_MeasuresMan), new Action<License_OpenCircuit>(this.detach_License_OpenCircuit_Sys_User_MeasuresMan));
			this._License_OpenCircuit_Sys_User_SafeEduMan = new EntitySet<License_OpenCircuit>(new Action<License_OpenCircuit>(this.attach_License_OpenCircuit_Sys_User_SafeEduMan), new Action<License_OpenCircuit>(this.detach_License_OpenCircuit_Sys_User_SafeEduMan));
			this._License_OpenCircuit_Sys_User2 = new EntitySet<License_OpenCircuit>(new Action<License_OpenCircuit>(this.attach_License_OpenCircuit_Sys_User2), new Action<License_OpenCircuit>(this.detach_License_OpenCircuit_Sys_User2));
			this._License_OpenCircuit_Sys_User3 = new EntitySet<License_OpenCircuit>(new Action<License_OpenCircuit>(this.attach_License_OpenCircuit_Sys_User3), new Action<License_OpenCircuit>(this.detach_License_OpenCircuit_Sys_User3));
			this._License_Overhaul = new EntitySet<License_Overhaul>(new Action<License_Overhaul>(this.attach_License_Overhaul), new Action<License_Overhaul>(this.detach_License_Overhaul));
			this._License_Overhaul_Sys_User_CheckOverhaulHead = new EntitySet<License_Overhaul>(new Action<License_Overhaul>(this.attach_License_Overhaul_Sys_User_CheckOverhaulHead), new Action<License_Overhaul>(this.detach_License_Overhaul_Sys_User_CheckOverhaulHead));
			this._License_Overhaul_Sys_User_CheckProcessMonitor = new EntitySet<License_Overhaul>(new Action<License_Overhaul>(this.attach_License_Overhaul_Sys_User_CheckProcessMonitor), new Action<License_Overhaul>(this.detach_License_Overhaul_Sys_User_CheckProcessMonitor));
			this._License_Overhaul_Sys_User_CompileMan = new EntitySet<License_Overhaul>(new Action<License_Overhaul>(this.attach_License_Overhaul_Sys_User_CompileMan), new Action<License_Overhaul>(this.detach_License_Overhaul_Sys_User_CompileMan));
			this._License_Overhaul_Sys_User_OverhaulHead = new EntitySet<License_Overhaul>(new Action<License_Overhaul>(this.attach_License_Overhaul_Sys_User_OverhaulHead), new Action<License_Overhaul>(this.detach_License_Overhaul_Sys_User_OverhaulHead));
			this._License_Overhaul_Sys_User_ProcessMan = new EntitySet<License_Overhaul>(new Action<License_Overhaul>(this.attach_License_Overhaul_Sys_User_ProcessMan), new Action<License_Overhaul>(this.detach_License_Overhaul_Sys_User_ProcessMan));
			this._License_Overhaul_Sys_User_ProcessMonitor = new EntitySet<License_Overhaul>(new Action<License_Overhaul>(this.attach_License_Overhaul_Sys_User_ProcessMonitor), new Action<License_Overhaul>(this.detach_License_Overhaul_Sys_User_ProcessMonitor));
			this._Lock_SmartLockItem = new EntitySet<Lock_SmartLockItem>(new Action<Lock_SmartLockItem>(this.attach_Lock_SmartLockItem), new Action<Lock_SmartLockItem>(this.detach_Lock_SmartLockItem));
			this._Lock_SmartLockItem_Sys_User2 = new EntitySet<Lock_SmartLockItem>(new Action<Lock_SmartLockItem>(this.attach_Lock_SmartLockItem_Sys_User2), new Action<Lock_SmartLockItem>(this.detach_Lock_SmartLockItem_Sys_User2));
			this._Personal_PersonalFolder = new EntitySet<Personal_PersonalFolder>(new Action<Personal_PersonalFolder>(this.attach_Personal_PersonalFolder), new Action<Personal_PersonalFolder>(this.detach_Personal_PersonalFolder));
			this._QualityAudit_EquipmentQuality = new EntitySet<QualityAudit_EquipmentQuality>(new Action<QualityAudit_EquipmentQuality>(this.attach_QualityAudit_EquipmentQuality), new Action<QualityAudit_EquipmentQuality>(this.detach_QualityAudit_EquipmentQuality));
			this._QualityAudit_PersonQuality = new EntitySet<QualityAudit_PersonQuality>(new Action<QualityAudit_PersonQuality>(this.attach_QualityAudit_PersonQuality), new Action<QualityAudit_PersonQuality>(this.detach_QualityAudit_PersonQuality));
			this._QualityAudit_PersonQuality_Sys_User1 = new EntitySet<QualityAudit_PersonQuality>(new Action<QualityAudit_PersonQuality>(this.attach_QualityAudit_PersonQuality_Sys_User1), new Action<QualityAudit_PersonQuality>(this.detach_QualityAudit_PersonQuality_Sys_User1));
			this._Sys_Entrust = new EntitySet<Sys_Entrust>(new Action<Sys_Entrust>(this.attach_Sys_Entrust), new Action<Sys_Entrust>(this.detach_Sys_Entrust));
			this._Sys_Entrust_Sys_User_RecipientMan = new EntitySet<Sys_Entrust>(new Action<Sys_Entrust>(this.attach_Sys_Entrust_Sys_User_RecipientMan), new Action<Sys_Entrust>(this.detach_Sys_Entrust_Sys_User_RecipientMan));
			this._Sys_Log = new EntitySet<Sys_Log>(new Action<Sys_Log>(this.attach_Sys_Log), new Action<Sys_Log>(this.detach_Sys_Log));
			this._Sys_PushRecord = new EntitySet<Sys_PushRecord>(new Action<Sys_PushRecord>(this.attach_Sys_PushRecord), new Action<Sys_PushRecord>(this.detach_Sys_PushRecord));
			this._Sys_PushRecord_Sys_User1 = new EntitySet<Sys_PushRecord>(new Action<Sys_PushRecord>(this.attach_Sys_PushRecord_Sys_User1), new Action<Sys_PushRecord>(this.detach_Sys_PushRecord_Sys_User1));
			this._Sys_PushRecord_Sys_User2 = new EntitySet<Sys_PushRecord>(new Action<Sys_PushRecord>(this.attach_Sys_PushRecord_Sys_User2), new Action<Sys_PushRecord>(this.detach_Sys_PushRecord_Sys_User2));
			this._Base_Depart = default(EntityRef<Base_Depart>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_Role = default(EntityRef<Sys_Role>);
			this._Sys_UserDealInstallation = new EntitySet<Sys_UserDealInstallation>(new Action<Sys_UserDealInstallation>(this.attach_Sys_UserDealInstallation), new Action<Sys_UserDealInstallation>(this.detach_Sys_UserDealInstallation));
			this._Sys_UserDuty = new EntitySet<Sys_UserDuty>(new Action<Sys_UserDuty>(this.attach_Sys_UserDuty), new Action<Sys_UserDuty>(this.detach_Sys_UserDuty));
			this._Sys_UserEntryRecord = new EntitySet<Sys_UserEntryRecord>(new Action<Sys_UserEntryRecord>(this.attach_Sys_UserEntryRecord), new Action<Sys_UserEntryRecord>(this.detach_Sys_UserEntryRecord));
			this._Sys_UserSchedule = new EntitySet<Sys_UserSchedule>(new Action<Sys_UserSchedule>(this.attach_Sys_UserSchedule), new Action<Sys_UserSchedule>(this.detach_Sys_UserSchedule));
			this._Training_ModelTestRecord = new EntitySet<Training_ModelTestRecord>(new Action<Training_ModelTestRecord>(this.attach_Training_ModelTestRecord), new Action<Training_ModelTestRecord>(this.detach_Training_ModelTestRecord));
			this._Training_Plan = new EntitySet<Training_Plan>(new Action<Training_Plan>(this.attach_Training_Plan), new Action<Training_Plan>(this.detach_Training_Plan));
			this._Training_Task = new EntitySet<Training_Task>(new Action<Training_Task>(this.attach_Training_Task), new Action<Training_Task>(this.detach_Training_Task));
			this._Training_TestPlan = new EntitySet<Training_TestPlan>(new Action<Training_TestPlan>(this.attach_Training_TestPlan), new Action<Training_TestPlan>(this.detach_Training_TestPlan));
			this._Training_TestPlanTime = new EntitySet<Training_TestPlanTime>(new Action<Training_TestPlanTime>(this.attach_Training_TestPlanTime), new Action<Training_TestPlanTime>(this.detach_Training_TestPlanTime));
			this._Training_TestRecord = new EntitySet<Training_TestRecord>(new Action<Training_TestRecord>(this.attach_Training_TestRecord), new Action<Training_TestRecord>(this.detach_Training_TestRecord));
			this._Training_TrainRecordDetail = new EntitySet<Training_TrainRecordDetail>(new Action<Training_TrainRecordDetail>(this.attach_Training_TrainRecordDetail), new Action<Training_TrainRecordDetail>(this.detach_Training_TrainRecordDetail));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(500)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartId", DbType="NVarChar(50)")]
		public string DepartId
		{
			get
			{
				return this._DepartId;
			}
			set
			{
				if ((this._DepartId != value))
				{
					if (this._Base_Depart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartIdChanging(value);
					this.SendPropertyChanging();
					this._DepartId = value;
					this.SendPropertyChanged("DepartId");
					this.OnDepartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(50)")]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(20)")]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50)")]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Sys_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostId", DbType="NVarChar(500)")]
		public string WorkPostId
		{
			get
			{
				return this._WorkPostId;
			}
			set
			{
				if ((this._WorkPostId != value))
				{
					this.OnWorkPostIdChanging(value);
					this.SendPropertyChanging();
					this._WorkPostId = value;
					this.SendPropertyChanged("WorkPostId");
					this.OnWorkPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPost", DbType="Bit")]
		public System.Nullable<bool> IsPost
		{
			get
			{
				return this._IsPost;
			}
			set
			{
				if ((this._IsPost != value))
				{
					this.OnIsPostChanging(value);
					this.SendPropertyChanging();
					this._IsPost = value;
					this.SendPropertyChanged("IsPost");
					this.OnIsPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Char(1)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this.OnBirthDayChanging(value);
					this.SendPropertyChanging();
					this._BirthDay = value;
					this.SendPropertyChanged("BirthDay");
					this.OnBirthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marriage", DbType="NVarChar(20)")]
		public string Marriage
		{
			get
			{
				return this._Marriage;
			}
			set
			{
				if ((this._Marriage != value))
				{
					this.OnMarriageChanging(value);
					this.SendPropertyChanging();
					this._Marriage = value;
					this.SendPropertyChanged("Marriage");
					this.OnMarriageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nation", DbType="NVarChar(20)")]
		public string Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this.OnNationChanging(value);
					this.SendPropertyChanging();
					this._Nation = value;
					this.SendPropertyChanged("Nation");
					this.OnNationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCard", DbType="NVarChar(50)")]
		public string IdentityCard
		{
			get
			{
				return this._IdentityCard;
			}
			set
			{
				if ((this._IdentityCard != value))
				{
					this.OnIdentityCardChanging(value);
					this.SendPropertyChanging();
					this._IdentityCard = value;
					this.SendPropertyChanged("IdentityCard");
					this.OnIdentityCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="NVarChar(20)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this.OnEducationChanging(value);
					this.SendPropertyChanging();
					this._Education = value;
					this.SendPropertyChanged("Education");
					this.OnEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hometown", DbType="NVarChar(50)")]
		public string Hometown
		{
			get
			{
				return this._Hometown;
			}
			set
			{
				if ((this._Hometown != value))
				{
					this.OnHometownChanging(value);
					this.SendPropertyChanging();
					this._Hometown = value;
					this.SendPropertyChanged("Hometown");
					this.OnHometownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="NVarChar(50)")]
		public string PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUrl", DbType="NVarChar(500)")]
		public string PhotoUrl
		{
			get
			{
				return this._PhotoUrl;
			}
			set
			{
				if ((this._PhotoUrl != value))
				{
					this.OnPhotoUrlChanging(value);
					this.SendPropertyChanging();
					this._PhotoUrl = value;
					this.SendPropertyChanged("PhotoUrl");
					this.OnPhotoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Performance", DbType="NVarChar(800)")]
		public string Performance
		{
			get
			{
				return this._Performance;
			}
			set
			{
				if ((this._Performance != value))
				{
					this.OnPerformanceChanging(value);
					this.SendPropertyChanging();
					this._Performance = value;
					this.SendPropertyChanged("Performance");
					this.OnPerformanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSize", DbType="Int")]
		public System.Nullable<int> PageSize
		{
			get
			{
				return this._PageSize;
			}
			set
			{
				if ((this._PageSize != value))
				{
					this.OnPageSizeChanging(value);
					this.SendPropertyChanging();
					this._PageSize = value;
					this.SendPropertyChanged("PageSize");
					this.OnPageSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="NVarChar(150)")]
		public string DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Focus", DbType="NVarChar(500)")]
		public string Focus
		{
			get
			{
				return this._Focus;
			}
			set
			{
				if ((this._Focus != value))
				{
					this.OnFocusChanging(value);
					this.SendPropertyChanging();
					this._Focus = value;
					this.SendPropertyChanged("Focus");
					this.OnFocusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this.OnQRCodeUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeUrl = value;
					this.SendPropertyChanged("QRCodeUrl");
					this.OnQRCodeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationName", DbType="NVarChar(500)")]
		public string InstallationName
		{
			get
			{
				return this._InstallationName;
			}
			set
			{
				if ((this._InstallationName != value))
				{
					this.OnInstallationNameChanging(value);
					this.SendPropertyChanging();
					this._InstallationName = value;
					this.SendPropertyChanged("InstallationName");
					this.OnInstallationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostName", DbType="NVarChar(500)")]
		public string WorkPostName
		{
			get
			{
				return this._WorkPostName;
			}
			set
			{
				if ((this._WorkPostName != value))
				{
					this.OnWorkPostNameChanging(value);
					this.SendPropertyChanging();
					this._WorkPostName = value;
					this.SendPropertyChanged("WorkPostName");
					this.OnWorkPostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="NVarChar(50)")]
		public string SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEmergency", DbType="Bit")]
		public System.Nullable<bool> IsEmergency
		{
			get
			{
				return this._IsEmergency;
			}
			set
			{
				if ((this._IsEmergency != value))
				{
					this.OnIsEmergencyChanging(value);
					this.SendPropertyChanging();
					this._IsEmergency = value;
					this.SendPropertyChanged("IsEmergency");
					this.OnIsEmergencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EntryTime
		{
			get
			{
				return this._EntryTime;
			}
			set
			{
				if ((this._EntryTime != value))
				{
					this.OnEntryTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryTime = value;
					this.SendPropertyChanged("EntryTime");
					this.OnEntryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTemp", DbType="Bit")]
		public System.Nullable<bool> IsTemp
		{
			get
			{
				return this._IsTemp;
			}
			set
			{
				if ((this._IsTemp != value))
				{
					this.OnIsTempChanging(value);
					this.SendPropertyChanging();
					this._IsTemp = value;
					this.SendPropertyChanged("IsTemp");
					this.OnIsTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Appraisal_AppraisalScore_Sys_User", Storage="_Appraisal_AppraisalScore", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Appraisal_AppraisalScore> Appraisal_AppraisalScore
		{
			get
			{
				return this._Appraisal_AppraisalScore;
			}
			set
			{
				this._Appraisal_AppraisalScore.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Appraisal_PersonAppraisal_Sys_User", Storage="_Appraisal_PersonAppraisal", ThisKey="UserId", OtherKey="FindManId", DeleteRule="NO ACTION")]
		public EntitySet<Appraisal_PersonAppraisal> Appraisal_PersonAppraisal
		{
			get
			{
				return this._Appraisal_PersonAppraisal;
			}
			set
			{
				this._Appraisal_PersonAppraisal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Appraisal_PersonAppraisal_Sys_User1", Storage="_User", ThisKey="UserId", OtherKey="ProblemManId", DeleteRule="NO ACTION")]
		public EntitySet<Appraisal_PersonAppraisal> User
		{
			get
			{
				return this._User;
			}
			set
			{
				this._User.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Appraisal_PersonAppraisal_Sys_User2", Storage="_Appraisal_PersonAppraisal_Sys_User2", ThisKey="UserId", OtherKey="AuditManId", DeleteRule="NO ACTION")]
		public EntitySet<Appraisal_PersonAppraisal> Appraisal_PersonAppraisal_Sys_User2
		{
			get
			{
				return this._Appraisal_PersonAppraisal_Sys_User2;
			}
			set
			{
				this._Appraisal_PersonAppraisal_Sys_User2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TeamGroupUser_Sys_User", Storage="_Base_TeamGroupUser", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Base_TeamGroupUser> Base_TeamGroupUser
		{
			get
			{
				return this._Base_TeamGroupUser;
			}
			set
			{
				this._Base_TeamGroupUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Sys_User", Storage="_Hazard_HiddenHazard", ThisKey="UserId", OtherKey="CorrectManId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_HiddenHazard> Hazard_HiddenHazard
		{
			get
			{
				return this._Hazard_HiddenHazard;
			}
			set
			{
				this._Hazard_HiddenHazard.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Sys_User_AcceptanceMan", Storage="_Hazard_HiddenHazard_Sys_User_AcceptanceMan", ThisKey="UserId", OtherKey="AcceptanceManId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_HiddenHazard> Hazard_HiddenHazard_Sys_User_AcceptanceMan
		{
			get
			{
				return this._Hazard_HiddenHazard_Sys_User_AcceptanceMan;
			}
			set
			{
				this._Hazard_HiddenHazard_Sys_User_AcceptanceMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Sys_User_AuditMan", Storage="_Hazard_HiddenHazard_Sys_User_AuditMan", ThisKey="UserId", OtherKey="AuditManId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_HiddenHazard> Hazard_HiddenHazard_Sys_User_AuditMan
		{
			get
			{
				return this._Hazard_HiddenHazard_Sys_User_AuditMan;
			}
			set
			{
				this._Hazard_HiddenHazard_Sys_User_AuditMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Sys_User_FindMan", Storage="_Hazard_HiddenHazard_Sys_User_FindMan", ThisKey="UserId", OtherKey="FindManId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_HiddenHazard> Hazard_HiddenHazard_Sys_User_FindMan
		{
			get
			{
				return this._Hazard_HiddenHazard_Sys_User_FindMan;
			}
			set
			{
				this._Hazard_HiddenHazard_Sys_User_FindMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazard_Sys_User_QHSEAuditMan", Storage="_Hazard_HiddenHazard_Sys_User_QHSEAuditMan", ThisKey="UserId", OtherKey="QHSEAuditManId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_HiddenHazard> Hazard_HiddenHazard_Sys_User_QHSEAuditMan
		{
			get
			{
				return this._Hazard_HiddenHazard_Sys_User_QHSEAuditMan;
			}
			set
			{
				this._Hazard_HiddenHazard_Sys_User_QHSEAuditMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazardDelay_Sys_User", Storage="_Hazard_HiddenHazardDelay", ThisKey="UserId", OtherKey="ApplicantManId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_HiddenHazardDelay> Hazard_HiddenHazardDelay
		{
			get
			{
				return this._Hazard_HiddenHazardDelay;
			}
			set
			{
				this._Hazard_HiddenHazardDelay.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazardDelay_Sys_User_InstallAuditMan", Storage="_Hazard_HiddenHazardDelay_Sys_User_InstallAuditMan", ThisKey="UserId", OtherKey="InstallAuditManId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_HiddenHazardDelay> Hazard_HiddenHazardDelay_Sys_User_InstallAuditMan
		{
			get
			{
				return this._Hazard_HiddenHazardDelay_Sys_User_InstallAuditMan;
			}
			set
			{
				this._Hazard_HiddenHazardDelay_Sys_User_InstallAuditMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazardDelay_Sys_User_LeaderMan", Storage="_Hazard_HiddenHazardDelay_Sys_User_LeaderMan", ThisKey="UserId", OtherKey="LeaderManId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_HiddenHazardDelay> Hazard_HiddenHazardDelay_Sys_User_LeaderMan
		{
			get
			{
				return this._Hazard_HiddenHazardDelay_Sys_User_LeaderMan;
			}
			set
			{
				this._Hazard_HiddenHazardDelay_Sys_User_LeaderMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HiddenHazardDelay_Sys_User1", Storage="_Hazard_HiddenHazardDelay_Sys_User1", ThisKey="UserId", OtherKey="QHSEAuditManId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_HiddenHazardDelay> Hazard_HiddenHazardDelay_Sys_User1
		{
			get
			{
				return this._Hazard_HiddenHazardDelay_Sys_User1;
			}
			set
			{
				this._Hazard_HiddenHazardDelay_Sys_User1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_JHAItemRecord_Sys_User", Storage="_Hazard_JHAItemRecord", ThisKey="UserId", OtherKey="EvaluatorId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_JHAItemRecord> Hazard_JHAItemRecord
		{
			get
			{
				return this._Hazard_JHAItemRecord;
			}
			set
			{
				this._Hazard_JHAItemRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_LECItemRecord_Sys_User", Storage="_Hazard_LECItemRecord", ThisKey="UserId", OtherKey="EvaluatorId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_LECItemRecord> Hazard_LECItemRecord
		{
			get
			{
				return this._Hazard_LECItemRecord;
			}
			set
			{
				this._Hazard_LECItemRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_PatrolPlan_Sys_User", Storage="_Hazard_PatrolPlan", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_PatrolPlan> Hazard_PatrolPlan
		{
			get
			{
				return this._Hazard_PatrolPlan;
			}
			set
			{
				this._Hazard_PatrolPlan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskList_Sys_User_RiskManId", Storage="_Hazard_RiskList", ThisKey="UserId", OtherKey="RiskManId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_RiskList> Hazard_RiskList
		{
			get
			{
				return this._Hazard_RiskList;
			}
			set
			{
				this._Hazard_RiskList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RiskListItem_Sys_User", Storage="_Hazard_RiskListItem", ThisKey="UserId", OtherKey="RiskOwnerId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_RiskListItem> Hazard_RiskListItem
		{
			get
			{
				return this._Hazard_RiskListItem;
			}
			set
			{
				this._Hazard_RiskListItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_RoutingInspection_Sys_User", Storage="_Hazard_RoutingInspection", ThisKey="UserId", OtherKey="PatrolManId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_RoutingInspection> Hazard_RoutingInspection
		{
			get
			{
				return this._Hazard_RoutingInspection;
			}
			set
			{
				this._Hazard_RoutingInspection.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_SCLItemRecord_Sys_User", Storage="_Hazard_SCLItemRecord", ThisKey="UserId", OtherKey="EvaluatorId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_SCLItemRecord> Hazard_SCLItemRecord
		{
			get
			{
				return this._Hazard_SCLItemRecord;
			}
			set
			{
				this._Hazard_SCLItemRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_InformationProject_FileCabinetAItem_Sys_User", Storage="_InformationProject_FileCabinetAItem", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<InformationProject_FileCabinetAItem> InformationProject_FileCabinetAItem
		{
			get
			{
				return this._InformationProject_FileCabinetAItem;
			}
			set
			{
				this._InformationProject_FileCabinetAItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_AccOperationUnitMan", Storage="_License_BlindPlate", ThisKey="UserId", OtherKey="AccOperationUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BlindPlate> License_BlindPlate
		{
			get
			{
				return this._License_BlindPlate;
			}
			set
			{
				this._License_BlindPlate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_AccProduceUnitMan", Storage="_License_BlindPlate_Sys_User_AccProduceUnitMan", ThisKey="UserId", OtherKey="AccProduceUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BlindPlate> License_BlindPlate_Sys_User_AccProduceUnitMan
		{
			get
			{
				return this._License_BlindPlate_Sys_User_AccProduceUnitMan;
			}
			set
			{
				this._License_BlindPlate_Sys_User_AccProduceUnitMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_ApplyMan", Storage="_License_BlindPlate_Sys_User_ApplyMan", ThisKey="UserId", OtherKey="ApplyManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BlindPlate> License_BlindPlate_Sys_User_ApplyMan
		{
			get
			{
				return this._License_BlindPlate_Sys_User_ApplyMan;
			}
			set
			{
				this._License_BlindPlate_Sys_User_ApplyMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_CompileMan", Storage="_License_BlindPlate_Sys_User_CompileMan", ThisKey="UserId", OtherKey="CompileManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BlindPlate> License_BlindPlate_Sys_User_CompileMan
		{
			get
			{
				return this._License_BlindPlate_Sys_User_CompileMan;
			}
			set
			{
				this._License_BlindPlate_Sys_User_CompileMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_CompileMan2", Storage="_License_BlindPlate_Sys_User_CompileMan2", ThisKey="UserId", OtherKey="CompileMan2Id", DeleteRule="NO ACTION")]
		public EntitySet<License_BlindPlate> License_BlindPlate_Sys_User_CompileMan2
		{
			get
			{
				return this._License_BlindPlate_Sys_User_CompileMan2;
			}
			set
			{
				this._License_BlindPlate_Sys_User_CompileMan2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_MeasuresMan", Storage="_License_BlindPlate_Sys_User_MeasuresMan", ThisKey="UserId", OtherKey="MeasuresManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BlindPlate> License_BlindPlate_Sys_User_MeasuresMan
		{
			get
			{
				return this._License_BlindPlate_Sys_User_MeasuresMan;
			}
			set
			{
				this._License_BlindPlate_Sys_User_MeasuresMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_OperationUnitMan", Storage="_License_BlindPlate_Sys_User_OperationUnitMan", ThisKey="UserId", OtherKey="OperationUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BlindPlate> License_BlindPlate_Sys_User_OperationUnitMan
		{
			get
			{
				return this._License_BlindPlate_Sys_User_OperationUnitMan;
			}
			set
			{
				this._License_BlindPlate_Sys_User_OperationUnitMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_OperatorHead", Storage="_License_BlindPlate_Sys_User_OperatorHead", ThisKey="UserId", OtherKey="OperatorHeadId", DeleteRule="NO ACTION")]
		public EntitySet<License_BlindPlate> License_BlindPlate_Sys_User_OperatorHead
		{
			get
			{
				return this._License_BlindPlate_Sys_User_OperatorHead;
			}
			set
			{
				this._License_BlindPlate_Sys_User_OperatorHead.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_ProduceUnitMan", Storage="_License_BlindPlate_Sys_User_ProduceUnitMan", ThisKey="UserId", OtherKey="ProduceUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BlindPlate> License_BlindPlate_Sys_User_ProduceUnitMan
		{
			get
			{
				return this._License_BlindPlate_Sys_User_ProduceUnitMan;
			}
			set
			{
				this._License_BlindPlate_Sys_User_ProduceUnitMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_ProductionDepMan", Storage="_License_BlindPlate_Sys_User_ProductionDepMan", ThisKey="UserId", OtherKey="ProductionDepManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BlindPlate> License_BlindPlate_Sys_User_ProductionDepMan
		{
			get
			{
				return this._License_BlindPlate_Sys_User_ProductionDepMan;
			}
			set
			{
				this._License_BlindPlate_Sys_User_ProductionDepMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_SafeEduMan", Storage="_License_BlindPlate_Sys_User_SafeEduMan", ThisKey="UserId", OtherKey="SafeEduManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BlindPlate> License_BlindPlate_Sys_User_SafeEduMan
		{
			get
			{
				return this._License_BlindPlate_Sys_User_SafeEduMan;
			}
			set
			{
				this._License_BlindPlate_Sys_User_SafeEduMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_SafeEduMan2", Storage="_License_BlindPlate_Sys_User_SafeEduMan2", ThisKey="UserId", OtherKey="SafeEduMan2Id", DeleteRule="NO ACTION")]
		public EntitySet<License_BlindPlate> License_BlindPlate_Sys_User_SafeEduMan2
		{
			get
			{
				return this._License_BlindPlate_Sys_User_SafeEduMan2;
			}
			set
			{
				this._License_BlindPlate_Sys_User_SafeEduMan2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BlindPlate_Sys_User_UnitHead", Storage="_License_BlindPlate_Sys_User_UnitHead", ThisKey="UserId", OtherKey="UnitHeadId", DeleteRule="NO ACTION")]
		public EntitySet<License_BlindPlate> License_BlindPlate_Sys_User_UnitHead
		{
			get
			{
				return this._License_BlindPlate_Sys_User_UnitHead;
			}
			set
			{
				this._License_BlindPlate_Sys_User_UnitHead.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_AcceptanceMan", Storage="_License_BreakGround", ThisKey="UserId", OtherKey="AcceptanceManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BreakGround> License_BreakGround
		{
			get
			{
				return this._License_BreakGround;
			}
			set
			{
				this._License_BreakGround.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_ApplyMan", Storage="_License_BreakGround_Sys_User_ApplyMan", ThisKey="UserId", OtherKey="ApplyManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BreakGround> License_BreakGround_Sys_User_ApplyMan
		{
			get
			{
				return this._License_BreakGround_Sys_User_ApplyMan;
			}
			set
			{
				this._License_BreakGround_Sys_User_ApplyMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_ApplyMan1", Storage="_License_BreakGround_Sys_User_ApplyMan1", ThisKey="UserId", OtherKey="ApplyMan1Id", DeleteRule="NO ACTION")]
		public EntitySet<License_BreakGround> License_BreakGround_Sys_User_ApplyMan1
		{
			get
			{
				return this._License_BreakGround_Sys_User_ApplyMan1;
			}
			set
			{
				this._License_BreakGround_Sys_User_ApplyMan1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_ApplyUnitMan", Storage="_License_BreakGround_Sys_User_ApplyUnitMan", ThisKey="UserId", OtherKey="ApplyUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BreakGround> License_BreakGround_Sys_User_ApplyUnitMan
		{
			get
			{
				return this._License_BreakGround_Sys_User_ApplyUnitMan;
			}
			set
			{
				this._License_BreakGround_Sys_User_ApplyUnitMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_ApprovalDepMan", Storage="_License_BreakGround_Sys_User_ApprovalDepMan", ThisKey="UserId", OtherKey="ApprovalDepManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BreakGround> License_BreakGround_Sys_User_ApprovalDepMan
		{
			get
			{
				return this._License_BreakGround_Sys_User_ApprovalDepMan;
			}
			set
			{
				this._License_BreakGround_Sys_User_ApprovalDepMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_CompileMan", Storage="_License_BreakGround_Sys_User_CompileMan", ThisKey="UserId", OtherKey="CompileManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BreakGround> License_BreakGround_Sys_User_CompileMan
		{
			get
			{
				return this._License_BreakGround_Sys_User_CompileMan;
			}
			set
			{
				this._License_BreakGround_Sys_User_CompileMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_CountersignMan", Storage="_License_BreakGround_Sys_User_CountersignMan", ThisKey="UserId", OtherKey="CountersignManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BreakGround> License_BreakGround_Sys_User_CountersignMan
		{
			get
			{
				return this._License_BreakGround_Sys_User_CountersignMan;
			}
			set
			{
				this._License_BreakGround_Sys_User_CountersignMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_JobUnitMan", Storage="_License_BreakGround_Sys_User_JobUnitMan", ThisKey="UserId", OtherKey="JobUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BreakGround> License_BreakGround_Sys_User_JobUnitMan
		{
			get
			{
				return this._License_BreakGround_Sys_User_JobUnitMan;
			}
			set
			{
				this._License_BreakGround_Sys_User_JobUnitMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_MeasuresMan", Storage="_License_BreakGround_Sys_User_MeasuresMan", ThisKey="UserId", OtherKey="MeasuresManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BreakGround> License_BreakGround_Sys_User_MeasuresMan
		{
			get
			{
				return this._License_BreakGround_Sys_User_MeasuresMan;
			}
			set
			{
				this._License_BreakGround_Sys_User_MeasuresMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_BreakGround_Sys_User_SafeEduMan", Storage="_License_BreakGround_Sys_User_SafeEduMan", ThisKey="UserId", OtherKey="SafeEduManId", DeleteRule="NO ACTION")]
		public EntitySet<License_BreakGround> License_BreakGround_Sys_User_SafeEduMan
		{
			get
			{
				return this._License_BreakGround_Sys_User_SafeEduMan;
			}
			set
			{
				this._License_BreakGround_Sys_User_SafeEduMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_AcceptanceMan", Storage="_License_Electricity", ThisKey="UserId", OtherKey="AcceptanceManId", DeleteRule="NO ACTION")]
		public EntitySet<License_Electricity> License_Electricity
		{
			get
			{
				return this._License_Electricity;
			}
			set
			{
				this._License_Electricity.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_ApplicantMan", Storage="_License_Electricity_Sys_User_ApplicantMan", ThisKey="UserId", OtherKey="ApplicantManId", DeleteRule="NO ACTION")]
		public EntitySet<License_Electricity> License_Electricity_Sys_User_ApplicantMan
		{
			get
			{
				return this._License_Electricity_Sys_User_ApplicantMan;
			}
			set
			{
				this._License_Electricity_Sys_User_ApplicantMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_AuditDepMan", Storage="_License_Electricity_Sys_User_AuditDepMan", ThisKey="UserId", OtherKey="AuditDepManId", DeleteRule="NO ACTION")]
		public EntitySet<License_Electricity> License_Electricity_Sys_User_AuditDepMan
		{
			get
			{
				return this._License_Electricity_Sys_User_AuditDepMan;
			}
			set
			{
				this._License_Electricity_Sys_User_AuditDepMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_CompileMan", Storage="_License_Electricity_Sys_User_CompileMan", ThisKey="UserId", OtherKey="CompileManId", DeleteRule="NO ACTION")]
		public EntitySet<License_Electricity> License_Electricity_Sys_User_CompileMan
		{
			get
			{
				return this._License_Electricity_Sys_User_CompileMan;
			}
			set
			{
				this._License_Electricity_Sys_User_CompileMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_ElectricUnitMan", Storage="_License_Electricity_Sys_User_ElectricUnitMan", ThisKey="UserId", OtherKey="ElectricUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_Electricity> License_Electricity_Sys_User_ElectricUnitMan
		{
			get
			{
				return this._License_Electricity_Sys_User_ElectricUnitMan;
			}
			set
			{
				this._License_Electricity_Sys_User_ElectricUnitMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_JobMan", Storage="_License_Electricity_Sys_User_JobMan", ThisKey="UserId", OtherKey="JobManId", DeleteRule="NO ACTION")]
		public EntitySet<License_Electricity> License_Electricity_Sys_User_JobMan
		{
			get
			{
				return this._License_Electricity_Sys_User_JobMan;
			}
			set
			{
				this._License_Electricity_Sys_User_JobMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_MeasuresMan", Storage="_License_Electricity_Sys_User_MeasuresMan", ThisKey="UserId", OtherKey="MeasuresManId", DeleteRule="NO ACTION")]
		public EntitySet<License_Electricity> License_Electricity_Sys_User_MeasuresMan
		{
			get
			{
				return this._License_Electricity_Sys_User_MeasuresMan;
			}
			set
			{
				this._License_Electricity_Sys_User_MeasuresMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_OperationUnitMan", Storage="_License_Electricity_Sys_User_OperationUnitMan", ThisKey="UserId", OtherKey="OperationUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_Electricity> License_Electricity_Sys_User_OperationUnitMan
		{
			get
			{
				return this._License_Electricity_Sys_User_OperationUnitMan;
			}
			set
			{
				this._License_Electricity_Sys_User_OperationUnitMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Electricity_Sys_User_SafeEduMan", Storage="_License_Electricity_Sys_User_SafeEduMan", ThisKey="UserId", OtherKey="SafeEduManId", DeleteRule="NO ACTION")]
		public EntitySet<License_Electricity> License_Electricity_Sys_User_SafeEduMan
		{
			get
			{
				return this._License_Electricity_Sys_User_SafeEduMan;
			}
			set
			{
				this._License_Electricity_Sys_User_SafeEduMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User", Storage="_License_FireWork", ThisKey="UserId", OtherKey="FireHeaderId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork
		{
			get
			{
				return this._License_FireWork;
			}
			set
			{
				this._License_FireWork.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_AcceptanceMan", Storage="_License_FireWork_Sys_User_AcceptanceMan", ThisKey="UserId", OtherKey="AcceptanceManId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork_Sys_User_AcceptanceMan
		{
			get
			{
				return this._License_FireWork_Sys_User_AcceptanceMan;
			}
			set
			{
				this._License_FireWork_Sys_User_AcceptanceMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_AnalysisMan1", Storage="_License_FireWork_Sys_User_AnalysisMan1", ThisKey="UserId", OtherKey="AnalysisMan1", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork_Sys_User_AnalysisMan1
		{
			get
			{
				return this._License_FireWork_Sys_User_AnalysisMan1;
			}
			set
			{
				this._License_FireWork_Sys_User_AnalysisMan1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_ApplyUnitMan", Storage="_License_FireWork_Sys_User_ApplyUnitMan", ThisKey="UserId", OtherKey="ApplyUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork_Sys_User_ApplyUnitMan
		{
			get
			{
				return this._License_FireWork_Sys_User_ApplyUnitMan;
			}
			set
			{
				this._License_FireWork_Sys_User_ApplyUnitMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_FireApprovalMan", Storage="_License_FireWork_Sys_User_FireApprovalMan", ThisKey="UserId", OtherKey="FireApprovalManId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork_Sys_User_FireApprovalMan
		{
			get
			{
				return this._License_FireWork_Sys_User_FireApprovalMan;
			}
			set
			{
				this._License_FireWork_Sys_User_FireApprovalMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_FireFirstMan", Storage="_License_FireWork_Sys_User_FireFirstMan", ThisKey="UserId", OtherKey="FireFirstManId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork_Sys_User_FireFirstMan
		{
			get
			{
				return this._License_FireWork_Sys_User_FireFirstMan;
			}
			set
			{
				this._License_FireWork_Sys_User_FireFirstMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_InspectTicketMan", Storage="_License_FireWork_Sys_User_InspectTicketMan", ThisKey="UserId", OtherKey="InspectTicketManId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork_Sys_User_InspectTicketMan
		{
			get
			{
				return this._License_FireWork_Sys_User_InspectTicketMan;
			}
			set
			{
				this._License_FireWork_Sys_User_InspectTicketMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_MeasuresMan", Storage="_License_FireWork_Sys_User_MeasuresMan", ThisKey="UserId", OtherKey="MeasuresManId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork_Sys_User_MeasuresMan
		{
			get
			{
				return this._License_FireWork_Sys_User_MeasuresMan;
			}
			set
			{
				this._License_FireWork_Sys_User_MeasuresMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_ProduceUnitMan", Storage="_License_FireWork_Sys_User_ProduceUnitMan", ThisKey="UserId", OtherKey="ProduceUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork_Sys_User_ProduceUnitMan
		{
			get
			{
				return this._License_FireWork_Sys_User_ProduceUnitMan;
			}
			set
			{
				this._License_FireWork_Sys_User_ProduceUnitMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_SafeDepMan", Storage="_License_FireWork_Sys_User_SafeDepMan", ThisKey="UserId", OtherKey="SafeDepManId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork_Sys_User_SafeDepMan
		{
			get
			{
				return this._License_FireWork_Sys_User_SafeDepMan;
			}
			set
			{
				this._License_FireWork_Sys_User_SafeDepMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User_SafeEduMan", Storage="_License_FireWork_Sys_User_SafeEduMan", ThisKey="UserId", OtherKey="SafeEduManId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork_Sys_User_SafeEduMan
		{
			get
			{
				return this._License_FireWork_Sys_User_SafeEduMan;
			}
			set
			{
				this._License_FireWork_Sys_User_SafeEduMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User1", Storage="_License_FireWork_Sys_User1", ThisKey="UserId", OtherKey="ApplyManId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork_Sys_User1
		{
			get
			{
				return this._License_FireWork_Sys_User1;
			}
			set
			{
				this._License_FireWork_Sys_User1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWork_Sys_User2", Storage="_License_FireWork_Sys_User2", ThisKey="UserId", OtherKey="CompileManId", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWork> License_FireWork_Sys_User2
		{
			get
			{
				return this._License_FireWork_Sys_User2;
			}
			set
			{
				this._License_FireWork_Sys_User2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_FireWorkAnalysis_Sys_User", Storage="_License_FireWorkAnalysis", ThisKey="UserId", OtherKey="AnalysisMan", DeleteRule="NO ACTION")]
		public EntitySet<License_FireWorkAnalysis> License_FireWorkAnalysis
		{
			get
			{
				return this._License_FireWorkAnalysis;
			}
			set
			{
				this._License_FireWorkAnalysis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_AcceptanceMan", Storage="_License_HeightWork", ThisKey="UserId", OtherKey="AcceptanceManId", DeleteRule="NO ACTION")]
		public EntitySet<License_HeightWork> License_HeightWork
		{
			get
			{
				return this._License_HeightWork;
			}
			set
			{
				this._License_HeightWork.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_ApplyMan", Storage="_License_HeightWork_Sys_User_ApplyMan", ThisKey="UserId", OtherKey="ApplyManId", DeleteRule="NO ACTION")]
		public EntitySet<License_HeightWork> License_HeightWork_Sys_User_ApplyMan
		{
			get
			{
				return this._License_HeightWork_Sys_User_ApplyMan;
			}
			set
			{
				this._License_HeightWork_Sys_User_ApplyMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_ApplyUnitMan", Storage="_License_HeightWork_Sys_User_ApplyUnitMan", ThisKey="UserId", OtherKey="ApplyUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_HeightWork> License_HeightWork_Sys_User_ApplyUnitMan
		{
			get
			{
				return this._License_HeightWork_Sys_User_ApplyUnitMan;
			}
			set
			{
				this._License_HeightWork_Sys_User_ApplyUnitMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_ApproveDepMan", Storage="_License_HeightWork_Sys_User_ApproveDepMan", ThisKey="UserId", OtherKey="ApproveDepManId", DeleteRule="NO ACTION")]
		public EntitySet<License_HeightWork> License_HeightWork_Sys_User_ApproveDepMan
		{
			get
			{
				return this._License_HeightWork_Sys_User_ApproveDepMan;
			}
			set
			{
				this._License_HeightWork_Sys_User_ApproveDepMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_AuditDepMan", Storage="_License_HeightWork_Sys_User_AuditDepMan", ThisKey="UserId", OtherKey="AuditDepManId", DeleteRule="NO ACTION")]
		public EntitySet<License_HeightWork> License_HeightWork_Sys_User_AuditDepMan
		{
			get
			{
				return this._License_HeightWork_Sys_User_AuditDepMan;
			}
			set
			{
				this._License_HeightWork_Sys_User_AuditDepMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_CompileMan", Storage="_License_HeightWork_Sys_User_CompileMan", ThisKey="UserId", OtherKey="CompileManId", DeleteRule="NO ACTION")]
		public EntitySet<License_HeightWork> License_HeightWork_Sys_User_CompileMan
		{
			get
			{
				return this._License_HeightWork_Sys_User_CompileMan;
			}
			set
			{
				this._License_HeightWork_Sys_User_CompileMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_MeasuresMan", Storage="_License_HeightWork_Sys_User_MeasuresMan", ThisKey="UserId", OtherKey="MeasuresManId", DeleteRule="NO ACTION")]
		public EntitySet<License_HeightWork> License_HeightWork_Sys_User_MeasuresMan
		{
			get
			{
				return this._License_HeightWork_Sys_User_MeasuresMan;
			}
			set
			{
				this._License_HeightWork_Sys_User_MeasuresMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_OperationUnitMan", Storage="_License_HeightWork_Sys_User_OperationUnitMan", ThisKey="UserId", OtherKey="OperationUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_HeightWork> License_HeightWork_Sys_User_OperationUnitMan
		{
			get
			{
				return this._License_HeightWork_Sys_User_OperationUnitMan;
			}
			set
			{
				this._License_HeightWork_Sys_User_OperationUnitMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_HeightWork_Sys_User_SafeEduMan", Storage="_License_HeightWork_Sys_User_SafeEduMan", ThisKey="UserId", OtherKey="SafeEduManId", DeleteRule="NO ACTION")]
		public EntitySet<License_HeightWork> License_HeightWork_Sys_User_SafeEduMan
		{
			get
			{
				return this._License_HeightWork_Sys_User_SafeEduMan;
			}
			set
			{
				this._License_HeightWork_Sys_User_SafeEduMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Sys_User_ApplyMan", Storage="_License_Interlocking", ThisKey="UserId", OtherKey="ApplyManId", DeleteRule="NO ACTION")]
		public EntitySet<License_Interlocking> License_Interlocking
		{
			get
			{
				return this._License_Interlocking;
			}
			set
			{
				this._License_Interlocking.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Sys_User_ChiefEngineerMan", Storage="_License_Interlocking_Sys_User_ChiefEngineerMan", ThisKey="UserId", OtherKey="ChiefEngineerManId", DeleteRule="NO ACTION")]
		public EntitySet<License_Interlocking> License_Interlocking_Sys_User_ChiefEngineerMan
		{
			get
			{
				return this._License_Interlocking_Sys_User_ChiefEngineerMan;
			}
			set
			{
				this._License_Interlocking_Sys_User_ChiefEngineerMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Sys_User_EquipmentMan", Storage="_License_Interlocking_Sys_User_EquipmentMan", ThisKey="UserId", OtherKey="EquipmentManId", DeleteRule="NO ACTION")]
		public EntitySet<License_Interlocking> License_Interlocking_Sys_User_EquipmentMan
		{
			get
			{
				return this._License_Interlocking_Sys_User_EquipmentMan;
			}
			set
			{
				this._License_Interlocking_Sys_User_EquipmentMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Sys_User_InstallationMan", Storage="_License_Interlocking_Sys_User_InstallationMan", ThisKey="UserId", OtherKey="InstallationManId", DeleteRule="NO ACTION")]
		public EntitySet<License_Interlocking> License_Interlocking_Sys_User_InstallationMan
		{
			get
			{
				return this._License_Interlocking_Sys_User_InstallationMan;
			}
			set
			{
				this._License_Interlocking_Sys_User_InstallationMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Sys_User_ProductionMan", Storage="_License_Interlocking_Sys_User_ProductionMan", ThisKey="UserId", OtherKey="ProductionManId", DeleteRule="NO ACTION")]
		public EntitySet<License_Interlocking> License_Interlocking_Sys_User_ProductionMan
		{
			get
			{
				return this._License_Interlocking_Sys_User_ProductionMan;
			}
			set
			{
				this._License_Interlocking_Sys_User_ProductionMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Interlocking_Sys_User_UnitHead", Storage="_License_Interlocking_Sys_User_UnitHead", ThisKey="UserId", OtherKey="UnitHeadId", DeleteRule="NO ACTION")]
		public EntitySet<License_Interlocking> License_Interlocking_Sys_User_UnitHead
		{
			get
			{
				return this._License_Interlocking_Sys_User_UnitHead;
			}
			set
			{
				this._License_Interlocking_Sys_User_UnitHead.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_ApplyManId", Storage="_License_LiftingWork", ThisKey="UserId", OtherKey="ApplyManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LiftingWork> License_LiftingWork
		{
			get
			{
				return this._License_LiftingWork;
			}
			set
			{
				this._License_LiftingWork.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_ApprovalDepManId", Storage="_License_LiftingWork_Sys_User_ApprovalDepManId", ThisKey="UserId", OtherKey="ApprovalDepManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LiftingWork> License_LiftingWork_Sys_User_ApprovalDepManId
		{
			get
			{
				return this._License_LiftingWork_Sys_User_ApprovalDepManId;
			}
			set
			{
				this._License_LiftingWork_Sys_User_ApprovalDepManId.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_CompileManId", Storage="_License_LiftingWork_Sys_User_CompileManId", ThisKey="UserId", OtherKey="CompileManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LiftingWork> License_LiftingWork_Sys_User_CompileManId
		{
			get
			{
				return this._License_LiftingWork_Sys_User_CompileManId;
			}
			set
			{
				this._License_LiftingWork_Sys_User_CompileManId.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_JobDepManId", Storage="_License_LiftingWork_Sys_User_JobDepManId", ThisKey="UserId", OtherKey="JobDepManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LiftingWork> License_LiftingWork_Sys_User_JobDepManId
		{
			get
			{
				return this._License_LiftingWork_Sys_User_JobDepManId;
			}
			set
			{
				this._License_LiftingWork_Sys_User_JobDepManId.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_JobUnitManId", Storage="_License_LiftingWork_Sys_User_JobUnitManId", ThisKey="UserId", OtherKey="JobUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LiftingWork> License_LiftingWork_Sys_User_JobUnitManId
		{
			get
			{
				return this._License_LiftingWork_Sys_User_JobUnitManId;
			}
			set
			{
				this._License_LiftingWork_Sys_User_JobUnitManId.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_MeasuresManId", Storage="_License_LiftingWork_Sys_User_MeasuresManId", ThisKey="UserId", OtherKey="MeasuresManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LiftingWork> License_LiftingWork_Sys_User_MeasuresManId
		{
			get
			{
				return this._License_LiftingWork_Sys_User_MeasuresManId;
			}
			set
			{
				this._License_LiftingWork_Sys_User_MeasuresManId.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_ProduceDepManId", Storage="_License_LiftingWork_Sys_User_ProduceDepManId", ThisKey="UserId", OtherKey="ProduceDepManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LiftingWork> License_LiftingWork_Sys_User_ProduceDepManId
		{
			get
			{
				return this._License_LiftingWork_Sys_User_ProduceDepManId;
			}
			set
			{
				this._License_LiftingWork_Sys_User_ProduceDepManId.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_ProduceUnitManId", Storage="_License_LiftingWork_Sys_User_ProduceUnitManId", ThisKey="UserId", OtherKey="ProduceUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LiftingWork> License_LiftingWork_Sys_User_ProduceUnitManId
		{
			get
			{
				return this._License_LiftingWork_Sys_User_ProduceUnitManId;
			}
			set
			{
				this._License_LiftingWork_Sys_User_ProduceUnitManId.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LiftingWork_Sys_User_SafeEduManId", Storage="_License_LiftingWork_Sys_User_SafeEduManId", ThisKey="UserId", OtherKey="SafeEduManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LiftingWork> License_LiftingWork_Sys_User_SafeEduManId
		{
			get
			{
				return this._License_LiftingWork_Sys_User_SafeEduManId;
			}
			set
			{
				this._License_LiftingWork_Sys_User_SafeEduManId.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User", Storage="_License_LimitedSpace", ThisKey="UserId", OtherKey="ApplyManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpace> License_LimitedSpace
		{
			get
			{
				return this._License_LimitedSpace;
			}
			set
			{
				this._License_LimitedSpace.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User_AcceptanceMan", Storage="_License_LimitedSpace_Sys_User_AcceptanceMan", ThisKey="UserId", OtherKey="AcceptanceOperationManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpace> License_LimitedSpace_Sys_User_AcceptanceMan
		{
			get
			{
				return this._License_LimitedSpace_Sys_User_AcceptanceMan;
			}
			set
			{
				this._License_LimitedSpace_Sys_User_AcceptanceMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User_ApplyUnitMan", Storage="_License_LimitedSpace_Sys_User_ApplyUnitMan", ThisKey="UserId", OtherKey="ApplyUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpace> License_LimitedSpace_Sys_User_ApplyUnitMan
		{
			get
			{
				return this._License_LimitedSpace_Sys_User_ApplyUnitMan;
			}
			set
			{
				this._License_LimitedSpace_Sys_User_ApplyUnitMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User_ApproveUnitMan", Storage="_License_LimitedSpace_Sys_User_ApproveUnitMan", ThisKey="UserId", OtherKey="ApproveUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpace> License_LimitedSpace_Sys_User_ApproveUnitMan
		{
			get
			{
				return this._License_LimitedSpace_Sys_User_ApproveUnitMan;
			}
			set
			{
				this._License_LimitedSpace_Sys_User_ApproveUnitMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User_CompileMan", Storage="_License_LimitedSpace_Sys_User_CompileMan", ThisKey="UserId", OtherKey="CompileManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpace> License_LimitedSpace_Sys_User_CompileMan
		{
			get
			{
				return this._License_LimitedSpace_Sys_User_CompileMan;
			}
			set
			{
				this._License_LimitedSpace_Sys_User_CompileMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User_JobManager", Storage="_License_LimitedSpace_Sys_User_JobManager", ThisKey="UserId", OtherKey="JobManagerId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpace> License_LimitedSpace_Sys_User_JobManager
		{
			get
			{
				return this._License_LimitedSpace_Sys_User_JobManager;
			}
			set
			{
				this._License_LimitedSpace_Sys_User_JobManager.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User_MeasuresMan", Storage="_License_LimitedSpace_Sys_User_MeasuresMan", ThisKey="UserId", OtherKey="MeasuresManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpace> License_LimitedSpace_Sys_User_MeasuresMan
		{
			get
			{
				return this._License_LimitedSpace_Sys_User_MeasuresMan;
			}
			set
			{
				this._License_LimitedSpace_Sys_User_MeasuresMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User_SafeEduMan", Storage="_License_LimitedSpace_Sys_User_SafeEduMan", ThisKey="UserId", OtherKey="SafeEduManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpace> License_LimitedSpace_Sys_User_SafeEduMan
		{
			get
			{
				return this._License_LimitedSpace_Sys_User_SafeEduMan;
			}
			set
			{
				this._License_LimitedSpace_Sys_User_SafeEduMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User1", Storage="_License_LimitedSpace_Sys_User1", ThisKey="UserId", OtherKey="AnalysisManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpace> License_LimitedSpace_Sys_User1
		{
			get
			{
				return this._License_LimitedSpace_Sys_User1;
			}
			set
			{
				this._License_LimitedSpace_Sys_User1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User2", Storage="_License_LimitedSpace_Sys_User2", ThisKey="UserId", OtherKey="AcceptanceJobManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpace> License_LimitedSpace_Sys_User2
		{
			get
			{
				return this._License_LimitedSpace_Sys_User2;
			}
			set
			{
				this._License_LimitedSpace_Sys_User2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpace_Sys_User3", Storage="_License_LimitedSpace_Sys_User3", ThisKey="UserId", OtherKey="AcceptanceOperationManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpace> License_LimitedSpace_Sys_User3
		{
			get
			{
				return this._License_LimitedSpace_Sys_User3;
			}
			set
			{
				this._License_LimitedSpace_Sys_User3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_LimitedSpaceAnalysis_Sys_User", Storage="_License_LimitedSpaceAnalysis", ThisKey="UserId", OtherKey="AnalysisManId", DeleteRule="NO ACTION")]
		public EntitySet<License_LimitedSpaceAnalysis> License_LimitedSpaceAnalysis
		{
			get
			{
				return this._License_LimitedSpaceAnalysis;
			}
			set
			{
				this._License_LimitedSpaceAnalysis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User", Storage="_License_OpenCircuit", ThisKey="UserId", OtherKey="ApplyManId", DeleteRule="NO ACTION")]
		public EntitySet<License_OpenCircuit> License_OpenCircuit
		{
			get
			{
				return this._License_OpenCircuit;
			}
			set
			{
				this._License_OpenCircuit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_AcceptanceMan", Storage="_License_OpenCircuit_Sys_User_AcceptanceMan", ThisKey="UserId", OtherKey="AcceptanceManId", DeleteRule="NO ACTION")]
		public EntitySet<License_OpenCircuit> License_OpenCircuit_Sys_User_AcceptanceMan
		{
			get
			{
				return this._License_OpenCircuit_Sys_User_AcceptanceMan;
			}
			set
			{
				this._License_OpenCircuit_Sys_User_AcceptanceMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_ApplyMan1", Storage="_License_OpenCircuit_Sys_User_ApplyMan1", ThisKey="UserId", OtherKey="ApplyMan1Id", DeleteRule="NO ACTION")]
		public EntitySet<License_OpenCircuit> License_OpenCircuit_Sys_User_ApplyMan1
		{
			get
			{
				return this._License_OpenCircuit_Sys_User_ApplyMan1;
			}
			set
			{
				this._License_OpenCircuit_Sys_User_ApplyMan1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_ApplyUnitMan", Storage="_License_OpenCircuit_Sys_User_ApplyUnitMan", ThisKey="UserId", OtherKey="ApplyUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_OpenCircuit> License_OpenCircuit_Sys_User_ApplyUnitMan
		{
			get
			{
				return this._License_OpenCircuit_Sys_User_ApplyUnitMan;
			}
			set
			{
				this._License_OpenCircuit_Sys_User_ApplyUnitMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_ApprovalDepMan", Storage="_License_OpenCircuit_Sys_User_ApprovalDepMan", ThisKey="UserId", OtherKey="ApprovalDepManId", DeleteRule="NO ACTION")]
		public EntitySet<License_OpenCircuit> License_OpenCircuit_Sys_User_ApprovalDepMan
		{
			get
			{
				return this._License_OpenCircuit_Sys_User_ApprovalDepMan;
			}
			set
			{
				this._License_OpenCircuit_Sys_User_ApprovalDepMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_ApproveUnitMan", Storage="_License_OpenCircuit_Sys_User_ApproveUnitMan", ThisKey="UserId", OtherKey="JobUnitManId", DeleteRule="NO ACTION")]
		public EntitySet<License_OpenCircuit> License_OpenCircuit_Sys_User_ApproveUnitMan
		{
			get
			{
				return this._License_OpenCircuit_Sys_User_ApproveUnitMan;
			}
			set
			{
				this._License_OpenCircuit_Sys_User_ApproveUnitMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_CompileMan", Storage="_License_OpenCircuit_Sys_User_CompileMan", ThisKey="UserId", OtherKey="CompileManId", DeleteRule="NO ACTION")]
		public EntitySet<License_OpenCircuit> License_OpenCircuit_Sys_User_CompileMan
		{
			get
			{
				return this._License_OpenCircuit_Sys_User_CompileMan;
			}
			set
			{
				this._License_OpenCircuit_Sys_User_CompileMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_JobManager", Storage="_License_OpenCircuit_Sys_User_JobManager", ThisKey="UserId", OtherKey="JobManagerId", DeleteRule="NO ACTION")]
		public EntitySet<License_OpenCircuit> License_OpenCircuit_Sys_User_JobManager
		{
			get
			{
				return this._License_OpenCircuit_Sys_User_JobManager;
			}
			set
			{
				this._License_OpenCircuit_Sys_User_JobManager.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_MeasuresMan", Storage="_License_OpenCircuit_Sys_User_MeasuresMan", ThisKey="UserId", OtherKey="MeasuresManId", DeleteRule="NO ACTION")]
		public EntitySet<License_OpenCircuit> License_OpenCircuit_Sys_User_MeasuresMan
		{
			get
			{
				return this._License_OpenCircuit_Sys_User_MeasuresMan;
			}
			set
			{
				this._License_OpenCircuit_Sys_User_MeasuresMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User_SafeEduMan", Storage="_License_OpenCircuit_Sys_User_SafeEduMan", ThisKey="UserId", OtherKey="SafeEduManId", DeleteRule="NO ACTION")]
		public EntitySet<License_OpenCircuit> License_OpenCircuit_Sys_User_SafeEduMan
		{
			get
			{
				return this._License_OpenCircuit_Sys_User_SafeEduMan;
			}
			set
			{
				this._License_OpenCircuit_Sys_User_SafeEduMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User2", Storage="_License_OpenCircuit_Sys_User2", ThisKey="UserId", OtherKey="CountersignManId", DeleteRule="NO ACTION")]
		public EntitySet<License_OpenCircuit> License_OpenCircuit_Sys_User2
		{
			get
			{
				return this._License_OpenCircuit_Sys_User2;
			}
			set
			{
				this._License_OpenCircuit_Sys_User2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_OpenCircuit_Sys_User3", Storage="_License_OpenCircuit_Sys_User3", ThisKey="UserId", OtherKey="AcceptanceManId", DeleteRule="NO ACTION")]
		public EntitySet<License_OpenCircuit> License_OpenCircuit_Sys_User3
		{
			get
			{
				return this._License_OpenCircuit_Sys_User3;
			}
			set
			{
				this._License_OpenCircuit_Sys_User3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Sys_User_Auditor", Storage="_License_Overhaul", ThisKey="UserId", OtherKey="AuditorId", DeleteRule="NO ACTION")]
		public EntitySet<License_Overhaul> License_Overhaul
		{
			get
			{
				return this._License_Overhaul;
			}
			set
			{
				this._License_Overhaul.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Sys_User_CheckOverhaulHead", Storage="_License_Overhaul_Sys_User_CheckOverhaulHead", ThisKey="UserId", OtherKey="CheckOverhaulHeadId", DeleteRule="NO ACTION")]
		public EntitySet<License_Overhaul> License_Overhaul_Sys_User_CheckOverhaulHead
		{
			get
			{
				return this._License_Overhaul_Sys_User_CheckOverhaulHead;
			}
			set
			{
				this._License_Overhaul_Sys_User_CheckOverhaulHead.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Sys_User_CheckProcessMonitor", Storage="_License_Overhaul_Sys_User_CheckProcessMonitor", ThisKey="UserId", OtherKey="CheckProcessMonitorId", DeleteRule="NO ACTION")]
		public EntitySet<License_Overhaul> License_Overhaul_Sys_User_CheckProcessMonitor
		{
			get
			{
				return this._License_Overhaul_Sys_User_CheckProcessMonitor;
			}
			set
			{
				this._License_Overhaul_Sys_User_CheckProcessMonitor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Sys_User_CompileMan", Storage="_License_Overhaul_Sys_User_CompileMan", ThisKey="UserId", OtherKey="CompileManId", DeleteRule="NO ACTION")]
		public EntitySet<License_Overhaul> License_Overhaul_Sys_User_CompileMan
		{
			get
			{
				return this._License_Overhaul_Sys_User_CompileMan;
			}
			set
			{
				this._License_Overhaul_Sys_User_CompileMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Sys_User_OverhaulHead", Storage="_License_Overhaul_Sys_User_OverhaulHead", ThisKey="UserId", OtherKey="OverhaulHeadId", DeleteRule="NO ACTION")]
		public EntitySet<License_Overhaul> License_Overhaul_Sys_User_OverhaulHead
		{
			get
			{
				return this._License_Overhaul_Sys_User_OverhaulHead;
			}
			set
			{
				this._License_Overhaul_Sys_User_OverhaulHead.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Sys_User_ProcessMan", Storage="_License_Overhaul_Sys_User_ProcessMan", ThisKey="UserId", OtherKey="ProcessManId", DeleteRule="NO ACTION")]
		public EntitySet<License_Overhaul> License_Overhaul_Sys_User_ProcessMan
		{
			get
			{
				return this._License_Overhaul_Sys_User_ProcessMan;
			}
			set
			{
				this._License_Overhaul_Sys_User_ProcessMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_License_Overhaul_Sys_User_ProcessMonitor", Storage="_License_Overhaul_Sys_User_ProcessMonitor", ThisKey="UserId", OtherKey="ProcessMonitorId", DeleteRule="NO ACTION")]
		public EntitySet<License_Overhaul> License_Overhaul_Sys_User_ProcessMonitor
		{
			get
			{
				return this._License_Overhaul_Sys_User_ProcessMonitor;
			}
			set
			{
				this._License_Overhaul_Sys_User_ProcessMonitor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Lock_SmartLockItem_Sys_User", Storage="_Lock_SmartLockItem", ThisKey="UserId", OtherKey="ApplicantManId", DeleteRule="NO ACTION")]
		public EntitySet<Lock_SmartLockItem> Lock_SmartLockItem
		{
			get
			{
				return this._Lock_SmartLockItem;
			}
			set
			{
				this._Lock_SmartLockItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Lock_SmartLockItem_Sys_User2", Storage="_Lock_SmartLockItem_Sys_User2", ThisKey="UserId", OtherKey="AuditManId", DeleteRule="NO ACTION")]
		public EntitySet<Lock_SmartLockItem> Lock_SmartLockItem_Sys_User2
		{
			get
			{
				return this._Lock_SmartLockItem_Sys_User2;
			}
			set
			{
				this._Lock_SmartLockItem_Sys_User2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Personal_PersonalFolder_Sys_User", Storage="_Personal_PersonalFolder", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<Personal_PersonalFolder> Personal_PersonalFolder
		{
			get
			{
				return this._Personal_PersonalFolder;
			}
			set
			{
				this._Personal_PersonalFolder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentQuality_Sys_User", Storage="_QualityAudit_EquipmentQuality", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_EquipmentQuality> QualityAudit_EquipmentQuality
		{
			get
			{
				return this._QualityAudit_EquipmentQuality;
			}
			set
			{
				this._QualityAudit_EquipmentQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Sys_User", Storage="_QualityAudit_PersonQuality", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_PersonQuality> QualityAudit_PersonQuality
		{
			get
			{
				return this._QualityAudit_PersonQuality;
			}
			set
			{
				this._QualityAudit_PersonQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Sys_User1", Storage="_QualityAudit_PersonQuality_Sys_User1", ThisKey="UserId", OtherKey="PersonId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_PersonQuality> QualityAudit_PersonQuality_Sys_User1
		{
			get
			{
				return this._QualityAudit_PersonQuality_Sys_User1;
			}
			set
			{
				this._QualityAudit_PersonQuality_Sys_User1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Entrust_Sys_User_EntrustMan", Storage="_Sys_Entrust", ThisKey="UserId", OtherKey="EntrustManId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_Entrust> Sys_Entrust
		{
			get
			{
				return this._Sys_Entrust;
			}
			set
			{
				this._Sys_Entrust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Entrust_Sys_User_RecipientMan", Storage="_Sys_Entrust_Sys_User_RecipientMan", ThisKey="UserId", OtherKey="RecipientManId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_Entrust> Sys_Entrust_Sys_User_RecipientMan
		{
			get
			{
				return this._Sys_Entrust_Sys_User_RecipientMan;
			}
			set
			{
				this._Sys_Entrust_Sys_User_RecipientMan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Log_Sys_User", Storage="_Sys_Log", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_Log> Sys_Log
		{
			get
			{
				return this._Sys_Log;
			}
			set
			{
				this._Sys_Log.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_PushRecord_Sys_User", Storage="_Sys_PushRecord", ThisKey="UserId", OtherKey="PushManId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_PushRecord> Sys_PushRecord
		{
			get
			{
				return this._Sys_PushRecord;
			}
			set
			{
				this._Sys_PushRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_PushRecord_Sys_User1", Storage="_Sys_PushRecord_Sys_User1", ThisKey="UserId", OtherKey="ReceiveManId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_PushRecord> Sys_PushRecord_Sys_User1
		{
			get
			{
				return this._Sys_PushRecord_Sys_User1;
			}
			set
			{
				this._Sys_PushRecord_Sys_User1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_PushRecord_Sys_User2", Storage="_Sys_PushRecord_Sys_User2", ThisKey="UserId", OtherKey="RecipientManId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_PushRecord> Sys_PushRecord_Sys_User2
		{
			get
			{
				return this._Sys_PushRecord_Sys_User2;
			}
			set
			{
				this._Sys_PushRecord_Sys_User2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Base_Depart", Storage="_Base_Depart", ThisKey="DepartId", OtherKey="DepartId", IsForeignKey=true)]
		public Base_Depart Base_Depart
		{
			get
			{
				return this._Base_Depart.Entity;
			}
			set
			{
				Base_Depart previousValue = this._Base_Depart.Entity;
				if (((previousValue != value) 
							|| (this._Base_Depart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Depart.Entity = null;
						previousValue.Sys_User.Remove(this);
					}
					this._Base_Depart.Entity = value;
					if ((value != null))
					{
						value.Sys_User.Add(this);
						this._DepartId = value.DepartId;
					}
					else
					{
						this._DepartId = default(string);
					}
					this.SendPropertyChanged("Base_Depart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Sys_User.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Sys_User.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Sys_Role", Storage="_Sys_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Sys_Role Sys_Role
		{
			get
			{
				return this._Sys_Role.Entity;
			}
			set
			{
				Sys_Role previousValue = this._Sys_Role.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Role.Entity = null;
						previousValue.Sys_User.Remove(this);
					}
					this._Sys_Role.Entity = value;
					if ((value != null))
					{
						value.Sys_User.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("Sys_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserDealInstallation_Sys_User", Storage="_Sys_UserDealInstallation", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_UserDealInstallation> Sys_UserDealInstallation
		{
			get
			{
				return this._Sys_UserDealInstallation;
			}
			set
			{
				this._Sys_UserDealInstallation.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserDuty_Sys_User", Storage="_Sys_UserDuty", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_UserDuty> Sys_UserDuty
		{
			get
			{
				return this._Sys_UserDuty;
			}
			set
			{
				this._Sys_UserDuty.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserEntryRecord_Sys_User", Storage="_Sys_UserEntryRecord", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_UserEntryRecord> Sys_UserEntryRecord
		{
			get
			{
				return this._Sys_UserEntryRecord;
			}
			set
			{
				this._Sys_UserEntryRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserSchedule_Sys_User", Storage="_Sys_UserSchedule", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_UserSchedule> Sys_UserSchedule
		{
			get
			{
				return this._Sys_UserSchedule;
			}
			set
			{
				this._Sys_UserSchedule.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_ModelTestRecord_Sys_User", Storage="_Training_ModelTestRecord", ThisKey="UserId", OtherKey="TestManId", DeleteRule="NO ACTION")]
		public EntitySet<Training_ModelTestRecord> Training_ModelTestRecord
		{
			get
			{
				return this._Training_ModelTestRecord;
			}
			set
			{
				this._Training_ModelTestRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_Plan_Sys_User", Storage="_Training_Plan", ThisKey="UserId", OtherKey="DesignerId", DeleteRule="NO ACTION")]
		public EntitySet<Training_Plan> Training_Plan
		{
			get
			{
				return this._Training_Plan;
			}
			set
			{
				this._Training_Plan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_Task_Sys_User", Storage="_Training_Task", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Training_Task> Training_Task
		{
			get
			{
				return this._Training_Task;
			}
			set
			{
				this._Training_Task.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestPlan_Sys_User", Storage="_Training_TestPlan", ThisKey="UserId", OtherKey="PlanManId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TestPlan> Training_TestPlan
		{
			get
			{
				return this._Training_TestPlan;
			}
			set
			{
				this._Training_TestPlan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestPlanTime_Sys_User", Storage="_Training_TestPlanTime", ThisKey="UserId", OtherKey="PlanManId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TestPlanTime> Training_TestPlanTime
		{
			get
			{
				return this._Training_TestPlanTime;
			}
			set
			{
				this._Training_TestPlanTime.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestRecord_Sys_User", Storage="_Training_TestRecord", ThisKey="UserId", OtherKey="TestManId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TestRecord> Training_TestRecord
		{
			get
			{
				return this._Training_TestRecord;
			}
			set
			{
				this._Training_TestRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainRecordDetail_Sys_User", Storage="_Training_TrainRecordDetail", ThisKey="UserId", OtherKey="PersonId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TrainRecordDetail> Training_TrainRecordDetail
		{
			get
			{
				return this._Training_TrainRecordDetail;
			}
			set
			{
				this._Training_TrainRecordDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Appraisal_AppraisalScore(Appraisal_AppraisalScore entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Appraisal_AppraisalScore(Appraisal_AppraisalScore entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Appraisal_PersonAppraisal(Appraisal_PersonAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Appraisal_PersonAppraisal(Appraisal_PersonAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_User(Appraisal_PersonAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.ProblemMan = this;
		}
		
		private void detach_User(Appraisal_PersonAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.ProblemMan = null;
		}
		
		private void attach_Appraisal_PersonAppraisal_Sys_User2(Appraisal_PersonAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.AuditMan = this;
		}
		
		private void detach_Appraisal_PersonAppraisal_Sys_User2(Appraisal_PersonAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.AuditMan = null;
		}
		
		private void attach_Base_TeamGroupUser(Base_TeamGroupUser entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Base_TeamGroupUser(Base_TeamGroupUser entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Hazard_HiddenHazard(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Hazard_HiddenHazard(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Hazard_HiddenHazard_Sys_User_AcceptanceMan(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.AcceptanceMan = this;
		}
		
		private void detach_Hazard_HiddenHazard_Sys_User_AcceptanceMan(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.AcceptanceMan = null;
		}
		
		private void attach_Hazard_HiddenHazard_Sys_User_AuditMan(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.AuditMan = this;
		}
		
		private void detach_Hazard_HiddenHazard_Sys_User_AuditMan(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.AuditMan = null;
		}
		
		private void attach_Hazard_HiddenHazard_Sys_User_FindMan(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.FindMan = this;
		}
		
		private void detach_Hazard_HiddenHazard_Sys_User_FindMan(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.FindMan = null;
		}
		
		private void attach_Hazard_HiddenHazard_Sys_User_QHSEAuditMan(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.QHSEAuditMan = this;
		}
		
		private void detach_Hazard_HiddenHazard_Sys_User_QHSEAuditMan(Hazard_HiddenHazard entity)
		{
			this.SendPropertyChanging();
			entity.QHSEAuditMan = null;
		}
		
		private void attach_Hazard_HiddenHazardDelay(Hazard_HiddenHazardDelay entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Hazard_HiddenHazardDelay(Hazard_HiddenHazardDelay entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Hazard_HiddenHazardDelay_Sys_User_InstallAuditMan(Hazard_HiddenHazardDelay entity)
		{
			this.SendPropertyChanging();
			entity.InstallAuditMan = this;
		}
		
		private void detach_Hazard_HiddenHazardDelay_Sys_User_InstallAuditMan(Hazard_HiddenHazardDelay entity)
		{
			this.SendPropertyChanging();
			entity.InstallAuditMan = null;
		}
		
		private void attach_Hazard_HiddenHazardDelay_Sys_User_LeaderMan(Hazard_HiddenHazardDelay entity)
		{
			this.SendPropertyChanging();
			entity.LeaderMan = this;
		}
		
		private void detach_Hazard_HiddenHazardDelay_Sys_User_LeaderMan(Hazard_HiddenHazardDelay entity)
		{
			this.SendPropertyChanging();
			entity.LeaderMan = null;
		}
		
		private void attach_Hazard_HiddenHazardDelay_Sys_User1(Hazard_HiddenHazardDelay entity)
		{
			this.SendPropertyChanging();
			entity.QHSEAuditMan = this;
		}
		
		private void detach_Hazard_HiddenHazardDelay_Sys_User1(Hazard_HiddenHazardDelay entity)
		{
			this.SendPropertyChanging();
			entity.QHSEAuditMan = null;
		}
		
		private void attach_Hazard_JHAItemRecord(Hazard_JHAItemRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Hazard_JHAItemRecord(Hazard_JHAItemRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Hazard_LECItemRecord(Hazard_LECItemRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Hazard_LECItemRecord(Hazard_LECItemRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Hazard_PatrolPlan(Hazard_PatrolPlan entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Hazard_PatrolPlan(Hazard_PatrolPlan entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Hazard_RiskList(Hazard_RiskList entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Hazard_RiskList(Hazard_RiskList entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Hazard_RiskListItem(Hazard_RiskListItem entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Hazard_RiskListItem(Hazard_RiskListItem entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Hazard_RoutingInspection(Hazard_RoutingInspection entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Hazard_RoutingInspection(Hazard_RoutingInspection entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Hazard_SCLItemRecord(Hazard_SCLItemRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Hazard_SCLItemRecord(Hazard_SCLItemRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_InformationProject_FileCabinetAItem(InformationProject_FileCabinetAItem entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_InformationProject_FileCabinetAItem(InformationProject_FileCabinetAItem entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_License_BlindPlate(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_License_BlindPlate(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_License_BlindPlate_Sys_User_AccProduceUnitMan(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.AccProduceUnitMan = this;
		}
		
		private void detach_License_BlindPlate_Sys_User_AccProduceUnitMan(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.AccProduceUnitMan = null;
		}
		
		private void attach_License_BlindPlate_Sys_User_ApplyMan(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.ApplyMan = this;
		}
		
		private void detach_License_BlindPlate_Sys_User_ApplyMan(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.ApplyMan = null;
		}
		
		private void attach_License_BlindPlate_Sys_User_CompileMan(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = this;
		}
		
		private void detach_License_BlindPlate_Sys_User_CompileMan(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = null;
		}
		
		private void attach_License_BlindPlate_Sys_User_CompileMan2(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan2 = this;
		}
		
		private void detach_License_BlindPlate_Sys_User_CompileMan2(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan2 = null;
		}
		
		private void attach_License_BlindPlate_Sys_User_MeasuresMan(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.MeasuresMan = this;
		}
		
		private void detach_License_BlindPlate_Sys_User_MeasuresMan(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.MeasuresMan = null;
		}
		
		private void attach_License_BlindPlate_Sys_User_OperationUnitMan(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.OperationUnitMan = this;
		}
		
		private void detach_License_BlindPlate_Sys_User_OperationUnitMan(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.OperationUnitMan = null;
		}
		
		private void attach_License_BlindPlate_Sys_User_OperatorHead(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.OperatorHead = this;
		}
		
		private void detach_License_BlindPlate_Sys_User_OperatorHead(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.OperatorHead = null;
		}
		
		private void attach_License_BlindPlate_Sys_User_ProduceUnitMan(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.ProduceUnitMan = this;
		}
		
		private void detach_License_BlindPlate_Sys_User_ProduceUnitMan(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.ProduceUnitMan = null;
		}
		
		private void attach_License_BlindPlate_Sys_User_ProductionDepMan(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.ProductionDepMan = this;
		}
		
		private void detach_License_BlindPlate_Sys_User_ProductionDepMan(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.ProductionDepMan = null;
		}
		
		private void attach_License_BlindPlate_Sys_User_SafeEduMan(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan = this;
		}
		
		private void detach_License_BlindPlate_Sys_User_SafeEduMan(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan = null;
		}
		
		private void attach_License_BlindPlate_Sys_User_SafeEduMan2(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan2 = this;
		}
		
		private void detach_License_BlindPlate_Sys_User_SafeEduMan2(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan2 = null;
		}
		
		private void attach_License_BlindPlate_Sys_User_UnitHead(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.UnitHead = this;
		}
		
		private void detach_License_BlindPlate_Sys_User_UnitHead(License_BlindPlate entity)
		{
			this.SendPropertyChanging();
			entity.UnitHead = null;
		}
		
		private void attach_License_BreakGround(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_License_BreakGround(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_License_BreakGround_Sys_User_ApplyMan(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.ApplyMan = this;
		}
		
		private void detach_License_BreakGround_Sys_User_ApplyMan(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.ApplyMan = null;
		}
		
		private void attach_License_BreakGround_Sys_User_ApplyMan1(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.ApplyMan1 = this;
		}
		
		private void detach_License_BreakGround_Sys_User_ApplyMan1(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.ApplyMan1 = null;
		}
		
		private void attach_License_BreakGround_Sys_User_ApplyUnitMan(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.ApplyUnitMan = this;
		}
		
		private void detach_License_BreakGround_Sys_User_ApplyUnitMan(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.ApplyUnitMan = null;
		}
		
		private void attach_License_BreakGround_Sys_User_ApprovalDepMan(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.ApprovalDepMan = this;
		}
		
		private void detach_License_BreakGround_Sys_User_ApprovalDepMan(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.ApprovalDepMan = null;
		}
		
		private void attach_License_BreakGround_Sys_User_CompileMan(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = this;
		}
		
		private void detach_License_BreakGround_Sys_User_CompileMan(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = null;
		}
		
		private void attach_License_BreakGround_Sys_User_CountersignMan(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.CountersignMan = this;
		}
		
		private void detach_License_BreakGround_Sys_User_CountersignMan(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.CountersignMan = null;
		}
		
		private void attach_License_BreakGround_Sys_User_JobUnitMan(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.JobUnitMan = this;
		}
		
		private void detach_License_BreakGround_Sys_User_JobUnitMan(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.JobUnitMan = null;
		}
		
		private void attach_License_BreakGround_Sys_User_MeasuresMan(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.MeasuresMan = this;
		}
		
		private void detach_License_BreakGround_Sys_User_MeasuresMan(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.MeasuresMan = null;
		}
		
		private void attach_License_BreakGround_Sys_User_SafeEduMan(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan = this;
		}
		
		private void detach_License_BreakGround_Sys_User_SafeEduMan(License_BreakGround entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan = null;
		}
		
		private void attach_License_Electricity(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_License_Electricity(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_License_Electricity_Sys_User_ApplicantMan(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicantMan = this;
		}
		
		private void detach_License_Electricity_Sys_User_ApplicantMan(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicantMan = null;
		}
		
		private void attach_License_Electricity_Sys_User_AuditDepMan(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.AuditDepMan = this;
		}
		
		private void detach_License_Electricity_Sys_User_AuditDepMan(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.AuditDepMan = null;
		}
		
		private void attach_License_Electricity_Sys_User_CompileMan(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = this;
		}
		
		private void detach_License_Electricity_Sys_User_CompileMan(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = null;
		}
		
		private void attach_License_Electricity_Sys_User_ElectricUnitMan(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.ElectricUnitMan = this;
		}
		
		private void detach_License_Electricity_Sys_User_ElectricUnitMan(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.ElectricUnitMan = null;
		}
		
		private void attach_License_Electricity_Sys_User_JobMan(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.JobMan = this;
		}
		
		private void detach_License_Electricity_Sys_User_JobMan(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.JobMan = null;
		}
		
		private void attach_License_Electricity_Sys_User_MeasuresMan(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.MeasuresMan = this;
		}
		
		private void detach_License_Electricity_Sys_User_MeasuresMan(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.MeasuresMan = null;
		}
		
		private void attach_License_Electricity_Sys_User_OperationUnitMan(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.OperationUnitMan = this;
		}
		
		private void detach_License_Electricity_Sys_User_OperationUnitMan(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.OperationUnitMan = null;
		}
		
		private void attach_License_Electricity_Sys_User_SafeEduMan(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan = this;
		}
		
		private void detach_License_Electricity_Sys_User_SafeEduMan(License_Electricity entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan = null;
		}
		
		private void attach_License_FireWork(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_License_FireWork(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_License_FireWork_Sys_User_AcceptanceMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.AcceptanceMan = this;
		}
		
		private void detach_License_FireWork_Sys_User_AcceptanceMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.AcceptanceMan = null;
		}
		
		private void attach_License_FireWork_Sys_User_AnalysisMan1(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.AnalysisMan1Sys_User = this;
		}
		
		private void detach_License_FireWork_Sys_User_AnalysisMan1(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.AnalysisMan1Sys_User = null;
		}
		
		private void attach_License_FireWork_Sys_User_ApplyUnitMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.ApplyUnitMan = this;
		}
		
		private void detach_License_FireWork_Sys_User_ApplyUnitMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.ApplyUnitMan = null;
		}
		
		private void attach_License_FireWork_Sys_User_FireApprovalMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.FireApprovalMan = this;
		}
		
		private void detach_License_FireWork_Sys_User_FireApprovalMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.FireApprovalMan = null;
		}
		
		private void attach_License_FireWork_Sys_User_FireFirstMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.FireFirstMan = this;
		}
		
		private void detach_License_FireWork_Sys_User_FireFirstMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.FireFirstMan = null;
		}
		
		private void attach_License_FireWork_Sys_User_InspectTicketMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.InspectTicketMan = this;
		}
		
		private void detach_License_FireWork_Sys_User_InspectTicketMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.InspectTicketMan = null;
		}
		
		private void attach_License_FireWork_Sys_User_MeasuresMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.MeasuresMan = this;
		}
		
		private void detach_License_FireWork_Sys_User_MeasuresMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.MeasuresMan = null;
		}
		
		private void attach_License_FireWork_Sys_User_ProduceUnitMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.ProduceUnitMan = this;
		}
		
		private void detach_License_FireWork_Sys_User_ProduceUnitMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.ProduceUnitMan = null;
		}
		
		private void attach_License_FireWork_Sys_User_SafeDepMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.SafeDepMan = this;
		}
		
		private void detach_License_FireWork_Sys_User_SafeDepMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.SafeDepMan = null;
		}
		
		private void attach_License_FireWork_Sys_User_SafeEduMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan = this;
		}
		
		private void detach_License_FireWork_Sys_User_SafeEduMan(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan = null;
		}
		
		private void attach_License_FireWork_Sys_User1(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.ApplyMan = this;
		}
		
		private void detach_License_FireWork_Sys_User1(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.ApplyMan = null;
		}
		
		private void attach_License_FireWork_Sys_User2(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = this;
		}
		
		private void detach_License_FireWork_Sys_User2(License_FireWork entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = null;
		}
		
		private void attach_License_FireWorkAnalysis(License_FireWorkAnalysis entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_License_FireWorkAnalysis(License_FireWorkAnalysis entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_License_HeightWork(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_License_HeightWork(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_License_HeightWork_Sys_User_ApplyMan(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.ApplyMan = this;
		}
		
		private void detach_License_HeightWork_Sys_User_ApplyMan(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.ApplyMan = null;
		}
		
		private void attach_License_HeightWork_Sys_User_ApplyUnitMan(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.ApplyUnitMan = this;
		}
		
		private void detach_License_HeightWork_Sys_User_ApplyUnitMan(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.ApplyUnitMan = null;
		}
		
		private void attach_License_HeightWork_Sys_User_ApproveDepMan(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.ApproveDepMan = this;
		}
		
		private void detach_License_HeightWork_Sys_User_ApproveDepMan(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.ApproveDepMan = null;
		}
		
		private void attach_License_HeightWork_Sys_User_AuditDepMan(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.AuditDepMan = this;
		}
		
		private void detach_License_HeightWork_Sys_User_AuditDepMan(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.AuditDepMan = null;
		}
		
		private void attach_License_HeightWork_Sys_User_CompileMan(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = this;
		}
		
		private void detach_License_HeightWork_Sys_User_CompileMan(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = null;
		}
		
		private void attach_License_HeightWork_Sys_User_MeasuresMan(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.MeasuresMan = this;
		}
		
		private void detach_License_HeightWork_Sys_User_MeasuresMan(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.MeasuresMan = null;
		}
		
		private void attach_License_HeightWork_Sys_User_OperationUnitMan(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.OperationUnitMan = this;
		}
		
		private void detach_License_HeightWork_Sys_User_OperationUnitMan(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.OperationUnitMan = null;
		}
		
		private void attach_License_HeightWork_Sys_User_SafeEduMan(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan = this;
		}
		
		private void detach_License_HeightWork_Sys_User_SafeEduMan(License_HeightWork entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan = null;
		}
		
		private void attach_License_Interlocking(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_License_Interlocking(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_License_Interlocking_Sys_User_ChiefEngineerMan(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.ChiefEngineerMan = this;
		}
		
		private void detach_License_Interlocking_Sys_User_ChiefEngineerMan(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.ChiefEngineerMan = null;
		}
		
		private void attach_License_Interlocking_Sys_User_EquipmentMan(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.EquipmentMan = this;
		}
		
		private void detach_License_Interlocking_Sys_User_EquipmentMan(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.EquipmentMan = null;
		}
		
		private void attach_License_Interlocking_Sys_User_InstallationMan(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.InstallationMan = this;
		}
		
		private void detach_License_Interlocking_Sys_User_InstallationMan(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.InstallationMan = null;
		}
		
		private void attach_License_Interlocking_Sys_User_ProductionMan(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.ProductionMan = this;
		}
		
		private void detach_License_Interlocking_Sys_User_ProductionMan(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.ProductionMan = null;
		}
		
		private void attach_License_Interlocking_Sys_User_UnitHead(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.UnitHead = this;
		}
		
		private void detach_License_Interlocking_Sys_User_UnitHead(License_Interlocking entity)
		{
			this.SendPropertyChanging();
			entity.UnitHead = null;
		}
		
		private void attach_License_LiftingWork(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_License_LiftingWork(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_License_LiftingWork_Sys_User_ApprovalDepManId(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.ApprovalDepMan = this;
		}
		
		private void detach_License_LiftingWork_Sys_User_ApprovalDepManId(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.ApprovalDepMan = null;
		}
		
		private void attach_License_LiftingWork_Sys_User_CompileManId(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = this;
		}
		
		private void detach_License_LiftingWork_Sys_User_CompileManId(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = null;
		}
		
		private void attach_License_LiftingWork_Sys_User_JobDepManId(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.JobDepMan = this;
		}
		
		private void detach_License_LiftingWork_Sys_User_JobDepManId(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.JobDepMan = null;
		}
		
		private void attach_License_LiftingWork_Sys_User_JobUnitManId(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.JobUnitMan = this;
		}
		
		private void detach_License_LiftingWork_Sys_User_JobUnitManId(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.JobUnitMan = null;
		}
		
		private void attach_License_LiftingWork_Sys_User_MeasuresManId(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.MeasuresMan = this;
		}
		
		private void detach_License_LiftingWork_Sys_User_MeasuresManId(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.MeasuresMan = null;
		}
		
		private void attach_License_LiftingWork_Sys_User_ProduceDepManId(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.ProduceDepMan = this;
		}
		
		private void detach_License_LiftingWork_Sys_User_ProduceDepManId(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.ProduceDepMan = null;
		}
		
		private void attach_License_LiftingWork_Sys_User_ProduceUnitManId(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.ProduceUnitMan = this;
		}
		
		private void detach_License_LiftingWork_Sys_User_ProduceUnitManId(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.ProduceUnitMan = null;
		}
		
		private void attach_License_LiftingWork_Sys_User_SafeEduManId(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan = this;
		}
		
		private void detach_License_LiftingWork_Sys_User_SafeEduManId(License_LiftingWork entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan = null;
		}
		
		private void attach_License_LimitedSpace(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_License_LimitedSpace(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_License_LimitedSpace_Sys_User_AcceptanceMan(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.AcceptanceOperationMan = this;
		}
		
		private void detach_License_LimitedSpace_Sys_User_AcceptanceMan(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.AcceptanceOperationMan = null;
		}
		
		private void attach_License_LimitedSpace_Sys_User_ApplyUnitMan(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.ApplyUnitMan = this;
		}
		
		private void detach_License_LimitedSpace_Sys_User_ApplyUnitMan(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.ApplyUnitMan = null;
		}
		
		private void attach_License_LimitedSpace_Sys_User_ApproveUnitMan(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.ApproveUnitMan = this;
		}
		
		private void detach_License_LimitedSpace_Sys_User_ApproveUnitMan(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.ApproveUnitMan = null;
		}
		
		private void attach_License_LimitedSpace_Sys_User_CompileMan(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = this;
		}
		
		private void detach_License_LimitedSpace_Sys_User_CompileMan(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = null;
		}
		
		private void attach_License_LimitedSpace_Sys_User_JobManager(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.JobManager = this;
		}
		
		private void detach_License_LimitedSpace_Sys_User_JobManager(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.JobManager = null;
		}
		
		private void attach_License_LimitedSpace_Sys_User_MeasuresMan(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.MeasuresMan = this;
		}
		
		private void detach_License_LimitedSpace_Sys_User_MeasuresMan(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.MeasuresMan = null;
		}
		
		private void attach_License_LimitedSpace_Sys_User_SafeEduMan(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan = this;
		}
		
		private void detach_License_LimitedSpace_Sys_User_SafeEduMan(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan = null;
		}
		
		private void attach_License_LimitedSpace_Sys_User1(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.AnalysisMan = this;
		}
		
		private void detach_License_LimitedSpace_Sys_User1(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.AnalysisMan = null;
		}
		
		private void attach_License_LimitedSpace_Sys_User2(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.AcceptanceJobMan = this;
		}
		
		private void detach_License_LimitedSpace_Sys_User2(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.AcceptanceJobMan = null;
		}
		
		private void attach_License_LimitedSpace_Sys_User3(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.License_LimitedSpace_Sys_User3 = this;
		}
		
		private void detach_License_LimitedSpace_Sys_User3(License_LimitedSpace entity)
		{
			this.SendPropertyChanging();
			entity.License_LimitedSpace_Sys_User3 = null;
		}
		
		private void attach_License_LimitedSpaceAnalysis(License_LimitedSpaceAnalysis entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_License_LimitedSpaceAnalysis(License_LimitedSpaceAnalysis entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_License_OpenCircuit(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_License_OpenCircuit(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_License_OpenCircuit_Sys_User_AcceptanceMan(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.AcceptanceMan = this;
		}
		
		private void detach_License_OpenCircuit_Sys_User_AcceptanceMan(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.AcceptanceMan = null;
		}
		
		private void attach_License_OpenCircuit_Sys_User_ApplyMan1(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.ApplyMan1 = this;
		}
		
		private void detach_License_OpenCircuit_Sys_User_ApplyMan1(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.ApplyMan1 = null;
		}
		
		private void attach_License_OpenCircuit_Sys_User_ApplyUnitMan(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.ApplyUnitMan = this;
		}
		
		private void detach_License_OpenCircuit_Sys_User_ApplyUnitMan(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.ApplyUnitMan = null;
		}
		
		private void attach_License_OpenCircuit_Sys_User_ApprovalDepMan(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.ApprovalDepMan = this;
		}
		
		private void detach_License_OpenCircuit_Sys_User_ApprovalDepMan(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.ApprovalDepMan = null;
		}
		
		private void attach_License_OpenCircuit_Sys_User_ApproveUnitMan(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.JobUnitMan = this;
		}
		
		private void detach_License_OpenCircuit_Sys_User_ApproveUnitMan(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.JobUnitMan = null;
		}
		
		private void attach_License_OpenCircuit_Sys_User_CompileMan(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = this;
		}
		
		private void detach_License_OpenCircuit_Sys_User_CompileMan(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = null;
		}
		
		private void attach_License_OpenCircuit_Sys_User_JobManager(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.JobManager = this;
		}
		
		private void detach_License_OpenCircuit_Sys_User_JobManager(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.JobManager = null;
		}
		
		private void attach_License_OpenCircuit_Sys_User_MeasuresMan(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.MeasuresMan = this;
		}
		
		private void detach_License_OpenCircuit_Sys_User_MeasuresMan(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.MeasuresMan = null;
		}
		
		private void attach_License_OpenCircuit_Sys_User_SafeEduMan(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan = this;
		}
		
		private void detach_License_OpenCircuit_Sys_User_SafeEduMan(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.SafeEduMan = null;
		}
		
		private void attach_License_OpenCircuit_Sys_User2(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.CountersignMan = this;
		}
		
		private void detach_License_OpenCircuit_Sys_User2(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.CountersignMan = null;
		}
		
		private void attach_License_OpenCircuit_Sys_User3(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.License_OpenCircuit_Sys_User3 = this;
		}
		
		private void detach_License_OpenCircuit_Sys_User3(License_OpenCircuit entity)
		{
			this.SendPropertyChanging();
			entity.License_OpenCircuit_Sys_User3 = null;
		}
		
		private void attach_License_Overhaul(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_License_Overhaul(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_License_Overhaul_Sys_User_CheckOverhaulHead(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.CheckOverhaulHead = this;
		}
		
		private void detach_License_Overhaul_Sys_User_CheckOverhaulHead(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.CheckOverhaulHead = null;
		}
		
		private void attach_License_Overhaul_Sys_User_CheckProcessMonitor(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.CheckProcessMonitor = this;
		}
		
		private void detach_License_Overhaul_Sys_User_CheckProcessMonitor(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.CheckProcessMonitor = null;
		}
		
		private void attach_License_Overhaul_Sys_User_CompileMan(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = this;
		}
		
		private void detach_License_Overhaul_Sys_User_CompileMan(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.CompileMan = null;
		}
		
		private void attach_License_Overhaul_Sys_User_OverhaulHead(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.OverhaulHead = this;
		}
		
		private void detach_License_Overhaul_Sys_User_OverhaulHead(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.OverhaulHead = null;
		}
		
		private void attach_License_Overhaul_Sys_User_ProcessMan(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.ProcessMan = this;
		}
		
		private void detach_License_Overhaul_Sys_User_ProcessMan(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.ProcessMan = null;
		}
		
		private void attach_License_Overhaul_Sys_User_ProcessMonitor(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.ProcessMonitor = this;
		}
		
		private void detach_License_Overhaul_Sys_User_ProcessMonitor(License_Overhaul entity)
		{
			this.SendPropertyChanging();
			entity.ProcessMonitor = null;
		}
		
		private void attach_Lock_SmartLockItem(Lock_SmartLockItem entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Lock_SmartLockItem(Lock_SmartLockItem entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Lock_SmartLockItem_Sys_User2(Lock_SmartLockItem entity)
		{
			this.SendPropertyChanging();
			entity.AuditMan = this;
		}
		
		private void detach_Lock_SmartLockItem_Sys_User2(Lock_SmartLockItem entity)
		{
			this.SendPropertyChanging();
			entity.AuditMan = null;
		}
		
		private void attach_Personal_PersonalFolder(Personal_PersonalFolder entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Personal_PersonalFolder(Personal_PersonalFolder entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_QualityAudit_EquipmentQuality(QualityAudit_EquipmentQuality entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_QualityAudit_EquipmentQuality(QualityAudit_EquipmentQuality entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_QualityAudit_PersonQuality_Sys_User1(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_QualityAudit_PersonQuality_Sys_User1(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Sys_Entrust(Sys_Entrust entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Sys_Entrust(Sys_Entrust entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Sys_Entrust_Sys_User_RecipientMan(Sys_Entrust entity)
		{
			this.SendPropertyChanging();
			entity.RecipientMan = this;
		}
		
		private void detach_Sys_Entrust_Sys_User_RecipientMan(Sys_Entrust entity)
		{
			this.SendPropertyChanging();
			entity.RecipientMan = null;
		}
		
		private void attach_Sys_Log(Sys_Log entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Sys_Log(Sys_Log entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Sys_PushRecord(Sys_PushRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Sys_PushRecord(Sys_PushRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Sys_PushRecord_Sys_User1(Sys_PushRecord entity)
		{
			this.SendPropertyChanging();
			entity.ReceiveMan = this;
		}
		
		private void detach_Sys_PushRecord_Sys_User1(Sys_PushRecord entity)
		{
			this.SendPropertyChanging();
			entity.ReceiveMan = null;
		}
		
		private void attach_Sys_PushRecord_Sys_User2(Sys_PushRecord entity)
		{
			this.SendPropertyChanging();
			entity.RecipientMan = this;
		}
		
		private void detach_Sys_PushRecord_Sys_User2(Sys_PushRecord entity)
		{
			this.SendPropertyChanging();
			entity.RecipientMan = null;
		}
		
		private void attach_Sys_UserDealInstallation(Sys_UserDealInstallation entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Sys_UserDealInstallation(Sys_UserDealInstallation entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Sys_UserDuty(Sys_UserDuty entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Sys_UserDuty(Sys_UserDuty entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Sys_UserEntryRecord(Sys_UserEntryRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Sys_UserEntryRecord(Sys_UserEntryRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Sys_UserSchedule(Sys_UserSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Sys_UserSchedule(Sys_UserSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Training_ModelTestRecord(Training_ModelTestRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Training_ModelTestRecord(Training_ModelTestRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Training_Plan(Training_Plan entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Training_Plan(Training_Plan entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Training_Task(Training_Task entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Training_Task(Training_Task entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Training_TestPlan(Training_TestPlan entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Training_TestPlan(Training_TestPlan entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Training_TestPlanTime(Training_TestPlanTime entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Training_TestPlanTime(Training_TestPlanTime entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Training_TestRecord(Training_TestRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Training_TestRecord(Training_TestRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Training_TrainRecordDetail(Training_TrainRecordDetail entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Training_TrainRecordDetail(Training_TrainRecordDetail entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_UserDealInstallation")]
	public partial class Sys_UserDealInstallation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserDealInstallationId;
		
		private string _UserId;
		
		private string _InstallationId;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserDealInstallationIdChanging(string value);
    partial void OnUserDealInstallationIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    #endregion
		
		public Sys_UserDealInstallation()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDealInstallationId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserDealInstallationId
		{
			get
			{
				return this._UserDealInstallationId;
			}
			set
			{
				if ((this._UserDealInstallationId != value))
				{
					this.OnUserDealInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._UserDealInstallationId = value;
					this.SendPropertyChanged("UserDealInstallationId");
					this.OnUserDealInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserDealInstallation_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.Sys_UserDealInstallation.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.Sys_UserDealInstallation.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserDealInstallation_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Sys_UserDealInstallation.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Sys_UserDealInstallation.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_UserDuty")]
	public partial class Sys_UserDuty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserDutyId;
		
		private string _UserId;
		
		private string _DutyPalce;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserDutyIdChanging(string value);
    partial void OnUserDutyIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnDutyPalceChanging(string value);
    partial void OnDutyPalceChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    #endregion
		
		public Sys_UserDuty()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDutyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserDutyId
		{
			get
			{
				return this._UserDutyId;
			}
			set
			{
				if ((this._UserDutyId != value))
				{
					this.OnUserDutyIdChanging(value);
					this.SendPropertyChanging();
					this._UserDutyId = value;
					this.SendPropertyChanged("UserDutyId");
					this.OnUserDutyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DutyPalce", DbType="NVarChar(50)")]
		public string DutyPalce
		{
			get
			{
				return this._DutyPalce;
			}
			set
			{
				if ((this._DutyPalce != value))
				{
					this.OnDutyPalceChanging(value);
					this.SendPropertyChanging();
					this._DutyPalce = value;
					this.SendPropertyChanged("DutyPalce");
					this.OnDutyPalceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserDuty_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Sys_UserDuty.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Sys_UserDuty.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_UserEntryRecord")]
	public partial class Sys_UserEntryRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EntryRecordId;
		
		private string _UserId;
		
		private string _InstallationId;
		
		private string _Place;
		
		private string _IntoOut;
		
		private System.Nullable<System.DateTime> _IntoOutTime;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntryRecordIdChanging(string value);
    partial void OnEntryRecordIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnInstallationIdChanging(string value);
    partial void OnInstallationIdChanged();
    partial void OnPlaceChanging(string value);
    partial void OnPlaceChanged();
    partial void OnIntoOutChanging(string value);
    partial void OnIntoOutChanged();
    partial void OnIntoOutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnIntoOutTimeChanged();
    #endregion
		
		public Sys_UserEntryRecord()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryRecordId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EntryRecordId
		{
			get
			{
				return this._EntryRecordId;
			}
			set
			{
				if ((this._EntryRecordId != value))
				{
					this.OnEntryRecordIdChanging(value);
					this.SendPropertyChanging();
					this._EntryRecordId = value;
					this.SendPropertyChanged("EntryRecordId");
					this.OnEntryRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place", DbType="NVarChar(500)")]
		public string Place
		{
			get
			{
				return this._Place;
			}
			set
			{
				if ((this._Place != value))
				{
					this.OnPlaceChanging(value);
					this.SendPropertyChanging();
					this._Place = value;
					this.SendPropertyChanged("Place");
					this.OnPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntoOut", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string IntoOut
		{
			get
			{
				return this._IntoOut;
			}
			set
			{
				if ((this._IntoOut != value))
				{
					this.OnIntoOutChanging(value);
					this.SendPropertyChanging();
					this._IntoOut = value;
					this.SendPropertyChanged("IntoOut");
					this.OnIntoOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntoOutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> IntoOutTime
		{
			get
			{
				return this._IntoOutTime;
			}
			set
			{
				if ((this._IntoOutTime != value))
				{
					this.OnIntoOutTimeChanging(value);
					this.SendPropertyChanging();
					this._IntoOutTime = value;
					this.SendPropertyChanged("IntoOutTime");
					this.OnIntoOutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserEntryRecord_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.Sys_UserEntryRecord.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.Sys_UserEntryRecord.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(string);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserEntryRecord_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Sys_UserEntryRecord.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Sys_UserEntryRecord.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_UserSchedule")]
	public partial class Sys_UserSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserScheduleId;
		
		private string _UserId;
		
		private string _MenuId;
		
		private string _DataId;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserScheduleIdChanging(string value);
    partial void OnUserScheduleIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnDataIdChanging(string value);
    partial void OnDataIdChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    #endregion
		
		public Sys_UserSchedule()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserScheduleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserScheduleId
		{
			get
			{
				return this._UserScheduleId;
			}
			set
			{
				if ((this._UserScheduleId != value))
				{
					this.OnUserScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._UserScheduleId = value;
					this.SendPropertyChanged("UserScheduleId");
					this.OnUserScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataId", DbType="NVarChar(50)")]
		public string DataId
		{
			get
			{
				return this._DataId;
			}
			set
			{
				if ((this._DataId != value))
				{
					this.OnDataIdChanging(value);
					this.SendPropertyChanging();
					this._DataId = value;
					this.SendPropertyChanged("DataId");
					this.OnDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserSchedule_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Sys_UserSchedule.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Sys_UserSchedule.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Version")]
	public partial class Sys_Version : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _VersionId;
		
		private string _VersionName;
		
		private System.Nullable<System.DateTime> _VersionDate;
		
		private string _CompileMan;
		
		private string _AttachUrl;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVersionIdChanging(string value);
    partial void OnVersionIdChanged();
    partial void OnVersionNameChanging(string value);
    partial void OnVersionNameChanged();
    partial void OnVersionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVersionDateChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    #endregion
		
		public Sys_Version()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string VersionId
		{
			get
			{
				return this._VersionId;
			}
			set
			{
				if ((this._VersionId != value))
				{
					this.OnVersionIdChanging(value);
					this.SendPropertyChanging();
					this._VersionId = value;
					this.SendPropertyChanged("VersionId");
					this.OnVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionName", DbType="NVarChar(100)")]
		public string VersionName
		{
			get
			{
				return this._VersionName;
			}
			set
			{
				if ((this._VersionName != value))
				{
					this.OnVersionNameChanging(value);
					this.SendPropertyChanging();
					this._VersionName = value;
					this.SendPropertyChanged("VersionName");
					this.OnVersionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VersionDate
		{
			get
			{
				return this._VersionDate;
			}
			set
			{
				if ((this._VersionDate != value))
				{
					this.OnVersionDateChanging(value);
					this.SendPropertyChanging();
					this._VersionDate = value;
					this.SendPropertyChanged("VersionDate");
					this.OnVersionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(200)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technique_Appraise")]
	public partial class Technique_Appraise : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AppraiseId;
		
		private string _AppraiseCode;
		
		private string _AppraiseTitle;
		
		private System.Nullable<System.DateTime> _AppraiseDate;
		
		private string _ArrangementPerson;
		
		private System.Nullable<System.DateTime> _ArrangementDate;
		
		private string _AttachUrl;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _Summary;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppraiseIdChanging(string value);
    partial void OnAppraiseIdChanged();
    partial void OnAppraiseCodeChanging(string value);
    partial void OnAppraiseCodeChanged();
    partial void OnAppraiseTitleChanging(string value);
    partial void OnAppraiseTitleChanged();
    partial void OnAppraiseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAppraiseDateChanged();
    partial void OnArrangementPersonChanging(string value);
    partial void OnArrangementPersonChanged();
    partial void OnArrangementDateChanging(System.Nullable<System.DateTime> value);
    partial void OnArrangementDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Technique_Appraise()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppraiseId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AppraiseId
		{
			get
			{
				return this._AppraiseId;
			}
			set
			{
				if ((this._AppraiseId != value))
				{
					this.OnAppraiseIdChanging(value);
					this.SendPropertyChanging();
					this._AppraiseId = value;
					this.SendPropertyChanged("AppraiseId");
					this.OnAppraiseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppraiseCode", DbType="NVarChar(50)")]
		public string AppraiseCode
		{
			get
			{
				return this._AppraiseCode;
			}
			set
			{
				if ((this._AppraiseCode != value))
				{
					this.OnAppraiseCodeChanging(value);
					this.SendPropertyChanging();
					this._AppraiseCode = value;
					this.SendPropertyChanged("AppraiseCode");
					this.OnAppraiseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppraiseTitle", DbType="NVarChar(500)")]
		public string AppraiseTitle
		{
			get
			{
				return this._AppraiseTitle;
			}
			set
			{
				if ((this._AppraiseTitle != value))
				{
					this.OnAppraiseTitleChanging(value);
					this.SendPropertyChanging();
					this._AppraiseTitle = value;
					this.SendPropertyChanged("AppraiseTitle");
					this.OnAppraiseTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppraiseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AppraiseDate
		{
			get
			{
				return this._AppraiseDate;
			}
			set
			{
				if ((this._AppraiseDate != value))
				{
					this.OnAppraiseDateChanging(value);
					this.SendPropertyChanging();
					this._AppraiseDate = value;
					this.SendPropertyChanged("AppraiseDate");
					this.OnAppraiseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrangementPerson", DbType="NVarChar(50)")]
		public string ArrangementPerson
		{
			get
			{
				return this._ArrangementPerson;
			}
			set
			{
				if ((this._ArrangementPerson != value))
				{
					this.OnArrangementPersonChanging(value);
					this.SendPropertyChanging();
					this._ArrangementPerson = value;
					this.SendPropertyChanged("ArrangementPerson");
					this.OnArrangementPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrangementDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ArrangementDate
		{
			get
			{
				return this._ArrangementDate;
			}
			set
			{
				if ((this._ArrangementDate != value))
				{
					this.OnArrangementDateChanging(value);
					this.SendPropertyChanging();
					this._ArrangementDate = value;
					this.SendPropertyChanged("ArrangementDate");
					this.OnArrangementDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(1000)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technique_CheckItemDetail")]
	public partial class Technique_CheckItemDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CheckItemDetailId;
		
		private string _CheckItemSetId;
		
		private string _CheckContent;
		
		private System.Nullable<int> _SortIndex;
		
		private EntityRef<Technique_CheckItemSet> _Technique_CheckItemSet;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckItemDetailIdChanging(string value);
    partial void OnCheckItemDetailIdChanged();
    partial void OnCheckItemSetIdChanging(string value);
    partial void OnCheckItemSetIdChanged();
    partial void OnCheckContentChanging(string value);
    partial void OnCheckContentChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    #endregion
		
		public Technique_CheckItemDetail()
		{
			this._Technique_CheckItemSet = default(EntityRef<Technique_CheckItemSet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckItemDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CheckItemDetailId
		{
			get
			{
				return this._CheckItemDetailId;
			}
			set
			{
				if ((this._CheckItemDetailId != value))
				{
					this.OnCheckItemDetailIdChanging(value);
					this.SendPropertyChanging();
					this._CheckItemDetailId = value;
					this.SendPropertyChanged("CheckItemDetailId");
					this.OnCheckItemDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckItemSetId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CheckItemSetId
		{
			get
			{
				return this._CheckItemSetId;
			}
			set
			{
				if ((this._CheckItemSetId != value))
				{
					if (this._Technique_CheckItemSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckItemSetIdChanging(value);
					this.SendPropertyChanging();
					this._CheckItemSetId = value;
					this.SendPropertyChanged("CheckItemSetId");
					this.OnCheckItemSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckContent", DbType="NVarChar(300)")]
		public string CheckContent
		{
			get
			{
				return this._CheckContent;
			}
			set
			{
				if ((this._CheckContent != value))
				{
					this.OnCheckContentChanging(value);
					this.SendPropertyChanging();
					this._CheckContent = value;
					this.SendPropertyChanged("CheckContent");
					this.OnCheckContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_CheckItemDetail_Technique_CheckItemSet", Storage="_Technique_CheckItemSet", ThisKey="CheckItemSetId", OtherKey="CheckItemSetId", IsForeignKey=true)]
		public Technique_CheckItemSet Technique_CheckItemSet
		{
			get
			{
				return this._Technique_CheckItemSet.Entity;
			}
			set
			{
				Technique_CheckItemSet previousValue = this._Technique_CheckItemSet.Entity;
				if (((previousValue != value) 
							|| (this._Technique_CheckItemSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Technique_CheckItemSet.Entity = null;
						previousValue.Technique_CheckItemDetail.Remove(this);
					}
					this._Technique_CheckItemSet.Entity = value;
					if ((value != null))
					{
						value.Technique_CheckItemDetail.Add(this);
						this._CheckItemSetId = value.CheckItemSetId;
					}
					else
					{
						this._CheckItemSetId = default(string);
					}
					this.SendPropertyChanged("Technique_CheckItemSet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technique_CheckItemSet")]
	public partial class Technique_CheckItemSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CheckItemSetId;
		
		private string _CheckItemName;
		
		private string _SupCheckItem;
		
		private string _CheckType;
		
		private string _MapCode;
		
		private System.Nullable<bool> _IsEndLever;
		
		private System.Nullable<int> _SortIndex;
		
		private EntitySet<Technique_CheckItemDetail> _Technique_CheckItemDetail;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckItemSetIdChanging(string value);
    partial void OnCheckItemSetIdChanged();
    partial void OnCheckItemNameChanging(string value);
    partial void OnCheckItemNameChanged();
    partial void OnSupCheckItemChanging(string value);
    partial void OnSupCheckItemChanged();
    partial void OnCheckTypeChanging(string value);
    partial void OnCheckTypeChanged();
    partial void OnMapCodeChanging(string value);
    partial void OnMapCodeChanged();
    partial void OnIsEndLeverChanging(System.Nullable<bool> value);
    partial void OnIsEndLeverChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    #endregion
		
		public Technique_CheckItemSet()
		{
			this._Technique_CheckItemDetail = new EntitySet<Technique_CheckItemDetail>(new Action<Technique_CheckItemDetail>(this.attach_Technique_CheckItemDetail), new Action<Technique_CheckItemDetail>(this.detach_Technique_CheckItemDetail));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckItemSetId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CheckItemSetId
		{
			get
			{
				return this._CheckItemSetId;
			}
			set
			{
				if ((this._CheckItemSetId != value))
				{
					this.OnCheckItemSetIdChanging(value);
					this.SendPropertyChanging();
					this._CheckItemSetId = value;
					this.SendPropertyChanged("CheckItemSetId");
					this.OnCheckItemSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckItemName", DbType="NVarChar(200)")]
		public string CheckItemName
		{
			get
			{
				return this._CheckItemName;
			}
			set
			{
				if ((this._CheckItemName != value))
				{
					this.OnCheckItemNameChanging(value);
					this.SendPropertyChanging();
					this._CheckItemName = value;
					this.SendPropertyChanged("CheckItemName");
					this.OnCheckItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupCheckItem", DbType="NVarChar(50)")]
		public string SupCheckItem
		{
			get
			{
				return this._SupCheckItem;
			}
			set
			{
				if ((this._SupCheckItem != value))
				{
					this.OnSupCheckItemChanging(value);
					this.SendPropertyChanging();
					this._SupCheckItem = value;
					this.SendPropertyChanged("SupCheckItem");
					this.OnSupCheckItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckType", DbType="Char(1)")]
		public string CheckType
		{
			get
			{
				return this._CheckType;
			}
			set
			{
				if ((this._CheckType != value))
				{
					this.OnCheckTypeChanging(value);
					this.SendPropertyChanging();
					this._CheckType = value;
					this.SendPropertyChanged("CheckType");
					this.OnCheckTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapCode", DbType="Char(2)")]
		public string MapCode
		{
			get
			{
				return this._MapCode;
			}
			set
			{
				if ((this._MapCode != value))
				{
					this.OnMapCodeChanging(value);
					this.SendPropertyChanging();
					this._MapCode = value;
					this.SendPropertyChanged("MapCode");
					this.OnMapCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEndLever", DbType="Bit")]
		public System.Nullable<bool> IsEndLever
		{
			get
			{
				return this._IsEndLever;
			}
			set
			{
				if ((this._IsEndLever != value))
				{
					this.OnIsEndLeverChanging(value);
					this.SendPropertyChanging();
					this._IsEndLever = value;
					this.SendPropertyChanged("IsEndLever");
					this.OnIsEndLeverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_CheckItemDetail_Technique_CheckItemSet", Storage="_Technique_CheckItemDetail", ThisKey="CheckItemSetId", OtherKey="CheckItemSetId", DeleteRule="NO ACTION")]
		public EntitySet<Technique_CheckItemDetail> Technique_CheckItemDetail
		{
			get
			{
				return this._Technique_CheckItemDetail;
			}
			set
			{
				this._Technique_CheckItemDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Technique_CheckItemDetail(Technique_CheckItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.Technique_CheckItemSet = this;
		}
		
		private void detach_Technique_CheckItemDetail(Technique_CheckItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.Technique_CheckItemSet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technique_Emergency")]
	public partial class Technique_Emergency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmergencyId;
		
		private string _EmergencyTypeId;
		
		private string _EmergencyCode;
		
		private string _EmergencyName;
		
		private string _Summary;
		
		private string _AttachUrl;
		
		private string _Remark;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private EntityRef<Base_EmergencyType> _Base_EmergencyType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmergencyIdChanging(string value);
    partial void OnEmergencyIdChanged();
    partial void OnEmergencyTypeIdChanging(string value);
    partial void OnEmergencyTypeIdChanged();
    partial void OnEmergencyCodeChanging(string value);
    partial void OnEmergencyCodeChanged();
    partial void OnEmergencyNameChanging(string value);
    partial void OnEmergencyNameChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    #endregion
		
		public Technique_Emergency()
		{
			this._Base_EmergencyType = default(EntityRef<Base_EmergencyType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmergencyId
		{
			get
			{
				return this._EmergencyId;
			}
			set
			{
				if ((this._EmergencyId != value))
				{
					this.OnEmergencyIdChanging(value);
					this.SendPropertyChanging();
					this._EmergencyId = value;
					this.SendPropertyChanged("EmergencyId");
					this.OnEmergencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyTypeId", DbType="NVarChar(50)")]
		public string EmergencyTypeId
		{
			get
			{
				return this._EmergencyTypeId;
			}
			set
			{
				if ((this._EmergencyTypeId != value))
				{
					if (this._Base_EmergencyType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmergencyTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EmergencyTypeId = value;
					this.SendPropertyChanged("EmergencyTypeId");
					this.OnEmergencyTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyCode", DbType="NVarChar(50)")]
		public string EmergencyCode
		{
			get
			{
				return this._EmergencyCode;
			}
			set
			{
				if ((this._EmergencyCode != value))
				{
					this.OnEmergencyCodeChanging(value);
					this.SendPropertyChanging();
					this._EmergencyCode = value;
					this.SendPropertyChanged("EmergencyCode");
					this.OnEmergencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyName", DbType="NVarChar(100)")]
		public string EmergencyName
		{
			get
			{
				return this._EmergencyName;
			}
			set
			{
				if ((this._EmergencyName != value))
				{
					this.OnEmergencyNameChanging(value);
					this.SendPropertyChanging();
					this._EmergencyName = value;
					this.SendPropertyChanged("EmergencyName");
					this.OnEmergencyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(2000)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(2000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_Emergency_Base_EmergencyType", Storage="_Base_EmergencyType", ThisKey="EmergencyTypeId", OtherKey="EmergencyTypeId", IsForeignKey=true)]
		public Base_EmergencyType Base_EmergencyType
		{
			get
			{
				return this._Base_EmergencyType.Entity;
			}
			set
			{
				Base_EmergencyType previousValue = this._Base_EmergencyType.Entity;
				if (((previousValue != value) 
							|| (this._Base_EmergencyType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_EmergencyType.Entity = null;
						previousValue.Technique_Emergency.Remove(this);
					}
					this._Base_EmergencyType.Entity = value;
					if ((value != null))
					{
						value.Technique_Emergency.Add(this);
						this._EmergencyTypeId = value.EmergencyTypeId;
					}
					else
					{
						this._EmergencyTypeId = default(string);
					}
					this.SendPropertyChanged("Base_EmergencyType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technique_HAZOP")]
	public partial class Technique_HAZOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HAZOPId;
		
		private string _UnitId;
		
		private System.Nullable<System.DateTime> _HAZOPDate;
		
		private string _AttachUrl;
		
		private string _HAZOPTitle;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _Summary;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHAZOPIdChanging(string value);
    partial void OnHAZOPIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnHAZOPDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHAZOPDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnHAZOPTitleChanging(string value);
    partial void OnHAZOPTitleChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Technique_HAZOP()
		{
			this._Base_Unit = default(EntityRef<Base_Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZOPId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HAZOPId
		{
			get
			{
				return this._HAZOPId;
			}
			set
			{
				if ((this._HAZOPId != value))
				{
					this.OnHAZOPIdChanging(value);
					this.SendPropertyChanging();
					this._HAZOPId = value;
					this.SendPropertyChanged("HAZOPId");
					this.OnHAZOPIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZOPDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HAZOPDate
		{
			get
			{
				return this._HAZOPDate;
			}
			set
			{
				if ((this._HAZOPDate != value))
				{
					this.OnHAZOPDateChanging(value);
					this.SendPropertyChanging();
					this._HAZOPDate = value;
					this.SendPropertyChanged("HAZOPDate");
					this.OnHAZOPDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZOPTitle", DbType="NVarChar(200)")]
		public string HAZOPTitle
		{
			get
			{
				return this._HAZOPTitle;
			}
			set
			{
				if ((this._HAZOPTitle != value))
				{
					this.OnHAZOPTitleChanging(value);
					this.SendPropertyChanging();
					this._HAZOPTitle = value;
					this.SendPropertyChanged("HAZOPTitle");
					this.OnHAZOPTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(1000)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_HAZOP_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Technique_HAZOP.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Technique_HAZOP.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technique_SpecialScheme")]
	public partial class Technique_SpecialScheme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SpecialSchemeId;
		
		private string _SpecialSchemeTypeId;
		
		private string _SpecialSchemeCode;
		
		private string _SpecialSchemeName;
		
		private string _UnitId;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AttachUrl;
		
		private string _Summary;
		
		private EntityRef<Base_SpecialSchemeType> _Base_SpecialSchemeType;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecialSchemeIdChanging(string value);
    partial void OnSpecialSchemeIdChanged();
    partial void OnSpecialSchemeTypeIdChanging(string value);
    partial void OnSpecialSchemeTypeIdChanged();
    partial void OnSpecialSchemeCodeChanging(string value);
    partial void OnSpecialSchemeCodeChanged();
    partial void OnSpecialSchemeNameChanging(string value);
    partial void OnSpecialSchemeNameChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Technique_SpecialScheme()
		{
			this._Base_SpecialSchemeType = default(EntityRef<Base_SpecialSchemeType>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SpecialSchemeId
		{
			get
			{
				return this._SpecialSchemeId;
			}
			set
			{
				if ((this._SpecialSchemeId != value))
				{
					this.OnSpecialSchemeIdChanging(value);
					this.SendPropertyChanging();
					this._SpecialSchemeId = value;
					this.SendPropertyChanged("SpecialSchemeId");
					this.OnSpecialSchemeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeTypeId", DbType="NVarChar(50)")]
		public string SpecialSchemeTypeId
		{
			get
			{
				return this._SpecialSchemeTypeId;
			}
			set
			{
				if ((this._SpecialSchemeTypeId != value))
				{
					if (this._Base_SpecialSchemeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialSchemeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SpecialSchemeTypeId = value;
					this.SendPropertyChanged("SpecialSchemeTypeId");
					this.OnSpecialSchemeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeCode", DbType="NVarChar(50)")]
		public string SpecialSchemeCode
		{
			get
			{
				return this._SpecialSchemeCode;
			}
			set
			{
				if ((this._SpecialSchemeCode != value))
				{
					this.OnSpecialSchemeCodeChanging(value);
					this.SendPropertyChanging();
					this._SpecialSchemeCode = value;
					this.SendPropertyChanged("SpecialSchemeCode");
					this.OnSpecialSchemeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeName", DbType="NVarChar(500)")]
		public string SpecialSchemeName
		{
			get
			{
				return this._SpecialSchemeName;
			}
			set
			{
				if ((this._SpecialSchemeName != value))
				{
					this.OnSpecialSchemeNameChanging(value);
					this.SendPropertyChanging();
					this._SpecialSchemeName = value;
					this.SendPropertyChanged("SpecialSchemeName");
					this.OnSpecialSchemeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_SpecialScheme_Base_SpecialSchemeType", Storage="_Base_SpecialSchemeType", ThisKey="SpecialSchemeTypeId", OtherKey="SpecialSchemeTypeId", IsForeignKey=true)]
		public Base_SpecialSchemeType Base_SpecialSchemeType
		{
			get
			{
				return this._Base_SpecialSchemeType.Entity;
			}
			set
			{
				Base_SpecialSchemeType previousValue = this._Base_SpecialSchemeType.Entity;
				if (((previousValue != value) 
							|| (this._Base_SpecialSchemeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_SpecialSchemeType.Entity = null;
						previousValue.Technique_SpecialScheme.Remove(this);
					}
					this._Base_SpecialSchemeType.Entity = value;
					if ((value != null))
					{
						value.Technique_SpecialScheme.Add(this);
						this._SpecialSchemeTypeId = value.SpecialSchemeTypeId;
					}
					else
					{
						this._SpecialSchemeTypeId = default(string);
					}
					this.SendPropertyChanged("Base_SpecialSchemeType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_SpecialScheme_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Technique_SpecialScheme.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Technique_SpecialScheme.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_ModelTestRecord")]
	public partial class Training_ModelTestRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ModelTestRecordId;
		
		private string _TestManId;
		
		private System.Nullable<System.DateTime> _TestStartTime;
		
		private System.Nullable<System.DateTime> _TestEndTime;
		
		private System.Nullable<decimal> _TestScores;
		
		private string _TrainingId;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Training_Training> _Training_Training;
		
		private EntitySet<Training_ModelTestRecordItem> _Training_ModelTestRecordItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelTestRecordIdChanging(string value);
    partial void OnModelTestRecordIdChanged();
    partial void OnTestManIdChanging(string value);
    partial void OnTestManIdChanged();
    partial void OnTestStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTestStartTimeChanged();
    partial void OnTestEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTestEndTimeChanged();
    partial void OnTestScoresChanging(System.Nullable<decimal> value);
    partial void OnTestScoresChanged();
    partial void OnTrainingIdChanging(string value);
    partial void OnTrainingIdChanged();
    #endregion
		
		public Training_ModelTestRecord()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Training_Training = default(EntityRef<Training_Training>);
			this._Training_ModelTestRecordItem = new EntitySet<Training_ModelTestRecordItem>(new Action<Training_ModelTestRecordItem>(this.attach_Training_ModelTestRecordItem), new Action<Training_ModelTestRecordItem>(this.detach_Training_ModelTestRecordItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelTestRecordId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ModelTestRecordId
		{
			get
			{
				return this._ModelTestRecordId;
			}
			set
			{
				if ((this._ModelTestRecordId != value))
				{
					this.OnModelTestRecordIdChanging(value);
					this.SendPropertyChanging();
					this._ModelTestRecordId = value;
					this.SendPropertyChanged("ModelTestRecordId");
					this.OnModelTestRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestManId", DbType="NVarChar(50)")]
		public string TestManId
		{
			get
			{
				return this._TestManId;
			}
			set
			{
				if ((this._TestManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTestManIdChanging(value);
					this.SendPropertyChanging();
					this._TestManId = value;
					this.SendPropertyChanged("TestManId");
					this.OnTestManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> TestStartTime
		{
			get
			{
				return this._TestStartTime;
			}
			set
			{
				if ((this._TestStartTime != value))
				{
					this.OnTestStartTimeChanging(value);
					this.SendPropertyChanging();
					this._TestStartTime = value;
					this.SendPropertyChanged("TestStartTime");
					this.OnTestStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> TestEndTime
		{
			get
			{
				return this._TestEndTime;
			}
			set
			{
				if ((this._TestEndTime != value))
				{
					this.OnTestEndTimeChanging(value);
					this.SendPropertyChanging();
					this._TestEndTime = value;
					this.SendPropertyChanged("TestEndTime");
					this.OnTestEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestScores", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> TestScores
		{
			get
			{
				return this._TestScores;
			}
			set
			{
				if ((this._TestScores != value))
				{
					this.OnTestScoresChanging(value);
					this.SendPropertyChanging();
					this._TestScores = value;
					this.SendPropertyChanged("TestScores");
					this.OnTestScoresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingId", DbType="NVarChar(50)")]
		public string TrainingId
		{
			get
			{
				return this._TrainingId;
			}
			set
			{
				if ((this._TrainingId != value))
				{
					if (this._Training_Training.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingId = value;
					this.SendPropertyChanged("TrainingId");
					this.OnTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_ModelTestRecord_Sys_User", Storage="_Sys_User", ThisKey="TestManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Training_ModelTestRecord.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Training_ModelTestRecord.Add(this);
						this._TestManId = value.UserId;
					}
					else
					{
						this._TestManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_ModelTestRecord_Training_Training", Storage="_Training_Training", ThisKey="TrainingId", OtherKey="TrainingId", IsForeignKey=true)]
		public Training_Training Training_Training
		{
			get
			{
				return this._Training_Training.Entity;
			}
			set
			{
				Training_Training previousValue = this._Training_Training.Entity;
				if (((previousValue != value) 
							|| (this._Training_Training.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_Training.Entity = null;
						previousValue.Training_ModelTestRecord.Remove(this);
					}
					this._Training_Training.Entity = value;
					if ((value != null))
					{
						value.Training_ModelTestRecord.Add(this);
						this._TrainingId = value.TrainingId;
					}
					else
					{
						this._TrainingId = default(string);
					}
					this.SendPropertyChanged("Training_Training");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_ModelTestRecordItem_Training_ModelTestRecord", Storage="_Training_ModelTestRecordItem", ThisKey="ModelTestRecordId", OtherKey="ModelTestRecordId", DeleteRule="NO ACTION")]
		public EntitySet<Training_ModelTestRecordItem> Training_ModelTestRecordItem
		{
			get
			{
				return this._Training_ModelTestRecordItem;
			}
			set
			{
				this._Training_ModelTestRecordItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_ModelTestRecordItem(Training_ModelTestRecordItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_ModelTestRecord = this;
		}
		
		private void detach_Training_ModelTestRecordItem(Training_ModelTestRecordItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_ModelTestRecord = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_ModelTestRecordItem")]
	public partial class Training_ModelTestRecordItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ModelTestRecordItemId;
		
		private string _ModelTestRecordId;
		
		private string _TrainingItemName;
		
		private string _Abstracts;
		
		private string _AttachUrl;
		
		private string _TestType;
		
		private string _AItem;
		
		private string _BItem;
		
		private string _CItem;
		
		private string _DItem;
		
		private string _EItem;
		
		private string _AnswerItems;
		
		private System.Nullable<int> _Score;
		
		private System.Nullable<decimal> _SubjectScore;
		
		private string _SelectedItem;
		
		private EntityRef<Training_ModelTestRecord> _Training_ModelTestRecord;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelTestRecordItemIdChanging(string value);
    partial void OnModelTestRecordItemIdChanged();
    partial void OnModelTestRecordIdChanging(string value);
    partial void OnModelTestRecordIdChanged();
    partial void OnTrainingItemNameChanging(string value);
    partial void OnTrainingItemNameChanged();
    partial void OnAbstractsChanging(string value);
    partial void OnAbstractsChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnTestTypeChanging(string value);
    partial void OnTestTypeChanged();
    partial void OnAItemChanging(string value);
    partial void OnAItemChanged();
    partial void OnBItemChanging(string value);
    partial void OnBItemChanged();
    partial void OnCItemChanging(string value);
    partial void OnCItemChanged();
    partial void OnDItemChanging(string value);
    partial void OnDItemChanged();
    partial void OnEItemChanging(string value);
    partial void OnEItemChanged();
    partial void OnAnswerItemsChanging(string value);
    partial void OnAnswerItemsChanged();
    partial void OnScoreChanging(System.Nullable<int> value);
    partial void OnScoreChanged();
    partial void OnSubjectScoreChanging(System.Nullable<decimal> value);
    partial void OnSubjectScoreChanged();
    partial void OnSelectedItemChanging(string value);
    partial void OnSelectedItemChanged();
    #endregion
		
		public Training_ModelTestRecordItem()
		{
			this._Training_ModelTestRecord = default(EntityRef<Training_ModelTestRecord>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelTestRecordItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ModelTestRecordItemId
		{
			get
			{
				return this._ModelTestRecordItemId;
			}
			set
			{
				if ((this._ModelTestRecordItemId != value))
				{
					this.OnModelTestRecordItemIdChanging(value);
					this.SendPropertyChanging();
					this._ModelTestRecordItemId = value;
					this.SendPropertyChanged("ModelTestRecordItemId");
					this.OnModelTestRecordItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelTestRecordId", DbType="NVarChar(50)")]
		public string ModelTestRecordId
		{
			get
			{
				return this._ModelTestRecordId;
			}
			set
			{
				if ((this._ModelTestRecordId != value))
				{
					if (this._Training_ModelTestRecord.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModelTestRecordIdChanging(value);
					this.SendPropertyChanging();
					this._ModelTestRecordId = value;
					this.SendPropertyChanged("ModelTestRecordId");
					this.OnModelTestRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemName", DbType="NVarChar(100)")]
		public string TrainingItemName
		{
			get
			{
				return this._TrainingItemName;
			}
			set
			{
				if ((this._TrainingItemName != value))
				{
					this.OnTrainingItemNameChanging(value);
					this.SendPropertyChanging();
					this._TrainingItemName = value;
					this.SendPropertyChanged("TrainingItemName");
					this.OnTrainingItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abstracts", DbType="NVarChar(2000)")]
		public string Abstracts
		{
			get
			{
				return this._Abstracts;
			}
			set
			{
				if ((this._Abstracts != value))
				{
					this.OnAbstractsChanging(value);
					this.SendPropertyChanging();
					this._Abstracts = value;
					this.SendPropertyChanged("Abstracts");
					this.OnAbstractsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestType", DbType="Char(1)")]
		public string TestType
		{
			get
			{
				return this._TestType;
			}
			set
			{
				if ((this._TestType != value))
				{
					this.OnTestTypeChanging(value);
					this.SendPropertyChanging();
					this._TestType = value;
					this.SendPropertyChanged("TestType");
					this.OnTestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AItem", DbType="NVarChar(500)")]
		public string AItem
		{
			get
			{
				return this._AItem;
			}
			set
			{
				if ((this._AItem != value))
				{
					this.OnAItemChanging(value);
					this.SendPropertyChanging();
					this._AItem = value;
					this.SendPropertyChanged("AItem");
					this.OnAItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BItem", DbType="NVarChar(500)")]
		public string BItem
		{
			get
			{
				return this._BItem;
			}
			set
			{
				if ((this._BItem != value))
				{
					this.OnBItemChanging(value);
					this.SendPropertyChanging();
					this._BItem = value;
					this.SendPropertyChanged("BItem");
					this.OnBItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CItem", DbType="NVarChar(500)")]
		public string CItem
		{
			get
			{
				return this._CItem;
			}
			set
			{
				if ((this._CItem != value))
				{
					this.OnCItemChanging(value);
					this.SendPropertyChanging();
					this._CItem = value;
					this.SendPropertyChanged("CItem");
					this.OnCItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DItem", DbType="NVarChar(500)")]
		public string DItem
		{
			get
			{
				return this._DItem;
			}
			set
			{
				if ((this._DItem != value))
				{
					this.OnDItemChanging(value);
					this.SendPropertyChanging();
					this._DItem = value;
					this.SendPropertyChanged("DItem");
					this.OnDItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EItem", DbType="NVarChar(500)")]
		public string EItem
		{
			get
			{
				return this._EItem;
			}
			set
			{
				if ((this._EItem != value))
				{
					this.OnEItemChanging(value);
					this.SendPropertyChanging();
					this._EItem = value;
					this.SendPropertyChanged("EItem");
					this.OnEItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerItems", DbType="NVarChar(50)")]
		public string AnswerItems
		{
			get
			{
				return this._AnswerItems;
			}
			set
			{
				if ((this._AnswerItems != value))
				{
					this.OnAnswerItemsChanging(value);
					this.SendPropertyChanging();
					this._AnswerItems = value;
					this.SendPropertyChanged("AnswerItems");
					this.OnAnswerItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int")]
		public System.Nullable<int> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectScore", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> SubjectScore
		{
			get
			{
				return this._SubjectScore;
			}
			set
			{
				if ((this._SubjectScore != value))
				{
					this.OnSubjectScoreChanging(value);
					this.SendPropertyChanging();
					this._SubjectScore = value;
					this.SendPropertyChanged("SubjectScore");
					this.OnSubjectScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectedItem", DbType="NVarChar(50)")]
		public string SelectedItem
		{
			get
			{
				return this._SelectedItem;
			}
			set
			{
				if ((this._SelectedItem != value))
				{
					this.OnSelectedItemChanging(value);
					this.SendPropertyChanging();
					this._SelectedItem = value;
					this.SendPropertyChanged("SelectedItem");
					this.OnSelectedItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_ModelTestRecordItem_Training_ModelTestRecord", Storage="_Training_ModelTestRecord", ThisKey="ModelTestRecordId", OtherKey="ModelTestRecordId", IsForeignKey=true)]
		public Training_ModelTestRecord Training_ModelTestRecord
		{
			get
			{
				return this._Training_ModelTestRecord.Entity;
			}
			set
			{
				Training_ModelTestRecord previousValue = this._Training_ModelTestRecord.Entity;
				if (((previousValue != value) 
							|| (this._Training_ModelTestRecord.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_ModelTestRecord.Entity = null;
						previousValue.Training_ModelTestRecordItem.Remove(this);
					}
					this._Training_ModelTestRecord.Entity = value;
					if ((value != null))
					{
						value.Training_ModelTestRecordItem.Add(this);
						this._ModelTestRecordId = value.ModelTestRecordId;
					}
					else
					{
						this._ModelTestRecordId = default(string);
					}
					this.SendPropertyChanged("Training_ModelTestRecord");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_Plan")]
	public partial class Training_Plan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PlanId;
		
		private string _PlanCode;
		
		private string _DesignerId;
		
		private System.Nullable<System.DateTime> _DesignerDate;
		
		private string _WorkPostId;
		
		private string _States;
		
		private string _PlanName;
		
		private string _WorkPostNames;
		
		private string _InstallationIds;
		
		private string _InstallationNames;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntitySet<Training_PlanItem> _Training_PlanItem;
		
		private EntitySet<Training_Task> _Training_Task;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanIdChanging(string value);
    partial void OnPlanIdChanged();
    partial void OnPlanCodeChanging(string value);
    partial void OnPlanCodeChanged();
    partial void OnDesignerIdChanging(string value);
    partial void OnDesignerIdChanged();
    partial void OnDesignerDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDesignerDateChanged();
    partial void OnWorkPostIdChanging(string value);
    partial void OnWorkPostIdChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnPlanNameChanging(string value);
    partial void OnPlanNameChanged();
    partial void OnWorkPostNamesChanging(string value);
    partial void OnWorkPostNamesChanged();
    partial void OnInstallationIdsChanging(string value);
    partial void OnInstallationIdsChanged();
    partial void OnInstallationNamesChanging(string value);
    partial void OnInstallationNamesChanged();
    #endregion
		
		public Training_Plan()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Training_PlanItem = new EntitySet<Training_PlanItem>(new Action<Training_PlanItem>(this.attach_Training_PlanItem), new Action<Training_PlanItem>(this.detach_Training_PlanItem));
			this._Training_Task = new EntitySet<Training_Task>(new Action<Training_Task>(this.attach_Training_Task), new Action<Training_Task>(this.detach_Training_Task));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PlanId
		{
			get
			{
				return this._PlanId;
			}
			set
			{
				if ((this._PlanId != value))
				{
					this.OnPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PlanId = value;
					this.SendPropertyChanged("PlanId");
					this.OnPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanCode", DbType="NVarChar(50)")]
		public string PlanCode
		{
			get
			{
				return this._PlanCode;
			}
			set
			{
				if ((this._PlanCode != value))
				{
					this.OnPlanCodeChanging(value);
					this.SendPropertyChanging();
					this._PlanCode = value;
					this.SendPropertyChanged("PlanCode");
					this.OnPlanCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignerId", DbType="NVarChar(50)")]
		public string DesignerId
		{
			get
			{
				return this._DesignerId;
			}
			set
			{
				if ((this._DesignerId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesignerIdChanging(value);
					this.SendPropertyChanging();
					this._DesignerId = value;
					this.SendPropertyChanged("DesignerId");
					this.OnDesignerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignerDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DesignerDate
		{
			get
			{
				return this._DesignerDate;
			}
			set
			{
				if ((this._DesignerDate != value))
				{
					this.OnDesignerDateChanging(value);
					this.SendPropertyChanging();
					this._DesignerDate = value;
					this.SendPropertyChanged("DesignerDate");
					this.OnDesignerDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostId", DbType="NVarChar(2000)")]
		public string WorkPostId
		{
			get
			{
				return this._WorkPostId;
			}
			set
			{
				if ((this._WorkPostId != value))
				{
					this.OnWorkPostIdChanging(value);
					this.SendPropertyChanging();
					this._WorkPostId = value;
					this.SendPropertyChanged("WorkPostId");
					this.OnWorkPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanName", DbType="NVarChar(300)")]
		public string PlanName
		{
			get
			{
				return this._PlanName;
			}
			set
			{
				if ((this._PlanName != value))
				{
					this.OnPlanNameChanging(value);
					this.SendPropertyChanging();
					this._PlanName = value;
					this.SendPropertyChanged("PlanName");
					this.OnPlanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostNames", DbType="NVarChar(2000)")]
		public string WorkPostNames
		{
			get
			{
				return this._WorkPostNames;
			}
			set
			{
				if ((this._WorkPostNames != value))
				{
					this.OnWorkPostNamesChanging(value);
					this.SendPropertyChanging();
					this._WorkPostNames = value;
					this.SendPropertyChanged("WorkPostNames");
					this.OnWorkPostNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationIds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string InstallationIds
		{
			get
			{
				return this._InstallationIds;
			}
			set
			{
				if ((this._InstallationIds != value))
				{
					this.OnInstallationIdsChanging(value);
					this.SendPropertyChanging();
					this._InstallationIds = value;
					this.SendPropertyChanged("InstallationIds");
					this.OnInstallationIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationNames", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string InstallationNames
		{
			get
			{
				return this._InstallationNames;
			}
			set
			{
				if ((this._InstallationNames != value))
				{
					this.OnInstallationNamesChanging(value);
					this.SendPropertyChanging();
					this._InstallationNames = value;
					this.SendPropertyChanged("InstallationNames");
					this.OnInstallationNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_Plan_Sys_User", Storage="_Sys_User", ThisKey="DesignerId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Training_Plan.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Training_Plan.Add(this);
						this._DesignerId = value.UserId;
					}
					else
					{
						this._DesignerId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_PlanItem_Training_Plan", Storage="_Training_PlanItem", ThisKey="PlanId", OtherKey="PlanId", DeleteRule="NO ACTION")]
		public EntitySet<Training_PlanItem> Training_PlanItem
		{
			get
			{
				return this._Training_PlanItem;
			}
			set
			{
				this._Training_PlanItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_Task_Training_Plan", Storage="_Training_Task", ThisKey="PlanId", OtherKey="PlanId", DeleteRule="NO ACTION")]
		public EntitySet<Training_Task> Training_Task
		{
			get
			{
				return this._Training_Task;
			}
			set
			{
				this._Training_Task.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_PlanItem(Training_PlanItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_Plan = this;
		}
		
		private void detach_Training_PlanItem(Training_PlanItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_Plan = null;
		}
		
		private void attach_Training_Task(Training_Task entity)
		{
			this.SendPropertyChanging();
			entity.Training_Plan = this;
		}
		
		private void detach_Training_Task(Training_Task entity)
		{
			this.SendPropertyChanging();
			entity.Training_Plan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_PlanItem")]
	public partial class Training_PlanItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PlanItemId;
		
		private string _PlanId;
		
		private string _TrainingEduId;
		
		private string _TrainingEduItemId;
		
		private EntityRef<Training_Plan> _Training_Plan;
		
		private EntityRef<Training_TrainingEdu> _Training_TrainingEdu;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanItemIdChanging(string value);
    partial void OnPlanItemIdChanged();
    partial void OnPlanIdChanging(string value);
    partial void OnPlanIdChanged();
    partial void OnTrainingEduIdChanging(string value);
    partial void OnTrainingEduIdChanged();
    partial void OnTrainingEduItemIdChanging(string value);
    partial void OnTrainingEduItemIdChanged();
    #endregion
		
		public Training_PlanItem()
		{
			this._Training_Plan = default(EntityRef<Training_Plan>);
			this._Training_TrainingEdu = default(EntityRef<Training_TrainingEdu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PlanItemId
		{
			get
			{
				return this._PlanItemId;
			}
			set
			{
				if ((this._PlanItemId != value))
				{
					this.OnPlanItemIdChanging(value);
					this.SendPropertyChanging();
					this._PlanItemId = value;
					this.SendPropertyChanged("PlanItemId");
					this.OnPlanItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanId", DbType="NVarChar(50)")]
		public string PlanId
		{
			get
			{
				return this._PlanId;
			}
			set
			{
				if ((this._PlanId != value))
				{
					if (this._Training_Plan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PlanId = value;
					this.SendPropertyChanged("PlanId");
					this.OnPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingEduId", DbType="NVarChar(50)")]
		public string TrainingEduId
		{
			get
			{
				return this._TrainingEduId;
			}
			set
			{
				if ((this._TrainingEduId != value))
				{
					if (this._Training_TrainingEdu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainingEduIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingEduId = value;
					this.SendPropertyChanged("TrainingEduId");
					this.OnTrainingEduIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingEduItemId", DbType="NVarChar(50)")]
		public string TrainingEduItemId
		{
			get
			{
				return this._TrainingEduItemId;
			}
			set
			{
				if ((this._TrainingEduItemId != value))
				{
					this.OnTrainingEduItemIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingEduItemId = value;
					this.SendPropertyChanged("TrainingEduItemId");
					this.OnTrainingEduItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_PlanItem_Training_Plan", Storage="_Training_Plan", ThisKey="PlanId", OtherKey="PlanId", IsForeignKey=true)]
		public Training_Plan Training_Plan
		{
			get
			{
				return this._Training_Plan.Entity;
			}
			set
			{
				Training_Plan previousValue = this._Training_Plan.Entity;
				if (((previousValue != value) 
							|| (this._Training_Plan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_Plan.Entity = null;
						previousValue.Training_PlanItem.Remove(this);
					}
					this._Training_Plan.Entity = value;
					if ((value != null))
					{
						value.Training_PlanItem.Add(this);
						this._PlanId = value.PlanId;
					}
					else
					{
						this._PlanId = default(string);
					}
					this.SendPropertyChanged("Training_Plan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_PlanItem_Training_TrainingEdu", Storage="_Training_TrainingEdu", ThisKey="TrainingEduId", OtherKey="TrainingEduId", IsForeignKey=true)]
		public Training_TrainingEdu Training_TrainingEdu
		{
			get
			{
				return this._Training_TrainingEdu.Entity;
			}
			set
			{
				Training_TrainingEdu previousValue = this._Training_TrainingEdu.Entity;
				if (((previousValue != value) 
							|| (this._Training_TrainingEdu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_TrainingEdu.Entity = null;
						previousValue.Training_PlanItem.Remove(this);
					}
					this._Training_TrainingEdu.Entity = value;
					if ((value != null))
					{
						value.Training_PlanItem.Add(this);
						this._TrainingEduId = value.TrainingEduId;
					}
					else
					{
						this._TrainingEduId = default(string);
					}
					this.SendPropertyChanged("Training_TrainingEdu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_Task")]
	public partial class Training_Task : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaskId;
		
		private string _PlanId;
		
		private string _UserId;
		
		private System.Nullable<System.DateTime> _TaskDate;
		
		private string _States;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Training_Plan> _Training_Plan;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskIdChanging(string value);
    partial void OnTaskIdChanged();
    partial void OnPlanIdChanging(string value);
    partial void OnPlanIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnTaskDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTaskDateChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public Training_Task()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Training_Plan = default(EntityRef<Training_Plan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaskId
		{
			get
			{
				return this._TaskId;
			}
			set
			{
				if ((this._TaskId != value))
				{
					this.OnTaskIdChanging(value);
					this.SendPropertyChanging();
					this._TaskId = value;
					this.SendPropertyChanged("TaskId");
					this.OnTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanId", DbType="NVarChar(50)")]
		public string PlanId
		{
			get
			{
				return this._PlanId;
			}
			set
			{
				if ((this._PlanId != value))
				{
					if (this._Training_Plan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PlanId = value;
					this.SendPropertyChanged("PlanId");
					this.OnPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TaskDate
		{
			get
			{
				return this._TaskDate;
			}
			set
			{
				if ((this._TaskDate != value))
				{
					this.OnTaskDateChanging(value);
					this.SendPropertyChanging();
					this._TaskDate = value;
					this.SendPropertyChanged("TaskDate");
					this.OnTaskDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_Task_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Training_Task.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Training_Task.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_Task_Training_Plan", Storage="_Training_Plan", ThisKey="PlanId", OtherKey="PlanId", IsForeignKey=true)]
		public Training_Plan Training_Plan
		{
			get
			{
				return this._Training_Plan.Entity;
			}
			set
			{
				Training_Plan previousValue = this._Training_Plan.Entity;
				if (((previousValue != value) 
							|| (this._Training_Plan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_Plan.Entity = null;
						previousValue.Training_Task.Remove(this);
					}
					this._Training_Plan.Entity = value;
					if ((value != null))
					{
						value.Training_Task.Add(this);
						this._PlanId = value.PlanId;
					}
					else
					{
						this._PlanId = default(string);
					}
					this.SendPropertyChanged("Training_Plan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_TestPlan")]
	public partial class Training_TestPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TestPlanId;
		
		private string _PlanCode;
		
		private string _PlanManId;
		
		private System.Nullable<System.DateTime> _PlanDate;
		
		private System.Nullable<System.DateTime> _TestStartTime;
		
		private System.Nullable<int> _Duration;
		
		private System.Nullable<int> _TotalScore;
		
		private System.Nullable<int> _QuestionCount;
		
		private string _TestPalce;
		
		private string _UnitIds;
		
		private string _UnitNames;
		
		private string _DepartIds;
		
		private string _DepartNames;
		
		private string _InstallationIds;
		
		private string _InstallationNames;
		
		private string _WorkPostIds;
		
		private string _WorkPostNames;
		
		private string _QRCodeUrl;
		
		private string _States;
		
		private string _PlanName;
		
		private System.Nullable<System.DateTime> _TestEndTime;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntitySet<Training_TestPlanTime> _Training_TestPlanTime;
		
		private EntitySet<Training_TestPlanTraining> _Training_TestPlanTraining;
		
		private EntitySet<Training_TestRecord> _Training_TestRecord;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestPlanIdChanging(string value);
    partial void OnTestPlanIdChanged();
    partial void OnPlanCodeChanging(string value);
    partial void OnPlanCodeChanged();
    partial void OnPlanManIdChanging(string value);
    partial void OnPlanManIdChanged();
    partial void OnPlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPlanDateChanged();
    partial void OnTestStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTestStartTimeChanged();
    partial void OnDurationChanging(System.Nullable<int> value);
    partial void OnDurationChanged();
    partial void OnTotalScoreChanging(System.Nullable<int> value);
    partial void OnTotalScoreChanged();
    partial void OnQuestionCountChanging(System.Nullable<int> value);
    partial void OnQuestionCountChanged();
    partial void OnTestPalceChanging(string value);
    partial void OnTestPalceChanged();
    partial void OnUnitIdsChanging(string value);
    partial void OnUnitIdsChanged();
    partial void OnUnitNamesChanging(string value);
    partial void OnUnitNamesChanged();
    partial void OnDepartIdsChanging(string value);
    partial void OnDepartIdsChanged();
    partial void OnDepartNamesChanging(string value);
    partial void OnDepartNamesChanged();
    partial void OnInstallationIdsChanging(string value);
    partial void OnInstallationIdsChanged();
    partial void OnInstallationNamesChanging(string value);
    partial void OnInstallationNamesChanged();
    partial void OnWorkPostIdsChanging(string value);
    partial void OnWorkPostIdsChanged();
    partial void OnWorkPostNamesChanging(string value);
    partial void OnWorkPostNamesChanged();
    partial void OnQRCodeUrlChanging(string value);
    partial void OnQRCodeUrlChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnPlanNameChanging(string value);
    partial void OnPlanNameChanged();
    partial void OnTestEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTestEndTimeChanged();
    #endregion
		
		public Training_TestPlan()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Training_TestPlanTime = new EntitySet<Training_TestPlanTime>(new Action<Training_TestPlanTime>(this.attach_Training_TestPlanTime), new Action<Training_TestPlanTime>(this.detach_Training_TestPlanTime));
			this._Training_TestPlanTraining = new EntitySet<Training_TestPlanTraining>(new Action<Training_TestPlanTraining>(this.attach_Training_TestPlanTraining), new Action<Training_TestPlanTraining>(this.detach_Training_TestPlanTraining));
			this._Training_TestRecord = new EntitySet<Training_TestRecord>(new Action<Training_TestRecord>(this.attach_Training_TestRecord), new Action<Training_TestRecord>(this.detach_Training_TestRecord));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPlanId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TestPlanId
		{
			get
			{
				return this._TestPlanId;
			}
			set
			{
				if ((this._TestPlanId != value))
				{
					this.OnTestPlanIdChanging(value);
					this.SendPropertyChanging();
					this._TestPlanId = value;
					this.SendPropertyChanged("TestPlanId");
					this.OnTestPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanCode", DbType="NVarChar(50)")]
		public string PlanCode
		{
			get
			{
				return this._PlanCode;
			}
			set
			{
				if ((this._PlanCode != value))
				{
					this.OnPlanCodeChanging(value);
					this.SendPropertyChanging();
					this._PlanCode = value;
					this.SendPropertyChanged("PlanCode");
					this.OnPlanCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanManId", DbType="NVarChar(50)")]
		public string PlanManId
		{
			get
			{
				return this._PlanManId;
			}
			set
			{
				if ((this._PlanManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanManIdChanging(value);
					this.SendPropertyChanging();
					this._PlanManId = value;
					this.SendPropertyChanged("PlanManId");
					this.OnPlanManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PlanDate
		{
			get
			{
				return this._PlanDate;
			}
			set
			{
				if ((this._PlanDate != value))
				{
					this.OnPlanDateChanging(value);
					this.SendPropertyChanging();
					this._PlanDate = value;
					this.SendPropertyChanged("PlanDate");
					this.OnPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> TestStartTime
		{
			get
			{
				return this._TestStartTime;
			}
			set
			{
				if ((this._TestStartTime != value))
				{
					this.OnTestStartTimeChanging(value);
					this.SendPropertyChanging();
					this._TestStartTime = value;
					this.SendPropertyChanged("TestStartTime");
					this.OnTestStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalScore", DbType="Int")]
		public System.Nullable<int> TotalScore
		{
			get
			{
				return this._TotalScore;
			}
			set
			{
				if ((this._TotalScore != value))
				{
					this.OnTotalScoreChanging(value);
					this.SendPropertyChanging();
					this._TotalScore = value;
					this.SendPropertyChanged("TotalScore");
					this.OnTotalScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionCount", DbType="Int")]
		public System.Nullable<int> QuestionCount
		{
			get
			{
				return this._QuestionCount;
			}
			set
			{
				if ((this._QuestionCount != value))
				{
					this.OnQuestionCountChanging(value);
					this.SendPropertyChanging();
					this._QuestionCount = value;
					this.SendPropertyChanged("QuestionCount");
					this.OnQuestionCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPalce", DbType="NVarChar(500)")]
		public string TestPalce
		{
			get
			{
				return this._TestPalce;
			}
			set
			{
				if ((this._TestPalce != value))
				{
					this.OnTestPalceChanging(value);
					this.SendPropertyChanging();
					this._TestPalce = value;
					this.SendPropertyChanged("TestPalce");
					this.OnTestPalceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitIds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string UnitIds
		{
			get
			{
				return this._UnitIds;
			}
			set
			{
				if ((this._UnitIds != value))
				{
					this.OnUnitIdsChanging(value);
					this.SendPropertyChanging();
					this._UnitIds = value;
					this.SendPropertyChanged("UnitIds");
					this.OnUnitIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitNames", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string UnitNames
		{
			get
			{
				return this._UnitNames;
			}
			set
			{
				if ((this._UnitNames != value))
				{
					this.OnUnitNamesChanging(value);
					this.SendPropertyChanging();
					this._UnitNames = value;
					this.SendPropertyChanged("UnitNames");
					this.OnUnitNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartIds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string DepartIds
		{
			get
			{
				return this._DepartIds;
			}
			set
			{
				if ((this._DepartIds != value))
				{
					this.OnDepartIdsChanging(value);
					this.SendPropertyChanging();
					this._DepartIds = value;
					this.SendPropertyChanged("DepartIds");
					this.OnDepartIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartNames", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string DepartNames
		{
			get
			{
				return this._DepartNames;
			}
			set
			{
				if ((this._DepartNames != value))
				{
					this.OnDepartNamesChanging(value);
					this.SendPropertyChanging();
					this._DepartNames = value;
					this.SendPropertyChanged("DepartNames");
					this.OnDepartNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationIds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string InstallationIds
		{
			get
			{
				return this._InstallationIds;
			}
			set
			{
				if ((this._InstallationIds != value))
				{
					this.OnInstallationIdsChanging(value);
					this.SendPropertyChanging();
					this._InstallationIds = value;
					this.SendPropertyChanged("InstallationIds");
					this.OnInstallationIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationNames", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string InstallationNames
		{
			get
			{
				return this._InstallationNames;
			}
			set
			{
				if ((this._InstallationNames != value))
				{
					this.OnInstallationNamesChanging(value);
					this.SendPropertyChanging();
					this._InstallationNames = value;
					this.SendPropertyChanged("InstallationNames");
					this.OnInstallationNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostIds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WorkPostIds
		{
			get
			{
				return this._WorkPostIds;
			}
			set
			{
				if ((this._WorkPostIds != value))
				{
					this.OnWorkPostIdsChanging(value);
					this.SendPropertyChanging();
					this._WorkPostIds = value;
					this.SendPropertyChanged("WorkPostIds");
					this.OnWorkPostIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostNames", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WorkPostNames
		{
			get
			{
				return this._WorkPostNames;
			}
			set
			{
				if ((this._WorkPostNames != value))
				{
					this.OnWorkPostNamesChanging(value);
					this.SendPropertyChanging();
					this._WorkPostNames = value;
					this.SendPropertyChanged("WorkPostNames");
					this.OnWorkPostNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this.OnQRCodeUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeUrl = value;
					this.SendPropertyChanged("QRCodeUrl");
					this.OnQRCodeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanName", DbType="NVarChar(300)")]
		public string PlanName
		{
			get
			{
				return this._PlanName;
			}
			set
			{
				if ((this._PlanName != value))
				{
					this.OnPlanNameChanging(value);
					this.SendPropertyChanging();
					this._PlanName = value;
					this.SendPropertyChanged("PlanName");
					this.OnPlanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> TestEndTime
		{
			get
			{
				return this._TestEndTime;
			}
			set
			{
				if ((this._TestEndTime != value))
				{
					this.OnTestEndTimeChanging(value);
					this.SendPropertyChanging();
					this._TestEndTime = value;
					this.SendPropertyChanged("TestEndTime");
					this.OnTestEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestPlan_Sys_User", Storage="_Sys_User", ThisKey="PlanManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Training_TestPlan.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Training_TestPlan.Add(this);
						this._PlanManId = value.UserId;
					}
					else
					{
						this._PlanManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestPlanTime_Training_TestPlan", Storage="_Training_TestPlanTime", ThisKey="TestPlanId", OtherKey="TestPlanId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TestPlanTime> Training_TestPlanTime
		{
			get
			{
				return this._Training_TestPlanTime;
			}
			set
			{
				this._Training_TestPlanTime.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestPlanTraining_Training_TestPlan", Storage="_Training_TestPlanTraining", ThisKey="TestPlanId", OtherKey="TestPlanId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TestPlanTraining> Training_TestPlanTraining
		{
			get
			{
				return this._Training_TestPlanTraining;
			}
			set
			{
				this._Training_TestPlanTraining.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestRecord_Training_TestPlan", Storage="_Training_TestRecord", ThisKey="TestPlanId", OtherKey="TestPlanId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TestRecord> Training_TestRecord
		{
			get
			{
				return this._Training_TestRecord;
			}
			set
			{
				this._Training_TestRecord.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_TestPlanTime(Training_TestPlanTime entity)
		{
			this.SendPropertyChanging();
			entity.Training_TestPlan = this;
		}
		
		private void detach_Training_TestPlanTime(Training_TestPlanTime entity)
		{
			this.SendPropertyChanging();
			entity.Training_TestPlan = null;
		}
		
		private void attach_Training_TestPlanTraining(Training_TestPlanTraining entity)
		{
			this.SendPropertyChanging();
			entity.Training_TestPlan = this;
		}
		
		private void detach_Training_TestPlanTraining(Training_TestPlanTraining entity)
		{
			this.SendPropertyChanging();
			entity.Training_TestPlan = null;
		}
		
		private void attach_Training_TestRecord(Training_TestRecord entity)
		{
			this.SendPropertyChanging();
			entity.Training_TestPlan = this;
		}
		
		private void detach_Training_TestRecord(Training_TestRecord entity)
		{
			this.SendPropertyChanging();
			entity.Training_TestPlan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_TestPlanTime")]
	public partial class Training_TestPlanTime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TestPlanTimeId;
		
		private string _TestPlanId;
		
		private int _SortIndex;
		
		private System.Nullable<System.DateTime> _TestStartTime;
		
		private System.Nullable<System.DateTime> _TestEndTime;
		
		private string _TestPalce;
		
		private System.Nullable<int> _PersonCount;
		
		private string _PlanManId;
		
		private System.Nullable<System.DateTime> _PlanDate;
		
		private string _States;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Training_TestPlan> _Training_TestPlan;
		
		private EntitySet<Training_TestRecord> _Training_TestRecord;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestPlanTimeIdChanging(string value);
    partial void OnTestPlanTimeIdChanged();
    partial void OnTestPlanIdChanging(string value);
    partial void OnTestPlanIdChanged();
    partial void OnSortIndexChanging(int value);
    partial void OnSortIndexChanged();
    partial void OnTestStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTestStartTimeChanged();
    partial void OnTestEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTestEndTimeChanged();
    partial void OnTestPalceChanging(string value);
    partial void OnTestPalceChanged();
    partial void OnPersonCountChanging(System.Nullable<int> value);
    partial void OnPersonCountChanged();
    partial void OnPlanManIdChanging(string value);
    partial void OnPlanManIdChanged();
    partial void OnPlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPlanDateChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public Training_TestPlanTime()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Training_TestPlan = default(EntityRef<Training_TestPlan>);
			this._Training_TestRecord = new EntitySet<Training_TestRecord>(new Action<Training_TestRecord>(this.attach_Training_TestRecord), new Action<Training_TestRecord>(this.detach_Training_TestRecord));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPlanTimeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TestPlanTimeId
		{
			get
			{
				return this._TestPlanTimeId;
			}
			set
			{
				if ((this._TestPlanTimeId != value))
				{
					this.OnTestPlanTimeIdChanging(value);
					this.SendPropertyChanging();
					this._TestPlanTimeId = value;
					this.SendPropertyChanged("TestPlanTimeId");
					this.OnTestPlanTimeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPlanId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TestPlanId
		{
			get
			{
				return this._TestPlanId;
			}
			set
			{
				if ((this._TestPlanId != value))
				{
					if (this._Training_TestPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTestPlanIdChanging(value);
					this.SendPropertyChanging();
					this._TestPlanId = value;
					this.SendPropertyChanged("TestPlanId");
					this.OnTestPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int NOT NULL")]
		public int SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> TestStartTime
		{
			get
			{
				return this._TestStartTime;
			}
			set
			{
				if ((this._TestStartTime != value))
				{
					this.OnTestStartTimeChanging(value);
					this.SendPropertyChanging();
					this._TestStartTime = value;
					this.SendPropertyChanged("TestStartTime");
					this.OnTestStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> TestEndTime
		{
			get
			{
				return this._TestEndTime;
			}
			set
			{
				if ((this._TestEndTime != value))
				{
					this.OnTestEndTimeChanging(value);
					this.SendPropertyChanging();
					this._TestEndTime = value;
					this.SendPropertyChanged("TestEndTime");
					this.OnTestEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPalce", DbType="NVarChar(50)")]
		public string TestPalce
		{
			get
			{
				return this._TestPalce;
			}
			set
			{
				if ((this._TestPalce != value))
				{
					this.OnTestPalceChanging(value);
					this.SendPropertyChanging();
					this._TestPalce = value;
					this.SendPropertyChanged("TestPalce");
					this.OnTestPalceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonCount", DbType="Int")]
		public System.Nullable<int> PersonCount
		{
			get
			{
				return this._PersonCount;
			}
			set
			{
				if ((this._PersonCount != value))
				{
					this.OnPersonCountChanging(value);
					this.SendPropertyChanging();
					this._PersonCount = value;
					this.SendPropertyChanged("PersonCount");
					this.OnPersonCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanManId", DbType="NVarChar(50)")]
		public string PlanManId
		{
			get
			{
				return this._PlanManId;
			}
			set
			{
				if ((this._PlanManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanManIdChanging(value);
					this.SendPropertyChanging();
					this._PlanManId = value;
					this.SendPropertyChanged("PlanManId");
					this.OnPlanManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PlanDate
		{
			get
			{
				return this._PlanDate;
			}
			set
			{
				if ((this._PlanDate != value))
				{
					this.OnPlanDateChanging(value);
					this.SendPropertyChanging();
					this._PlanDate = value;
					this.SendPropertyChanged("PlanDate");
					this.OnPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestPlanTime_Sys_User", Storage="_Sys_User", ThisKey="PlanManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Training_TestPlanTime.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Training_TestPlanTime.Add(this);
						this._PlanManId = value.UserId;
					}
					else
					{
						this._PlanManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestPlanTime_Training_TestPlan", Storage="_Training_TestPlan", ThisKey="TestPlanId", OtherKey="TestPlanId", IsForeignKey=true)]
		public Training_TestPlan Training_TestPlan
		{
			get
			{
				return this._Training_TestPlan.Entity;
			}
			set
			{
				Training_TestPlan previousValue = this._Training_TestPlan.Entity;
				if (((previousValue != value) 
							|| (this._Training_TestPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_TestPlan.Entity = null;
						previousValue.Training_TestPlanTime.Remove(this);
					}
					this._Training_TestPlan.Entity = value;
					if ((value != null))
					{
						value.Training_TestPlanTime.Add(this);
						this._TestPlanId = value.TestPlanId;
					}
					else
					{
						this._TestPlanId = default(string);
					}
					this.SendPropertyChanged("Training_TestPlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestRecord_Training_TestPlanTime", Storage="_Training_TestRecord", ThisKey="TestPlanTimeId", OtherKey="TestPlanTimeId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TestRecord> Training_TestRecord
		{
			get
			{
				return this._Training_TestRecord;
			}
			set
			{
				this._Training_TestRecord.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_TestRecord(Training_TestRecord entity)
		{
			this.SendPropertyChanging();
			entity.Training_TestPlanTime = this;
		}
		
		private void detach_Training_TestRecord(Training_TestRecord entity)
		{
			this.SendPropertyChanging();
			entity.Training_TestPlanTime = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_TestPlanTraining")]
	public partial class Training_TestPlanTraining : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TestPlanTrainingId;
		
		private string _TestPlanId;
		
		private string _TrainingId;
		
		private System.Nullable<int> _TestType1Count;
		
		private System.Nullable<int> _TestType2Count;
		
		private System.Nullable<int> _TestType3Count;
		
		private EntityRef<Training_TestPlan> _Training_TestPlan;
		
		private EntityRef<Training_Training> _Training_Training;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestPlanTrainingIdChanging(string value);
    partial void OnTestPlanTrainingIdChanged();
    partial void OnTestPlanIdChanging(string value);
    partial void OnTestPlanIdChanged();
    partial void OnTrainingIdChanging(string value);
    partial void OnTrainingIdChanged();
    partial void OnTestType1CountChanging(System.Nullable<int> value);
    partial void OnTestType1CountChanged();
    partial void OnTestType2CountChanging(System.Nullable<int> value);
    partial void OnTestType2CountChanged();
    partial void OnTestType3CountChanging(System.Nullable<int> value);
    partial void OnTestType3CountChanged();
    #endregion
		
		public Training_TestPlanTraining()
		{
			this._Training_TestPlan = default(EntityRef<Training_TestPlan>);
			this._Training_Training = default(EntityRef<Training_Training>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPlanTrainingId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TestPlanTrainingId
		{
			get
			{
				return this._TestPlanTrainingId;
			}
			set
			{
				if ((this._TestPlanTrainingId != value))
				{
					this.OnTestPlanTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._TestPlanTrainingId = value;
					this.SendPropertyChanged("TestPlanTrainingId");
					this.OnTestPlanTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPlanId", DbType="NVarChar(50)")]
		public string TestPlanId
		{
			get
			{
				return this._TestPlanId;
			}
			set
			{
				if ((this._TestPlanId != value))
				{
					if (this._Training_TestPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTestPlanIdChanging(value);
					this.SendPropertyChanging();
					this._TestPlanId = value;
					this.SendPropertyChanged("TestPlanId");
					this.OnTestPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingId", DbType="NVarChar(50)")]
		public string TrainingId
		{
			get
			{
				return this._TrainingId;
			}
			set
			{
				if ((this._TrainingId != value))
				{
					if (this._Training_Training.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingId = value;
					this.SendPropertyChanged("TrainingId");
					this.OnTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestType1Count", DbType="Int")]
		public System.Nullable<int> TestType1Count
		{
			get
			{
				return this._TestType1Count;
			}
			set
			{
				if ((this._TestType1Count != value))
				{
					this.OnTestType1CountChanging(value);
					this.SendPropertyChanging();
					this._TestType1Count = value;
					this.SendPropertyChanged("TestType1Count");
					this.OnTestType1CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestType2Count", DbType="Int")]
		public System.Nullable<int> TestType2Count
		{
			get
			{
				return this._TestType2Count;
			}
			set
			{
				if ((this._TestType2Count != value))
				{
					this.OnTestType2CountChanging(value);
					this.SendPropertyChanging();
					this._TestType2Count = value;
					this.SendPropertyChanged("TestType2Count");
					this.OnTestType2CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestType3Count", DbType="Int")]
		public System.Nullable<int> TestType3Count
		{
			get
			{
				return this._TestType3Count;
			}
			set
			{
				if ((this._TestType3Count != value))
				{
					this.OnTestType3CountChanging(value);
					this.SendPropertyChanging();
					this._TestType3Count = value;
					this.SendPropertyChanged("TestType3Count");
					this.OnTestType3CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestPlanTraining_Training_TestPlan", Storage="_Training_TestPlan", ThisKey="TestPlanId", OtherKey="TestPlanId", IsForeignKey=true)]
		public Training_TestPlan Training_TestPlan
		{
			get
			{
				return this._Training_TestPlan.Entity;
			}
			set
			{
				Training_TestPlan previousValue = this._Training_TestPlan.Entity;
				if (((previousValue != value) 
							|| (this._Training_TestPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_TestPlan.Entity = null;
						previousValue.Training_TestPlanTraining.Remove(this);
					}
					this._Training_TestPlan.Entity = value;
					if ((value != null))
					{
						value.Training_TestPlanTraining.Add(this);
						this._TestPlanId = value.TestPlanId;
					}
					else
					{
						this._TestPlanId = default(string);
					}
					this.SendPropertyChanged("Training_TestPlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestPlanTraining_Training_Training", Storage="_Training_Training", ThisKey="TrainingId", OtherKey="TrainingId", IsForeignKey=true)]
		public Training_Training Training_Training
		{
			get
			{
				return this._Training_Training.Entity;
			}
			set
			{
				Training_Training previousValue = this._Training_Training.Entity;
				if (((previousValue != value) 
							|| (this._Training_Training.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_Training.Entity = null;
						previousValue.Training_TestPlanTraining.Remove(this);
					}
					this._Training_Training.Entity = value;
					if ((value != null))
					{
						value.Training_TestPlanTraining.Add(this);
						this._TrainingId = value.TrainingId;
					}
					else
					{
						this._TrainingId = default(string);
					}
					this.SendPropertyChanged("Training_Training");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_TestRecord")]
	public partial class Training_TestRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TestRecordId;
		
		private string _TestPlanId;
		
		private string _TestManId;
		
		private System.Nullable<System.DateTime> _TestStartTime;
		
		private System.Nullable<System.DateTime> _TestEndTime;
		
		private System.Nullable<decimal> _TestScores;
		
		private string _TestType;
		
		private string _TemporaryUser;
		
		private System.Nullable<bool> _IsFiled;
		
		private string _TestPlanTimeId;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Training_TestPlan> _Training_TestPlan;
		
		private EntityRef<Training_TestPlanTime> _Training_TestPlanTime;
		
		private EntitySet<Training_TestRecordItem> _Training_TestRecordItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestRecordIdChanging(string value);
    partial void OnTestRecordIdChanged();
    partial void OnTestPlanIdChanging(string value);
    partial void OnTestPlanIdChanged();
    partial void OnTestManIdChanging(string value);
    partial void OnTestManIdChanged();
    partial void OnTestStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTestStartTimeChanged();
    partial void OnTestEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTestEndTimeChanged();
    partial void OnTestScoresChanging(System.Nullable<decimal> value);
    partial void OnTestScoresChanged();
    partial void OnTestTypeChanging(string value);
    partial void OnTestTypeChanged();
    partial void OnTemporaryUserChanging(string value);
    partial void OnTemporaryUserChanged();
    partial void OnIsFiledChanging(System.Nullable<bool> value);
    partial void OnIsFiledChanged();
    partial void OnTestPlanTimeIdChanging(string value);
    partial void OnTestPlanTimeIdChanged();
    #endregion
		
		public Training_TestRecord()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Training_TestPlan = default(EntityRef<Training_TestPlan>);
			this._Training_TestPlanTime = default(EntityRef<Training_TestPlanTime>);
			this._Training_TestRecordItem = new EntitySet<Training_TestRecordItem>(new Action<Training_TestRecordItem>(this.attach_Training_TestRecordItem), new Action<Training_TestRecordItem>(this.detach_Training_TestRecordItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRecordId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TestRecordId
		{
			get
			{
				return this._TestRecordId;
			}
			set
			{
				if ((this._TestRecordId != value))
				{
					this.OnTestRecordIdChanging(value);
					this.SendPropertyChanging();
					this._TestRecordId = value;
					this.SendPropertyChanged("TestRecordId");
					this.OnTestRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPlanId", DbType="NVarChar(50)")]
		public string TestPlanId
		{
			get
			{
				return this._TestPlanId;
			}
			set
			{
				if ((this._TestPlanId != value))
				{
					if (this._Training_TestPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTestPlanIdChanging(value);
					this.SendPropertyChanging();
					this._TestPlanId = value;
					this.SendPropertyChanged("TestPlanId");
					this.OnTestPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestManId", DbType="NVarChar(50)")]
		public string TestManId
		{
			get
			{
				return this._TestManId;
			}
			set
			{
				if ((this._TestManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTestManIdChanging(value);
					this.SendPropertyChanging();
					this._TestManId = value;
					this.SendPropertyChanged("TestManId");
					this.OnTestManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> TestStartTime
		{
			get
			{
				return this._TestStartTime;
			}
			set
			{
				if ((this._TestStartTime != value))
				{
					this.OnTestStartTimeChanging(value);
					this.SendPropertyChanging();
					this._TestStartTime = value;
					this.SendPropertyChanged("TestStartTime");
					this.OnTestStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> TestEndTime
		{
			get
			{
				return this._TestEndTime;
			}
			set
			{
				if ((this._TestEndTime != value))
				{
					this.OnTestEndTimeChanging(value);
					this.SendPropertyChanging();
					this._TestEndTime = value;
					this.SendPropertyChanged("TestEndTime");
					this.OnTestEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestScores", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> TestScores
		{
			get
			{
				return this._TestScores;
			}
			set
			{
				if ((this._TestScores != value))
				{
					this.OnTestScoresChanging(value);
					this.SendPropertyChanging();
					this._TestScores = value;
					this.SendPropertyChanged("TestScores");
					this.OnTestScoresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestType", DbType="NVarChar(50)")]
		public string TestType
		{
			get
			{
				return this._TestType;
			}
			set
			{
				if ((this._TestType != value))
				{
					this.OnTestTypeChanging(value);
					this.SendPropertyChanging();
					this._TestType = value;
					this.SendPropertyChanged("TestType");
					this.OnTestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryUser", DbType="NVarChar(50)")]
		public string TemporaryUser
		{
			get
			{
				return this._TemporaryUser;
			}
			set
			{
				if ((this._TemporaryUser != value))
				{
					this.OnTemporaryUserChanging(value);
					this.SendPropertyChanging();
					this._TemporaryUser = value;
					this.SendPropertyChanged("TemporaryUser");
					this.OnTemporaryUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="isFiled", Storage="_IsFiled", DbType="Bit")]
		public System.Nullable<bool> IsFiled
		{
			get
			{
				return this._IsFiled;
			}
			set
			{
				if ((this._IsFiled != value))
				{
					this.OnIsFiledChanging(value);
					this.SendPropertyChanging();
					this._IsFiled = value;
					this.SendPropertyChanged("IsFiled");
					this.OnIsFiledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPlanTimeId", DbType="NVarChar(50)")]
		public string TestPlanTimeId
		{
			get
			{
				return this._TestPlanTimeId;
			}
			set
			{
				if ((this._TestPlanTimeId != value))
				{
					if (this._Training_TestPlanTime.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTestPlanTimeIdChanging(value);
					this.SendPropertyChanging();
					this._TestPlanTimeId = value;
					this.SendPropertyChanged("TestPlanTimeId");
					this.OnTestPlanTimeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestRecord_Sys_User", Storage="_Sys_User", ThisKey="TestManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Training_TestRecord.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Training_TestRecord.Add(this);
						this._TestManId = value.UserId;
					}
					else
					{
						this._TestManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestRecord_Training_TestPlan", Storage="_Training_TestPlan", ThisKey="TestPlanId", OtherKey="TestPlanId", IsForeignKey=true)]
		public Training_TestPlan Training_TestPlan
		{
			get
			{
				return this._Training_TestPlan.Entity;
			}
			set
			{
				Training_TestPlan previousValue = this._Training_TestPlan.Entity;
				if (((previousValue != value) 
							|| (this._Training_TestPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_TestPlan.Entity = null;
						previousValue.Training_TestRecord.Remove(this);
					}
					this._Training_TestPlan.Entity = value;
					if ((value != null))
					{
						value.Training_TestRecord.Add(this);
						this._TestPlanId = value.TestPlanId;
					}
					else
					{
						this._TestPlanId = default(string);
					}
					this.SendPropertyChanged("Training_TestPlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestRecord_Training_TestPlanTime", Storage="_Training_TestPlanTime", ThisKey="TestPlanTimeId", OtherKey="TestPlanTimeId", IsForeignKey=true)]
		public Training_TestPlanTime Training_TestPlanTime
		{
			get
			{
				return this._Training_TestPlanTime.Entity;
			}
			set
			{
				Training_TestPlanTime previousValue = this._Training_TestPlanTime.Entity;
				if (((previousValue != value) 
							|| (this._Training_TestPlanTime.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_TestPlanTime.Entity = null;
						previousValue.Training_TestRecord.Remove(this);
					}
					this._Training_TestPlanTime.Entity = value;
					if ((value != null))
					{
						value.Training_TestRecord.Add(this);
						this._TestPlanTimeId = value.TestPlanTimeId;
					}
					else
					{
						this._TestPlanTimeId = default(string);
					}
					this.SendPropertyChanged("Training_TestPlanTime");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestRecordItem_Training_TestRecord", Storage="_Training_TestRecordItem", ThisKey="TestRecordId", OtherKey="TestRecordId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TestRecordItem> Training_TestRecordItem
		{
			get
			{
				return this._Training_TestRecordItem;
			}
			set
			{
				this._Training_TestRecordItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_TestRecordItem(Training_TestRecordItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_TestRecord = this;
		}
		
		private void detach_Training_TestRecordItem(Training_TestRecordItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_TestRecord = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_TestRecordItem")]
	public partial class Training_TestRecordItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TestRecordItemId;
		
		private string _TestRecordId;
		
		private string _TrainingItemName;
		
		private string _Abstracts;
		
		private string _AttachUrl;
		
		private string _TestType;
		
		private string _AItem;
		
		private string _BItem;
		
		private string _CItem;
		
		private string _DItem;
		
		private string _EItem;
		
		private string _AnswerItems;
		
		private System.Nullable<int> _Score;
		
		private System.Nullable<decimal> _SubjectScore;
		
		private string _SelectedItem;
		
		private string _TrainingItemCode;
		
		private EntityRef<Training_TestRecord> _Training_TestRecord;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestRecordItemIdChanging(string value);
    partial void OnTestRecordItemIdChanged();
    partial void OnTestRecordIdChanging(string value);
    partial void OnTestRecordIdChanged();
    partial void OnTrainingItemNameChanging(string value);
    partial void OnTrainingItemNameChanged();
    partial void OnAbstractsChanging(string value);
    partial void OnAbstractsChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnTestTypeChanging(string value);
    partial void OnTestTypeChanged();
    partial void OnAItemChanging(string value);
    partial void OnAItemChanged();
    partial void OnBItemChanging(string value);
    partial void OnBItemChanged();
    partial void OnCItemChanging(string value);
    partial void OnCItemChanged();
    partial void OnDItemChanging(string value);
    partial void OnDItemChanged();
    partial void OnEItemChanging(string value);
    partial void OnEItemChanged();
    partial void OnAnswerItemsChanging(string value);
    partial void OnAnswerItemsChanged();
    partial void OnScoreChanging(System.Nullable<int> value);
    partial void OnScoreChanged();
    partial void OnSubjectScoreChanging(System.Nullable<decimal> value);
    partial void OnSubjectScoreChanged();
    partial void OnSelectedItemChanging(string value);
    partial void OnSelectedItemChanged();
    partial void OnTrainingItemCodeChanging(string value);
    partial void OnTrainingItemCodeChanged();
    #endregion
		
		public Training_TestRecordItem()
		{
			this._Training_TestRecord = default(EntityRef<Training_TestRecord>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRecordItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TestRecordItemId
		{
			get
			{
				return this._TestRecordItemId;
			}
			set
			{
				if ((this._TestRecordItemId != value))
				{
					this.OnTestRecordItemIdChanging(value);
					this.SendPropertyChanging();
					this._TestRecordItemId = value;
					this.SendPropertyChanged("TestRecordItemId");
					this.OnTestRecordItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRecordId", DbType="NVarChar(50)")]
		public string TestRecordId
		{
			get
			{
				return this._TestRecordId;
			}
			set
			{
				if ((this._TestRecordId != value))
				{
					if (this._Training_TestRecord.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTestRecordIdChanging(value);
					this.SendPropertyChanging();
					this._TestRecordId = value;
					this.SendPropertyChanged("TestRecordId");
					this.OnTestRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemName", DbType="NVarChar(100)")]
		public string TrainingItemName
		{
			get
			{
				return this._TrainingItemName;
			}
			set
			{
				if ((this._TrainingItemName != value))
				{
					this.OnTrainingItemNameChanging(value);
					this.SendPropertyChanging();
					this._TrainingItemName = value;
					this.SendPropertyChanged("TrainingItemName");
					this.OnTrainingItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abstracts", DbType="NVarChar(2000)")]
		public string Abstracts
		{
			get
			{
				return this._Abstracts;
			}
			set
			{
				if ((this._Abstracts != value))
				{
					this.OnAbstractsChanging(value);
					this.SendPropertyChanging();
					this._Abstracts = value;
					this.SendPropertyChanged("Abstracts");
					this.OnAbstractsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestType", DbType="Char(1)")]
		public string TestType
		{
			get
			{
				return this._TestType;
			}
			set
			{
				if ((this._TestType != value))
				{
					this.OnTestTypeChanging(value);
					this.SendPropertyChanging();
					this._TestType = value;
					this.SendPropertyChanged("TestType");
					this.OnTestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AItem", DbType="NVarChar(500)")]
		public string AItem
		{
			get
			{
				return this._AItem;
			}
			set
			{
				if ((this._AItem != value))
				{
					this.OnAItemChanging(value);
					this.SendPropertyChanging();
					this._AItem = value;
					this.SendPropertyChanged("AItem");
					this.OnAItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BItem", DbType="NVarChar(500)")]
		public string BItem
		{
			get
			{
				return this._BItem;
			}
			set
			{
				if ((this._BItem != value))
				{
					this.OnBItemChanging(value);
					this.SendPropertyChanging();
					this._BItem = value;
					this.SendPropertyChanged("BItem");
					this.OnBItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CItem", DbType="NVarChar(500)")]
		public string CItem
		{
			get
			{
				return this._CItem;
			}
			set
			{
				if ((this._CItem != value))
				{
					this.OnCItemChanging(value);
					this.SendPropertyChanging();
					this._CItem = value;
					this.SendPropertyChanged("CItem");
					this.OnCItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DItem", DbType="NVarChar(500)")]
		public string DItem
		{
			get
			{
				return this._DItem;
			}
			set
			{
				if ((this._DItem != value))
				{
					this.OnDItemChanging(value);
					this.SendPropertyChanging();
					this._DItem = value;
					this.SendPropertyChanged("DItem");
					this.OnDItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EItem", DbType="NVarChar(500)")]
		public string EItem
		{
			get
			{
				return this._EItem;
			}
			set
			{
				if ((this._EItem != value))
				{
					this.OnEItemChanging(value);
					this.SendPropertyChanging();
					this._EItem = value;
					this.SendPropertyChanged("EItem");
					this.OnEItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerItems", DbType="NVarChar(50)")]
		public string AnswerItems
		{
			get
			{
				return this._AnswerItems;
			}
			set
			{
				if ((this._AnswerItems != value))
				{
					this.OnAnswerItemsChanging(value);
					this.SendPropertyChanging();
					this._AnswerItems = value;
					this.SendPropertyChanged("AnswerItems");
					this.OnAnswerItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int")]
		public System.Nullable<int> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectScore", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> SubjectScore
		{
			get
			{
				return this._SubjectScore;
			}
			set
			{
				if ((this._SubjectScore != value))
				{
					this.OnSubjectScoreChanging(value);
					this.SendPropertyChanging();
					this._SubjectScore = value;
					this.SendPropertyChanged("SubjectScore");
					this.OnSubjectScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectedItem", DbType="NVarChar(50)")]
		public string SelectedItem
		{
			get
			{
				return this._SelectedItem;
			}
			set
			{
				if ((this._SelectedItem != value))
				{
					this.OnSelectedItemChanging(value);
					this.SendPropertyChanging();
					this._SelectedItem = value;
					this.SendPropertyChanged("SelectedItem");
					this.OnSelectedItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemCode", DbType="NVarChar(50)")]
		public string TrainingItemCode
		{
			get
			{
				return this._TrainingItemCode;
			}
			set
			{
				if ((this._TrainingItemCode != value))
				{
					this.OnTrainingItemCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainingItemCode = value;
					this.SendPropertyChanged("TrainingItemCode");
					this.OnTrainingItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestRecordItem_Training_TestRecord", Storage="_Training_TestRecord", ThisKey="TestRecordId", OtherKey="TestRecordId", IsForeignKey=true)]
		public Training_TestRecord Training_TestRecord
		{
			get
			{
				return this._Training_TestRecord.Entity;
			}
			set
			{
				Training_TestRecord previousValue = this._Training_TestRecord.Entity;
				if (((previousValue != value) 
							|| (this._Training_TestRecord.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_TestRecord.Entity = null;
						previousValue.Training_TestRecordItem.Remove(this);
					}
					this._Training_TestRecord.Entity = value;
					if ((value != null))
					{
						value.Training_TestRecordItem.Add(this);
						this._TestRecordId = value.TestRecordId;
					}
					else
					{
						this._TestRecordId = default(string);
					}
					this.SendPropertyChanged("Training_TestRecord");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_Training")]
	public partial class Training_Training : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainingId;
		
		private string _TrainingCode;
		
		private string _TrainingName;
		
		private string _SupTrainingId;
		
		private System.Nullable<bool> _IsEndLever;
		
		private EntitySet<Training_ModelTestRecord> _Training_ModelTestRecord;
		
		private EntitySet<Training_TestPlanTraining> _Training_TestPlanTraining;
		
		private EntitySet<Training_TrainingItem> _Training_TrainingItem;
		
		private EntitySet<Training_TrainingItem> _Training;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainingIdChanging(string value);
    partial void OnTrainingIdChanged();
    partial void OnTrainingCodeChanging(string value);
    partial void OnTrainingCodeChanged();
    partial void OnTrainingNameChanging(string value);
    partial void OnTrainingNameChanged();
    partial void OnSupTrainingIdChanging(string value);
    partial void OnSupTrainingIdChanged();
    partial void OnIsEndLeverChanging(System.Nullable<bool> value);
    partial void OnIsEndLeverChanged();
    #endregion
		
		public Training_Training()
		{
			this._Training_ModelTestRecord = new EntitySet<Training_ModelTestRecord>(new Action<Training_ModelTestRecord>(this.attach_Training_ModelTestRecord), new Action<Training_ModelTestRecord>(this.detach_Training_ModelTestRecord));
			this._Training_TestPlanTraining = new EntitySet<Training_TestPlanTraining>(new Action<Training_TestPlanTraining>(this.attach_Training_TestPlanTraining), new Action<Training_TestPlanTraining>(this.detach_Training_TestPlanTraining));
			this._Training_TrainingItem = new EntitySet<Training_TrainingItem>(new Action<Training_TrainingItem>(this.attach_Training_TrainingItem), new Action<Training_TrainingItem>(this.detach_Training_TrainingItem));
			this._Training = new EntitySet<Training_TrainingItem>(new Action<Training_TrainingItem>(this.attach_Training), new Action<Training_TrainingItem>(this.detach_Training));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainingId
		{
			get
			{
				return this._TrainingId;
			}
			set
			{
				if ((this._TrainingId != value))
				{
					this.OnTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingId = value;
					this.SendPropertyChanged("TrainingId");
					this.OnTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingCode", DbType="NVarChar(50)")]
		public string TrainingCode
		{
			get
			{
				return this._TrainingCode;
			}
			set
			{
				if ((this._TrainingCode != value))
				{
					this.OnTrainingCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainingCode = value;
					this.SendPropertyChanged("TrainingCode");
					this.OnTrainingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingName", DbType="NVarChar(100)")]
		public string TrainingName
		{
			get
			{
				return this._TrainingName;
			}
			set
			{
				if ((this._TrainingName != value))
				{
					this.OnTrainingNameChanging(value);
					this.SendPropertyChanging();
					this._TrainingName = value;
					this.SendPropertyChanged("TrainingName");
					this.OnTrainingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupTrainingId", DbType="NVarChar(50)")]
		public string SupTrainingId
		{
			get
			{
				return this._SupTrainingId;
			}
			set
			{
				if ((this._SupTrainingId != value))
				{
					this.OnSupTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._SupTrainingId = value;
					this.SendPropertyChanged("SupTrainingId");
					this.OnSupTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEndLever", DbType="Bit")]
		public System.Nullable<bool> IsEndLever
		{
			get
			{
				return this._IsEndLever;
			}
			set
			{
				if ((this._IsEndLever != value))
				{
					this.OnIsEndLeverChanging(value);
					this.SendPropertyChanging();
					this._IsEndLever = value;
					this.SendPropertyChanged("IsEndLever");
					this.OnIsEndLeverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_ModelTestRecord_Training_Training", Storage="_Training_ModelTestRecord", ThisKey="TrainingId", OtherKey="TrainingId", DeleteRule="NO ACTION")]
		public EntitySet<Training_ModelTestRecord> Training_ModelTestRecord
		{
			get
			{
				return this._Training_ModelTestRecord;
			}
			set
			{
				this._Training_ModelTestRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestPlanTraining_Training_Training", Storage="_Training_TestPlanTraining", ThisKey="TrainingId", OtherKey="TrainingId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TestPlanTraining> Training_TestPlanTraining
		{
			get
			{
				return this._Training_TestPlanTraining;
			}
			set
			{
				this._Training_TestPlanTraining.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainingItem_Training_Training", Storage="_Training_TrainingItem", ThisKey="TrainingId", OtherKey="TrainingId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TrainingItem> Training_TrainingItem
		{
			get
			{
				return this._Training_TrainingItem;
			}
			set
			{
				this._Training_TrainingItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainingItem_Training_Training1", Storage="_Training", ThisKey="TrainingId", OtherKey="TrainingId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TrainingItem> Training
		{
			get
			{
				return this._Training;
			}
			set
			{
				this._Training.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_ModelTestRecord(Training_ModelTestRecord entity)
		{
			this.SendPropertyChanging();
			entity.Training_Training = this;
		}
		
		private void detach_Training_ModelTestRecord(Training_ModelTestRecord entity)
		{
			this.SendPropertyChanging();
			entity.Training_Training = null;
		}
		
		private void attach_Training_TestPlanTraining(Training_TestPlanTraining entity)
		{
			this.SendPropertyChanging();
			entity.Training_Training = this;
		}
		
		private void detach_Training_TestPlanTraining(Training_TestPlanTraining entity)
		{
			this.SendPropertyChanging();
			entity.Training_Training = null;
		}
		
		private void attach_Training_TrainingItem(Training_TrainingItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_Training = this;
		}
		
		private void detach_Training_TrainingItem(Training_TrainingItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_Training = null;
		}
		
		private void attach_Training(Training_TrainingItem entity)
		{
			this.SendPropertyChanging();
			entity.Training = this;
		}
		
		private void detach_Training(Training_TrainingItem entity)
		{
			this.SendPropertyChanging();
			entity.Training = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_TrainingEdu")]
	public partial class Training_TrainingEdu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainingEduId;
		
		private string _TrainingEduCode;
		
		private string _TrainingEduName;
		
		private string _SupTrainingEduId;
		
		private EntitySet<Training_PlanItem> _Training_PlanItem;
		
		private EntitySet<Training_TrainingEduItem> _Training_TrainingEduItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainingEduIdChanging(string value);
    partial void OnTrainingEduIdChanged();
    partial void OnTrainingEduCodeChanging(string value);
    partial void OnTrainingEduCodeChanged();
    partial void OnTrainingEduNameChanging(string value);
    partial void OnTrainingEduNameChanged();
    partial void OnSupTrainingEduIdChanging(string value);
    partial void OnSupTrainingEduIdChanged();
    #endregion
		
		public Training_TrainingEdu()
		{
			this._Training_PlanItem = new EntitySet<Training_PlanItem>(new Action<Training_PlanItem>(this.attach_Training_PlanItem), new Action<Training_PlanItem>(this.detach_Training_PlanItem));
			this._Training_TrainingEduItem = new EntitySet<Training_TrainingEduItem>(new Action<Training_TrainingEduItem>(this.attach_Training_TrainingEduItem), new Action<Training_TrainingEduItem>(this.detach_Training_TrainingEduItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingEduId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainingEduId
		{
			get
			{
				return this._TrainingEduId;
			}
			set
			{
				if ((this._TrainingEduId != value))
				{
					this.OnTrainingEduIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingEduId = value;
					this.SendPropertyChanged("TrainingEduId");
					this.OnTrainingEduIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingEduCode", DbType="NVarChar(50)")]
		public string TrainingEduCode
		{
			get
			{
				return this._TrainingEduCode;
			}
			set
			{
				if ((this._TrainingEduCode != value))
				{
					this.OnTrainingEduCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainingEduCode = value;
					this.SendPropertyChanged("TrainingEduCode");
					this.OnTrainingEduCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingEduName", DbType="NVarChar(100)")]
		public string TrainingEduName
		{
			get
			{
				return this._TrainingEduName;
			}
			set
			{
				if ((this._TrainingEduName != value))
				{
					this.OnTrainingEduNameChanging(value);
					this.SendPropertyChanging();
					this._TrainingEduName = value;
					this.SendPropertyChanged("TrainingEduName");
					this.OnTrainingEduNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupTrainingEduId", DbType="NVarChar(50)")]
		public string SupTrainingEduId
		{
			get
			{
				return this._SupTrainingEduId;
			}
			set
			{
				if ((this._SupTrainingEduId != value))
				{
					this.OnSupTrainingEduIdChanging(value);
					this.SendPropertyChanging();
					this._SupTrainingEduId = value;
					this.SendPropertyChanged("SupTrainingEduId");
					this.OnSupTrainingEduIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_PlanItem_Training_TrainingEdu", Storage="_Training_PlanItem", ThisKey="TrainingEduId", OtherKey="TrainingEduId", DeleteRule="NO ACTION")]
		public EntitySet<Training_PlanItem> Training_PlanItem
		{
			get
			{
				return this._Training_PlanItem;
			}
			set
			{
				this._Training_PlanItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainingEduItem_Training_TrainingEdu", Storage="_Training_TrainingEduItem", ThisKey="TrainingEduId", OtherKey="TrainingEduId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TrainingEduItem> Training_TrainingEduItem
		{
			get
			{
				return this._Training_TrainingEduItem;
			}
			set
			{
				this._Training_TrainingEduItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_PlanItem(Training_PlanItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_TrainingEdu = this;
		}
		
		private void detach_Training_PlanItem(Training_PlanItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_TrainingEdu = null;
		}
		
		private void attach_Training_TrainingEduItem(Training_TrainingEduItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_TrainingEdu = this;
		}
		
		private void detach_Training_TrainingEduItem(Training_TrainingEduItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_TrainingEdu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_TrainingEduItem")]
	public partial class Training_TrainingEduItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainingEduItemId;
		
		private string _TrainingEduId;
		
		private string _InstallationIds;
		
		private string _InstallationNames;
		
		private string _WorkPostIds;
		
		private string _WorkPostNames;
		
		private string _TrainingEduItemCode;
		
		private string _TrainingEduItemName;
		
		private string _Summary;
		
		private string _PictureUrl;
		
		private string _AttachUrl;
		
		private EntityRef<Training_TrainingEdu> _Training_TrainingEdu;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainingEduItemIdChanging(string value);
    partial void OnTrainingEduItemIdChanged();
    partial void OnTrainingEduIdChanging(string value);
    partial void OnTrainingEduIdChanged();
    partial void OnInstallationIdsChanging(string value);
    partial void OnInstallationIdsChanged();
    partial void OnInstallationNamesChanging(string value);
    partial void OnInstallationNamesChanged();
    partial void OnWorkPostIdsChanging(string value);
    partial void OnWorkPostIdsChanged();
    partial void OnWorkPostNamesChanging(string value);
    partial void OnWorkPostNamesChanged();
    partial void OnTrainingEduItemCodeChanging(string value);
    partial void OnTrainingEduItemCodeChanged();
    partial void OnTrainingEduItemNameChanging(string value);
    partial void OnTrainingEduItemNameChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnPictureUrlChanging(string value);
    partial void OnPictureUrlChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    #endregion
		
		public Training_TrainingEduItem()
		{
			this._Training_TrainingEdu = default(EntityRef<Training_TrainingEdu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingEduItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainingEduItemId
		{
			get
			{
				return this._TrainingEduItemId;
			}
			set
			{
				if ((this._TrainingEduItemId != value))
				{
					this.OnTrainingEduItemIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingEduItemId = value;
					this.SendPropertyChanged("TrainingEduItemId");
					this.OnTrainingEduItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingEduId", DbType="NVarChar(50)")]
		public string TrainingEduId
		{
			get
			{
				return this._TrainingEduId;
			}
			set
			{
				if ((this._TrainingEduId != value))
				{
					if (this._Training_TrainingEdu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainingEduIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingEduId = value;
					this.SendPropertyChanged("TrainingEduId");
					this.OnTrainingEduIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationIds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string InstallationIds
		{
			get
			{
				return this._InstallationIds;
			}
			set
			{
				if ((this._InstallationIds != value))
				{
					this.OnInstallationIdsChanging(value);
					this.SendPropertyChanging();
					this._InstallationIds = value;
					this.SendPropertyChanged("InstallationIds");
					this.OnInstallationIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationNames", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string InstallationNames
		{
			get
			{
				return this._InstallationNames;
			}
			set
			{
				if ((this._InstallationNames != value))
				{
					this.OnInstallationNamesChanging(value);
					this.SendPropertyChanging();
					this._InstallationNames = value;
					this.SendPropertyChanged("InstallationNames");
					this.OnInstallationNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostIds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WorkPostIds
		{
			get
			{
				return this._WorkPostIds;
			}
			set
			{
				if ((this._WorkPostIds != value))
				{
					this.OnWorkPostIdsChanging(value);
					this.SendPropertyChanging();
					this._WorkPostIds = value;
					this.SendPropertyChanged("WorkPostIds");
					this.OnWorkPostIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostNames", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WorkPostNames
		{
			get
			{
				return this._WorkPostNames;
			}
			set
			{
				if ((this._WorkPostNames != value))
				{
					this.OnWorkPostNamesChanging(value);
					this.SendPropertyChanging();
					this._WorkPostNames = value;
					this.SendPropertyChanged("WorkPostNames");
					this.OnWorkPostNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingEduItemCode", DbType="NVarChar(50)")]
		public string TrainingEduItemCode
		{
			get
			{
				return this._TrainingEduItemCode;
			}
			set
			{
				if ((this._TrainingEduItemCode != value))
				{
					this.OnTrainingEduItemCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainingEduItemCode = value;
					this.SendPropertyChanged("TrainingEduItemCode");
					this.OnTrainingEduItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingEduItemName", DbType="NVarChar(100)")]
		public string TrainingEduItemName
		{
			get
			{
				return this._TrainingEduItemName;
			}
			set
			{
				if ((this._TrainingEduItemName != value))
				{
					this.OnTrainingEduItemNameChanging(value);
					this.SendPropertyChanging();
					this._TrainingEduItemName = value;
					this.SendPropertyChanged("TrainingEduItemName");
					this.OnTrainingEduItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureUrl", DbType="NVarChar(2000)")]
		public string PictureUrl
		{
			get
			{
				return this._PictureUrl;
			}
			set
			{
				if ((this._PictureUrl != value))
				{
					this.OnPictureUrlChanging(value);
					this.SendPropertyChanging();
					this._PictureUrl = value;
					this.SendPropertyChanged("PictureUrl");
					this.OnPictureUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainingEduItem_Training_TrainingEdu", Storage="_Training_TrainingEdu", ThisKey="TrainingEduId", OtherKey="TrainingEduId", IsForeignKey=true)]
		public Training_TrainingEdu Training_TrainingEdu
		{
			get
			{
				return this._Training_TrainingEdu.Entity;
			}
			set
			{
				Training_TrainingEdu previousValue = this._Training_TrainingEdu.Entity;
				if (((previousValue != value) 
							|| (this._Training_TrainingEdu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_TrainingEdu.Entity = null;
						previousValue.Training_TrainingEduItem.Remove(this);
					}
					this._Training_TrainingEdu.Entity = value;
					if ((value != null))
					{
						value.Training_TrainingEduItem.Add(this);
						this._TrainingEduId = value.TrainingEduId;
					}
					else
					{
						this._TrainingEduId = default(string);
					}
					this.SendPropertyChanged("Training_TrainingEdu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_TrainingItem")]
	public partial class Training_TrainingItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainingItemId;
		
		private string _TrainingId;
		
		private string _TrainingItemCode;
		
		private string _TrainingItemName;
		
		private string _Abstracts;
		
		private string _AttachUrl;
		
		private string _VersionNum;
		
		private string _TestType;
		
		private string _WorkPostIds;
		
		private string _WorkPostNames;
		
		private string _AItem;
		
		private string _BItem;
		
		private string _CItem;
		
		private string _DItem;
		
		private string _EItem;
		
		private System.Nullable<int> _Score;
		
		private string _AnswerItems;
		
		private string _InstallationIds;
		
		private string _InstallationNames;
		
		private EntityRef<Training_Training> _Training_Training;
		
		private EntityRef<Training_Training> _Training;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainingItemIdChanging(string value);
    partial void OnTrainingItemIdChanged();
    partial void OnTrainingIdChanging(string value);
    partial void OnTrainingIdChanged();
    partial void OnTrainingItemCodeChanging(string value);
    partial void OnTrainingItemCodeChanged();
    partial void OnTrainingItemNameChanging(string value);
    partial void OnTrainingItemNameChanged();
    partial void OnAbstractsChanging(string value);
    partial void OnAbstractsChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnVersionNumChanging(string value);
    partial void OnVersionNumChanged();
    partial void OnTestTypeChanging(string value);
    partial void OnTestTypeChanged();
    partial void OnWorkPostIdsChanging(string value);
    partial void OnWorkPostIdsChanged();
    partial void OnWorkPostNamesChanging(string value);
    partial void OnWorkPostNamesChanged();
    partial void OnAItemChanging(string value);
    partial void OnAItemChanged();
    partial void OnBItemChanging(string value);
    partial void OnBItemChanged();
    partial void OnCItemChanging(string value);
    partial void OnCItemChanged();
    partial void OnDItemChanging(string value);
    partial void OnDItemChanged();
    partial void OnEItemChanging(string value);
    partial void OnEItemChanged();
    partial void OnScoreChanging(System.Nullable<int> value);
    partial void OnScoreChanged();
    partial void OnAnswerItemsChanging(string value);
    partial void OnAnswerItemsChanged();
    partial void OnInstallationIdsChanging(string value);
    partial void OnInstallationIdsChanged();
    partial void OnInstallationNamesChanging(string value);
    partial void OnInstallationNamesChanged();
    #endregion
		
		public Training_TrainingItem()
		{
			this._Training_Training = default(EntityRef<Training_Training>);
			this._Training = default(EntityRef<Training_Training>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainingItemId
		{
			get
			{
				return this._TrainingItemId;
			}
			set
			{
				if ((this._TrainingItemId != value))
				{
					this.OnTrainingItemIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingItemId = value;
					this.SendPropertyChanged("TrainingItemId");
					this.OnTrainingItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingId", DbType="NVarChar(50)")]
		public string TrainingId
		{
			get
			{
				return this._TrainingId;
			}
			set
			{
				if ((this._TrainingId != value))
				{
					if ((this._Training_Training.HasLoadedOrAssignedValue || this._Training.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingId = value;
					this.SendPropertyChanged("TrainingId");
					this.OnTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemCode", DbType="NVarChar(50)")]
		public string TrainingItemCode
		{
			get
			{
				return this._TrainingItemCode;
			}
			set
			{
				if ((this._TrainingItemCode != value))
				{
					this.OnTrainingItemCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainingItemCode = value;
					this.SendPropertyChanged("TrainingItemCode");
					this.OnTrainingItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemName", DbType="NVarChar(100)")]
		public string TrainingItemName
		{
			get
			{
				return this._TrainingItemName;
			}
			set
			{
				if ((this._TrainingItemName != value))
				{
					this.OnTrainingItemNameChanging(value);
					this.SendPropertyChanging();
					this._TrainingItemName = value;
					this.SendPropertyChanged("TrainingItemName");
					this.OnTrainingItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abstracts", DbType="NVarChar(2000)")]
		public string Abstracts
		{
			get
			{
				return this._Abstracts;
			}
			set
			{
				if ((this._Abstracts != value))
				{
					this.OnAbstractsChanging(value);
					this.SendPropertyChanging();
					this._Abstracts = value;
					this.SendPropertyChanged("Abstracts");
					this.OnAbstractsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNum", DbType="NVarChar(50)")]
		public string VersionNum
		{
			get
			{
				return this._VersionNum;
			}
			set
			{
				if ((this._VersionNum != value))
				{
					this.OnVersionNumChanging(value);
					this.SendPropertyChanging();
					this._VersionNum = value;
					this.SendPropertyChanged("VersionNum");
					this.OnVersionNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestType", DbType="Char(1)")]
		public string TestType
		{
			get
			{
				return this._TestType;
			}
			set
			{
				if ((this._TestType != value))
				{
					this.OnTestTypeChanging(value);
					this.SendPropertyChanging();
					this._TestType = value;
					this.SendPropertyChanged("TestType");
					this.OnTestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostIds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WorkPostIds
		{
			get
			{
				return this._WorkPostIds;
			}
			set
			{
				if ((this._WorkPostIds != value))
				{
					this.OnWorkPostIdsChanging(value);
					this.SendPropertyChanging();
					this._WorkPostIds = value;
					this.SendPropertyChanged("WorkPostIds");
					this.OnWorkPostIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostNames", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WorkPostNames
		{
			get
			{
				return this._WorkPostNames;
			}
			set
			{
				if ((this._WorkPostNames != value))
				{
					this.OnWorkPostNamesChanging(value);
					this.SendPropertyChanging();
					this._WorkPostNames = value;
					this.SendPropertyChanged("WorkPostNames");
					this.OnWorkPostNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AItem", DbType="NVarChar(500)")]
		public string AItem
		{
			get
			{
				return this._AItem;
			}
			set
			{
				if ((this._AItem != value))
				{
					this.OnAItemChanging(value);
					this.SendPropertyChanging();
					this._AItem = value;
					this.SendPropertyChanged("AItem");
					this.OnAItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BItem", DbType="NVarChar(500)")]
		public string BItem
		{
			get
			{
				return this._BItem;
			}
			set
			{
				if ((this._BItem != value))
				{
					this.OnBItemChanging(value);
					this.SendPropertyChanging();
					this._BItem = value;
					this.SendPropertyChanged("BItem");
					this.OnBItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CItem", DbType="NVarChar(500)")]
		public string CItem
		{
			get
			{
				return this._CItem;
			}
			set
			{
				if ((this._CItem != value))
				{
					this.OnCItemChanging(value);
					this.SendPropertyChanging();
					this._CItem = value;
					this.SendPropertyChanged("CItem");
					this.OnCItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DItem", DbType="NVarChar(500)")]
		public string DItem
		{
			get
			{
				return this._DItem;
			}
			set
			{
				if ((this._DItem != value))
				{
					this.OnDItemChanging(value);
					this.SendPropertyChanging();
					this._DItem = value;
					this.SendPropertyChanged("DItem");
					this.OnDItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EItem", DbType="NVarChar(500)")]
		public string EItem
		{
			get
			{
				return this._EItem;
			}
			set
			{
				if ((this._EItem != value))
				{
					this.OnEItemChanging(value);
					this.SendPropertyChanging();
					this._EItem = value;
					this.SendPropertyChanged("EItem");
					this.OnEItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int")]
		public System.Nullable<int> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerItems", DbType="NVarChar(50)")]
		public string AnswerItems
		{
			get
			{
				return this._AnswerItems;
			}
			set
			{
				if ((this._AnswerItems != value))
				{
					this.OnAnswerItemsChanging(value);
					this.SendPropertyChanging();
					this._AnswerItems = value;
					this.SendPropertyChanged("AnswerItems");
					this.OnAnswerItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationIds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string InstallationIds
		{
			get
			{
				return this._InstallationIds;
			}
			set
			{
				if ((this._InstallationIds != value))
				{
					this.OnInstallationIdsChanging(value);
					this.SendPropertyChanging();
					this._InstallationIds = value;
					this.SendPropertyChanged("InstallationIds");
					this.OnInstallationIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationNames", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string InstallationNames
		{
			get
			{
				return this._InstallationNames;
			}
			set
			{
				if ((this._InstallationNames != value))
				{
					this.OnInstallationNamesChanging(value);
					this.SendPropertyChanging();
					this._InstallationNames = value;
					this.SendPropertyChanged("InstallationNames");
					this.OnInstallationNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainingItem_Training_Training", Storage="_Training_Training", ThisKey="TrainingId", OtherKey="TrainingId", IsForeignKey=true)]
		public Training_Training Training_Training
		{
			get
			{
				return this._Training_Training.Entity;
			}
			set
			{
				Training_Training previousValue = this._Training_Training.Entity;
				if (((previousValue != value) 
							|| (this._Training_Training.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_Training.Entity = null;
						previousValue.Training_TrainingItem.Remove(this);
					}
					this._Training_Training.Entity = value;
					if ((value != null))
					{
						value.Training_TrainingItem.Add(this);
						this._TrainingId = value.TrainingId;
					}
					else
					{
						this._TrainingId = default(string);
					}
					this.SendPropertyChanged("Training_Training");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainingItem_Training_Training1", Storage="_Training", ThisKey="TrainingId", OtherKey="TrainingId", IsForeignKey=true)]
		public Training_Training Training
		{
			get
			{
				return this._Training.Entity;
			}
			set
			{
				Training_Training previousValue = this._Training.Entity;
				if (((previousValue != value) 
							|| (this._Training.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training.Entity = null;
						previousValue.Training.Remove(this);
					}
					this._Training.Entity = value;
					if ((value != null))
					{
						value.Training.Add(this);
						this._TrainingId = value.TrainingId;
					}
					else
					{
						this._TrainingId = default(string);
					}
					this.SendPropertyChanged("Training");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_TrainRecord")]
	public partial class Training_TrainRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainRecordId;
		
		private string _TrainingCode;
		
		private string _TrainTitle;
		
		private string _TrainTypeId;
		
		private string _TrainContent;
		
		private System.Nullable<System.DateTime> _TrainStartDate;
		
		private System.Nullable<System.DateTime> _TrainEndDate;
		
		private System.Nullable<decimal> _TeachHour;
		
		private string _TeachMan;
		
		private string _TeachAddress;
		
		private string _Remark;
		
		private string _AttachUrl;
		
		private string _UnitIds;
		
		private string _CompileMan;
		
		private System.Nullable<int> _TrainPersonNum;
		
		private string _States;
		
		private EntitySet<Training_TrainRecordDetail> _Training_TrainRecordDetail;
		
		private EntityRef<Base_TrainType> _Base_TrainType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainRecordIdChanging(string value);
    partial void OnTrainRecordIdChanged();
    partial void OnTrainingCodeChanging(string value);
    partial void OnTrainingCodeChanged();
    partial void OnTrainTitleChanging(string value);
    partial void OnTrainTitleChanged();
    partial void OnTrainTypeIdChanging(string value);
    partial void OnTrainTypeIdChanged();
    partial void OnTrainContentChanging(string value);
    partial void OnTrainContentChanged();
    partial void OnTrainStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTrainStartDateChanged();
    partial void OnTrainEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTrainEndDateChanged();
    partial void OnTeachHourChanging(System.Nullable<decimal> value);
    partial void OnTeachHourChanged();
    partial void OnTeachManChanging(string value);
    partial void OnTeachManChanged();
    partial void OnTeachAddressChanging(string value);
    partial void OnTeachAddressChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnUnitIdsChanging(string value);
    partial void OnUnitIdsChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnTrainPersonNumChanging(System.Nullable<int> value);
    partial void OnTrainPersonNumChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public Training_TrainRecord()
		{
			this._Training_TrainRecordDetail = new EntitySet<Training_TrainRecordDetail>(new Action<Training_TrainRecordDetail>(this.attach_Training_TrainRecordDetail), new Action<Training_TrainRecordDetail>(this.detach_Training_TrainRecordDetail));
			this._Base_TrainType = default(EntityRef<Base_TrainType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainRecordId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainRecordId
		{
			get
			{
				return this._TrainRecordId;
			}
			set
			{
				if ((this._TrainRecordId != value))
				{
					this.OnTrainRecordIdChanging(value);
					this.SendPropertyChanging();
					this._TrainRecordId = value;
					this.SendPropertyChanged("TrainRecordId");
					this.OnTrainRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingCode", DbType="NVarChar(50)")]
		public string TrainingCode
		{
			get
			{
				return this._TrainingCode;
			}
			set
			{
				if ((this._TrainingCode != value))
				{
					this.OnTrainingCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainingCode = value;
					this.SendPropertyChanged("TrainingCode");
					this.OnTrainingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTitle", DbType="NVarChar(200)")]
		public string TrainTitle
		{
			get
			{
				return this._TrainTitle;
			}
			set
			{
				if ((this._TrainTitle != value))
				{
					this.OnTrainTitleChanging(value);
					this.SendPropertyChanging();
					this._TrainTitle = value;
					this.SendPropertyChanged("TrainTitle");
					this.OnTrainTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTypeId", DbType="NVarChar(50)")]
		public string TrainTypeId
		{
			get
			{
				return this._TrainTypeId;
			}
			set
			{
				if ((this._TrainTypeId != value))
				{
					if (this._Base_TrainType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TrainTypeId = value;
					this.SendPropertyChanged("TrainTypeId");
					this.OnTrainTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainContent", DbType="NVarChar(500)")]
		public string TrainContent
		{
			get
			{
				return this._TrainContent;
			}
			set
			{
				if ((this._TrainContent != value))
				{
					this.OnTrainContentChanging(value);
					this.SendPropertyChanging();
					this._TrainContent = value;
					this.SendPropertyChanged("TrainContent");
					this.OnTrainContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrainStartDate
		{
			get
			{
				return this._TrainStartDate;
			}
			set
			{
				if ((this._TrainStartDate != value))
				{
					this.OnTrainStartDateChanging(value);
					this.SendPropertyChanging();
					this._TrainStartDate = value;
					this.SendPropertyChanged("TrainStartDate");
					this.OnTrainStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrainEndDate
		{
			get
			{
				return this._TrainEndDate;
			}
			set
			{
				if ((this._TrainEndDate != value))
				{
					this.OnTrainEndDateChanging(value);
					this.SendPropertyChanging();
					this._TrainEndDate = value;
					this.SendPropertyChanged("TrainEndDate");
					this.OnTrainEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachHour", DbType="Decimal(9,1)")]
		public System.Nullable<decimal> TeachHour
		{
			get
			{
				return this._TeachHour;
			}
			set
			{
				if ((this._TeachHour != value))
				{
					this.OnTeachHourChanging(value);
					this.SendPropertyChanging();
					this._TeachHour = value;
					this.SendPropertyChanged("TeachHour");
					this.OnTeachHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachMan", DbType="NVarChar(50)")]
		public string TeachMan
		{
			get
			{
				return this._TeachMan;
			}
			set
			{
				if ((this._TeachMan != value))
				{
					this.OnTeachManChanging(value);
					this.SendPropertyChanging();
					this._TeachMan = value;
					this.SendPropertyChanged("TeachMan");
					this.OnTeachManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachAddress", DbType="NVarChar(100)")]
		public string TeachAddress
		{
			get
			{
				return this._TeachAddress;
			}
			set
			{
				if ((this._TeachAddress != value))
				{
					this.OnTeachAddressChanging(value);
					this.SendPropertyChanging();
					this._TeachAddress = value;
					this.SendPropertyChanged("TeachAddress");
					this.OnTeachAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(150)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(1000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitIds", DbType="NVarChar(800)")]
		public string UnitIds
		{
			get
			{
				return this._UnitIds;
			}
			set
			{
				if ((this._UnitIds != value))
				{
					this.OnUnitIdsChanging(value);
					this.SendPropertyChanging();
					this._UnitIds = value;
					this.SendPropertyChanged("UnitIds");
					this.OnUnitIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainPersonNum", DbType="Int")]
		public System.Nullable<int> TrainPersonNum
		{
			get
			{
				return this._TrainPersonNum;
			}
			set
			{
				if ((this._TrainPersonNum != value))
				{
					this.OnTrainPersonNumChanging(value);
					this.SendPropertyChanging();
					this._TrainPersonNum = value;
					this.SendPropertyChanged("TrainPersonNum");
					this.OnTrainPersonNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainDetail_Training_TrainRecord", Storage="_Training_TrainRecordDetail", ThisKey="TrainRecordId", OtherKey="TrainRecordId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TrainRecordDetail> Training_TrainRecordDetail
		{
			get
			{
				return this._Training_TrainRecordDetail;
			}
			set
			{
				this._Training_TrainRecordDetail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainRecord_Base_TrainType", Storage="_Base_TrainType", ThisKey="TrainTypeId", OtherKey="TrainTypeId", IsForeignKey=true)]
		public Base_TrainType Base_TrainType
		{
			get
			{
				return this._Base_TrainType.Entity;
			}
			set
			{
				Base_TrainType previousValue = this._Base_TrainType.Entity;
				if (((previousValue != value) 
							|| (this._Base_TrainType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_TrainType.Entity = null;
						previousValue.Training_TrainRecord.Remove(this);
					}
					this._Base_TrainType.Entity = value;
					if ((value != null))
					{
						value.Training_TrainRecord.Add(this);
						this._TrainTypeId = value.TrainTypeId;
					}
					else
					{
						this._TrainTypeId = default(string);
					}
					this.SendPropertyChanged("Base_TrainType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_TrainRecordDetail(Training_TrainRecordDetail entity)
		{
			this.SendPropertyChanging();
			entity.Training_TrainRecord = this;
		}
		
		private void detach_Training_TrainRecordDetail(Training_TrainRecordDetail entity)
		{
			this.SendPropertyChanging();
			entity.Training_TrainRecord = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_TrainRecordDetail")]
	public partial class Training_TrainRecordDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainDetailId;
		
		private string _TrainRecordId;
		
		private string _PersonId;
		
		private System.Nullable<decimal> _CheckScore;
		
		private bool _CheckResult;
		
		private string _AttachUrl;
		
		private EntityRef<Training_TrainRecord> _Training_TrainRecord;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainDetailIdChanging(string value);
    partial void OnTrainDetailIdChanged();
    partial void OnTrainRecordIdChanging(string value);
    partial void OnTrainRecordIdChanged();
    partial void OnPersonIdChanging(string value);
    partial void OnPersonIdChanged();
    partial void OnCheckScoreChanging(System.Nullable<decimal> value);
    partial void OnCheckScoreChanged();
    partial void OnCheckResultChanging(bool value);
    partial void OnCheckResultChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    #endregion
		
		public Training_TrainRecordDetail()
		{
			this._Training_TrainRecord = default(EntityRef<Training_TrainRecord>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainDetailId
		{
			get
			{
				return this._TrainDetailId;
			}
			set
			{
				if ((this._TrainDetailId != value))
				{
					this.OnTrainDetailIdChanging(value);
					this.SendPropertyChanging();
					this._TrainDetailId = value;
					this.SendPropertyChanged("TrainDetailId");
					this.OnTrainDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainRecordId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrainRecordId
		{
			get
			{
				return this._TrainRecordId;
			}
			set
			{
				if ((this._TrainRecordId != value))
				{
					if (this._Training_TrainRecord.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainRecordIdChanging(value);
					this.SendPropertyChanging();
					this._TrainRecordId = value;
					this.SendPropertyChanged("TrainRecordId");
					this.OnTrainRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckScore", DbType="Decimal(9,1)")]
		public System.Nullable<decimal> CheckScore
		{
			get
			{
				return this._CheckScore;
			}
			set
			{
				if ((this._CheckScore != value))
				{
					this.OnCheckScoreChanging(value);
					this.SendPropertyChanging();
					this._CheckScore = value;
					this.SendPropertyChanged("CheckScore");
					this.OnCheckScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckResult", DbType="Bit NOT NULL")]
		public bool CheckResult
		{
			get
			{
				return this._CheckResult;
			}
			set
			{
				if ((this._CheckResult != value))
				{
					this.OnCheckResultChanging(value);
					this.SendPropertyChanging();
					this._CheckResult = value;
					this.SendPropertyChanged("CheckResult");
					this.OnCheckResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainDetail_Training_TrainRecord", Storage="_Training_TrainRecord", ThisKey="TrainRecordId", OtherKey="TrainRecordId", IsForeignKey=true)]
		public Training_TrainRecord Training_TrainRecord
		{
			get
			{
				return this._Training_TrainRecord.Entity;
			}
			set
			{
				Training_TrainRecord previousValue = this._Training_TrainRecord.Entity;
				if (((previousValue != value) 
							|| (this._Training_TrainRecord.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_TrainRecord.Entity = null;
						previousValue.Training_TrainRecordDetail.Remove(this);
					}
					this._Training_TrainRecord.Entity = value;
					if ((value != null))
					{
						value.Training_TrainRecordDetail.Add(this);
						this._TrainRecordId = value.TrainRecordId;
					}
					else
					{
						this._TrainRecordId = default(string);
					}
					this.SendPropertyChanged("Training_TrainRecord");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainRecordDetail_Sys_User", Storage="_Sys_User", ThisKey="PersonId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Training_TrainRecordDetail.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Training_TrainRecordDetail.Add(this);
						this._PersonId = value.UserId;
					}
					else
					{
						this._PersonId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_EduTrain_AccidentCaseItem")]
	public partial class View_EduTrain_AccidentCaseItem
	{
		
		private string _AccidentCaseItemId;
		
		private string _AccidentCaseId;
		
		private string _Activities;
		
		private string _AccidentName;
		
		private string _AccidentProfiles;
		
		private string _AccidentReview;
		
		private string _AccidentCaseName;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _CompileManName;
		
		public View_EduTrain_AccidentCaseItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentCaseItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccidentCaseItemId
		{
			get
			{
				return this._AccidentCaseItemId;
			}
			set
			{
				if ((this._AccidentCaseItemId != value))
				{
					this._AccidentCaseItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentCaseId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccidentCaseId
		{
			get
			{
				return this._AccidentCaseId;
			}
			set
			{
				if ((this._AccidentCaseId != value))
				{
					this._AccidentCaseId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activities", DbType="NVarChar(50)")]
		public string Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				if ((this._Activities != value))
				{
					this._Activities = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentName", DbType="NVarChar(50)")]
		public string AccidentName
		{
			get
			{
				return this._AccidentName;
			}
			set
			{
				if ((this._AccidentName != value))
				{
					this._AccidentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentProfiles", DbType="NVarChar(2000)")]
		public string AccidentProfiles
		{
			get
			{
				return this._AccidentProfiles;
			}
			set
			{
				if ((this._AccidentProfiles != value))
				{
					this._AccidentProfiles = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentReview", DbType="NVarChar(2000)")]
		public string AccidentReview
		{
			get
			{
				return this._AccidentReview;
			}
			set
			{
				if ((this._AccidentReview != value))
				{
					this._AccidentReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentCaseName", DbType="NVarChar(50)")]
		public string AccidentCaseName
		{
			get
			{
				return this._AccidentCaseName;
			}
			set
			{
				if ((this._AccidentCaseName != value))
				{
					this._AccidentCaseName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this._CompileMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this._CompileDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManName", DbType="NVarChar(20)")]
		public string CompileManName
		{
			get
			{
				return this._CompileManName;
			}
			set
			{
				if ((this._CompileManName != value))
				{
					this._CompileManName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Hazard_HiddenHazard")]
	public partial class View_Hazard_HiddenHazard
	{
		
		private string _HiddenHazardId;
		
		private string _HiddenHazardCode;
		
		private string _HiddenHazardName;
		
		private string _InstallationId;
		
		private string _InstallationCode;
		
		private string _InstallationName;
		
		private string _DepartId;
		
		private string _DepartCode;
		
		private string _DepartName;
		
		private string _FindManId;
		
		private string _FindManName;
		
		private System.Nullable<System.DateTime> _FindTime;
		
		private string _Description;
		
		private string _HiddenHazardPlace;
		
		private string _BePohotoUrl;
		
		private string _UnitId;
		
		private string _UnitCode;
		
		private string _UnitName;
		
		private string _CorrectManId;
		
		private string _CorrectManName;
		
		private string _CorrectUnitName;
		
		private System.Nullable<bool> _IsMajor;
		
		private string _IsMajorName;
		
		private System.Nullable<System.DateTime> _LimitTime;
		
		private string _HiddenHazardTypeId;
		
		private string _HiddenHazardTypeCode;
		
		private string _HiddenHazardTypeName;
		
		private string _CorrectMeasures;
		
		private string _ControlMeasures;
		
		private System.Nullable<decimal> _CorrectMoney;
		
		private string _CorrectScheme;
		
		private string _AuditManId;
		
		private string _AuditManName;
		
		private System.Nullable<System.DateTime> _AuditTime;
		
		private string _QHSEAuditManId;
		
		private string _QHSEAuditManName;
		
		private System.Nullable<System.DateTime> _QHSEAuditTime;
		
		private string _AfPohotoUrl;
		
		private System.Nullable<System.DateTime> _CorrectTime;
		
		private string _AcceptanceManId;
		
		private string _AcceptanceManName;
		
		private System.Nullable<System.DateTime> _AcceptanceTime;
		
		private string _States;
		
		private string _CorrectSchemeUrl;
		
		private System.Nullable<System.DateTime> _CorrectSchemeTime;
		
		private string _OperateManIds;
		
		private string _OperateManNames;
		
		private string _ReasonAnalysis;
		
		public View_Hazard_HiddenHazard()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HiddenHazardId
		{
			get
			{
				return this._HiddenHazardId;
			}
			set
			{
				if ((this._HiddenHazardId != value))
				{
					this._HiddenHazardId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardCode", DbType="NVarChar(50)")]
		public string HiddenHazardCode
		{
			get
			{
				return this._HiddenHazardCode;
			}
			set
			{
				if ((this._HiddenHazardCode != value))
				{
					this._HiddenHazardCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardName", DbType="NVarChar(200)")]
		public string HiddenHazardName
		{
			get
			{
				return this._HiddenHazardName;
			}
			set
			{
				if ((this._HiddenHazardName != value))
				{
					this._HiddenHazardName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					this._InstallationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationCode", DbType="NVarChar(50)")]
		public string InstallationCode
		{
			get
			{
				return this._InstallationCode;
			}
			set
			{
				if ((this._InstallationCode != value))
				{
					this._InstallationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationName", DbType="NVarChar(50)")]
		public string InstallationName
		{
			get
			{
				return this._InstallationName;
			}
			set
			{
				if ((this._InstallationName != value))
				{
					this._InstallationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartId", DbType="NVarChar(50)")]
		public string DepartId
		{
			get
			{
				return this._DepartId;
			}
			set
			{
				if ((this._DepartId != value))
				{
					this._DepartId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartCode", DbType="NVarChar(50)")]
		public string DepartCode
		{
			get
			{
				return this._DepartCode;
			}
			set
			{
				if ((this._DepartCode != value))
				{
					this._DepartCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartName", DbType="NVarChar(50)")]
		public string DepartName
		{
			get
			{
				return this._DepartName;
			}
			set
			{
				if ((this._DepartName != value))
				{
					this._DepartName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindManId", DbType="NVarChar(50)")]
		public string FindManId
		{
			get
			{
				return this._FindManId;
			}
			set
			{
				if ((this._FindManId != value))
				{
					this._FindManId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindManName", DbType="NVarChar(20)")]
		public string FindManName
		{
			get
			{
				return this._FindManName;
			}
			set
			{
				if ((this._FindManName != value))
				{
					this._FindManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FindTime
		{
			get
			{
				return this._FindTime;
			}
			set
			{
				if ((this._FindTime != value))
				{
					this._FindTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardPlace", DbType="NVarChar(200)")]
		public string HiddenHazardPlace
		{
			get
			{
				return this._HiddenHazardPlace;
			}
			set
			{
				if ((this._HiddenHazardPlace != value))
				{
					this._HiddenHazardPlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BePohotoUrl", DbType="NVarChar(2000)")]
		public string BePohotoUrl
		{
			get
			{
				return this._BePohotoUrl;
			}
			set
			{
				if ((this._BePohotoUrl != value))
				{
					this._BePohotoUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="NVarChar(20)")]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this._UnitCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectManId", DbType="NVarChar(50)")]
		public string CorrectManId
		{
			get
			{
				return this._CorrectManId;
			}
			set
			{
				if ((this._CorrectManId != value))
				{
					this._CorrectManId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectManName", DbType="NVarChar(20)")]
		public string CorrectManName
		{
			get
			{
				return this._CorrectManName;
			}
			set
			{
				if ((this._CorrectManName != value))
				{
					this._CorrectManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectUnitName", DbType="NVarChar(50)")]
		public string CorrectUnitName
		{
			get
			{
				return this._CorrectUnitName;
			}
			set
			{
				if ((this._CorrectUnitName != value))
				{
					this._CorrectUnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMajor", DbType="Bit")]
		public System.Nullable<bool> IsMajor
		{
			get
			{
				return this._IsMajor;
			}
			set
			{
				if ((this._IsMajor != value))
				{
					this._IsMajor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMajorName", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string IsMajorName
		{
			get
			{
				return this._IsMajorName;
			}
			set
			{
				if ((this._IsMajorName != value))
				{
					this._IsMajorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitTime
		{
			get
			{
				return this._LimitTime;
			}
			set
			{
				if ((this._LimitTime != value))
				{
					this._LimitTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardTypeId", DbType="NVarChar(50)")]
		public string HiddenHazardTypeId
		{
			get
			{
				return this._HiddenHazardTypeId;
			}
			set
			{
				if ((this._HiddenHazardTypeId != value))
				{
					this._HiddenHazardTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardTypeCode", DbType="NVarChar(50)")]
		public string HiddenHazardTypeCode
		{
			get
			{
				return this._HiddenHazardTypeCode;
			}
			set
			{
				if ((this._HiddenHazardTypeCode != value))
				{
					this._HiddenHazardTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardTypeName", DbType="NVarChar(50)")]
		public string HiddenHazardTypeName
		{
			get
			{
				return this._HiddenHazardTypeName;
			}
			set
			{
				if ((this._HiddenHazardTypeName != value))
				{
					this._HiddenHazardTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectMeasures", DbType="NVarChar(500)")]
		public string CorrectMeasures
		{
			get
			{
				return this._CorrectMeasures;
			}
			set
			{
				if ((this._CorrectMeasures != value))
				{
					this._CorrectMeasures = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlMeasures", DbType="NVarChar(500)")]
		public string ControlMeasures
		{
			get
			{
				return this._ControlMeasures;
			}
			set
			{
				if ((this._ControlMeasures != value))
				{
					this._ControlMeasures = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectMoney", DbType="Money")]
		public System.Nullable<decimal> CorrectMoney
		{
			get
			{
				return this._CorrectMoney;
			}
			set
			{
				if ((this._CorrectMoney != value))
				{
					this._CorrectMoney = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectScheme", DbType="NVarChar(800)")]
		public string CorrectScheme
		{
			get
			{
				return this._CorrectScheme;
			}
			set
			{
				if ((this._CorrectScheme != value))
				{
					this._CorrectScheme = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditManId", DbType="NVarChar(50)")]
		public string AuditManId
		{
			get
			{
				return this._AuditManId;
			}
			set
			{
				if ((this._AuditManId != value))
				{
					this._AuditManId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditManName", DbType="NVarChar(20)")]
		public string AuditManName
		{
			get
			{
				return this._AuditManName;
			}
			set
			{
				if ((this._AuditManName != value))
				{
					this._AuditManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditTime
		{
			get
			{
				return this._AuditTime;
			}
			set
			{
				if ((this._AuditTime != value))
				{
					this._AuditTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QHSEAuditManId", DbType="NVarChar(50)")]
		public string QHSEAuditManId
		{
			get
			{
				return this._QHSEAuditManId;
			}
			set
			{
				if ((this._QHSEAuditManId != value))
				{
					this._QHSEAuditManId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QHSEAuditManName", DbType="NVarChar(20)")]
		public string QHSEAuditManName
		{
			get
			{
				return this._QHSEAuditManName;
			}
			set
			{
				if ((this._QHSEAuditManName != value))
				{
					this._QHSEAuditManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QHSEAuditTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> QHSEAuditTime
		{
			get
			{
				return this._QHSEAuditTime;
			}
			set
			{
				if ((this._QHSEAuditTime != value))
				{
					this._QHSEAuditTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AfPohotoUrl", DbType="NVarChar(2000)")]
		public string AfPohotoUrl
		{
			get
			{
				return this._AfPohotoUrl;
			}
			set
			{
				if ((this._AfPohotoUrl != value))
				{
					this._AfPohotoUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CorrectTime
		{
			get
			{
				return this._CorrectTime;
			}
			set
			{
				if ((this._CorrectTime != value))
				{
					this._CorrectTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceManId", DbType="NVarChar(50)")]
		public string AcceptanceManId
		{
			get
			{
				return this._AcceptanceManId;
			}
			set
			{
				if ((this._AcceptanceManId != value))
				{
					this._AcceptanceManId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceManName", DbType="NVarChar(20)")]
		public string AcceptanceManName
		{
			get
			{
				return this._AcceptanceManName;
			}
			set
			{
				if ((this._AcceptanceManName != value))
				{
					this._AcceptanceManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptanceTime
		{
			get
			{
				return this._AcceptanceTime;
			}
			set
			{
				if ((this._AcceptanceTime != value))
				{
					this._AcceptanceTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this._States = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectSchemeUrl", DbType="NVarChar(2000)")]
		public string CorrectSchemeUrl
		{
			get
			{
				return this._CorrectSchemeUrl;
			}
			set
			{
				if ((this._CorrectSchemeUrl != value))
				{
					this._CorrectSchemeUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectSchemeTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CorrectSchemeTime
		{
			get
			{
				return this._CorrectSchemeTime;
			}
			set
			{
				if ((this._CorrectSchemeTime != value))
				{
					this._CorrectSchemeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateManIds", DbType="NVarChar(2000)")]
		public string OperateManIds
		{
			get
			{
				return this._OperateManIds;
			}
			set
			{
				if ((this._OperateManIds != value))
				{
					this._OperateManIds = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateManNames", DbType="NVarChar(2000)")]
		public string OperateManNames
		{
			get
			{
				return this._OperateManNames;
			}
			set
			{
				if ((this._OperateManNames != value))
				{
					this._OperateManNames = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonAnalysis", DbType="NVarChar(2000)")]
		public string ReasonAnalysis
		{
			get
			{
				return this._ReasonAnalysis;
			}
			set
			{
				if ((this._ReasonAnalysis != value))
				{
					this._ReasonAnalysis = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Hazard_JHAItem")]
	public partial class View_Hazard_JHAItem
	{
		
		private string _JHAItemId;
		
		private System.Nullable<int> _SortIndex;
		
		private string _JobStep;
		
		private string _PossibleAccidents;
		
		private string _NowControlMeasures;
		
		private System.Nullable<decimal> _HazardJudge_L;
		
		private System.Nullable<decimal> _HazardJudge_S;
		
		private System.Nullable<decimal> _HazardJudge_R;
		
		private string _RiskLevel;
		
		private string _ControlMeasures;
		
		private string _ManagementMeasures;
		
		private string _ProtectiveMeasures;
		
		private string _OtherMeasures;
		
		private string _JobActivityId;
		
		private System.Nullable<decimal> _HazardJudge_L1;
		
		private System.Nullable<decimal> _HazardJudge_L2;
		
		private System.Nullable<decimal> _HazardJudge_L3;
		
		private System.Nullable<decimal> _HazardJudge_L4;
		
		private System.Nullable<decimal> _HazardJudge_S1;
		
		private System.Nullable<decimal> _HazardJudge_S2;
		
		private System.Nullable<decimal> _HazardJudge_S3;
		
		private System.Nullable<decimal> _HazardJudge_S4;
		
		private System.Nullable<decimal> _HazardJudge_S5;
		
		private string _RiskLevelName;
		
		public View_Hazard_JHAItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JHAItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JHAItemId
		{
			get
			{
				return this._JHAItemId;
			}
			set
			{
				if ((this._JHAItemId != value))
				{
					this._JHAItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this._SortIndex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStep", DbType="NVarChar(50)")]
		public string JobStep
		{
			get
			{
				return this._JobStep;
			}
			set
			{
				if ((this._JobStep != value))
				{
					this._JobStep = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossibleAccidents", DbType="NVarChar(500)")]
		public string PossibleAccidents
		{
			get
			{
				return this._PossibleAccidents;
			}
			set
			{
				if ((this._PossibleAccidents != value))
				{
					this._PossibleAccidents = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NowControlMeasures", DbType="NVarChar(800)")]
		public string NowControlMeasures
		{
			get
			{
				return this._NowControlMeasures;
			}
			set
			{
				if ((this._NowControlMeasures != value))
				{
					this._NowControlMeasures = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_L", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_L
		{
			get
			{
				return this._HazardJudge_L;
			}
			set
			{
				if ((this._HazardJudge_L != value))
				{
					this._HazardJudge_L = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S
		{
			get
			{
				return this._HazardJudge_S;
			}
			set
			{
				if ((this._HazardJudge_S != value))
				{
					this._HazardJudge_S = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_R", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_R
		{
			get
			{
				return this._HazardJudge_R;
			}
			set
			{
				if ((this._HazardJudge_R != value))
				{
					this._HazardJudge_R = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="NVarChar(50)")]
		public string RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this._RiskLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlMeasures", DbType="NVarChar(800)")]
		public string ControlMeasures
		{
			get
			{
				return this._ControlMeasures;
			}
			set
			{
				if ((this._ControlMeasures != value))
				{
					this._ControlMeasures = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagementMeasures", DbType="NVarChar(800)")]
		public string ManagementMeasures
		{
			get
			{
				return this._ManagementMeasures;
			}
			set
			{
				if ((this._ManagementMeasures != value))
				{
					this._ManagementMeasures = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtectiveMeasures", DbType="NVarChar(800)")]
		public string ProtectiveMeasures
		{
			get
			{
				return this._ProtectiveMeasures;
			}
			set
			{
				if ((this._ProtectiveMeasures != value))
				{
					this._ProtectiveMeasures = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(800)")]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this._OtherMeasures = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobActivityId", DbType="NVarChar(50)")]
		public string JobActivityId
		{
			get
			{
				return this._JobActivityId;
			}
			set
			{
				if ((this._JobActivityId != value))
				{
					this._JobActivityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_L1", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_L1
		{
			get
			{
				return this._HazardJudge_L1;
			}
			set
			{
				if ((this._HazardJudge_L1 != value))
				{
					this._HazardJudge_L1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_L2", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_L2
		{
			get
			{
				return this._HazardJudge_L2;
			}
			set
			{
				if ((this._HazardJudge_L2 != value))
				{
					this._HazardJudge_L2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_L3", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_L3
		{
			get
			{
				return this._HazardJudge_L3;
			}
			set
			{
				if ((this._HazardJudge_L3 != value))
				{
					this._HazardJudge_L3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_L4", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_L4
		{
			get
			{
				return this._HazardJudge_L4;
			}
			set
			{
				if ((this._HazardJudge_L4 != value))
				{
					this._HazardJudge_L4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S1", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S1
		{
			get
			{
				return this._HazardJudge_S1;
			}
			set
			{
				if ((this._HazardJudge_S1 != value))
				{
					this._HazardJudge_S1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S2", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S2
		{
			get
			{
				return this._HazardJudge_S2;
			}
			set
			{
				if ((this._HazardJudge_S2 != value))
				{
					this._HazardJudge_S2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S3", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S3
		{
			get
			{
				return this._HazardJudge_S3;
			}
			set
			{
				if ((this._HazardJudge_S3 != value))
				{
					this._HazardJudge_S3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S4", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S4
		{
			get
			{
				return this._HazardJudge_S4;
			}
			set
			{
				if ((this._HazardJudge_S4 != value))
				{
					this._HazardJudge_S4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_S5", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_S5
		{
			get
			{
				return this._HazardJudge_S5;
			}
			set
			{
				if ((this._HazardJudge_S5 != value))
				{
					this._HazardJudge_S5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevelName", DbType="NVarChar(100)")]
		public string RiskLevelName
		{
			get
			{
				return this._RiskLevelName;
			}
			set
			{
				if ((this._RiskLevelName != value))
				{
					this._RiskLevelName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Hazard_RiskList")]
	public partial class View_Hazard_RiskList
	{
		
		private string _RiskListId;
		
		private string _HiddenHazardId;
		
		private string _HiddenHazardCode;
		
		private string _HiddenHazardName;
		
		private string _InstallationId;
		
		private string _InstallationName;
		
		private string _RiskPlace;
		
		private string _TaskActivity;
		
		private string _HazardDescription;
		
		private string _PossibleAccidents;
		
		private string _RiskLevel;
		
		private string _RiskLevelName;
		
		private System.Nullable<int> _RiskValue;
		
		private string _ControlMeasures;
		
		private string _ManagementMeasures;
		
		private string _ProtectiveMeasures;
		
		private string _OtherMeasures;
		
		private string _ControlUnit;
		
		private string _ControlRiskLevel;
		
		private string _EvaluationMethod;
		
		private System.Nullable<bool> _Cancelled;
		
		private string _States;
		
		private string _ControlUnitId;
		
		private string _ControlUnitName;
		
		private string _ControlInstallationId;
		
		private string _ControlInstallationName;
		
		private System.Nullable<int> _PatrolFrequency;
		
		private string _LECItemId;
		
		private string _SCLItemId;
		
		private string _JHAItemId;
		
		private string _RiskManId;
		
		private string _RiskManName;
		
		private System.Nullable<System.DateTime> _EvaluationTime;
		
		private string _RiskOwnerIds;
		
		private string _RiskOwnerNames;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private string _QRCodePosition;
		
		private System.Nullable<bool> _IsUsed;
		
		public View_Hazard_RiskList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskListId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RiskListId
		{
			get
			{
				return this._RiskListId;
			}
			set
			{
				if ((this._RiskListId != value))
				{
					this._RiskListId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardId", DbType="NVarChar(50)")]
		public string HiddenHazardId
		{
			get
			{
				return this._HiddenHazardId;
			}
			set
			{
				if ((this._HiddenHazardId != value))
				{
					this._HiddenHazardId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardCode", DbType="NVarChar(50)")]
		public string HiddenHazardCode
		{
			get
			{
				return this._HiddenHazardCode;
			}
			set
			{
				if ((this._HiddenHazardCode != value))
				{
					this._HiddenHazardCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenHazardName", DbType="NVarChar(200)")]
		public string HiddenHazardName
		{
			get
			{
				return this._HiddenHazardName;
			}
			set
			{
				if ((this._HiddenHazardName != value))
				{
					this._HiddenHazardName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					this._InstallationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationName", DbType="NVarChar(50)")]
		public string InstallationName
		{
			get
			{
				return this._InstallationName;
			}
			set
			{
				if ((this._InstallationName != value))
				{
					this._InstallationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskPlace", DbType="NVarChar(200)")]
		public string RiskPlace
		{
			get
			{
				return this._RiskPlace;
			}
			set
			{
				if ((this._RiskPlace != value))
				{
					this._RiskPlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskActivity", DbType="NVarChar(200)")]
		public string TaskActivity
		{
			get
			{
				return this._TaskActivity;
			}
			set
			{
				if ((this._TaskActivity != value))
				{
					this._TaskActivity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardDescription", DbType="NVarChar(500)")]
		public string HazardDescription
		{
			get
			{
				return this._HazardDescription;
			}
			set
			{
				if ((this._HazardDescription != value))
				{
					this._HazardDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossibleAccidents", DbType="NVarChar(200)")]
		public string PossibleAccidents
		{
			get
			{
				return this._PossibleAccidents;
			}
			set
			{
				if ((this._PossibleAccidents != value))
				{
					this._PossibleAccidents = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="NVarChar(50)")]
		public string RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this._RiskLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevelName", DbType="NVarChar(100)")]
		public string RiskLevelName
		{
			get
			{
				return this._RiskLevelName;
			}
			set
			{
				if ((this._RiskLevelName != value))
				{
					this._RiskLevelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskValue", DbType="Int")]
		public System.Nullable<int> RiskValue
		{
			get
			{
				return this._RiskValue;
			}
			set
			{
				if ((this._RiskValue != value))
				{
					this._RiskValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlMeasures", DbType="NVarChar(800)")]
		public string ControlMeasures
		{
			get
			{
				return this._ControlMeasures;
			}
			set
			{
				if ((this._ControlMeasures != value))
				{
					this._ControlMeasures = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagementMeasures", DbType="NVarChar(800)")]
		public string ManagementMeasures
		{
			get
			{
				return this._ManagementMeasures;
			}
			set
			{
				if ((this._ManagementMeasures != value))
				{
					this._ManagementMeasures = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtectiveMeasures", DbType="NVarChar(800)")]
		public string ProtectiveMeasures
		{
			get
			{
				return this._ProtectiveMeasures;
			}
			set
			{
				if ((this._ProtectiveMeasures != value))
				{
					this._ProtectiveMeasures = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(800)")]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this._OtherMeasures = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlUnit", DbType="NVarChar(200)")]
		public string ControlUnit
		{
			get
			{
				return this._ControlUnit;
			}
			set
			{
				if ((this._ControlUnit != value))
				{
					this._ControlUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlRiskLevel", DbType="NVarChar(50)")]
		public string ControlRiskLevel
		{
			get
			{
				return this._ControlRiskLevel;
			}
			set
			{
				if ((this._ControlRiskLevel != value))
				{
					this._ControlRiskLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationMethod", DbType="NVarChar(50)")]
		public string EvaluationMethod
		{
			get
			{
				return this._EvaluationMethod;
			}
			set
			{
				if ((this._EvaluationMethod != value))
				{
					this._EvaluationMethod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cancelled", DbType="Bit")]
		public System.Nullable<bool> Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this._Cancelled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this._States = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlUnitId", DbType="NVarChar(50)")]
		public string ControlUnitId
		{
			get
			{
				return this._ControlUnitId;
			}
			set
			{
				if ((this._ControlUnitId != value))
				{
					this._ControlUnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlUnitName", DbType="NVarChar(50)")]
		public string ControlUnitName
		{
			get
			{
				return this._ControlUnitName;
			}
			set
			{
				if ((this._ControlUnitName != value))
				{
					this._ControlUnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlInstallationId", DbType="NVarChar(50)")]
		public string ControlInstallationId
		{
			get
			{
				return this._ControlInstallationId;
			}
			set
			{
				if ((this._ControlInstallationId != value))
				{
					this._ControlInstallationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlInstallationName", DbType="NVarChar(50)")]
		public string ControlInstallationName
		{
			get
			{
				return this._ControlInstallationName;
			}
			set
			{
				if ((this._ControlInstallationName != value))
				{
					this._ControlInstallationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatrolFrequency", DbType="Int")]
		public System.Nullable<int> PatrolFrequency
		{
			get
			{
				return this._PatrolFrequency;
			}
			set
			{
				if ((this._PatrolFrequency != value))
				{
					this._PatrolFrequency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LECItemId", DbType="NVarChar(50)")]
		public string LECItemId
		{
			get
			{
				return this._LECItemId;
			}
			set
			{
				if ((this._LECItemId != value))
				{
					this._LECItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCLItemId", DbType="NVarChar(50)")]
		public string SCLItemId
		{
			get
			{
				return this._SCLItemId;
			}
			set
			{
				if ((this._SCLItemId != value))
				{
					this._SCLItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JHAItemId", DbType="NVarChar(50)")]
		public string JHAItemId
		{
			get
			{
				return this._JHAItemId;
			}
			set
			{
				if ((this._JHAItemId != value))
				{
					this._JHAItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskManId", DbType="NVarChar(50)")]
		public string RiskManId
		{
			get
			{
				return this._RiskManId;
			}
			set
			{
				if ((this._RiskManId != value))
				{
					this._RiskManId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskManName", DbType="NVarChar(20)")]
		public string RiskManName
		{
			get
			{
				return this._RiskManName;
			}
			set
			{
				if ((this._RiskManName != value))
				{
					this._RiskManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EvaluationTime
		{
			get
			{
				return this._EvaluationTime;
			}
			set
			{
				if ((this._EvaluationTime != value))
				{
					this._EvaluationTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskOwnerIds", DbType="NVarChar(4000)")]
		public string RiskOwnerIds
		{
			get
			{
				return this._RiskOwnerIds;
			}
			set
			{
				if ((this._RiskOwnerIds != value))
				{
					this._RiskOwnerIds = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskOwnerNames", DbType="NVarChar(4000)")]
		public string RiskOwnerNames
		{
			get
			{
				return this._RiskOwnerNames;
			}
			set
			{
				if ((this._RiskOwnerNames != value))
				{
					this._RiskOwnerNames = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodePosition", DbType="NVarChar(200)")]
		public string QRCodePosition
		{
			get
			{
				return this._QRCodePosition;
			}
			set
			{
				if ((this._QRCodePosition != value))
				{
					this._QRCodePosition = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this._IsUsed = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Hazard_RoutingInspection")]
	public partial class View_Hazard_RoutingInspection
	{
		
		private string _RoutingInspectionId;
		
		private string _RiskListId;
		
		private string _PatrolManId;
		
		private string _PatrolManName;
		
		private System.Nullable<System.DateTime> _PatrolTime;
		
		private string _PatrolResultName;
		
		private string _RiskLevel;
		
		private string _OldRiskLevel;
		
		private string _PohotoUrl;
		
		private string _StatesName;
		
		private string _InstallationName;
		
		private string _TaskActivity;
		
		private string _HazardDescription;
		
		private string _NowRiskLevel;
		
		private System.Nullable<bool> _IsFiled;
		
		public View_Hazard_RoutingInspection()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoutingInspectionId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoutingInspectionId
		{
			get
			{
				return this._RoutingInspectionId;
			}
			set
			{
				if ((this._RoutingInspectionId != value))
				{
					this._RoutingInspectionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskListId", DbType="NVarChar(50)")]
		public string RiskListId
		{
			get
			{
				return this._RiskListId;
			}
			set
			{
				if ((this._RiskListId != value))
				{
					this._RiskListId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatrolManId", DbType="NVarChar(50)")]
		public string PatrolManId
		{
			get
			{
				return this._PatrolManId;
			}
			set
			{
				if ((this._PatrolManId != value))
				{
					this._PatrolManId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatrolManName", DbType="NVarChar(20)")]
		public string PatrolManName
		{
			get
			{
				return this._PatrolManName;
			}
			set
			{
				if ((this._PatrolManName != value))
				{
					this._PatrolManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatrolTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PatrolTime
		{
			get
			{
				return this._PatrolTime;
			}
			set
			{
				if ((this._PatrolTime != value))
				{
					this._PatrolTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatrolResultName", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string PatrolResultName
		{
			get
			{
				return this._PatrolResultName;
			}
			set
			{
				if ((this._PatrolResultName != value))
				{
					this._PatrolResultName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="NVarChar(50)")]
		public string RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this._RiskLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldRiskLevel", DbType="NVarChar(100)")]
		public string OldRiskLevel
		{
			get
			{
				return this._OldRiskLevel;
			}
			set
			{
				if ((this._OldRiskLevel != value))
				{
					this._OldRiskLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PohotoUrl", DbType="NVarChar(2000)")]
		public string PohotoUrl
		{
			get
			{
				return this._PohotoUrl;
			}
			set
			{
				if ((this._PohotoUrl != value))
				{
					this._PohotoUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatesName", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string StatesName
		{
			get
			{
				return this._StatesName;
			}
			set
			{
				if ((this._StatesName != value))
				{
					this._StatesName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationName", DbType="NVarChar(50)")]
		public string InstallationName
		{
			get
			{
				return this._InstallationName;
			}
			set
			{
				if ((this._InstallationName != value))
				{
					this._InstallationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskActivity", DbType="NVarChar(200)")]
		public string TaskActivity
		{
			get
			{
				return this._TaskActivity;
			}
			set
			{
				if ((this._TaskActivity != value))
				{
					this._TaskActivity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardDescription", DbType="NVarChar(500)")]
		public string HazardDescription
		{
			get
			{
				return this._HazardDescription;
			}
			set
			{
				if ((this._HazardDescription != value))
				{
					this._HazardDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NowRiskLevel", DbType="NVarChar(100)")]
		public string NowRiskLevel
		{
			get
			{
				return this._NowRiskLevel;
			}
			set
			{
				if ((this._NowRiskLevel != value))
				{
					this._NowRiskLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="isFiled", Storage="_IsFiled", DbType="Bit")]
		public System.Nullable<bool> IsFiled
		{
			get
			{
				return this._IsFiled;
			}
			set
			{
				if ((this._IsFiled != value))
				{
					this._IsFiled = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_License_BlindPlate")]
	public partial class View_License_BlindPlate
	{
		
		private string _BlindPlateId;
		
		private string _LicenseCode;
		
		private string _InstallationId;
		
		private string _ApplyUnitName;
		
		private string _ApplyManName;
		
		private string _EquipmentName;
		
		private string _Medium;
		
		private string _Temperature;
		
		private string _Pressure;
		
		private string _Material;
		
		private string _Specification;
		
		private string _Number;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private string _Implement;
		
		private string _OperatorManId;
		
		private string _JobManName;
		
		private string _ProcessGuardian;
		
		private string _OtherSpecial;
		
		private string _Numbering;
		
		private System.Nullable<bool> _SIsUsed1;
		
		private System.Nullable<bool> _SIsUsed2;
		
		private System.Nullable<bool> _SIsUsed3;
		
		private System.Nullable<bool> _SIsUsed4;
		
		private System.Nullable<bool> _SIsUsed5;
		
		private System.Nullable<bool> _SIsUsed6;
		
		private System.Nullable<bool> _SIsUsed7;
		
		private int _SIsUsed8;
		
		private string _SafetyMeasures1;
		
		private string _SafetyMeasures2;
		
		private string _SafetyMeasures3;
		
		private string _SafetyMeasures4;
		
		private string _SafetyMeasures5;
		
		private string _SafetyMeasures6;
		
		private string _SafetyMeasures7;
		
		private string _OtherMeasures;
		
		public View_License_BlindPlate()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlindPlateId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BlindPlateId
		{
			get
			{
				return this._BlindPlateId;
			}
			set
			{
				if ((this._BlindPlateId != value))
				{
					this._BlindPlateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(50)")]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this._LicenseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					this._InstallationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitName", DbType="NVarChar(50)")]
		public string ApplyUnitName
		{
			get
			{
				return this._ApplyUnitName;
			}
			set
			{
				if ((this._ApplyUnitName != value))
				{
					this._ApplyUnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyManName", DbType="NVarChar(20)")]
		public string ApplyManName
		{
			get
			{
				return this._ApplyManName;
			}
			set
			{
				if ((this._ApplyManName != value))
				{
					this._ApplyManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentName", DbType="NVarChar(200)")]
		public string EquipmentName
		{
			get
			{
				return this._EquipmentName;
			}
			set
			{
				if ((this._EquipmentName != value))
				{
					this._EquipmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Medium", DbType="NVarChar(50)")]
		public string Medium
		{
			get
			{
				return this._Medium;
			}
			set
			{
				if ((this._Medium != value))
				{
					this._Medium = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temperature", DbType="NVarChar(50)")]
		public string Temperature
		{
			get
			{
				return this._Temperature;
			}
			set
			{
				if ((this._Temperature != value))
				{
					this._Temperature = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pressure", DbType="NVarChar(50)")]
		public string Pressure
		{
			get
			{
				return this._Pressure;
			}
			set
			{
				if ((this._Pressure != value))
				{
					this._Pressure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material", DbType="NVarChar(200)")]
		public string Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				if ((this._Material != value))
				{
					this._Material = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specification", DbType="NVarChar(50)")]
		public string Specification
		{
			get
			{
				return this._Specification;
			}
			set
			{
				if ((this._Specification != value))
				{
					this._Specification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this._EffectiveDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Implement", DbType="NChar(1)")]
		public string Implement
		{
			get
			{
				return this._Implement;
			}
			set
			{
				if ((this._Implement != value))
				{
					this._Implement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorManId", DbType="NVarChar(2000)")]
		public string OperatorManId
		{
			get
			{
				return this._OperatorManId;
			}
			set
			{
				if ((this._OperatorManId != value))
				{
					this._OperatorManId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobManName", DbType="NVarChar(2000)")]
		public string JobManName
		{
			get
			{
				return this._JobManName;
			}
			set
			{
				if ((this._JobManName != value))
				{
					this._JobManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessGuardian", DbType="NVarChar(50)")]
		public string ProcessGuardian
		{
			get
			{
				return this._ProcessGuardian;
			}
			set
			{
				if ((this._ProcessGuardian != value))
				{
					this._ProcessGuardian = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherSpecial", DbType="NVarChar(100)")]
		public string OtherSpecial
		{
			get
			{
				return this._OtherSpecial;
			}
			set
			{
				if ((this._OtherSpecial != value))
				{
					this._OtherSpecial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numbering", DbType="NVarChar(50)")]
		public string Numbering
		{
			get
			{
				return this._Numbering;
			}
			set
			{
				if ((this._Numbering != value))
				{
					this._Numbering = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed1", DbType="Bit")]
		public System.Nullable<bool> SIsUsed1
		{
			get
			{
				return this._SIsUsed1;
			}
			set
			{
				if ((this._SIsUsed1 != value))
				{
					this._SIsUsed1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed2", DbType="Bit")]
		public System.Nullable<bool> SIsUsed2
		{
			get
			{
				return this._SIsUsed2;
			}
			set
			{
				if ((this._SIsUsed2 != value))
				{
					this._SIsUsed2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed3", DbType="Bit")]
		public System.Nullable<bool> SIsUsed3
		{
			get
			{
				return this._SIsUsed3;
			}
			set
			{
				if ((this._SIsUsed3 != value))
				{
					this._SIsUsed3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed4", DbType="Bit")]
		public System.Nullable<bool> SIsUsed4
		{
			get
			{
				return this._SIsUsed4;
			}
			set
			{
				if ((this._SIsUsed4 != value))
				{
					this._SIsUsed4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed5", DbType="Bit")]
		public System.Nullable<bool> SIsUsed5
		{
			get
			{
				return this._SIsUsed5;
			}
			set
			{
				if ((this._SIsUsed5 != value))
				{
					this._SIsUsed5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed6", DbType="Bit")]
		public System.Nullable<bool> SIsUsed6
		{
			get
			{
				return this._SIsUsed6;
			}
			set
			{
				if ((this._SIsUsed6 != value))
				{
					this._SIsUsed6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed7", DbType="Bit")]
		public System.Nullable<bool> SIsUsed7
		{
			get
			{
				return this._SIsUsed7;
			}
			set
			{
				if ((this._SIsUsed7 != value))
				{
					this._SIsUsed7 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed8", DbType="Int NOT NULL")]
		public int SIsUsed8
		{
			get
			{
				return this._SIsUsed8;
			}
			set
			{
				if ((this._SIsUsed8 != value))
				{
					this._SIsUsed8 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures1", DbType="NVarChar(2000)")]
		public string SafetyMeasures1
		{
			get
			{
				return this._SafetyMeasures1;
			}
			set
			{
				if ((this._SafetyMeasures1 != value))
				{
					this._SafetyMeasures1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures2", DbType="NVarChar(2000)")]
		public string SafetyMeasures2
		{
			get
			{
				return this._SafetyMeasures2;
			}
			set
			{
				if ((this._SafetyMeasures2 != value))
				{
					this._SafetyMeasures2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures3", DbType="NVarChar(2000)")]
		public string SafetyMeasures3
		{
			get
			{
				return this._SafetyMeasures3;
			}
			set
			{
				if ((this._SafetyMeasures3 != value))
				{
					this._SafetyMeasures3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures4", DbType="NVarChar(2000)")]
		public string SafetyMeasures4
		{
			get
			{
				return this._SafetyMeasures4;
			}
			set
			{
				if ((this._SafetyMeasures4 != value))
				{
					this._SafetyMeasures4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures5", DbType="NVarChar(2000)")]
		public string SafetyMeasures5
		{
			get
			{
				return this._SafetyMeasures5;
			}
			set
			{
				if ((this._SafetyMeasures5 != value))
				{
					this._SafetyMeasures5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures6", DbType="NVarChar(2000)")]
		public string SafetyMeasures6
		{
			get
			{
				return this._SafetyMeasures6;
			}
			set
			{
				if ((this._SafetyMeasures6 != value))
				{
					this._SafetyMeasures6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures7", DbType="NVarChar(2000)")]
		public string SafetyMeasures7
		{
			get
			{
				return this._SafetyMeasures7;
			}
			set
			{
				if ((this._SafetyMeasures7 != value))
				{
					this._SafetyMeasures7 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(514) NOT NULL", CanBeNull=false)]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this._OtherMeasures = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_License_BreakGround")]
	public partial class View_License_BreakGround
	{
		
		private string _BreakGroundId;
		
		private string _ApplyUintName;
		
		private string _ApplyManName;
		
		private string _LicenseCode;
		
		private string _JobMans;
		
		private string _JobTime;
		
		private string _JobPalce;
		
		private string _JobUnit;
		
		private string _OtherMeasures;
		
		private string _HAZIDName;
		
		private System.Nullable<bool> _SIsUsed1;
		
		private System.Nullable<bool> _SIsUsed2;
		
		private System.Nullable<bool> _SIsUsed3;
		
		private System.Nullable<bool> _SIsUsed4;
		
		private System.Nullable<bool> _SIsUsed5;
		
		private System.Nullable<bool> _SIsUsed6;
		
		private System.Nullable<bool> _SIsUsed7;
		
		private System.Nullable<bool> _SIsUsed8;
		
		private System.Nullable<bool> _SIsUsed9;
		
		private System.Nullable<bool> _SIsUsed10;
		
		private System.Nullable<bool> _SIsUsed11;
		
		private System.Nullable<bool> _SIsUsed12;
		
		private System.Nullable<bool> _SIsUsed13;
		
		private System.Nullable<bool> _SIsUsed14;
		
		private System.Nullable<bool> _SIsUsed15;
		
		private int _SIsUsed16;
		
		private string _SafetyMeasures1;
		
		private string _SafetyMeasures2;
		
		private string _SafetyMeasures3;
		
		private string _SafetyMeasures4;
		
		private string _SafetyMeasures5;
		
		private string _SafetyMeasures6;
		
		private string _SafetyMeasures7;
		
		private string _SafetyMeasures8;
		
		private string _SafetyMeasures9;
		
		private string _SafetyMeasures10;
		
		private string _SafetyMeasures11;
		
		private string _SafetyMeasures12;
		
		private string _SafetyMeasures13;
		
		private string _SafetyMeasures14;
		
		private string _SafetyMeasures15;
		
		private string _SafetyMeasures16;
		
		public View_License_BreakGround()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakGroundId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BreakGroundId
		{
			get
			{
				return this._BreakGroundId;
			}
			set
			{
				if ((this._BreakGroundId != value))
				{
					this._BreakGroundId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUintName", DbType="NVarChar(50)")]
		public string ApplyUintName
		{
			get
			{
				return this._ApplyUintName;
			}
			set
			{
				if ((this._ApplyUintName != value))
				{
					this._ApplyUintName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyManName", DbType="NVarChar(20)")]
		public string ApplyManName
		{
			get
			{
				return this._ApplyManName;
			}
			set
			{
				if ((this._ApplyManName != value))
				{
					this._ApplyManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(50)")]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this._LicenseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobMans", DbType="NVarChar(200)")]
		public string JobMans
		{
			get
			{
				return this._JobMans;
			}
			set
			{
				if ((this._JobMans != value))
				{
					this._JobMans = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTime", DbType="NVarChar(328)")]
		public string JobTime
		{
			get
			{
				return this._JobTime;
			}
			set
			{
				if ((this._JobTime != value))
				{
					this._JobTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPalce", DbType="NVarChar(500)")]
		public string JobPalce
		{
			get
			{
				return this._JobPalce;
			}
			set
			{
				if ((this._JobPalce != value))
				{
					this._JobPalce = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnit", DbType="NVarChar(500)")]
		public string JobUnit
		{
			get
			{
				return this._JobUnit;
			}
			set
			{
				if ((this._JobUnit != value))
				{
					this._JobUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(500)")]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this._OtherMeasures = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZIDName", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string HAZIDName
		{
			get
			{
				return this._HAZIDName;
			}
			set
			{
				if ((this._HAZIDName != value))
				{
					this._HAZIDName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed1", DbType="Bit")]
		public System.Nullable<bool> SIsUsed1
		{
			get
			{
				return this._SIsUsed1;
			}
			set
			{
				if ((this._SIsUsed1 != value))
				{
					this._SIsUsed1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed2", DbType="Bit")]
		public System.Nullable<bool> SIsUsed2
		{
			get
			{
				return this._SIsUsed2;
			}
			set
			{
				if ((this._SIsUsed2 != value))
				{
					this._SIsUsed2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed3", DbType="Bit")]
		public System.Nullable<bool> SIsUsed3
		{
			get
			{
				return this._SIsUsed3;
			}
			set
			{
				if ((this._SIsUsed3 != value))
				{
					this._SIsUsed3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed4", DbType="Bit")]
		public System.Nullable<bool> SIsUsed4
		{
			get
			{
				return this._SIsUsed4;
			}
			set
			{
				if ((this._SIsUsed4 != value))
				{
					this._SIsUsed4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed5", DbType="Bit")]
		public System.Nullable<bool> SIsUsed5
		{
			get
			{
				return this._SIsUsed5;
			}
			set
			{
				if ((this._SIsUsed5 != value))
				{
					this._SIsUsed5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed6", DbType="Bit")]
		public System.Nullable<bool> SIsUsed6
		{
			get
			{
				return this._SIsUsed6;
			}
			set
			{
				if ((this._SIsUsed6 != value))
				{
					this._SIsUsed6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed7", DbType="Bit")]
		public System.Nullable<bool> SIsUsed7
		{
			get
			{
				return this._SIsUsed7;
			}
			set
			{
				if ((this._SIsUsed7 != value))
				{
					this._SIsUsed7 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed8", DbType="Bit")]
		public System.Nullable<bool> SIsUsed8
		{
			get
			{
				return this._SIsUsed8;
			}
			set
			{
				if ((this._SIsUsed8 != value))
				{
					this._SIsUsed8 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed9", DbType="Bit")]
		public System.Nullable<bool> SIsUsed9
		{
			get
			{
				return this._SIsUsed9;
			}
			set
			{
				if ((this._SIsUsed9 != value))
				{
					this._SIsUsed9 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed10", DbType="Bit")]
		public System.Nullable<bool> SIsUsed10
		{
			get
			{
				return this._SIsUsed10;
			}
			set
			{
				if ((this._SIsUsed10 != value))
				{
					this._SIsUsed10 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed11", DbType="Bit")]
		public System.Nullable<bool> SIsUsed11
		{
			get
			{
				return this._SIsUsed11;
			}
			set
			{
				if ((this._SIsUsed11 != value))
				{
					this._SIsUsed11 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed12", DbType="Bit")]
		public System.Nullable<bool> SIsUsed12
		{
			get
			{
				return this._SIsUsed12;
			}
			set
			{
				if ((this._SIsUsed12 != value))
				{
					this._SIsUsed12 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed13", DbType="Bit")]
		public System.Nullable<bool> SIsUsed13
		{
			get
			{
				return this._SIsUsed13;
			}
			set
			{
				if ((this._SIsUsed13 != value))
				{
					this._SIsUsed13 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed14", DbType="Bit")]
		public System.Nullable<bool> SIsUsed14
		{
			get
			{
				return this._SIsUsed14;
			}
			set
			{
				if ((this._SIsUsed14 != value))
				{
					this._SIsUsed14 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed15", DbType="Bit")]
		public System.Nullable<bool> SIsUsed15
		{
			get
			{
				return this._SIsUsed15;
			}
			set
			{
				if ((this._SIsUsed15 != value))
				{
					this._SIsUsed15 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed16", DbType="Int NOT NULL")]
		public int SIsUsed16
		{
			get
			{
				return this._SIsUsed16;
			}
			set
			{
				if ((this._SIsUsed16 != value))
				{
					this._SIsUsed16 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures1", DbType="NVarChar(2000)")]
		public string SafetyMeasures1
		{
			get
			{
				return this._SafetyMeasures1;
			}
			set
			{
				if ((this._SafetyMeasures1 != value))
				{
					this._SafetyMeasures1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures2", DbType="NVarChar(2000)")]
		public string SafetyMeasures2
		{
			get
			{
				return this._SafetyMeasures2;
			}
			set
			{
				if ((this._SafetyMeasures2 != value))
				{
					this._SafetyMeasures2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures3", DbType="NVarChar(2000)")]
		public string SafetyMeasures3
		{
			get
			{
				return this._SafetyMeasures3;
			}
			set
			{
				if ((this._SafetyMeasures3 != value))
				{
					this._SafetyMeasures3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures4", DbType="NVarChar(2000)")]
		public string SafetyMeasures4
		{
			get
			{
				return this._SafetyMeasures4;
			}
			set
			{
				if ((this._SafetyMeasures4 != value))
				{
					this._SafetyMeasures4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures5", DbType="NVarChar(2000)")]
		public string SafetyMeasures5
		{
			get
			{
				return this._SafetyMeasures5;
			}
			set
			{
				if ((this._SafetyMeasures5 != value))
				{
					this._SafetyMeasures5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures6", DbType="NVarChar(2000)")]
		public string SafetyMeasures6
		{
			get
			{
				return this._SafetyMeasures6;
			}
			set
			{
				if ((this._SafetyMeasures6 != value))
				{
					this._SafetyMeasures6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures7", DbType="NVarChar(2000)")]
		public string SafetyMeasures7
		{
			get
			{
				return this._SafetyMeasures7;
			}
			set
			{
				if ((this._SafetyMeasures7 != value))
				{
					this._SafetyMeasures7 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures8", DbType="NVarChar(2000)")]
		public string SafetyMeasures8
		{
			get
			{
				return this._SafetyMeasures8;
			}
			set
			{
				if ((this._SafetyMeasures8 != value))
				{
					this._SafetyMeasures8 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures9", DbType="NVarChar(2000)")]
		public string SafetyMeasures9
		{
			get
			{
				return this._SafetyMeasures9;
			}
			set
			{
				if ((this._SafetyMeasures9 != value))
				{
					this._SafetyMeasures9 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures10", DbType="NVarChar(2000)")]
		public string SafetyMeasures10
		{
			get
			{
				return this._SafetyMeasures10;
			}
			set
			{
				if ((this._SafetyMeasures10 != value))
				{
					this._SafetyMeasures10 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures11", DbType="NVarChar(2000)")]
		public string SafetyMeasures11
		{
			get
			{
				return this._SafetyMeasures11;
			}
			set
			{
				if ((this._SafetyMeasures11 != value))
				{
					this._SafetyMeasures11 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures12", DbType="NVarChar(2000)")]
		public string SafetyMeasures12
		{
			get
			{
				return this._SafetyMeasures12;
			}
			set
			{
				if ((this._SafetyMeasures12 != value))
				{
					this._SafetyMeasures12 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures13", DbType="NVarChar(2000)")]
		public string SafetyMeasures13
		{
			get
			{
				return this._SafetyMeasures13;
			}
			set
			{
				if ((this._SafetyMeasures13 != value))
				{
					this._SafetyMeasures13 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures14", DbType="NVarChar(2000)")]
		public string SafetyMeasures14
		{
			get
			{
				return this._SafetyMeasures14;
			}
			set
			{
				if ((this._SafetyMeasures14 != value))
				{
					this._SafetyMeasures14 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures15", DbType="NVarChar(2000)")]
		public string SafetyMeasures15
		{
			get
			{
				return this._SafetyMeasures15;
			}
			set
			{
				if ((this._SafetyMeasures15 != value))
				{
					this._SafetyMeasures15 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures16", DbType="NVarChar(514) NOT NULL", CanBeNull=false)]
		public string SafetyMeasures16
		{
			get
			{
				return this._SafetyMeasures16;
			}
			set
			{
				if ((this._SafetyMeasures16 != value))
				{
					this._SafetyMeasures16 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_License_FireWork")]
	public partial class View_License_FireWork
	{
		
		private string _FireWorkId;
		
		private string _LicenseCode;
		
		private string _ApplyInstallationId;
		
		private string _ApplyInstallationCode;
		
		private string _ApplyInstallationName;
		
		private string _ApplyUnitId;
		
		private string _ApplyUnitName;
		
		private string _UnitId;
		
		private string _UnitName;
		
		private string _DepartId;
		
		private string _DepartName;
		
		private string _ApplyManId;
		
		private string _ApplyManName;
		
		private System.Nullable<System.DateTime> _ApplyDate;
		
		private string _FireWorkLevel;
		
		private string _FireWorkLevelName;
		
		private string _FireWorkInstallationId;
		
		private string _FireWorkInstallationCode;
		
		private string _FireWorkInstallationName;
		
		private string _FireWorkPalce;
		
		private string _FireWorkMode;
		
		private string _FireWorkModeName;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _FireHeaderId;
		
		private string _FireHeaderName;
		
		private System.Nullable<System.DateTime> _FireHeaderTime;
		
		private string _FireManName;
		
		private string _OtherSpecial;
		
		private string _HAZID;
		
		private string _HAZIDName;
		
		private string _SafetyMeasures1;
		
		private string _SafetyMeasures2;
		
		private string _SafetyMeasures3;
		
		private string _SafetyMeasures4;
		
		private string _SafetyMeasures5;
		
		private string _SafetyMeasures6;
		
		private string _SafetyMeasures7;
		
		private string _SafetyMeasures8;
		
		private string _SafetyMeasures9;
		
		private System.Nullable<bool> _SIsUsed1;
		
		private System.Nullable<bool> _SIsUsed2;
		
		private System.Nullable<bool> _SIsUsed3;
		
		private System.Nullable<bool> _SIsUsed4;
		
		private System.Nullable<bool> _SIsUsed5;
		
		private System.Nullable<bool> _SIsUsed6;
		
		private System.Nullable<bool> _SIsUsed7;
		
		private System.Nullable<bool> _SIsUsed8;
		
		private System.Nullable<bool> _SIsUsed9;
		
		private int _SIsUsed10;
		
		private string _OtherMeasures;
		
		private string _CompileManName;
		
		private System.Nullable<System.DateTime> _CompileManTime;
		
		private string _FireWatchId;
		
		private string _FireWatchName;
		
		private System.Nullable<System.DateTime> _FireWatchTime;
		
		private string _QRCodeUrl;
		
		private string _AttachUrl;
		
		private string _States;
		
		private System.Nullable<System.DateTime> _PauseTime;
		
		private string _PauseDescribe;
		
		public View_License_FireWork()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FireWorkId
		{
			get
			{
				return this._FireWorkId;
			}
			set
			{
				if ((this._FireWorkId != value))
				{
					this._FireWorkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(50)")]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this._LicenseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyInstallationId", DbType="NVarChar(50)")]
		public string ApplyInstallationId
		{
			get
			{
				return this._ApplyInstallationId;
			}
			set
			{
				if ((this._ApplyInstallationId != value))
				{
					this._ApplyInstallationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyInstallationCode", DbType="NVarChar(50)")]
		public string ApplyInstallationCode
		{
			get
			{
				return this._ApplyInstallationCode;
			}
			set
			{
				if ((this._ApplyInstallationCode != value))
				{
					this._ApplyInstallationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyInstallationName", DbType="NVarChar(50)")]
		public string ApplyInstallationName
		{
			get
			{
				return this._ApplyInstallationName;
			}
			set
			{
				if ((this._ApplyInstallationName != value))
				{
					this._ApplyInstallationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitId", DbType="NVarChar(50)")]
		public string ApplyUnitId
		{
			get
			{
				return this._ApplyUnitId;
			}
			set
			{
				if ((this._ApplyUnitId != value))
				{
					this._ApplyUnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitName", DbType="NVarChar(50)")]
		public string ApplyUnitName
		{
			get
			{
				return this._ApplyUnitName;
			}
			set
			{
				if ((this._ApplyUnitName != value))
				{
					this._ApplyUnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartId", DbType="NVarChar(50)")]
		public string DepartId
		{
			get
			{
				return this._DepartId;
			}
			set
			{
				if ((this._DepartId != value))
				{
					this._DepartId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartName", DbType="NVarChar(50)")]
		public string DepartName
		{
			get
			{
				return this._DepartName;
			}
			set
			{
				if ((this._DepartName != value))
				{
					this._DepartName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyManId", DbType="NVarChar(50)")]
		public string ApplyManId
		{
			get
			{
				return this._ApplyManId;
			}
			set
			{
				if ((this._ApplyManId != value))
				{
					this._ApplyManId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyManName", DbType="NVarChar(20)")]
		public string ApplyManName
		{
			get
			{
				return this._ApplyManName;
			}
			set
			{
				if ((this._ApplyManName != value))
				{
					this._ApplyManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApplyDate
		{
			get
			{
				return this._ApplyDate;
			}
			set
			{
				if ((this._ApplyDate != value))
				{
					this._ApplyDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkLevel", DbType="NVarChar(50)")]
		public string FireWorkLevel
		{
			get
			{
				return this._FireWorkLevel;
			}
			set
			{
				if ((this._FireWorkLevel != value))
				{
					this._FireWorkLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkLevelName", DbType="NVarChar(100)")]
		public string FireWorkLevelName
		{
			get
			{
				return this._FireWorkLevelName;
			}
			set
			{
				if ((this._FireWorkLevelName != value))
				{
					this._FireWorkLevelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkInstallationId", DbType="NVarChar(50)")]
		public string FireWorkInstallationId
		{
			get
			{
				return this._FireWorkInstallationId;
			}
			set
			{
				if ((this._FireWorkInstallationId != value))
				{
					this._FireWorkInstallationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkInstallationCode", DbType="NVarChar(50)")]
		public string FireWorkInstallationCode
		{
			get
			{
				return this._FireWorkInstallationCode;
			}
			set
			{
				if ((this._FireWorkInstallationCode != value))
				{
					this._FireWorkInstallationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkInstallationName", DbType="NVarChar(50)")]
		public string FireWorkInstallationName
		{
			get
			{
				return this._FireWorkInstallationName;
			}
			set
			{
				if ((this._FireWorkInstallationName != value))
				{
					this._FireWorkInstallationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkPalce", DbType="NVarChar(551)")]
		public string FireWorkPalce
		{
			get
			{
				return this._FireWorkPalce;
			}
			set
			{
				if ((this._FireWorkPalce != value))
				{
					this._FireWorkPalce = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkMode", DbType="NVarChar(500)")]
		public string FireWorkMode
		{
			get
			{
				return this._FireWorkMode;
			}
			set
			{
				if ((this._FireWorkMode != value))
				{
					this._FireWorkMode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWorkModeName", DbType="NVarChar(500)")]
		public string FireWorkModeName
		{
			get
			{
				return this._FireWorkModeName;
			}
			set
			{
				if ((this._FireWorkModeName != value))
				{
					this._FireWorkModeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireHeaderId", DbType="NVarChar(50)")]
		public string FireHeaderId
		{
			get
			{
				return this._FireHeaderId;
			}
			set
			{
				if ((this._FireHeaderId != value))
				{
					this._FireHeaderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireHeaderName", DbType="NVarChar(20)")]
		public string FireHeaderName
		{
			get
			{
				return this._FireHeaderName;
			}
			set
			{
				if ((this._FireHeaderName != value))
				{
					this._FireHeaderName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireHeaderTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FireHeaderTime
		{
			get
			{
				return this._FireHeaderTime;
			}
			set
			{
				if ((this._FireHeaderTime != value))
				{
					this._FireHeaderTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireManName", DbType="NVarChar(200)")]
		public string FireManName
		{
			get
			{
				return this._FireManName;
			}
			set
			{
				if ((this._FireManName != value))
				{
					this._FireManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherSpecial", DbType="NVarChar(100)")]
		public string OtherSpecial
		{
			get
			{
				return this._OtherSpecial;
			}
			set
			{
				if ((this._OtherSpecial != value))
				{
					this._OtherSpecial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZID", DbType="NVarChar(4000)")]
		public string HAZID
		{
			get
			{
				return this._HAZID;
			}
			set
			{
				if ((this._HAZID != value))
				{
					this._HAZID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZIDName", DbType="NVarChar(4000)")]
		public string HAZIDName
		{
			get
			{
				return this._HAZIDName;
			}
			set
			{
				if ((this._HAZIDName != value))
				{
					this._HAZIDName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures1", DbType="NVarChar(2000)")]
		public string SafetyMeasures1
		{
			get
			{
				return this._SafetyMeasures1;
			}
			set
			{
				if ((this._SafetyMeasures1 != value))
				{
					this._SafetyMeasures1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures2", DbType="NVarChar(2000)")]
		public string SafetyMeasures2
		{
			get
			{
				return this._SafetyMeasures2;
			}
			set
			{
				if ((this._SafetyMeasures2 != value))
				{
					this._SafetyMeasures2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures3", DbType="NVarChar(2000)")]
		public string SafetyMeasures3
		{
			get
			{
				return this._SafetyMeasures3;
			}
			set
			{
				if ((this._SafetyMeasures3 != value))
				{
					this._SafetyMeasures3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures4", DbType="NVarChar(2000)")]
		public string SafetyMeasures4
		{
			get
			{
				return this._SafetyMeasures4;
			}
			set
			{
				if ((this._SafetyMeasures4 != value))
				{
					this._SafetyMeasures4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures5", DbType="NVarChar(2000)")]
		public string SafetyMeasures5
		{
			get
			{
				return this._SafetyMeasures5;
			}
			set
			{
				if ((this._SafetyMeasures5 != value))
				{
					this._SafetyMeasures5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures6", DbType="NVarChar(2000)")]
		public string SafetyMeasures6
		{
			get
			{
				return this._SafetyMeasures6;
			}
			set
			{
				if ((this._SafetyMeasures6 != value))
				{
					this._SafetyMeasures6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures7", DbType="NVarChar(2000)")]
		public string SafetyMeasures7
		{
			get
			{
				return this._SafetyMeasures7;
			}
			set
			{
				if ((this._SafetyMeasures7 != value))
				{
					this._SafetyMeasures7 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures8", DbType="NVarChar(2000)")]
		public string SafetyMeasures8
		{
			get
			{
				return this._SafetyMeasures8;
			}
			set
			{
				if ((this._SafetyMeasures8 != value))
				{
					this._SafetyMeasures8 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures9", DbType="NVarChar(2000)")]
		public string SafetyMeasures9
		{
			get
			{
				return this._SafetyMeasures9;
			}
			set
			{
				if ((this._SafetyMeasures9 != value))
				{
					this._SafetyMeasures9 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed1", DbType="Bit")]
		public System.Nullable<bool> SIsUsed1
		{
			get
			{
				return this._SIsUsed1;
			}
			set
			{
				if ((this._SIsUsed1 != value))
				{
					this._SIsUsed1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed2", DbType="Bit")]
		public System.Nullable<bool> SIsUsed2
		{
			get
			{
				return this._SIsUsed2;
			}
			set
			{
				if ((this._SIsUsed2 != value))
				{
					this._SIsUsed2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed3", DbType="Bit")]
		public System.Nullable<bool> SIsUsed3
		{
			get
			{
				return this._SIsUsed3;
			}
			set
			{
				if ((this._SIsUsed3 != value))
				{
					this._SIsUsed3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed4", DbType="Bit")]
		public System.Nullable<bool> SIsUsed4
		{
			get
			{
				return this._SIsUsed4;
			}
			set
			{
				if ((this._SIsUsed4 != value))
				{
					this._SIsUsed4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed5", DbType="Bit")]
		public System.Nullable<bool> SIsUsed5
		{
			get
			{
				return this._SIsUsed5;
			}
			set
			{
				if ((this._SIsUsed5 != value))
				{
					this._SIsUsed5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed6", DbType="Bit")]
		public System.Nullable<bool> SIsUsed6
		{
			get
			{
				return this._SIsUsed6;
			}
			set
			{
				if ((this._SIsUsed6 != value))
				{
					this._SIsUsed6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed7", DbType="Bit")]
		public System.Nullable<bool> SIsUsed7
		{
			get
			{
				return this._SIsUsed7;
			}
			set
			{
				if ((this._SIsUsed7 != value))
				{
					this._SIsUsed7 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed8", DbType="Bit")]
		public System.Nullable<bool> SIsUsed8
		{
			get
			{
				return this._SIsUsed8;
			}
			set
			{
				if ((this._SIsUsed8 != value))
				{
					this._SIsUsed8 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed9", DbType="Bit")]
		public System.Nullable<bool> SIsUsed9
		{
			get
			{
				return this._SIsUsed9;
			}
			set
			{
				if ((this._SIsUsed9 != value))
				{
					this._SIsUsed9 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed10", DbType="Int NOT NULL")]
		public int SIsUsed10
		{
			get
			{
				return this._SIsUsed10;
			}
			set
			{
				if ((this._SIsUsed10 != value))
				{
					this._SIsUsed10 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(500)")]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this._OtherMeasures = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManName", DbType="NVarChar(20)")]
		public string CompileManName
		{
			get
			{
				return this._CompileManName;
			}
			set
			{
				if ((this._CompileManName != value))
				{
					this._CompileManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileManTime
		{
			get
			{
				return this._CompileManTime;
			}
			set
			{
				if ((this._CompileManTime != value))
				{
					this._CompileManTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWatchId", DbType="NVarChar(500)")]
		public string FireWatchId
		{
			get
			{
				return this._FireWatchId;
			}
			set
			{
				if ((this._FireWatchId != value))
				{
					this._FireWatchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWatchName", DbType="NVarChar(500)")]
		public string FireWatchName
		{
			get
			{
				return this._FireWatchName;
			}
			set
			{
				if ((this._FireWatchName != value))
				{
					this._FireWatchName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FireWatchTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FireWatchTime
		{
			get
			{
				return this._FireWatchTime;
			}
			set
			{
				if ((this._FireWatchTime != value))
				{
					this._FireWatchTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this._QRCodeUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this._AttachUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this._States = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PauseTime
		{
			get
			{
				return this._PauseTime;
			}
			set
			{
				if ((this._PauseTime != value))
				{
					this._PauseTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseDescribe", DbType="NVarChar(4000)")]
		public string PauseDescribe
		{
			get
			{
				return this._PauseDescribe;
			}
			set
			{
				if ((this._PauseDescribe != value))
				{
					this._PauseDescribe = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_License_HeightWork")]
	public partial class View_License_HeightWork
	{
		
		private string _HeightWorkId;
		
		private string _ApplyUnit;
		
		private string _ApplyManName;
		
		private string _LicenseCode;
		
		private string _JobTime;
		
		private string _JobPalce;
		
		private string _JobContent;
		
		private string _WorkingHeight;
		
		private string _JobLevelId;
		
		private string _JobLevel;
		
		private string _JobUnit;
		
		private string _Guardian;
		
		private string _JobMan;
		
		private string _OtherSpecial;
		
		private string _HAZIDName;
		
		private System.Nullable<bool> _SIsUsed1;
		
		private System.Nullable<bool> _SIsUsed2;
		
		private System.Nullable<bool> _SIsUsed3;
		
		private System.Nullable<bool> _SIsUsed4;
		
		private System.Nullable<bool> _SIsUsed5;
		
		private System.Nullable<bool> _SIsUsed6;
		
		private System.Nullable<bool> _SIsUsed7;
		
		private System.Nullable<bool> _SIsUsed8;
		
		private System.Nullable<bool> _SIsUsed9;
		
		private System.Nullable<bool> _SIsUsed10;
		
		private System.Nullable<bool> _SIsUsed11;
		
		private System.Nullable<bool> _SIsUsed12;
		
		private System.Nullable<bool> _SIsUsed13;
		
		private int _SIsUsed14;
		
		private string _SafetyMeasures1;
		
		private string _SafetyMeasures2;
		
		private string _SafetyMeasures3;
		
		private string _SafetyMeasures4;
		
		private string _SafetyMeasures5;
		
		private string _SafetyMeasures6;
		
		private string _SafetyMeasures7;
		
		private string _SafetyMeasures8;
		
		private string _SafetyMeasures9;
		
		private string _SafetyMeasures10;
		
		private string _SafetyMeasures11;
		
		private string _SafetyMeasures12;
		
		private string _SafetyMeasures13;
		
		private string _OtherMeasures;
		
		public View_License_HeightWork()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeightWorkId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HeightWorkId
		{
			get
			{
				return this._HeightWorkId;
			}
			set
			{
				if ((this._HeightWorkId != value))
				{
					this._HeightWorkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnit", DbType="NVarChar(50)")]
		public string ApplyUnit
		{
			get
			{
				return this._ApplyUnit;
			}
			set
			{
				if ((this._ApplyUnit != value))
				{
					this._ApplyUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyManName", DbType="NVarChar(20)")]
		public string ApplyManName
		{
			get
			{
				return this._ApplyManName;
			}
			set
			{
				if ((this._ApplyManName != value))
				{
					this._ApplyManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(50)")]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this._LicenseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTime", DbType="NVarChar(332)")]
		public string JobTime
		{
			get
			{
				return this._JobTime;
			}
			set
			{
				if ((this._JobTime != value))
				{
					this._JobTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPalce", DbType="NVarChar(200)")]
		public string JobPalce
		{
			get
			{
				return this._JobPalce;
			}
			set
			{
				if ((this._JobPalce != value))
				{
					this._JobPalce = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobContent", DbType="NVarChar(500)")]
		public string JobContent
		{
			get
			{
				return this._JobContent;
			}
			set
			{
				if ((this._JobContent != value))
				{
					this._JobContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingHeight", DbType="NVarChar(50)")]
		public string WorkingHeight
		{
			get
			{
				return this._WorkingHeight;
			}
			set
			{
				if ((this._WorkingHeight != value))
				{
					this._WorkingHeight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobLevelId", DbType="NVarChar(50)")]
		public string JobLevelId
		{
			get
			{
				return this._JobLevelId;
			}
			set
			{
				if ((this._JobLevelId != value))
				{
					this._JobLevelId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobLevel", DbType="NVarChar(100)")]
		public string JobLevel
		{
			get
			{
				return this._JobLevel;
			}
			set
			{
				if ((this._JobLevel != value))
				{
					this._JobLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnit", DbType="NVarChar(50)")]
		public string JobUnit
		{
			get
			{
				return this._JobUnit;
			}
			set
			{
				if ((this._JobUnit != value))
				{
					this._JobUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guardian", DbType="NVarChar(50)")]
		public string Guardian
		{
			get
			{
				return this._Guardian;
			}
			set
			{
				if ((this._Guardian != value))
				{
					this._Guardian = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobMan", DbType="NVarChar(500)")]
		public string JobMan
		{
			get
			{
				return this._JobMan;
			}
			set
			{
				if ((this._JobMan != value))
				{
					this._JobMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherSpecial", DbType="NVarChar(100)")]
		public string OtherSpecial
		{
			get
			{
				return this._OtherSpecial;
			}
			set
			{
				if ((this._OtherSpecial != value))
				{
					this._OtherSpecial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZIDName", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string HAZIDName
		{
			get
			{
				return this._HAZIDName;
			}
			set
			{
				if ((this._HAZIDName != value))
				{
					this._HAZIDName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed1", DbType="Bit")]
		public System.Nullable<bool> SIsUsed1
		{
			get
			{
				return this._SIsUsed1;
			}
			set
			{
				if ((this._SIsUsed1 != value))
				{
					this._SIsUsed1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed2", DbType="Bit")]
		public System.Nullable<bool> SIsUsed2
		{
			get
			{
				return this._SIsUsed2;
			}
			set
			{
				if ((this._SIsUsed2 != value))
				{
					this._SIsUsed2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed3", DbType="Bit")]
		public System.Nullable<bool> SIsUsed3
		{
			get
			{
				return this._SIsUsed3;
			}
			set
			{
				if ((this._SIsUsed3 != value))
				{
					this._SIsUsed3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed4", DbType="Bit")]
		public System.Nullable<bool> SIsUsed4
		{
			get
			{
				return this._SIsUsed4;
			}
			set
			{
				if ((this._SIsUsed4 != value))
				{
					this._SIsUsed4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed5", DbType="Bit")]
		public System.Nullable<bool> SIsUsed5
		{
			get
			{
				return this._SIsUsed5;
			}
			set
			{
				if ((this._SIsUsed5 != value))
				{
					this._SIsUsed5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed6", DbType="Bit")]
		public System.Nullable<bool> SIsUsed6
		{
			get
			{
				return this._SIsUsed6;
			}
			set
			{
				if ((this._SIsUsed6 != value))
				{
					this._SIsUsed6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed7", DbType="Bit")]
		public System.Nullable<bool> SIsUsed7
		{
			get
			{
				return this._SIsUsed7;
			}
			set
			{
				if ((this._SIsUsed7 != value))
				{
					this._SIsUsed7 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed8", DbType="Bit")]
		public System.Nullable<bool> SIsUsed8
		{
			get
			{
				return this._SIsUsed8;
			}
			set
			{
				if ((this._SIsUsed8 != value))
				{
					this._SIsUsed8 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed9", DbType="Bit")]
		public System.Nullable<bool> SIsUsed9
		{
			get
			{
				return this._SIsUsed9;
			}
			set
			{
				if ((this._SIsUsed9 != value))
				{
					this._SIsUsed9 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed10", DbType="Bit")]
		public System.Nullable<bool> SIsUsed10
		{
			get
			{
				return this._SIsUsed10;
			}
			set
			{
				if ((this._SIsUsed10 != value))
				{
					this._SIsUsed10 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed11", DbType="Bit")]
		public System.Nullable<bool> SIsUsed11
		{
			get
			{
				return this._SIsUsed11;
			}
			set
			{
				if ((this._SIsUsed11 != value))
				{
					this._SIsUsed11 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed12", DbType="Bit")]
		public System.Nullable<bool> SIsUsed12
		{
			get
			{
				return this._SIsUsed12;
			}
			set
			{
				if ((this._SIsUsed12 != value))
				{
					this._SIsUsed12 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed13", DbType="Bit")]
		public System.Nullable<bool> SIsUsed13
		{
			get
			{
				return this._SIsUsed13;
			}
			set
			{
				if ((this._SIsUsed13 != value))
				{
					this._SIsUsed13 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed14", DbType="Int NOT NULL")]
		public int SIsUsed14
		{
			get
			{
				return this._SIsUsed14;
			}
			set
			{
				if ((this._SIsUsed14 != value))
				{
					this._SIsUsed14 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures1", DbType="NVarChar(2000)")]
		public string SafetyMeasures1
		{
			get
			{
				return this._SafetyMeasures1;
			}
			set
			{
				if ((this._SafetyMeasures1 != value))
				{
					this._SafetyMeasures1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures2", DbType="NVarChar(2000)")]
		public string SafetyMeasures2
		{
			get
			{
				return this._SafetyMeasures2;
			}
			set
			{
				if ((this._SafetyMeasures2 != value))
				{
					this._SafetyMeasures2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures3", DbType="NVarChar(2000)")]
		public string SafetyMeasures3
		{
			get
			{
				return this._SafetyMeasures3;
			}
			set
			{
				if ((this._SafetyMeasures3 != value))
				{
					this._SafetyMeasures3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures4", DbType="NVarChar(2000)")]
		public string SafetyMeasures4
		{
			get
			{
				return this._SafetyMeasures4;
			}
			set
			{
				if ((this._SafetyMeasures4 != value))
				{
					this._SafetyMeasures4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures5", DbType="NVarChar(2000)")]
		public string SafetyMeasures5
		{
			get
			{
				return this._SafetyMeasures5;
			}
			set
			{
				if ((this._SafetyMeasures5 != value))
				{
					this._SafetyMeasures5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures6", DbType="NVarChar(2000)")]
		public string SafetyMeasures6
		{
			get
			{
				return this._SafetyMeasures6;
			}
			set
			{
				if ((this._SafetyMeasures6 != value))
				{
					this._SafetyMeasures6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures7", DbType="NVarChar(2000)")]
		public string SafetyMeasures7
		{
			get
			{
				return this._SafetyMeasures7;
			}
			set
			{
				if ((this._SafetyMeasures7 != value))
				{
					this._SafetyMeasures7 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures8", DbType="NVarChar(2000)")]
		public string SafetyMeasures8
		{
			get
			{
				return this._SafetyMeasures8;
			}
			set
			{
				if ((this._SafetyMeasures8 != value))
				{
					this._SafetyMeasures8 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures9", DbType="NVarChar(2000)")]
		public string SafetyMeasures9
		{
			get
			{
				return this._SafetyMeasures9;
			}
			set
			{
				if ((this._SafetyMeasures9 != value))
				{
					this._SafetyMeasures9 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures10", DbType="NVarChar(2000)")]
		public string SafetyMeasures10
		{
			get
			{
				return this._SafetyMeasures10;
			}
			set
			{
				if ((this._SafetyMeasures10 != value))
				{
					this._SafetyMeasures10 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures11", DbType="NVarChar(2000)")]
		public string SafetyMeasures11
		{
			get
			{
				return this._SafetyMeasures11;
			}
			set
			{
				if ((this._SafetyMeasures11 != value))
				{
					this._SafetyMeasures11 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures12", DbType="NVarChar(2000)")]
		public string SafetyMeasures12
		{
			get
			{
				return this._SafetyMeasures12;
			}
			set
			{
				if ((this._SafetyMeasures12 != value))
				{
					this._SafetyMeasures12 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures13", DbType="NVarChar(2000)")]
		public string SafetyMeasures13
		{
			get
			{
				return this._SafetyMeasures13;
			}
			set
			{
				if ((this._SafetyMeasures13 != value))
				{
					this._SafetyMeasures13 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(514) NOT NULL", CanBeNull=false)]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this._OtherMeasures = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_License_LiftingWork")]
	public partial class View_License_LiftingWork
	{
		
		private string _LiftingWorkId;
		
		private string _LicenseCode;
		
		private string _JobPalce;
		
		private string _LiftingTools;
		
		private string _WorkerCertificate;
		
		private string _Guardian;
		
		private string _CommandCertificate;
		
		private System.Nullable<decimal> _LiftingQuality;
		
		private string _LiftingLevel;
		
		private string _StartDate;
		
		private string _LiftingContent;
		
		private string _HAZIDName;
		
		private System.Nullable<bool> _SIsUsed1;
		
		private System.Nullable<bool> _SIsUsed2;
		
		private System.Nullable<bool> _SIsUsed3;
		
		private System.Nullable<bool> _SIsUsed4;
		
		private System.Nullable<bool> _SIsUsed5;
		
		private System.Nullable<bool> _SIsUsed6;
		
		private System.Nullable<bool> _SIsUsed7;
		
		private System.Nullable<bool> _SIsUsed8;
		
		private System.Nullable<bool> _SIsUsed9;
		
		private System.Nullable<bool> _SIsUsed10;
		
		private System.Nullable<bool> _SIsUsed11;
		
		private System.Nullable<bool> _SIsUsed12;
		
		private System.Nullable<bool> _SIsUsed13;
		
		private System.Nullable<bool> _SIsUsed14;
		
		private System.Nullable<bool> _SIsUsed15;
		
		private System.Nullable<bool> _SIsUsed16;
		
		private System.Nullable<bool> _SIsUsed17;
		
		private System.Nullable<bool> _SIsUsed18;
		
		private System.Nullable<bool> _SIsUsed19;
		
		private System.Nullable<bool> _SIsUsed20;
		
		private System.Nullable<bool> _SIsUsed21;
		
		private System.Nullable<bool> _SIsUsed22;
		
		private System.Nullable<bool> _SIsUsed23;
		
		private System.Nullable<bool> _SIsUsed24;
		
		private System.Nullable<bool> _SIsUsed25;
		
		private System.Nullable<bool> _SIsUsed26;
		
		private System.Nullable<bool> _SIsUsed27;
		
		private System.Nullable<bool> _SIsUsed28;
		
		private System.Nullable<bool> _SIsUsed29;
		
		private System.Nullable<bool> _SIsUsed30;
		
		private System.Nullable<bool> _SIsUsed31;
		
		private System.Nullable<bool> _SIsUsed32;
		
		private int _SIsUsed33;
		
		private string _SafetyMeasures1;
		
		private string _SafetyMeasures2;
		
		private string _SafetyMeasures3;
		
		private string _SafetyMeasures4;
		
		private string _SafetyMeasures5;
		
		private string _SafetyMeasures6;
		
		private string _SafetyMeasures7;
		
		private string _SafetyMeasures8;
		
		private string _SafetyMeasures9;
		
		private string _SafetyMeasures10;
		
		private string _SafetyMeasures11;
		
		private string _SafetyMeasures12;
		
		private string _SafetyMeasures13;
		
		private string _SafetyMeasures14;
		
		private string _SafetyMeasures15;
		
		private string _SafetyMeasures16;
		
		private string _SafetyMeasures17;
		
		private string _SafetyMeasures18;
		
		private string _SafetyMeasures19;
		
		private string _SafetyMeasures20;
		
		private string _SafetyMeasures21;
		
		private string _SafetyMeasures22;
		
		private string _SafetyMeasures23;
		
		private string _SafetyMeasures24;
		
		private string _SafetyMeasures25;
		
		private string _SafetyMeasures26;
		
		private string _SafetyMeasures27;
		
		private string _SafetyMeasures28;
		
		private string _SafetyMeasures29;
		
		private string _SafetyMeasures30;
		
		private string _SafetyMeasures31;
		
		private string _SafetyMeasures32;
		
		private string _OtherMeasures;
		
		public View_License_LiftingWork()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftingWorkId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LiftingWorkId
		{
			get
			{
				return this._LiftingWorkId;
			}
			set
			{
				if ((this._LiftingWorkId != value))
				{
					this._LiftingWorkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(50)")]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this._LicenseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPalce", DbType="NVarChar(200)")]
		public string JobPalce
		{
			get
			{
				return this._JobPalce;
			}
			set
			{
				if ((this._JobPalce != value))
				{
					this._JobPalce = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftingTools", DbType="NVarChar(100)")]
		public string LiftingTools
		{
			get
			{
				return this._LiftingTools;
			}
			set
			{
				if ((this._LiftingTools != value))
				{
					this._LiftingTools = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkerCertificate", DbType="NVarChar(50)")]
		public string WorkerCertificate
		{
			get
			{
				return this._WorkerCertificate;
			}
			set
			{
				if ((this._WorkerCertificate != value))
				{
					this._WorkerCertificate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guardian", DbType="NVarChar(50)")]
		public string Guardian
		{
			get
			{
				return this._Guardian;
			}
			set
			{
				if ((this._Guardian != value))
				{
					this._Guardian = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandCertificate", DbType="NVarChar(50)")]
		public string CommandCertificate
		{
			get
			{
				return this._CommandCertificate;
			}
			set
			{
				if ((this._CommandCertificate != value))
				{
					this._CommandCertificate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftingQuality", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LiftingQuality
		{
			get
			{
				return this._LiftingQuality;
			}
			set
			{
				if ((this._LiftingQuality != value))
				{
					this._LiftingQuality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftingLevel", DbType="NVarChar(50)")]
		public string LiftingLevel
		{
			get
			{
				return this._LiftingLevel;
			}
			set
			{
				if ((this._LiftingLevel != value))
				{
					this._LiftingLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="VarChar(220)")]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftingContent", DbType="NVarChar(500)")]
		public string LiftingContent
		{
			get
			{
				return this._LiftingContent;
			}
			set
			{
				if ((this._LiftingContent != value))
				{
					this._LiftingContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZIDName", DbType="NVarChar(4000)")]
		public string HAZIDName
		{
			get
			{
				return this._HAZIDName;
			}
			set
			{
				if ((this._HAZIDName != value))
				{
					this._HAZIDName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed1", DbType="Bit")]
		public System.Nullable<bool> SIsUsed1
		{
			get
			{
				return this._SIsUsed1;
			}
			set
			{
				if ((this._SIsUsed1 != value))
				{
					this._SIsUsed1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed2", DbType="Bit")]
		public System.Nullable<bool> SIsUsed2
		{
			get
			{
				return this._SIsUsed2;
			}
			set
			{
				if ((this._SIsUsed2 != value))
				{
					this._SIsUsed2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed3", DbType="Bit")]
		public System.Nullable<bool> SIsUsed3
		{
			get
			{
				return this._SIsUsed3;
			}
			set
			{
				if ((this._SIsUsed3 != value))
				{
					this._SIsUsed3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed4", DbType="Bit")]
		public System.Nullable<bool> SIsUsed4
		{
			get
			{
				return this._SIsUsed4;
			}
			set
			{
				if ((this._SIsUsed4 != value))
				{
					this._SIsUsed4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed5", DbType="Bit")]
		public System.Nullable<bool> SIsUsed5
		{
			get
			{
				return this._SIsUsed5;
			}
			set
			{
				if ((this._SIsUsed5 != value))
				{
					this._SIsUsed5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed6", DbType="Bit")]
		public System.Nullable<bool> SIsUsed6
		{
			get
			{
				return this._SIsUsed6;
			}
			set
			{
				if ((this._SIsUsed6 != value))
				{
					this._SIsUsed6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed7", DbType="Bit")]
		public System.Nullable<bool> SIsUsed7
		{
			get
			{
				return this._SIsUsed7;
			}
			set
			{
				if ((this._SIsUsed7 != value))
				{
					this._SIsUsed7 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed8", DbType="Bit")]
		public System.Nullable<bool> SIsUsed8
		{
			get
			{
				return this._SIsUsed8;
			}
			set
			{
				if ((this._SIsUsed8 != value))
				{
					this._SIsUsed8 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed9", DbType="Bit")]
		public System.Nullable<bool> SIsUsed9
		{
			get
			{
				return this._SIsUsed9;
			}
			set
			{
				if ((this._SIsUsed9 != value))
				{
					this._SIsUsed9 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed10", DbType="Bit")]
		public System.Nullable<bool> SIsUsed10
		{
			get
			{
				return this._SIsUsed10;
			}
			set
			{
				if ((this._SIsUsed10 != value))
				{
					this._SIsUsed10 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed11", DbType="Bit")]
		public System.Nullable<bool> SIsUsed11
		{
			get
			{
				return this._SIsUsed11;
			}
			set
			{
				if ((this._SIsUsed11 != value))
				{
					this._SIsUsed11 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed12", DbType="Bit")]
		public System.Nullable<bool> SIsUsed12
		{
			get
			{
				return this._SIsUsed12;
			}
			set
			{
				if ((this._SIsUsed12 != value))
				{
					this._SIsUsed12 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed13", DbType="Bit")]
		public System.Nullable<bool> SIsUsed13
		{
			get
			{
				return this._SIsUsed13;
			}
			set
			{
				if ((this._SIsUsed13 != value))
				{
					this._SIsUsed13 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed14", DbType="Bit")]
		public System.Nullable<bool> SIsUsed14
		{
			get
			{
				return this._SIsUsed14;
			}
			set
			{
				if ((this._SIsUsed14 != value))
				{
					this._SIsUsed14 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed15", DbType="Bit")]
		public System.Nullable<bool> SIsUsed15
		{
			get
			{
				return this._SIsUsed15;
			}
			set
			{
				if ((this._SIsUsed15 != value))
				{
					this._SIsUsed15 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed16", DbType="Bit")]
		public System.Nullable<bool> SIsUsed16
		{
			get
			{
				return this._SIsUsed16;
			}
			set
			{
				if ((this._SIsUsed16 != value))
				{
					this._SIsUsed16 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed17", DbType="Bit")]
		public System.Nullable<bool> SIsUsed17
		{
			get
			{
				return this._SIsUsed17;
			}
			set
			{
				if ((this._SIsUsed17 != value))
				{
					this._SIsUsed17 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed18", DbType="Bit")]
		public System.Nullable<bool> SIsUsed18
		{
			get
			{
				return this._SIsUsed18;
			}
			set
			{
				if ((this._SIsUsed18 != value))
				{
					this._SIsUsed18 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed19", DbType="Bit")]
		public System.Nullable<bool> SIsUsed19
		{
			get
			{
				return this._SIsUsed19;
			}
			set
			{
				if ((this._SIsUsed19 != value))
				{
					this._SIsUsed19 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed20", DbType="Bit")]
		public System.Nullable<bool> SIsUsed20
		{
			get
			{
				return this._SIsUsed20;
			}
			set
			{
				if ((this._SIsUsed20 != value))
				{
					this._SIsUsed20 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed21", DbType="Bit")]
		public System.Nullable<bool> SIsUsed21
		{
			get
			{
				return this._SIsUsed21;
			}
			set
			{
				if ((this._SIsUsed21 != value))
				{
					this._SIsUsed21 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed22", DbType="Bit")]
		public System.Nullable<bool> SIsUsed22
		{
			get
			{
				return this._SIsUsed22;
			}
			set
			{
				if ((this._SIsUsed22 != value))
				{
					this._SIsUsed22 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed23", DbType="Bit")]
		public System.Nullable<bool> SIsUsed23
		{
			get
			{
				return this._SIsUsed23;
			}
			set
			{
				if ((this._SIsUsed23 != value))
				{
					this._SIsUsed23 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed24", DbType="Bit")]
		public System.Nullable<bool> SIsUsed24
		{
			get
			{
				return this._SIsUsed24;
			}
			set
			{
				if ((this._SIsUsed24 != value))
				{
					this._SIsUsed24 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed25", DbType="Bit")]
		public System.Nullable<bool> SIsUsed25
		{
			get
			{
				return this._SIsUsed25;
			}
			set
			{
				if ((this._SIsUsed25 != value))
				{
					this._SIsUsed25 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed26", DbType="Bit")]
		public System.Nullable<bool> SIsUsed26
		{
			get
			{
				return this._SIsUsed26;
			}
			set
			{
				if ((this._SIsUsed26 != value))
				{
					this._SIsUsed26 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed27", DbType="Bit")]
		public System.Nullable<bool> SIsUsed27
		{
			get
			{
				return this._SIsUsed27;
			}
			set
			{
				if ((this._SIsUsed27 != value))
				{
					this._SIsUsed27 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed28", DbType="Bit")]
		public System.Nullable<bool> SIsUsed28
		{
			get
			{
				return this._SIsUsed28;
			}
			set
			{
				if ((this._SIsUsed28 != value))
				{
					this._SIsUsed28 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed29", DbType="Bit")]
		public System.Nullable<bool> SIsUsed29
		{
			get
			{
				return this._SIsUsed29;
			}
			set
			{
				if ((this._SIsUsed29 != value))
				{
					this._SIsUsed29 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed30", DbType="Bit")]
		public System.Nullable<bool> SIsUsed30
		{
			get
			{
				return this._SIsUsed30;
			}
			set
			{
				if ((this._SIsUsed30 != value))
				{
					this._SIsUsed30 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed31", DbType="Bit")]
		public System.Nullable<bool> SIsUsed31
		{
			get
			{
				return this._SIsUsed31;
			}
			set
			{
				if ((this._SIsUsed31 != value))
				{
					this._SIsUsed31 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed32", DbType="Bit")]
		public System.Nullable<bool> SIsUsed32
		{
			get
			{
				return this._SIsUsed32;
			}
			set
			{
				if ((this._SIsUsed32 != value))
				{
					this._SIsUsed32 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed33", DbType="Int NOT NULL")]
		public int SIsUsed33
		{
			get
			{
				return this._SIsUsed33;
			}
			set
			{
				if ((this._SIsUsed33 != value))
				{
					this._SIsUsed33 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures1", DbType="NVarChar(2000)")]
		public string SafetyMeasures1
		{
			get
			{
				return this._SafetyMeasures1;
			}
			set
			{
				if ((this._SafetyMeasures1 != value))
				{
					this._SafetyMeasures1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures2", DbType="NVarChar(2000)")]
		public string SafetyMeasures2
		{
			get
			{
				return this._SafetyMeasures2;
			}
			set
			{
				if ((this._SafetyMeasures2 != value))
				{
					this._SafetyMeasures2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures3", DbType="NVarChar(2000)")]
		public string SafetyMeasures3
		{
			get
			{
				return this._SafetyMeasures3;
			}
			set
			{
				if ((this._SafetyMeasures3 != value))
				{
					this._SafetyMeasures3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures4", DbType="NVarChar(2000)")]
		public string SafetyMeasures4
		{
			get
			{
				return this._SafetyMeasures4;
			}
			set
			{
				if ((this._SafetyMeasures4 != value))
				{
					this._SafetyMeasures4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures5", DbType="NVarChar(2000)")]
		public string SafetyMeasures5
		{
			get
			{
				return this._SafetyMeasures5;
			}
			set
			{
				if ((this._SafetyMeasures5 != value))
				{
					this._SafetyMeasures5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures6", DbType="NVarChar(2000)")]
		public string SafetyMeasures6
		{
			get
			{
				return this._SafetyMeasures6;
			}
			set
			{
				if ((this._SafetyMeasures6 != value))
				{
					this._SafetyMeasures6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures7", DbType="NVarChar(2000)")]
		public string SafetyMeasures7
		{
			get
			{
				return this._SafetyMeasures7;
			}
			set
			{
				if ((this._SafetyMeasures7 != value))
				{
					this._SafetyMeasures7 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures8", DbType="NVarChar(2000)")]
		public string SafetyMeasures8
		{
			get
			{
				return this._SafetyMeasures8;
			}
			set
			{
				if ((this._SafetyMeasures8 != value))
				{
					this._SafetyMeasures8 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures9", DbType="NVarChar(2000)")]
		public string SafetyMeasures9
		{
			get
			{
				return this._SafetyMeasures9;
			}
			set
			{
				if ((this._SafetyMeasures9 != value))
				{
					this._SafetyMeasures9 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures10", DbType="NVarChar(2000)")]
		public string SafetyMeasures10
		{
			get
			{
				return this._SafetyMeasures10;
			}
			set
			{
				if ((this._SafetyMeasures10 != value))
				{
					this._SafetyMeasures10 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures11", DbType="NVarChar(2000)")]
		public string SafetyMeasures11
		{
			get
			{
				return this._SafetyMeasures11;
			}
			set
			{
				if ((this._SafetyMeasures11 != value))
				{
					this._SafetyMeasures11 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures12", DbType="NVarChar(2000)")]
		public string SafetyMeasures12
		{
			get
			{
				return this._SafetyMeasures12;
			}
			set
			{
				if ((this._SafetyMeasures12 != value))
				{
					this._SafetyMeasures12 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures13", DbType="NVarChar(2000)")]
		public string SafetyMeasures13
		{
			get
			{
				return this._SafetyMeasures13;
			}
			set
			{
				if ((this._SafetyMeasures13 != value))
				{
					this._SafetyMeasures13 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures14", DbType="NVarChar(2000)")]
		public string SafetyMeasures14
		{
			get
			{
				return this._SafetyMeasures14;
			}
			set
			{
				if ((this._SafetyMeasures14 != value))
				{
					this._SafetyMeasures14 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures15", DbType="NVarChar(2000)")]
		public string SafetyMeasures15
		{
			get
			{
				return this._SafetyMeasures15;
			}
			set
			{
				if ((this._SafetyMeasures15 != value))
				{
					this._SafetyMeasures15 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures16", DbType="NVarChar(2000)")]
		public string SafetyMeasures16
		{
			get
			{
				return this._SafetyMeasures16;
			}
			set
			{
				if ((this._SafetyMeasures16 != value))
				{
					this._SafetyMeasures16 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures17", DbType="NVarChar(2000)")]
		public string SafetyMeasures17
		{
			get
			{
				return this._SafetyMeasures17;
			}
			set
			{
				if ((this._SafetyMeasures17 != value))
				{
					this._SafetyMeasures17 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures18", DbType="NVarChar(2000)")]
		public string SafetyMeasures18
		{
			get
			{
				return this._SafetyMeasures18;
			}
			set
			{
				if ((this._SafetyMeasures18 != value))
				{
					this._SafetyMeasures18 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures19", DbType="NVarChar(2000)")]
		public string SafetyMeasures19
		{
			get
			{
				return this._SafetyMeasures19;
			}
			set
			{
				if ((this._SafetyMeasures19 != value))
				{
					this._SafetyMeasures19 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures20", DbType="NVarChar(2000)")]
		public string SafetyMeasures20
		{
			get
			{
				return this._SafetyMeasures20;
			}
			set
			{
				if ((this._SafetyMeasures20 != value))
				{
					this._SafetyMeasures20 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures21", DbType="NVarChar(2000)")]
		public string SafetyMeasures21
		{
			get
			{
				return this._SafetyMeasures21;
			}
			set
			{
				if ((this._SafetyMeasures21 != value))
				{
					this._SafetyMeasures21 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures22", DbType="NVarChar(2000)")]
		public string SafetyMeasures22
		{
			get
			{
				return this._SafetyMeasures22;
			}
			set
			{
				if ((this._SafetyMeasures22 != value))
				{
					this._SafetyMeasures22 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures23", DbType="NVarChar(2000)")]
		public string SafetyMeasures23
		{
			get
			{
				return this._SafetyMeasures23;
			}
			set
			{
				if ((this._SafetyMeasures23 != value))
				{
					this._SafetyMeasures23 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures24", DbType="NVarChar(2000)")]
		public string SafetyMeasures24
		{
			get
			{
				return this._SafetyMeasures24;
			}
			set
			{
				if ((this._SafetyMeasures24 != value))
				{
					this._SafetyMeasures24 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures25", DbType="NVarChar(2000)")]
		public string SafetyMeasures25
		{
			get
			{
				return this._SafetyMeasures25;
			}
			set
			{
				if ((this._SafetyMeasures25 != value))
				{
					this._SafetyMeasures25 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures26", DbType="NVarChar(2000)")]
		public string SafetyMeasures26
		{
			get
			{
				return this._SafetyMeasures26;
			}
			set
			{
				if ((this._SafetyMeasures26 != value))
				{
					this._SafetyMeasures26 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures27", DbType="NVarChar(2000)")]
		public string SafetyMeasures27
		{
			get
			{
				return this._SafetyMeasures27;
			}
			set
			{
				if ((this._SafetyMeasures27 != value))
				{
					this._SafetyMeasures27 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures28", DbType="NVarChar(2000)")]
		public string SafetyMeasures28
		{
			get
			{
				return this._SafetyMeasures28;
			}
			set
			{
				if ((this._SafetyMeasures28 != value))
				{
					this._SafetyMeasures28 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures29", DbType="NVarChar(2000)")]
		public string SafetyMeasures29
		{
			get
			{
				return this._SafetyMeasures29;
			}
			set
			{
				if ((this._SafetyMeasures29 != value))
				{
					this._SafetyMeasures29 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures30", DbType="NVarChar(2000)")]
		public string SafetyMeasures30
		{
			get
			{
				return this._SafetyMeasures30;
			}
			set
			{
				if ((this._SafetyMeasures30 != value))
				{
					this._SafetyMeasures30 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures31", DbType="NVarChar(2000)")]
		public string SafetyMeasures31
		{
			get
			{
				return this._SafetyMeasures31;
			}
			set
			{
				if ((this._SafetyMeasures31 != value))
				{
					this._SafetyMeasures31 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures32", DbType="NVarChar(2000)")]
		public string SafetyMeasures32
		{
			get
			{
				return this._SafetyMeasures32;
			}
			set
			{
				if ((this._SafetyMeasures32 != value))
				{
					this._SafetyMeasures32 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(514) NOT NULL", CanBeNull=false)]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this._OtherMeasures = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_License_LimitedSpace")]
	public partial class View_License_LimitedSpace
	{
		
		private string _LimitedSpaceId;
		
		private string _LicenseCode;
		
		private string _InstallationId;
		
		private string _ApplyUnitName;
		
		private string _ApplyManName;
		
		private string _LimitedSpaceUnitName;
		
		private string _LimitedSpaceName;
		
		private string _JobContent;
		
		private string _Medium;
		
		private string _StartDate;
		
		private string _JobMans;
		
		private string _Guardian;
		
		private string _OtherSpecial;
		
		private string _HAZIDName;
		
		private System.Nullable<bool> _SIsUsed1;
		
		private System.Nullable<bool> _SIsUsed2;
		
		private System.Nullable<bool> _SIsUsed3;
		
		private System.Nullable<bool> _SIsUsed4;
		
		private System.Nullable<bool> _SIsUsed5;
		
		private System.Nullable<bool> _SIsUsed6;
		
		private System.Nullable<bool> _SIsUsed7;
		
		private System.Nullable<bool> _SIsUsed8;
		
		private System.Nullable<bool> _SIsUsed9;
		
		private System.Nullable<bool> _SIsUsed10;
		
		private int _SIsUsed11;
		
		private string _SafetyMeasures1;
		
		private string _SafetyMeasures2;
		
		private string _SafetyMeasures3;
		
		private string _SafetyMeasures4;
		
		private string _SafetyMeasures5;
		
		private string _SafetyMeasures6;
		
		private string _SafetyMeasures7;
		
		private string _SafetyMeasures8;
		
		private string _SafetyMeasures9;
		
		private string _SafetyMeasures10;
		
		private string _OtherMeasures;
		
		public View_License_LimitedSpace()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitedSpaceId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LimitedSpaceId
		{
			get
			{
				return this._LimitedSpaceId;
			}
			set
			{
				if ((this._LimitedSpaceId != value))
				{
					this._LimitedSpaceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(50)")]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this._LicenseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					this._InstallationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitName", DbType="NVarChar(50)")]
		public string ApplyUnitName
		{
			get
			{
				return this._ApplyUnitName;
			}
			set
			{
				if ((this._ApplyUnitName != value))
				{
					this._ApplyUnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyManName", DbType="NVarChar(20)")]
		public string ApplyManName
		{
			get
			{
				return this._ApplyManName;
			}
			set
			{
				if ((this._ApplyManName != value))
				{
					this._ApplyManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitedSpaceUnitName", DbType="NVarChar(50)")]
		public string LimitedSpaceUnitName
		{
			get
			{
				return this._LimitedSpaceUnitName;
			}
			set
			{
				if ((this._LimitedSpaceUnitName != value))
				{
					this._LimitedSpaceUnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitedSpaceName", DbType="NVarChar(200)")]
		public string LimitedSpaceName
		{
			get
			{
				return this._LimitedSpaceName;
			}
			set
			{
				if ((this._LimitedSpaceName != value))
				{
					this._LimitedSpaceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobContent", DbType="NVarChar(500)")]
		public string JobContent
		{
			get
			{
				return this._JobContent;
			}
			set
			{
				if ((this._JobContent != value))
				{
					this._JobContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Medium", DbType="NVarChar(200)")]
		public string Medium
		{
			get
			{
				return this._Medium;
			}
			set
			{
				if ((this._Medium != value))
				{
					this._Medium = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="VarChar(220)")]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobMans", DbType="NVarChar(100)")]
		public string JobMans
		{
			get
			{
				return this._JobMans;
			}
			set
			{
				if ((this._JobMans != value))
				{
					this._JobMans = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guardian", DbType="NVarChar(50)")]
		public string Guardian
		{
			get
			{
				return this._Guardian;
			}
			set
			{
				if ((this._Guardian != value))
				{
					this._Guardian = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherSpecial", DbType="NVarChar(100)")]
		public string OtherSpecial
		{
			get
			{
				return this._OtherSpecial;
			}
			set
			{
				if ((this._OtherSpecial != value))
				{
					this._OtherSpecial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZIDName", DbType="NVarChar(4000)")]
		public string HAZIDName
		{
			get
			{
				return this._HAZIDName;
			}
			set
			{
				if ((this._HAZIDName != value))
				{
					this._HAZIDName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed1", DbType="Bit")]
		public System.Nullable<bool> SIsUsed1
		{
			get
			{
				return this._SIsUsed1;
			}
			set
			{
				if ((this._SIsUsed1 != value))
				{
					this._SIsUsed1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed2", DbType="Bit")]
		public System.Nullable<bool> SIsUsed2
		{
			get
			{
				return this._SIsUsed2;
			}
			set
			{
				if ((this._SIsUsed2 != value))
				{
					this._SIsUsed2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed3", DbType="Bit")]
		public System.Nullable<bool> SIsUsed3
		{
			get
			{
				return this._SIsUsed3;
			}
			set
			{
				if ((this._SIsUsed3 != value))
				{
					this._SIsUsed3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed4", DbType="Bit")]
		public System.Nullable<bool> SIsUsed4
		{
			get
			{
				return this._SIsUsed4;
			}
			set
			{
				if ((this._SIsUsed4 != value))
				{
					this._SIsUsed4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed5", DbType="Bit")]
		public System.Nullable<bool> SIsUsed5
		{
			get
			{
				return this._SIsUsed5;
			}
			set
			{
				if ((this._SIsUsed5 != value))
				{
					this._SIsUsed5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed6", DbType="Bit")]
		public System.Nullable<bool> SIsUsed6
		{
			get
			{
				return this._SIsUsed6;
			}
			set
			{
				if ((this._SIsUsed6 != value))
				{
					this._SIsUsed6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed7", DbType="Bit")]
		public System.Nullable<bool> SIsUsed7
		{
			get
			{
				return this._SIsUsed7;
			}
			set
			{
				if ((this._SIsUsed7 != value))
				{
					this._SIsUsed7 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed8", DbType="Bit")]
		public System.Nullable<bool> SIsUsed8
		{
			get
			{
				return this._SIsUsed8;
			}
			set
			{
				if ((this._SIsUsed8 != value))
				{
					this._SIsUsed8 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed9", DbType="Bit")]
		public System.Nullable<bool> SIsUsed9
		{
			get
			{
				return this._SIsUsed9;
			}
			set
			{
				if ((this._SIsUsed9 != value))
				{
					this._SIsUsed9 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed10", DbType="Bit")]
		public System.Nullable<bool> SIsUsed10
		{
			get
			{
				return this._SIsUsed10;
			}
			set
			{
				if ((this._SIsUsed10 != value))
				{
					this._SIsUsed10 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed11", DbType="Int NOT NULL")]
		public int SIsUsed11
		{
			get
			{
				return this._SIsUsed11;
			}
			set
			{
				if ((this._SIsUsed11 != value))
				{
					this._SIsUsed11 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures1", DbType="NVarChar(2000)")]
		public string SafetyMeasures1
		{
			get
			{
				return this._SafetyMeasures1;
			}
			set
			{
				if ((this._SafetyMeasures1 != value))
				{
					this._SafetyMeasures1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures2", DbType="NVarChar(2000)")]
		public string SafetyMeasures2
		{
			get
			{
				return this._SafetyMeasures2;
			}
			set
			{
				if ((this._SafetyMeasures2 != value))
				{
					this._SafetyMeasures2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures3", DbType="NVarChar(2000)")]
		public string SafetyMeasures3
		{
			get
			{
				return this._SafetyMeasures3;
			}
			set
			{
				if ((this._SafetyMeasures3 != value))
				{
					this._SafetyMeasures3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures4", DbType="NVarChar(2000)")]
		public string SafetyMeasures4
		{
			get
			{
				return this._SafetyMeasures4;
			}
			set
			{
				if ((this._SafetyMeasures4 != value))
				{
					this._SafetyMeasures4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures5", DbType="NVarChar(2000)")]
		public string SafetyMeasures5
		{
			get
			{
				return this._SafetyMeasures5;
			}
			set
			{
				if ((this._SafetyMeasures5 != value))
				{
					this._SafetyMeasures5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures6", DbType="NVarChar(2000)")]
		public string SafetyMeasures6
		{
			get
			{
				return this._SafetyMeasures6;
			}
			set
			{
				if ((this._SafetyMeasures6 != value))
				{
					this._SafetyMeasures6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures7", DbType="NVarChar(2000)")]
		public string SafetyMeasures7
		{
			get
			{
				return this._SafetyMeasures7;
			}
			set
			{
				if ((this._SafetyMeasures7 != value))
				{
					this._SafetyMeasures7 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures8", DbType="NVarChar(2000)")]
		public string SafetyMeasures8
		{
			get
			{
				return this._SafetyMeasures8;
			}
			set
			{
				if ((this._SafetyMeasures8 != value))
				{
					this._SafetyMeasures8 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures9", DbType="NVarChar(2000)")]
		public string SafetyMeasures9
		{
			get
			{
				return this._SafetyMeasures9;
			}
			set
			{
				if ((this._SafetyMeasures9 != value))
				{
					this._SafetyMeasures9 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures10", DbType="NVarChar(2000)")]
		public string SafetyMeasures10
		{
			get
			{
				return this._SafetyMeasures10;
			}
			set
			{
				if ((this._SafetyMeasures10 != value))
				{
					this._SafetyMeasures10 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(510) NOT NULL", CanBeNull=false)]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this._OtherMeasures = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_License_OpenCircuit")]
	public partial class View_License_OpenCircuit
	{
		
		private string _OpenCircuitId;
		
		private string _LicenseCode;
		
		private string _InstallationId;
		
		private string _ApplyUnitName;
		
		private string _ApplyManName;
		
		private string _JobUnitName;
		
		private string _RelatedUnitDep;
		
		private string _OpenCircuitCause;
		
		private string _StartDate;
		
		private string _JobContent;
		
		private string _CompileManName;
		
		private System.Nullable<System.DateTime> _CompileManTime;
		
		private string _HAZIDName;
		
		private System.Nullable<bool> _SIsUsed1;
		
		private System.Nullable<bool> _SIsUsed2;
		
		private System.Nullable<bool> _SIsUsed3;
		
		private int _SIsUsed4;
		
		private string _SafetyMeasures1;
		
		private string _SafetyMeasures2;
		
		private string _SafetyMeasures3;
		
		private string _OtherMeasures;
		
		public View_License_OpenCircuit()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenCircuitId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OpenCircuitId
		{
			get
			{
				return this._OpenCircuitId;
			}
			set
			{
				if ((this._OpenCircuitId != value))
				{
					this._OpenCircuitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(50)")]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this._LicenseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(50)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					this._InstallationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUnitName", DbType="NVarChar(50)")]
		public string ApplyUnitName
		{
			get
			{
				return this._ApplyUnitName;
			}
			set
			{
				if ((this._ApplyUnitName != value))
				{
					this._ApplyUnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyManName", DbType="NVarChar(20)")]
		public string ApplyManName
		{
			get
			{
				return this._ApplyManName;
			}
			set
			{
				if ((this._ApplyManName != value))
				{
					this._ApplyManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUnitName", DbType="NVarChar(50)")]
		public string JobUnitName
		{
			get
			{
				return this._JobUnitName;
			}
			set
			{
				if ((this._JobUnitName != value))
				{
					this._JobUnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedUnitDep", DbType="NVarChar(500)")]
		public string RelatedUnitDep
		{
			get
			{
				return this._RelatedUnitDep;
			}
			set
			{
				if ((this._RelatedUnitDep != value))
				{
					this._RelatedUnitDep = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenCircuitCause", DbType="NVarChar(500)")]
		public string OpenCircuitCause
		{
			get
			{
				return this._OpenCircuitCause;
			}
			set
			{
				if ((this._OpenCircuitCause != value))
				{
					this._OpenCircuitCause = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="VarChar(220)")]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobContent", DbType="NVarChar(500)")]
		public string JobContent
		{
			get
			{
				return this._JobContent;
			}
			set
			{
				if ((this._JobContent != value))
				{
					this._JobContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManName", DbType="NVarChar(20)")]
		public string CompileManName
		{
			get
			{
				return this._CompileManName;
			}
			set
			{
				if ((this._CompileManName != value))
				{
					this._CompileManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileManTime
		{
			get
			{
				return this._CompileManTime;
			}
			set
			{
				if ((this._CompileManTime != value))
				{
					this._CompileManTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZIDName", DbType="NVarChar(4000)")]
		public string HAZIDName
		{
			get
			{
				return this._HAZIDName;
			}
			set
			{
				if ((this._HAZIDName != value))
				{
					this._HAZIDName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed1", DbType="Bit")]
		public System.Nullable<bool> SIsUsed1
		{
			get
			{
				return this._SIsUsed1;
			}
			set
			{
				if ((this._SIsUsed1 != value))
				{
					this._SIsUsed1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed2", DbType="Bit")]
		public System.Nullable<bool> SIsUsed2
		{
			get
			{
				return this._SIsUsed2;
			}
			set
			{
				if ((this._SIsUsed2 != value))
				{
					this._SIsUsed2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed3", DbType="Bit")]
		public System.Nullable<bool> SIsUsed3
		{
			get
			{
				return this._SIsUsed3;
			}
			set
			{
				if ((this._SIsUsed3 != value))
				{
					this._SIsUsed3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIsUsed4", DbType="Int NOT NULL")]
		public int SIsUsed4
		{
			get
			{
				return this._SIsUsed4;
			}
			set
			{
				if ((this._SIsUsed4 != value))
				{
					this._SIsUsed4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures1", DbType="NVarChar(2000)")]
		public string SafetyMeasures1
		{
			get
			{
				return this._SafetyMeasures1;
			}
			set
			{
				if ((this._SafetyMeasures1 != value))
				{
					this._SafetyMeasures1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures2", DbType="NVarChar(2000)")]
		public string SafetyMeasures2
		{
			get
			{
				return this._SafetyMeasures2;
			}
			set
			{
				if ((this._SafetyMeasures2 != value))
				{
					this._SafetyMeasures2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures3", DbType="NVarChar(2000)")]
		public string SafetyMeasures3
		{
			get
			{
				return this._SafetyMeasures3;
			}
			set
			{
				if ((this._SafetyMeasures3 != value))
				{
					this._SafetyMeasures3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMeasures", DbType="NVarChar(514) NOT NULL", CanBeNull=false)]
		public string OtherMeasures
		{
			get
			{
				return this._OtherMeasures;
			}
			set
			{
				if ((this._OtherMeasures != value))
				{
					this._OtherMeasures = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_QualityAudit_PersonQuality")]
	public partial class View_QualityAudit_PersonQuality
	{
		
		private string _PersonQualityId;
		
		private string _UnitId;
		
		private string _UnitName;
		
		private string _PersonId;
		
		private string _UserCode;
		
		private string _UserName;
		
		private string _CertificateNo;
		
		private string _CertificateId;
		
		private string _CertificateName;
		
		private string _SendUnit;
		
		private string _SendUnitName;
		
		private System.Nullable<System.DateTime> _SendDate;
		
		private System.Nullable<System.DateTime> _LimitDate;
		
		private System.Nullable<System.DateTime> _LateCheckDate;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _Remark;
		
		private string _CompileMan;
		
		private string _CompileManName;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _ProspectiveIds;
		
		private string _ProspectiveNames;
		
		public View_QualityAudit_PersonQuality()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonQualityId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonQualityId
		{
			get
			{
				return this._PersonQualityId;
			}
			set
			{
				if ((this._PersonQualityId != value))
				{
					this._PersonQualityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this._PersonId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(20)")]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this._UserCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNo", DbType="NVarChar(50)")]
		public string CertificateNo
		{
			get
			{
				return this._CertificateNo;
			}
			set
			{
				if ((this._CertificateNo != value))
				{
					this._CertificateNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateId", DbType="NVarChar(50)")]
		public string CertificateId
		{
			get
			{
				return this._CertificateId;
			}
			set
			{
				if ((this._CertificateId != value))
				{
					this._CertificateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateName", DbType="NVarChar(50)")]
		public string CertificateName
		{
			get
			{
				return this._CertificateName;
			}
			set
			{
				if ((this._CertificateName != value))
				{
					this._CertificateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendUnit", DbType="NVarChar(50)")]
		public string SendUnit
		{
			get
			{
				return this._SendUnit;
			}
			set
			{
				if ((this._SendUnit != value))
				{
					this._SendUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendUnitName", DbType="NVarChar(50)")]
		public string SendUnitName
		{
			get
			{
				return this._SendUnitName;
			}
			set
			{
				if ((this._SendUnitName != value))
				{
					this._SendUnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendDate
		{
			get
			{
				return this._SendDate;
			}
			set
			{
				if ((this._SendDate != value))
				{
					this._SendDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitDate
		{
			get
			{
				return this._LimitDate;
			}
			set
			{
				if ((this._LimitDate != value))
				{
					this._LimitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LateCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LateCheckDate
		{
			get
			{
				return this._LateCheckDate;
			}
			set
			{
				if ((this._LateCheckDate != value))
				{
					this._LateCheckDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this._AuditDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this._CompileMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManName", DbType="NVarChar(20)")]
		public string CompileManName
		{
			get
			{
				return this._CompileManName;
			}
			set
			{
				if ((this._CompileManName != value))
				{
					this._CompileManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this._CompileDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProspectiveIds", DbType="NVarChar(4000)")]
		public string ProspectiveIds
		{
			get
			{
				return this._ProspectiveIds;
			}
			set
			{
				if ((this._ProspectiveIds != value))
				{
					this._ProspectiveIds = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProspectiveNames", DbType="NVarChar(4000)")]
		public string ProspectiveNames
		{
			get
			{
				return this._ProspectiveNames;
			}
			set
			{
				if ((this._ProspectiveNames != value))
				{
					this._ProspectiveNames = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_RiskPlanRiskListItem")]
	public partial class View_RiskPlanRiskListItem
	{
		
		private string _RiskListId;
		
		private string _UserId;
		
		private System.Nullable<int> _Frequency;
		
		public View_RiskPlanRiskListItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskListId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RiskListId
		{
			get
			{
				return this._RiskListId;
			}
			set
			{
				if ((this._RiskListId != value))
				{
					this._RiskListId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Int")]
		public System.Nullable<int> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this._Frequency = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_RiskPlanRiskListItemTime")]
	public partial class View_RiskPlanRiskListItemTime
	{
		
		private string _RiskItemId;
		
		private string _RiskOwnerId;
		
		private string _RiskListId;
		
		private System.Nullable<int> _Frequency;
		
		private System.Nullable<bool> _IsRiskOwner;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<bool> _IsUsed;
		
		public View_RiskPlanRiskListItemTime()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RiskItemId
		{
			get
			{
				return this._RiskItemId;
			}
			set
			{
				if ((this._RiskItemId != value))
				{
					this._RiskItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskOwnerId", DbType="NVarChar(50)")]
		public string RiskOwnerId
		{
			get
			{
				return this._RiskOwnerId;
			}
			set
			{
				if ((this._RiskOwnerId != value))
				{
					this._RiskOwnerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskListId", DbType="NVarChar(50)")]
		public string RiskListId
		{
			get
			{
				return this._RiskListId;
			}
			set
			{
				if ((this._RiskListId != value))
				{
					this._RiskListId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Int")]
		public System.Nullable<int> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this._Frequency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRiskOwner", DbType="Bit")]
		public System.Nullable<bool> IsRiskOwner
		{
			get
			{
				return this._IsRiskOwner;
			}
			set
			{
				if ((this._IsRiskOwner != value))
				{
					this._IsRiskOwner = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this._IsUsed = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Standard_HSSEStandard")]
	public partial class View_Standard_HSSEStandard
	{
		
		private string _HSSEStandardId;
		
		private string _HSSEStandardCode;
		
		private string _HSSEStandardName;
		
		private string _ManagedItemId;
		
		private string _ManagedItemCode;
		
		private string _ManagedItemName;
		
		private string _ManagedObjectId;
		
		private string _ManagedObjectCode;
		
		private string _ManagedObjectName;
		
		private string _StandardId;
		
		private string _StandardCode;
		
		private string _StandardName;
		
		private string _SpecialtyId;
		
		private string _SpecialtyCode;
		
		private string _SpecialtyName;
		
		public View_Standard_HSSEStandard()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSSEStandardId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HSSEStandardId
		{
			get
			{
				return this._HSSEStandardId;
			}
			set
			{
				if ((this._HSSEStandardId != value))
				{
					this._HSSEStandardId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSSEStandardCode", DbType="NVarChar(50)")]
		public string HSSEStandardCode
		{
			get
			{
				return this._HSSEStandardCode;
			}
			set
			{
				if ((this._HSSEStandardCode != value))
				{
					this._HSSEStandardCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSSEStandardName", DbType="NVarChar(800)")]
		public string HSSEStandardName
		{
			get
			{
				return this._HSSEStandardName;
			}
			set
			{
				if ((this._HSSEStandardName != value))
				{
					this._HSSEStandardName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedItemId", DbType="NVarChar(50)")]
		public string ManagedItemId
		{
			get
			{
				return this._ManagedItemId;
			}
			set
			{
				if ((this._ManagedItemId != value))
				{
					this._ManagedItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedItemCode", DbType="NVarChar(50)")]
		public string ManagedItemCode
		{
			get
			{
				return this._ManagedItemCode;
			}
			set
			{
				if ((this._ManagedItemCode != value))
				{
					this._ManagedItemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedItemName", DbType="NVarChar(100)")]
		public string ManagedItemName
		{
			get
			{
				return this._ManagedItemName;
			}
			set
			{
				if ((this._ManagedItemName != value))
				{
					this._ManagedItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedObjectId", DbType="NVarChar(50)")]
		public string ManagedObjectId
		{
			get
			{
				return this._ManagedObjectId;
			}
			set
			{
				if ((this._ManagedObjectId != value))
				{
					this._ManagedObjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedObjectCode", DbType="NVarChar(50)")]
		public string ManagedObjectCode
		{
			get
			{
				return this._ManagedObjectCode;
			}
			set
			{
				if ((this._ManagedObjectCode != value))
				{
					this._ManagedObjectCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedObjectName", DbType="NVarChar(100)")]
		public string ManagedObjectName
		{
			get
			{
				return this._ManagedObjectName;
			}
			set
			{
				if ((this._ManagedObjectName != value))
				{
					this._ManagedObjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardId", DbType="NVarChar(50)")]
		public string StandardId
		{
			get
			{
				return this._StandardId;
			}
			set
			{
				if ((this._StandardId != value))
				{
					this._StandardId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardCode", DbType="NVarChar(50)")]
		public string StandardCode
		{
			get
			{
				return this._StandardCode;
			}
			set
			{
				if ((this._StandardCode != value))
				{
					this._StandardCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardName", DbType="NVarChar(100)")]
		public string StandardName
		{
			get
			{
				return this._StandardName;
			}
			set
			{
				if ((this._StandardName != value))
				{
					this._StandardName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialtyId", DbType="NVarChar(50)")]
		public string SpecialtyId
		{
			get
			{
				return this._SpecialtyId;
			}
			set
			{
				if ((this._SpecialtyId != value))
				{
					this._SpecialtyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialtyCode", DbType="NVarChar(50)")]
		public string SpecialtyCode
		{
			get
			{
				return this._SpecialtyCode;
			}
			set
			{
				if ((this._SpecialtyCode != value))
				{
					this._SpecialtyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialtyName", DbType="NVarChar(100)")]
		public string SpecialtyName
		{
			get
			{
				return this._SpecialtyName;
			}
			set
			{
				if ((this._SpecialtyName != value))
				{
					this._SpecialtyName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Standard_ManagedItem")]
	public partial class View_Standard_ManagedItem
	{
		
		private string _ManagedItemId;
		
		private string _ManagedItemCode;
		
		private string _ManagedItemName;
		
		private string _ManagedObjectId;
		
		private string _ManagedObjectCode;
		
		private string _ManagedObjectName;
		
		private string _StandardId;
		
		private string _StandardCode;
		
		private string _StandardName;
		
		private string _SpecialtyId;
		
		private string _SpecialtyCode;
		
		private string _SpecialtyName;
		
		public View_Standard_ManagedItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManagedItemId
		{
			get
			{
				return this._ManagedItemId;
			}
			set
			{
				if ((this._ManagedItemId != value))
				{
					this._ManagedItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedItemCode", DbType="NVarChar(50)")]
		public string ManagedItemCode
		{
			get
			{
				return this._ManagedItemCode;
			}
			set
			{
				if ((this._ManagedItemCode != value))
				{
					this._ManagedItemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedItemName", DbType="NVarChar(100)")]
		public string ManagedItemName
		{
			get
			{
				return this._ManagedItemName;
			}
			set
			{
				if ((this._ManagedItemName != value))
				{
					this._ManagedItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedObjectId", DbType="NVarChar(50)")]
		public string ManagedObjectId
		{
			get
			{
				return this._ManagedObjectId;
			}
			set
			{
				if ((this._ManagedObjectId != value))
				{
					this._ManagedObjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedObjectCode", DbType="NVarChar(50)")]
		public string ManagedObjectCode
		{
			get
			{
				return this._ManagedObjectCode;
			}
			set
			{
				if ((this._ManagedObjectCode != value))
				{
					this._ManagedObjectCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedObjectName", DbType="NVarChar(100)")]
		public string ManagedObjectName
		{
			get
			{
				return this._ManagedObjectName;
			}
			set
			{
				if ((this._ManagedObjectName != value))
				{
					this._ManagedObjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardId", DbType="NVarChar(50)")]
		public string StandardId
		{
			get
			{
				return this._StandardId;
			}
			set
			{
				if ((this._StandardId != value))
				{
					this._StandardId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardCode", DbType="NVarChar(50)")]
		public string StandardCode
		{
			get
			{
				return this._StandardCode;
			}
			set
			{
				if ((this._StandardCode != value))
				{
					this._StandardCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardName", DbType="NVarChar(100)")]
		public string StandardName
		{
			get
			{
				return this._StandardName;
			}
			set
			{
				if ((this._StandardName != value))
				{
					this._StandardName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialtyId", DbType="NVarChar(50)")]
		public string SpecialtyId
		{
			get
			{
				return this._SpecialtyId;
			}
			set
			{
				if ((this._SpecialtyId != value))
				{
					this._SpecialtyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialtyCode", DbType="NVarChar(50)")]
		public string SpecialtyCode
		{
			get
			{
				return this._SpecialtyCode;
			}
			set
			{
				if ((this._SpecialtyCode != value))
				{
					this._SpecialtyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialtyName", DbType="NVarChar(100)")]
		public string SpecialtyName
		{
			get
			{
				return this._SpecialtyName;
			}
			set
			{
				if ((this._SpecialtyName != value))
				{
					this._SpecialtyName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Sys_User")]
	public partial class View_Sys_User
	{
		
		private string _UserId;
		
		private string _InstallationId;
		
		private string _InstallationName;
		
		private string _UnitId;
		
		private string _UnitName;
		
		private string _UnitCode;
		
		private string _DepartId;
		
		private string _DepartName;
		
		private string _Account;
		
		private string _UserCode;
		
		private string _Password;
		
		private string _UserName;
		
		private string _RoleId;
		
		private string _RoleName;
		
		private string _WorkPostId;
		
		private string _WorkPostName;
		
		private System.Nullable<bool> _IsPost;
		
		private string _Sex;
		
		private System.Nullable<System.DateTime> _BirthDay;
		
		private string _Marriage;
		
		private string _Nation;
		
		private string _IdentityCard;
		
		private string _Email;
		
		private string _Telephone;
		
		private string _Education;
		
		private string _Hometown;
		
		private string _PositionId;
		
		private string _PhotoUrl;
		
		private string _Performance;
		
		private System.Nullable<int> _PageSize;
		
		private string _DeviceId;
		
		private string _Focus;
		
		private string _QRCodeUrl;
		
		private string _SortIndex;
		
		public View_Sys_User()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(500)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					this._InstallationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationName", DbType="NVarChar(500)")]
		public string InstallationName
		{
			get
			{
				return this._InstallationName;
			}
			set
			{
				if ((this._InstallationName != value))
				{
					this._InstallationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="NVarChar(20)")]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this._UnitCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartId", DbType="NVarChar(50)")]
		public string DepartId
		{
			get
			{
				return this._DepartId;
			}
			set
			{
				if ((this._DepartId != value))
				{
					this._DepartId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartName", DbType="NVarChar(50)")]
		public string DepartName
		{
			get
			{
				return this._DepartName;
			}
			set
			{
				if ((this._DepartName != value))
				{
					this._DepartName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(50)")]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this._Account = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(20)")]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this._UserCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50)")]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostId", DbType="NVarChar(500)")]
		public string WorkPostId
		{
			get
			{
				return this._WorkPostId;
			}
			set
			{
				if ((this._WorkPostId != value))
				{
					this._WorkPostId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostName", DbType="NVarChar(500)")]
		public string WorkPostName
		{
			get
			{
				return this._WorkPostName;
			}
			set
			{
				if ((this._WorkPostName != value))
				{
					this._WorkPostName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPost", DbType="Bit")]
		public System.Nullable<bool> IsPost
		{
			get
			{
				return this._IsPost;
			}
			set
			{
				if ((this._IsPost != value))
				{
					this._IsPost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Char(1)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this._BirthDay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marriage", DbType="NVarChar(20)")]
		public string Marriage
		{
			get
			{
				return this._Marriage;
			}
			set
			{
				if ((this._Marriage != value))
				{
					this._Marriage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nation", DbType="NVarChar(20)")]
		public string Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this._Nation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCard", DbType="NVarChar(50)")]
		public string IdentityCard
		{
			get
			{
				return this._IdentityCard;
			}
			set
			{
				if ((this._IdentityCard != value))
				{
					this._IdentityCard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this._Telephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="NVarChar(20)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this._Education = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hometown", DbType="NVarChar(50)")]
		public string Hometown
		{
			get
			{
				return this._Hometown;
			}
			set
			{
				if ((this._Hometown != value))
				{
					this._Hometown = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="NVarChar(50)")]
		public string PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this._PositionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUrl", DbType="NVarChar(500)")]
		public string PhotoUrl
		{
			get
			{
				return this._PhotoUrl;
			}
			set
			{
				if ((this._PhotoUrl != value))
				{
					this._PhotoUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Performance", DbType="NVarChar(800)")]
		public string Performance
		{
			get
			{
				return this._Performance;
			}
			set
			{
				if ((this._Performance != value))
				{
					this._Performance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSize", DbType="Int")]
		public System.Nullable<int> PageSize
		{
			get
			{
				return this._PageSize;
			}
			set
			{
				if ((this._PageSize != value))
				{
					this._PageSize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="NVarChar(150)")]
		public string DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this._DeviceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Focus", DbType="NVarChar(500)")]
		public string Focus
		{
			get
			{
				return this._Focus;
			}
			set
			{
				if ((this._Focus != value))
				{
					this._Focus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this._QRCodeUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="NVarChar(50)")]
		public string SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this._SortIndex = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Training_TrainingEduItem")]
	public partial class View_Training_TrainingEduItem
	{
		
		private string _TrainingEduId;
		
		private string _TrainingEduCode;
		
		private string _TrainingEduName;
		
		private string _TrainingEduItemId;
		
		private string _TrainingEduItemCode;
		
		private string _TrainingEduItemName;
		
		private string _Summary;
		
		private string _AttachUrl;
		
		private string _PictureUrl;
		
		private string _WorkPostIds;
		
		private string _WorkPostNames;
		
		private string _InstallationIds;
		
		private string _InstallationNames;
		
		public View_Training_TrainingEduItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingEduId", DbType="NVarChar(50)")]
		public string TrainingEduId
		{
			get
			{
				return this._TrainingEduId;
			}
			set
			{
				if ((this._TrainingEduId != value))
				{
					this._TrainingEduId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingEduCode", DbType="NVarChar(50)")]
		public string TrainingEduCode
		{
			get
			{
				return this._TrainingEduCode;
			}
			set
			{
				if ((this._TrainingEduCode != value))
				{
					this._TrainingEduCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingEduName", DbType="NVarChar(100)")]
		public string TrainingEduName
		{
			get
			{
				return this._TrainingEduName;
			}
			set
			{
				if ((this._TrainingEduName != value))
				{
					this._TrainingEduName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingEduItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrainingEduItemId
		{
			get
			{
				return this._TrainingEduItemId;
			}
			set
			{
				if ((this._TrainingEduItemId != value))
				{
					this._TrainingEduItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingEduItemCode", DbType="NVarChar(50)")]
		public string TrainingEduItemCode
		{
			get
			{
				return this._TrainingEduItemCode;
			}
			set
			{
				if ((this._TrainingEduItemCode != value))
				{
					this._TrainingEduItemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingEduItemName", DbType="NVarChar(100)")]
		public string TrainingEduItemName
		{
			get
			{
				return this._TrainingEduItemName;
			}
			set
			{
				if ((this._TrainingEduItemName != value))
				{
					this._TrainingEduItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this._AttachUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureUrl", DbType="NVarChar(2000)")]
		public string PictureUrl
		{
			get
			{
				return this._PictureUrl;
			}
			set
			{
				if ((this._PictureUrl != value))
				{
					this._PictureUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostIds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WorkPostIds
		{
			get
			{
				return this._WorkPostIds;
			}
			set
			{
				if ((this._WorkPostIds != value))
				{
					this._WorkPostIds = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostNames", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WorkPostNames
		{
			get
			{
				return this._WorkPostNames;
			}
			set
			{
				if ((this._WorkPostNames != value))
				{
					this._WorkPostNames = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationIds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string InstallationIds
		{
			get
			{
				return this._InstallationIds;
			}
			set
			{
				if ((this._InstallationIds != value))
				{
					this._InstallationIds = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationNames", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string InstallationNames
		{
			get
			{
				return this._InstallationNames;
			}
			set
			{
				if ((this._InstallationNames != value))
				{
					this._InstallationNames = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Training_TrainingItem")]
	public partial class View_Training_TrainingItem
	{
		
		private string _TrainingId;
		
		private string _TrainingCode;
		
		private string _TrainingName;
		
		private string _TrainingItemId;
		
		private string _TrainingItemCode;
		
		private string _TrainingItemName;
		
		private string _Abstracts;
		
		private string _AttachUrl;
		
		private string _VersionNum;
		
		private string _TestType;
		
		private string _WorkPostIds;
		
		private string _WorkPostNames;
		
		private string _InstallationIds;
		
		private string _InstallationNames;
		
		private string _AItem;
		
		private string _BItem;
		
		private string _CItem;
		
		private string _DItem;
		
		private string _EItem;
		
		private System.Nullable<int> _Score;
		
		private string _AnswerItems;
		
		public View_Training_TrainingItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingId", DbType="NVarChar(50)")]
		public string TrainingId
		{
			get
			{
				return this._TrainingId;
			}
			set
			{
				if ((this._TrainingId != value))
				{
					this._TrainingId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingCode", DbType="NVarChar(50)")]
		public string TrainingCode
		{
			get
			{
				return this._TrainingCode;
			}
			set
			{
				if ((this._TrainingCode != value))
				{
					this._TrainingCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingName", DbType="NVarChar(100)")]
		public string TrainingName
		{
			get
			{
				return this._TrainingName;
			}
			set
			{
				if ((this._TrainingName != value))
				{
					this._TrainingName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrainingItemId
		{
			get
			{
				return this._TrainingItemId;
			}
			set
			{
				if ((this._TrainingItemId != value))
				{
					this._TrainingItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemCode", DbType="NVarChar(50)")]
		public string TrainingItemCode
		{
			get
			{
				return this._TrainingItemCode;
			}
			set
			{
				if ((this._TrainingItemCode != value))
				{
					this._TrainingItemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemName", DbType="NVarChar(100)")]
		public string TrainingItemName
		{
			get
			{
				return this._TrainingItemName;
			}
			set
			{
				if ((this._TrainingItemName != value))
				{
					this._TrainingItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abstracts", DbType="NVarChar(2000)")]
		public string Abstracts
		{
			get
			{
				return this._Abstracts;
			}
			set
			{
				if ((this._Abstracts != value))
				{
					this._Abstracts = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this._AttachUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNum", DbType="NVarChar(50)")]
		public string VersionNum
		{
			get
			{
				return this._VersionNum;
			}
			set
			{
				if ((this._VersionNum != value))
				{
					this._VersionNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestType", DbType="Char(1)")]
		public string TestType
		{
			get
			{
				return this._TestType;
			}
			set
			{
				if ((this._TestType != value))
				{
					this._TestType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostIds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WorkPostIds
		{
			get
			{
				return this._WorkPostIds;
			}
			set
			{
				if ((this._WorkPostIds != value))
				{
					this._WorkPostIds = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostNames", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WorkPostNames
		{
			get
			{
				return this._WorkPostNames;
			}
			set
			{
				if ((this._WorkPostNames != value))
				{
					this._WorkPostNames = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationIds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string InstallationIds
		{
			get
			{
				return this._InstallationIds;
			}
			set
			{
				if ((this._InstallationIds != value))
				{
					this._InstallationIds = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationNames", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string InstallationNames
		{
			get
			{
				return this._InstallationNames;
			}
			set
			{
				if ((this._InstallationNames != value))
				{
					this._InstallationNames = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AItem", DbType="NVarChar(500)")]
		public string AItem
		{
			get
			{
				return this._AItem;
			}
			set
			{
				if ((this._AItem != value))
				{
					this._AItem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BItem", DbType="NVarChar(500)")]
		public string BItem
		{
			get
			{
				return this._BItem;
			}
			set
			{
				if ((this._BItem != value))
				{
					this._BItem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CItem", DbType="NVarChar(500)")]
		public string CItem
		{
			get
			{
				return this._CItem;
			}
			set
			{
				if ((this._CItem != value))
				{
					this._CItem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DItem", DbType="NVarChar(500)")]
		public string DItem
		{
			get
			{
				return this._DItem;
			}
			set
			{
				if ((this._DItem != value))
				{
					this._DItem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EItem", DbType="NVarChar(500)")]
		public string EItem
		{
			get
			{
				return this._EItem;
			}
			set
			{
				if ((this._EItem != value))
				{
					this._EItem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int")]
		public System.Nullable<int> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this._Score = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerItems", DbType="NVarChar(50)")]
		public string AnswerItems
		{
			get
			{
				return this._AnswerItems;
			}
			set
			{
				if ((this._AnswerItems != value))
				{
					this._AnswerItems = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Training_TrainRecordDetail")]
	public partial class View_Training_TrainRecordDetail
	{
		
		private string _TrainDetailId;
		
		private string _TrainRecordId;
		
		private string _PersonId;
		
		private System.Nullable<decimal> _CheckScore;
		
		private bool _CheckResult;
		
		private string _UnitName;
		
		private string _UserName;
		
		public View_Training_TrainRecordDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrainDetailId
		{
			get
			{
				return this._TrainDetailId;
			}
			set
			{
				if ((this._TrainDetailId != value))
				{
					this._TrainDetailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainRecordId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrainRecordId
		{
			get
			{
				return this._TrainRecordId;
			}
			set
			{
				if ((this._TrainRecordId != value))
				{
					this._TrainRecordId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this._PersonId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckScore", DbType="Decimal(9,1)")]
		public System.Nullable<decimal> CheckScore
		{
			get
			{
				return this._CheckScore;
			}
			set
			{
				if ((this._CheckScore != value))
				{
					this._CheckScore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckResult", DbType="Bit NOT NULL")]
		public bool CheckResult
		{
			get
			{
				return this._CheckResult;
			}
			set
			{
				if ((this._CheckResult != value))
				{
					this._CheckResult = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_UserClassificationList")]
	public partial class View_UserClassificationList
	{
		
		private string _WorkPostCode;
		
		private string _WorkPostName;
		
		private string _WorkPostId;
		
		private string _RiskLevelId;
		
		private System.Nullable<int> _Frequency;
		
		private string _UserId;
		
		private string _UserCode;
		
		private string _UserName;
		
		private string _DepartId;
		
		private string _DepartName;
		
		private string _DepartCode;
		
		private string _InstallationId;
		
		private string _InstallationName;
		
		private string _InstallationCode;
		
		private System.Nullable<System.DateTime> _MaxPatrolTime;
		
		private System.Nullable<System.DateTime> _NextPatrolTime;
		
		private System.Nullable<bool> _Cancelled;
		
		public View_UserClassificationList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostCode", DbType="NVarChar(50)")]
		public string WorkPostCode
		{
			get
			{
				return this._WorkPostCode;
			}
			set
			{
				if ((this._WorkPostCode != value))
				{
					this._WorkPostCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostName", DbType="NVarChar(100)")]
		public string WorkPostName
		{
			get
			{
				return this._WorkPostName;
			}
			set
			{
				if ((this._WorkPostName != value))
				{
					this._WorkPostName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostId", DbType="NVarChar(50)")]
		public string WorkPostId
		{
			get
			{
				return this._WorkPostId;
			}
			set
			{
				if ((this._WorkPostId != value))
				{
					this._WorkPostId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevelId", DbType="NVarChar(200)")]
		public string RiskLevelId
		{
			get
			{
				return this._RiskLevelId;
			}
			set
			{
				if ((this._RiskLevelId != value))
				{
					this._RiskLevelId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Int")]
		public System.Nullable<int> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this._Frequency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(20)")]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this._UserCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartId", DbType="NVarChar(50)")]
		public string DepartId
		{
			get
			{
				return this._DepartId;
			}
			set
			{
				if ((this._DepartId != value))
				{
					this._DepartId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartName", DbType="NVarChar(50)")]
		public string DepartName
		{
			get
			{
				return this._DepartName;
			}
			set
			{
				if ((this._DepartName != value))
				{
					this._DepartName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartCode", DbType="NVarChar(50)")]
		public string DepartCode
		{
			get
			{
				return this._DepartCode;
			}
			set
			{
				if ((this._DepartCode != value))
				{
					this._DepartCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="NVarChar(500)")]
		public string InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					this._InstallationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationName", DbType="NVarChar(50)")]
		public string InstallationName
		{
			get
			{
				return this._InstallationName;
			}
			set
			{
				if ((this._InstallationName != value))
				{
					this._InstallationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationCode", DbType="NVarChar(50)")]
		public string InstallationCode
		{
			get
			{
				return this._InstallationCode;
			}
			set
			{
				if ((this._InstallationCode != value))
				{
					this._InstallationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="maxPatrolTime", Storage="_MaxPatrolTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> MaxPatrolTime
		{
			get
			{
				return this._MaxPatrolTime;
			}
			set
			{
				if ((this._MaxPatrolTime != value))
				{
					this._MaxPatrolTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextPatrolTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextPatrolTime
		{
			get
			{
				return this._NextPatrolTime;
			}
			set
			{
				if ((this._NextPatrolTime != value))
				{
					this._NextPatrolTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cancelled", DbType="Bit")]
		public System.Nullable<bool> Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this._Cancelled = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
